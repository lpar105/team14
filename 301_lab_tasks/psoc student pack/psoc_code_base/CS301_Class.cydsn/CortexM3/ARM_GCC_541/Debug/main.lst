ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	consecStops
 107              		.bss
 108 0012 0000     		.align	2
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 3


 109              		.type	consecStops, %object
 110              		.size	consecStops, 4
 111              	consecStops:
 112 0014 00000000 		.space	4
 113              		.global	started
 114              		.align	2
 115              		.type	started, %object
 116              		.size	started, 4
 117              	started:
 118 0018 00000000 		.space	4
 119              		.global	instCounter
 120              		.align	2
 121              		.type	instCounter, %object
 122              		.size	instCounter, 4
 123              	instCounter:
 124 001c 00000000 		.space	4
 125              		.global	flag
 126              		.align	2
 127              		.type	flag, %object
 128              		.size	flag, 4
 129              	flag:
 130 0020 00000000 		.space	4
 131              		.comm	valuesLeftIntersection,4000,4
 132              		.comm	valuesLeftLine,4000,4
 133              		.comm	valuesMiddleLine,4000,4
 134              		.comm	valuesTurnComplete,4000,4
 135              		.comm	valuesRightLine,4000,4
 136              		.comm	valuesRightIntersection,4000,4
 137              		.global	count
 138              		.align	2
 139              		.type	count, %object
 140              		.size	count, 4
 141              	count:
 142 0024 00000000 		.space	4
 143              		.global	motorUpdateCount
 144              		.align	2
 145              		.type	motorUpdateCount, %object
 146              		.size	motorUpdateCount, 4
 147              	motorUpdateCount:
 148 0028 00000000 		.space	4
 149              		.global	lastVeerDirection
 150              		.align	2
 151              		.type	lastVeerDirection, %object
 152              		.size	lastVeerDirection, 4
 153              	lastVeerDirection:
 154 002c 00000000 		.space	4
 155              		.comm	v1M1,4,4
 156              		.comm	v1M2,4,4
 157              		.comm	v2M1,4,4
 158              		.comm	v2M2,4,4
 159              		.global	pulsesTravelled
 160              		.align	2
 161              		.type	pulsesTravelled, %object
 162              		.size	pulsesTravelled, 4
 163              	pulsesTravelled:
 164 0030 00000000 		.space	4
 165              		.global	step
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 4


 166              		.align	2
 167              		.type	step, %object
 168              		.size	step, 4
 169              	step:
 170 0034 00000000 		.space	4
 171              		.global	interruptFlag
 172              		.align	2
 173              		.type	interruptFlag, %object
 174              		.size	interruptFlag, 4
 175              	interruptFlag:
 176 0038 00000000 		.space	4
 177              		.global	lastAdjustDirection
 178              		.align	2
 179              		.type	lastAdjustDirection, %object
 180              		.size	lastAdjustDirection, 4
 181              	lastAdjustDirection:
 182 003c 00000000 		.space	4
 183              		.comm	squares,1000,4
 184              		.comm	instruction,500,4
 185              		.comm	distance,500,4
 186              		.section	.text.eoc,"ax",%progbits
 187              		.align	2
 188              		.global	eoc
 189              		.thumb
 190              		.thumb_func
 191              		.type	eoc, %function
 192              	eoc:
 193              	.LFB64:
 194              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 5


  29:main.c        **** 
  30:main.c        **** #include "pathfind.h"
  31:main.c        **** 
  32:main.c        **** #include "vars.h"
  33:main.c        **** 
  34:main.c        **** #define ADC_COUNT 1000
  35:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 150
  36:main.c        **** #define R_INT_BLACK highCountRightIntersection < 150
  37:main.c        **** #define L_LINE_BLACK highCountLeftLine < 150
  38:main.c        **** #define R_LINE_BLACK highCountRightLine < 150
  39:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 150
  40:main.c        **** #define TC_BLACK highCountTurnComplete < 150
  41:main.c        **** 
  42:main.c        **** int consecStops = 0;
  43:main.c        **** int started = 0;
  44:main.c        **** int instCounter = 0;
  45:main.c        **** //* ========================================
  46:main.c        **** void usbPutString(char * s);
  47:main.c        **** void usbPutChar(char c);
  48:main.c        **** //* ========================================
  49:main.c        **** 
  50:main.c        **** volatile int flag = 0;
  51:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  52:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  53:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  54:main.c        **** volatile int valuesTurnComplete[ADC_COUNT];
  55:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  56:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  57:main.c        **** volatile int count = 0;
  58:main.c        **** volatile int motorUpdateCount = 0;
  59:main.c        **** volatile int lastVeerDirection = 0;
  60:main.c        **** 
  61:main.c        **** volatile int v1M1;
  62:main.c        **** volatile int v1M2;
  63:main.c        **** volatile int v2M1;
  64:main.c        **** volatile int v2M2;
  65:main.c        **** int pulsesTravelled = 0;
  66:main.c        **** volatile int step = 0;
  67:main.c        **** volatile int interruptFlag = 0;
  68:main.c        **** 
  69:main.c        **** int lastAdjustDirection = 0;
  70:main.c        **** unsigned char squares[500][2];
  71:main.c        **** unsigned char instruction[500];
  72:main.c        **** unsigned char distance[500];
  73:main.c        **** 
  74:main.c        **** CY_ISR(eoc) {
 195              		.loc 1 74 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200 0000 80B4     		push	{r7}
 201              		.cfi_def_cfa_offset 4
 202              		.cfi_offset 7, -4
 203 0002 00AF     		add	r7, sp, #0
 204              		.cfi_def_cfa_register 7
  75:main.c        ****     flag = 1;
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 6


 205              		.loc 1 75 0
 206 0004 034B     		ldr	r3, .L2
 207 0006 0122     		movs	r2, #1
 208 0008 1A60     		str	r2, [r3]
  76:main.c        **** }
 209              		.loc 1 76 0
 210 000a 00BF     		nop
 211 000c BD46     		mov	sp, r7
 212              		.cfi_def_cfa_register 13
 213              		@ sp needed
 214 000e 80BC     		pop	{r7}
 215              		.cfi_restore 7
 216              		.cfi_def_cfa_offset 0
 217 0010 7047     		bx	lr
 218              	.L3:
 219 0012 00BF     		.align	2
 220              	.L2:
 221 0014 00000000 		.word	flag
 222              		.cfi_endproc
 223              	.LFE64:
 224              		.size	eoc, .-eoc
 225              		.global	__aeabi_i2d
 226              		.global	__aeabi_dmul
 227              		.global	__aeabi_d2iz
 228              		.global	__aeabi_ddiv
 229              		.global	__aeabi_dcmple
 230              		.section	.text.main,"ax",%progbits
 231              		.align	2
 232              		.global	main
 233              		.thumb
 234              		.thumb_func
 235              		.type	main, %function
 236              	main:
 237              	.LFB65:
  77:main.c        **** 
  78:main.c        **** int main() {
 238              		.loc 1 78 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 264
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242 0000 B0B5     		push	{r4, r5, r7, lr}
 243              		.cfi_def_cfa_offset 16
 244              		.cfi_offset 4, -16
 245              		.cfi_offset 5, -12
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 C2B0     		sub	sp, sp, #264
 249              		.cfi_def_cfa_offset 280
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
  79:main.c        ****     CYGlobalIntEnable;
 252              		.loc 1 79 0
 253              		.syntax unified
 254              	@ 79 "main.c" 1
 255 0006 62B6     		CPSIE   i
 256              	@ 0 "" 2
  80:main.c        ****     USBUART_Start(0, USBUART_5V_OPERATION);
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 7


 257              		.loc 1 80 0
 258              		.thumb
 259              		.syntax unified
 260 0008 0121     		movs	r1, #1
 261 000a 0020     		movs	r0, #0
 262 000c FFF7FEFF 		bl	USBUART_Start
  81:main.c        ****     //UART_Start();
  82:main.c        **** 
  83:main.c        ****     QuadDec_M1_Start();
 263              		.loc 1 83 0
 264 0010 FFF7FEFF 		bl	QuadDec_M1_Start
  84:main.c        ****     QuadDec_M2_Start();
 265              		.loc 1 84 0
 266 0014 FFF7FEFF 		bl	QuadDec_M2_Start
  85:main.c        **** 
  86:main.c        ****     //isr_TS_StartEx(MyISR);
  87:main.c        **** 
  88:main.c        ****     RF_BT_SELECT_Write(1);
 267              		.loc 1 88 0
 268 0018 0120     		movs	r0, #1
 269 001a FFF7FEFF 		bl	RF_BT_SELECT_Write
  89:main.c        ****     //ADC1_IRQ_Enable();
  90:main.c        ****     ADC1_Start();
 270              		.loc 1 90 0
 271 001e FFF7FEFF 		bl	ADC1_Start
  91:main.c        **** 
  92:main.c        ****     ADC1_StartConvert();
 272              		.loc 1 92 0
 273 0022 FFF7FEFF 		bl	ADC1_StartConvert
  93:main.c        **** 
  94:main.c        ****     eoc_StartEx(eoc);
 274              		.loc 1 94 0
 275 0026 B748     		ldr	r0, .L55
 276 0028 FFF7FEFF 		bl	eoc_StartEx
  95:main.c        **** 
  96:main.c        ****     initMotors();
 277              		.loc 1 96 0
 278 002c FFF7FEFF 		bl	initMotors
  97:main.c        **** 
  98:main.c        ****     stop();
 279              		.loc 1 98 0
 280 0030 FFF7FEFF 		bl	stop
 281              	.LBB2:
  99:main.c        ****     //isr_TS_StartEx(MyISR);
 100:main.c        ****     //Timer_TS_Start();
 101:main.c        **** 
 102:main.c        ****     // Loop through the arrays and set each element to 55 or 0
 103:main.c        ****     for (int i = 0; i < 500; i++) {
 282              		.loc 1 103 0
 283 0034 0023     		movs	r3, #0
 284 0036 C7F80431 		str	r3, [r7, #260]
 285 003a 23E0     		b	.L5
 286              	.L6:
 104:main.c        ****         squares[i][0] = 55;
 287              		.loc 1 104 0 discriminator 3
 288 003c B24A     		ldr	r2, .L55+4
 289 003e D7F80431 		ldr	r3, [r7, #260]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 8


 290 0042 3721     		movs	r1, #55
 291 0044 02F81310 		strb	r1, [r2, r3, lsl #1]
 105:main.c        ****         squares[i][1] = 55;
 292              		.loc 1 105 0 discriminator 3
 293 0048 AF4A     		ldr	r2, .L55+4
 294 004a D7F80431 		ldr	r3, [r7, #260]
 295 004e 5B00     		lsls	r3, r3, #1
 296 0050 1344     		add	r3, r3, r2
 297 0052 3722     		movs	r2, #55
 298 0054 5A70     		strb	r2, [r3, #1]
 106:main.c        ****         instruction[i] = 0;
 299              		.loc 1 106 0 discriminator 3
 300 0056 AD4A     		ldr	r2, .L55+8
 301 0058 D7F80431 		ldr	r3, [r7, #260]
 302 005c 1344     		add	r3, r3, r2
 303 005e 0022     		movs	r2, #0
 304 0060 1A70     		strb	r2, [r3]
 107:main.c        ****         distance[i] = 0;
 305              		.loc 1 107 0 discriminator 3
 306 0062 AB4A     		ldr	r2, .L55+12
 307 0064 D7F80431 		ldr	r3, [r7, #260]
 308 0068 1344     		add	r3, r3, r2
 309 006a 0022     		movs	r2, #0
 310 006c 1A70     		strb	r2, [r3]
 108:main.c        ****         distance[i] = 55;
 311              		.loc 1 108 0 discriminator 3
 312 006e A84A     		ldr	r2, .L55+12
 313 0070 D7F80431 		ldr	r3, [r7, #260]
 314 0074 1344     		add	r3, r3, r2
 315 0076 3722     		movs	r2, #55
 316 0078 1A70     		strb	r2, [r3]
 103:main.c        ****         squares[i][0] = 55;
 317              		.loc 1 103 0 discriminator 3
 318 007a D7F80431 		ldr	r3, [r7, #260]
 319 007e 0133     		adds	r3, r3, #1
 320 0080 C7F80431 		str	r3, [r7, #260]
 321              	.L5:
 103:main.c        ****         squares[i][0] = 55;
 322              		.loc 1 103 0 is_stmt 0 discriminator 1
 323 0084 D7F80431 		ldr	r3, [r7, #260]
 324 0088 B3F5FA7F 		cmp	r3, #500
 325 008c D6DB     		blt	.L6
 326              	.LBE2:
 109:main.c        ****     }
 110:main.c        ****     pathfind(instruction, distance, squares);
 327              		.loc 1 110 0 is_stmt 1
 328 008e 9E4A     		ldr	r2, .L55+4
 329 0090 9F49     		ldr	r1, .L55+12
 330 0092 9E48     		ldr	r0, .L55+8
 331 0094 FFF7FEFF 		bl	pathfind
 111:main.c        ****     CyDelay(2000);
 332              		.loc 1 111 0
 333 0098 4FF4FA60 		mov	r0, #2000
 334 009c FFF7FEFF 		bl	CyDelay
 335              	.L53:
 112:main.c        ****     for (;;) {
 113:main.c        **** 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 9


 114:main.c        ****         if (flag == 1) {
 336              		.loc 1 114 0
 337 00a0 9C4B     		ldr	r3, .L55+16
 338 00a2 1B68     		ldr	r3, [r3]
 339 00a4 012B     		cmp	r3, #1
 340 00a6 FBD1     		bne	.L53
 115:main.c        **** 
 116:main.c        ****             ADC1_IRQ_Disable();
 341              		.loc 1 116 0
 342 00a8 FFF7FEFF 		bl	ADC1_IRQ_Disable
 117:main.c        ****             valuesLeftIntersection[count] = ADC1_GetResult16(0);
 343              		.loc 1 117 0
 344 00ac 9A4B     		ldr	r3, .L55+20
 345 00ae 1C68     		ldr	r4, [r3]
 346 00b0 0020     		movs	r0, #0
 347 00b2 FFF7FEFF 		bl	ADC1_GetResult16
 348 00b6 0346     		mov	r3, r0
 349 00b8 1A46     		mov	r2, r3
 350 00ba 984B     		ldr	r3, .L55+24
 351 00bc 43F82420 		str	r2, [r3, r4, lsl #2]
 118:main.c        ****             valuesLeftLine[count] = ADC1_GetResult16(1);
 352              		.loc 1 118 0
 353 00c0 954B     		ldr	r3, .L55+20
 354 00c2 1C68     		ldr	r4, [r3]
 355 00c4 0120     		movs	r0, #1
 356 00c6 FFF7FEFF 		bl	ADC1_GetResult16
 357 00ca 0346     		mov	r3, r0
 358 00cc 1A46     		mov	r2, r3
 359 00ce 944B     		ldr	r3, .L55+28
 360 00d0 43F82420 		str	r2, [r3, r4, lsl #2]
 119:main.c        ****             valuesMiddleLine[count] = ADC1_GetResult16(2);
 361              		.loc 1 119 0
 362 00d4 904B     		ldr	r3, .L55+20
 363 00d6 1C68     		ldr	r4, [r3]
 364 00d8 0220     		movs	r0, #2
 365 00da FFF7FEFF 		bl	ADC1_GetResult16
 366 00de 0346     		mov	r3, r0
 367 00e0 1A46     		mov	r2, r3
 368 00e2 904B     		ldr	r3, .L55+32
 369 00e4 43F82420 		str	r2, [r3, r4, lsl #2]
 120:main.c        ****             valuesTurnComplete[count] = ADC1_GetResult16(3);
 370              		.loc 1 120 0
 371 00e8 8B4B     		ldr	r3, .L55+20
 372 00ea 1C68     		ldr	r4, [r3]
 373 00ec 0320     		movs	r0, #3
 374 00ee FFF7FEFF 		bl	ADC1_GetResult16
 375 00f2 0346     		mov	r3, r0
 376 00f4 1A46     		mov	r2, r3
 377 00f6 8C4B     		ldr	r3, .L55+36
 378 00f8 43F82420 		str	r2, [r3, r4, lsl #2]
 121:main.c        ****             valuesRightLine[count] = ADC1_GetResult16(4);
 379              		.loc 1 121 0
 380 00fc 864B     		ldr	r3, .L55+20
 381 00fe 1C68     		ldr	r4, [r3]
 382 0100 0420     		movs	r0, #4
 383 0102 FFF7FEFF 		bl	ADC1_GetResult16
 384 0106 0346     		mov	r3, r0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 10


 385 0108 1A46     		mov	r2, r3
 386 010a 884B     		ldr	r3, .L55+40
 387 010c 43F82420 		str	r2, [r3, r4, lsl #2]
 122:main.c        ****             valuesRightIntersection[count] = ADC1_GetResult16(5);
 388              		.loc 1 122 0
 389 0110 814B     		ldr	r3, .L55+20
 390 0112 1C68     		ldr	r4, [r3]
 391 0114 0520     		movs	r0, #5
 392 0116 FFF7FEFF 		bl	ADC1_GetResult16
 393 011a 0346     		mov	r3, r0
 394 011c 1A46     		mov	r2, r3
 395 011e 844B     		ldr	r3, .L55+44
 396 0120 43F82420 		str	r2, [r3, r4, lsl #2]
 123:main.c        **** 
 124:main.c        ****             count++;
 397              		.loc 1 124 0
 398 0124 7C4B     		ldr	r3, .L55+20
 399 0126 1B68     		ldr	r3, [r3]
 400 0128 0133     		adds	r3, r3, #1
 401 012a 7B4A     		ldr	r2, .L55+20
 402 012c 1360     		str	r3, [r2]
 125:main.c        ****             if (count == ADC_COUNT) {
 403              		.loc 1 125 0
 404 012e 7A4B     		ldr	r3, .L55+20
 405 0130 1B68     		ldr	r3, [r3]
 406 0132 B3F57A7F 		cmp	r3, #1000
 407 0136 40F00F83 		bne	.L8
 408              	.LBB3:
 126:main.c        **** 
 127:main.c        ****                 count = 0;
 409              		.loc 1 127 0
 410 013a 774B     		ldr	r3, .L55+20
 411 013c 0022     		movs	r2, #0
 412 013e 1A60     		str	r2, [r3]
 128:main.c        ****                 motorUpdateCount++;
 413              		.loc 1 128 0
 414 0140 7C4B     		ldr	r3, .L55+48
 415 0142 1B68     		ldr	r3, [r3]
 416 0144 0133     		adds	r3, r3, #1
 417 0146 7B4A     		ldr	r2, .L55+48
 418 0148 1360     		str	r3, [r2]
 129:main.c        ****                 int highCountLeftIntersection = 0;
 419              		.loc 1 129 0
 420 014a 0023     		movs	r3, #0
 421 014c C7F80031 		str	r3, [r7, #256]
 130:main.c        ****                 int highCountLeftLine = 0;
 422              		.loc 1 130 0
 423 0150 0023     		movs	r3, #0
 424 0152 C7F8FC30 		str	r3, [r7, #252]
 131:main.c        ****                 int highCountMiddleLine = 0;
 425              		.loc 1 131 0
 426 0156 0023     		movs	r3, #0
 427 0158 C7F8F830 		str	r3, [r7, #248]
 132:main.c        ****                 int highCountTurnComplete = 0;
 428              		.loc 1 132 0
 429 015c 0023     		movs	r3, #0
 430 015e C7F8F430 		str	r3, [r7, #244]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 11


 133:main.c        ****                 int highCountRightLine = 0;
 431              		.loc 1 133 0
 432 0162 0023     		movs	r3, #0
 433 0164 C7F8F030 		str	r3, [r7, #240]
 134:main.c        ****                 int highCountRightIntersection = 0;
 434              		.loc 1 134 0
 435 0168 0023     		movs	r3, #0
 436 016a C7F8EC30 		str	r3, [r7, #236]
 437              	.LBB4:
 135:main.c        ****                 for (int i = 0; i < ADC_COUNT; i++) {
 438              		.loc 1 135 0
 439 016e 0023     		movs	r3, #0
 440 0170 C7F8E830 		str	r3, [r7, #232]
 441 0174 94E0     		b	.L9
 442              	.L17:
 443              	.LBB5:
 136:main.c        ****                     step = 0;
 444              		.loc 1 136 0
 445 0176 704B     		ldr	r3, .L55+52
 446 0178 0022     		movs	r2, #0
 447 017a 1A60     		str	r2, [r3]
 137:main.c        ****                     char result1[24];
 138:main.c        ****                     char result2[24];
 139:main.c        ****                     if (motorUpdateCount == 1) {
 448              		.loc 1 139 0
 449 017c 6D4B     		ldr	r3, .L55+48
 450 017e 1B68     		ldr	r3, [r3]
 451 0180 012B     		cmp	r3, #1
 452 0182 34D1     		bne	.L10
 140:main.c        ****                         v2M1 = QuadDec_M1_GetCounter() * -1;
 453              		.loc 1 140 0
 454 0184 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 455 0188 0346     		mov	r3, r0
 456 018a 5B42     		negs	r3, r3
 457 018c 6B4A     		ldr	r2, .L55+56
 458 018e 1360     		str	r3, [r2]
 141:main.c        ****                         v2M2 = QuadDec_M2_GetCounter() * -1;
 459              		.loc 1 141 0
 460 0190 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 461 0194 0346     		mov	r3, r0
 462 0196 5B42     		negs	r3, r3
 463 0198 694A     		ldr	r2, .L55+60
 464 019a 1360     		str	r3, [r2]
 142:main.c        ****                         pulsesTravelled = pulsesTravelled + v2M1 + v2M2;
 465              		.loc 1 142 0
 466 019c 694B     		ldr	r3, .L55+64
 467 019e 1A68     		ldr	r2, [r3]
 468 01a0 664B     		ldr	r3, .L55+56
 469 01a2 1B68     		ldr	r3, [r3]
 470 01a4 1A44     		add	r2, r2, r3
 471 01a6 664B     		ldr	r3, .L55+60
 472 01a8 1B68     		ldr	r3, [r3]
 473 01aa 1344     		add	r3, r3, r2
 474 01ac 654A     		ldr	r2, .L55+64
 475 01ae 1360     		str	r3, [r2]
 143:main.c        ****                         itoa((v2M1 - v1M1), result1, 10);
 476              		.loc 1 143 0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 12


 477 01b0 624B     		ldr	r3, .L55+56
 478 01b2 1A68     		ldr	r2, [r3]
 479 01b4 644B     		ldr	r3, .L55+68
 480 01b6 1B68     		ldr	r3, [r3]
 481 01b8 D31A     		subs	r3, r2, r3
 482 01ba 07F1C001 		add	r1, r7, #192
 483 01be 0A22     		movs	r2, #10
 484 01c0 1846     		mov	r0, r3
 485 01c2 FFF7FEFF 		bl	itoa
 144:main.c        ****                         itoa((v2M2 - v1M2), result2, 10);
 486              		.loc 1 144 0
 487 01c6 5E4B     		ldr	r3, .L55+60
 488 01c8 1A68     		ldr	r2, [r3]
 489 01ca 604B     		ldr	r3, .L55+72
 490 01cc 1B68     		ldr	r3, [r3]
 491 01ce D31A     		subs	r3, r2, r3
 492 01d0 07F1A801 		add	r1, r7, #168
 493 01d4 0A22     		movs	r2, #10
 494 01d6 1846     		mov	r0, r3
 495 01d8 FFF7FEFF 		bl	itoa
 145:main.c        **** 
 146:main.c        ****                         QuadDec_M1_SetCounter(0);
 496              		.loc 1 146 0
 497 01dc 0020     		movs	r0, #0
 498 01de FFF7FEFF 		bl	QuadDec_M1_SetCounter
 147:main.c        ****                         QuadDec_M2_SetCounter(0);
 499              		.loc 1 147 0
 500 01e2 0020     		movs	r0, #0
 501 01e4 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 148:main.c        ****                         motorUpdateCount = 0;
 502              		.loc 1 148 0
 503 01e8 524B     		ldr	r3, .L55+48
 504 01ea 0022     		movs	r2, #0
 505 01ec 1A60     		str	r2, [r3]
 506              	.L10:
 149:main.c        ****                     }
 150:main.c        ****                     if (valuesLeftIntersection[i] > 3000) {
 507              		.loc 1 150 0
 508 01ee 4B4A     		ldr	r2, .L55+24
 509 01f0 D7F8E830 		ldr	r3, [r7, #232]
 510 01f4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 511 01f8 40F6B832 		movw	r2, #3000
 512 01fc 9342     		cmp	r3, r2
 513 01fe 04DD     		ble	.L11
 151:main.c        ****                         highCountLeftIntersection++;
 514              		.loc 1 151 0
 515 0200 D7F80031 		ldr	r3, [r7, #256]
 516 0204 0133     		adds	r3, r3, #1
 517 0206 C7F80031 		str	r3, [r7, #256]
 518              	.L11:
 152:main.c        **** 
 153:main.c        ****                     }
 154:main.c        **** 
 155:main.c        ****                     if (valuesLeftLine[i] > 3000) {
 519              		.loc 1 155 0
 520 020a 454A     		ldr	r2, .L55+28
 521 020c D7F8E830 		ldr	r3, [r7, #232]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 13


 522 0210 52F82330 		ldr	r3, [r2, r3, lsl #2]
 523 0214 40F6B832 		movw	r2, #3000
 524 0218 9342     		cmp	r3, r2
 525 021a 04DD     		ble	.L12
 156:main.c        ****                         highCountLeftLine++;
 526              		.loc 1 156 0
 527 021c D7F8FC30 		ldr	r3, [r7, #252]
 528 0220 0133     		adds	r3, r3, #1
 529 0222 C7F8FC30 		str	r3, [r7, #252]
 530              	.L12:
 157:main.c        **** 
 158:main.c        ****                     }
 159:main.c        **** 
 160:main.c        ****                     if (valuesMiddleLine[i] > 3000) {
 531              		.loc 1 160 0
 532 0226 3F4A     		ldr	r2, .L55+32
 533 0228 D7F8E830 		ldr	r3, [r7, #232]
 534 022c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 535 0230 40F6B832 		movw	r2, #3000
 536 0234 9342     		cmp	r3, r2
 537 0236 04DD     		ble	.L13
 161:main.c        ****                         highCountMiddleLine++;
 538              		.loc 1 161 0
 539 0238 D7F8F830 		ldr	r3, [r7, #248]
 540 023c 0133     		adds	r3, r3, #1
 541 023e C7F8F830 		str	r3, [r7, #248]
 542              	.L13:
 162:main.c        **** 
 163:main.c        ****                     }
 164:main.c        **** 
 165:main.c        ****                     if (valuesTurnComplete[i] > 3000) {
 543              		.loc 1 165 0
 544 0242 394A     		ldr	r2, .L55+36
 545 0244 D7F8E830 		ldr	r3, [r7, #232]
 546 0248 52F82330 		ldr	r3, [r2, r3, lsl #2]
 547 024c 40F6B832 		movw	r2, #3000
 548 0250 9342     		cmp	r3, r2
 549 0252 04DD     		ble	.L14
 166:main.c        ****                         highCountTurnComplete++;
 550              		.loc 1 166 0
 551 0254 D7F8F430 		ldr	r3, [r7, #244]
 552 0258 0133     		adds	r3, r3, #1
 553 025a C7F8F430 		str	r3, [r7, #244]
 554              	.L14:
 167:main.c        **** 
 168:main.c        ****                     }
 169:main.c        **** 
 170:main.c        ****                     if (valuesRightLine[i] > 3000) {
 555              		.loc 1 170 0
 556 025e 334A     		ldr	r2, .L55+40
 557 0260 D7F8E830 		ldr	r3, [r7, #232]
 558 0264 52F82330 		ldr	r3, [r2, r3, lsl #2]
 559 0268 40F6B832 		movw	r2, #3000
 560 026c 9342     		cmp	r3, r2
 561 026e 04DD     		ble	.L15
 171:main.c        ****                         highCountRightLine++;
 562              		.loc 1 171 0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 14


 563 0270 D7F8F030 		ldr	r3, [r7, #240]
 564 0274 0133     		adds	r3, r3, #1
 565 0276 C7F8F030 		str	r3, [r7, #240]
 566              	.L15:
 172:main.c        **** 
 173:main.c        ****                     }
 174:main.c        **** 
 175:main.c        ****                     if (valuesRightIntersection[i] > 3000) {
 567              		.loc 1 175 0
 568 027a 2D4A     		ldr	r2, .L55+44
 569 027c D7F8E830 		ldr	r3, [r7, #232]
 570 0280 52F82330 		ldr	r3, [r2, r3, lsl #2]
 571 0284 40F6B832 		movw	r2, #3000
 572 0288 9342     		cmp	r3, r2
 573 028a 04DD     		ble	.L16
 176:main.c        ****                         highCountRightIntersection++;
 574              		.loc 1 176 0
 575 028c D7F8EC30 		ldr	r3, [r7, #236]
 576 0290 0133     		adds	r3, r3, #1
 577 0292 C7F8EC30 		str	r3, [r7, #236]
 578              	.L16:
 579              	.LBE5:
 135:main.c        ****                     step = 0;
 580              		.loc 1 135 0 discriminator 2
 581 0296 D7F8E830 		ldr	r3, [r7, #232]
 582 029a 0133     		adds	r3, r3, #1
 583 029c C7F8E830 		str	r3, [r7, #232]
 584              	.L9:
 135:main.c        ****                     step = 0;
 585              		.loc 1 135 0 is_stmt 0 discriminator 1
 586 02a0 D7F8E830 		ldr	r3, [r7, #232]
 587 02a4 B3F57A7F 		cmp	r3, #1000
 588 02a8 FFF665AF 		blt	.L17
 589              	.LBE4:
 177:main.c        **** 
 178:main.c        ****                     }
 179:main.c        **** 
 180:main.c        ****                 }
 181:main.c        **** 
 182:main.c        ****                 if (started == 0) {
 590              		.loc 1 182 0 is_stmt 1
 591 02ac 284B     		ldr	r3, .L55+76
 592 02ae 1B68     		ldr	r3, [r3]
 593 02b0 002B     		cmp	r3, #0
 594 02b2 40F0A580 		bne	.L18
 595              	.LBB6:
 183:main.c        ****                     //LED_PIN_1_Write(!LED_PIN_1_Read());
 184:main.c        ****                     // Look for start using a coarse grain approach, gradually get more fine
 185:main.c        ****                     /*if (instruction[instCounter + 23] == 0 && instruction[instCounter + 24] == 0 
 186:main.c        ****                       instCounter = instCounter + 25;
 187:main.c        ****                     } else if (instruction[instCounter + 8] == 0 && instruction[instCounter + 9] ==
 188:main.c        ****                       instCounter = instCounter + 10;
 189:main.c        ****                     } else if (instruction[instCounter + 3] == 0 && instruction[instCounter + 4] ==
 190:main.c        ****                       instCounter = instCounter + 5;
 191:main.c        ****                     } else {
 192:main.c        ****                       if (instruction[instCounter + 1] == 0) {
 193:main.c        ****                         instCounter++;
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 15


 194:main.c        ****                       } else if (instruction[instCounter + 2] == 0) {
 195:main.c        ****                         instCounter = instCounter + 2;
 196:main.c        ****                       } else if (instruction[instCounter + 3] == 0) {
 197:main.c        ****                         instCounter = instCounter + 3;
 198:main.c        ****                       } else if (instruction[instCounter + 4] == 0) {
 199:main.c        ****                         instCounter = instCounter + 4;
 200:main.c        ****                       }
 201:main.c        ****                     }*/
 202:main.c        ****                     int i, firstNonZeroIndex = -1;
 596              		.loc 1 202 0
 597 02b6 4FF0FF33 		mov	r3, #-1
 598 02ba C7F8E030 		str	r3, [r7, #224]
 203:main.c        ****                     for (i = 0; i < 500; i++) {
 599              		.loc 1 203 0
 600 02be 0023     		movs	r3, #0
 601 02c0 C7F8E430 		str	r3, [r7, #228]
 602 02c4 10E0     		b	.L19
 603              	.L22:
 204:main.c        ****                         if (instruction[i] != 0) {
 604              		.loc 1 204 0
 605 02c6 114A     		ldr	r2, .L55+8
 606 02c8 D7F8E430 		ldr	r3, [r7, #228]
 607 02cc 1344     		add	r3, r3, r2
 608 02ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 609 02d0 002B     		cmp	r3, #0
 610 02d2 04D0     		beq	.L20
 205:main.c        ****                             firstNonZeroIndex = i;
 611              		.loc 1 205 0
 612 02d4 D7F8E430 		ldr	r3, [r7, #228]
 613 02d8 C7F8E030 		str	r3, [r7, #224]
 206:main.c        ****                             break;
 614              		.loc 1 206 0
 615 02dc 09E0     		b	.L21
 616              	.L20:
 203:main.c        ****                         if (instruction[i] != 0) {
 617              		.loc 1 203 0 discriminator 2
 618 02de D7F8E430 		ldr	r3, [r7, #228]
 619 02e2 0133     		adds	r3, r3, #1
 620 02e4 C7F8E430 		str	r3, [r7, #228]
 621              	.L19:
 203:main.c        ****                         if (instruction[i] != 0) {
 622              		.loc 1 203 0 is_stmt 0 discriminator 1
 623 02e8 D7F8E430 		ldr	r3, [r7, #228]
 624 02ec B3F5FA7F 		cmp	r3, #500
 625 02f0 E9DB     		blt	.L22
 626              	.L21:
 207:main.c        ****                         }
 208:main.c        ****                     }
 209:main.c        **** 
 210:main.c        ****                     if (firstNonZeroIndex != -1) {
 627              		.loc 1 210 0 is_stmt 1
 628 02f2 D7F8E030 		ldr	r3, [r7, #224]
 629 02f6 B3F1FF3F 		cmp	r3, #-1
 630 02fa 6FD0     		beq	.L23
 211:main.c        ****                         // Shift the array to start with the first non-zero element
 212:main.c        ****                         for (i = 0; i < 500 - firstNonZeroIndex; i++) {
 631              		.loc 1 212 0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 16


 632 02fc 0023     		movs	r3, #0
 633 02fe C7F8E430 		str	r3, [r7, #228]
 634 0302 46E0     		b	.L24
 635              	.L56:
 636              		.align	2
 637              	.L55:
 638 0304 00000000 		.word	eoc
 639 0308 00000000 		.word	squares
 640 030c 00000000 		.word	instruction
 641 0310 00000000 		.word	distance
 642 0314 00000000 		.word	flag
 643 0318 00000000 		.word	count
 644 031c 00000000 		.word	valuesLeftIntersection
 645 0320 00000000 		.word	valuesLeftLine
 646 0324 00000000 		.word	valuesMiddleLine
 647 0328 00000000 		.word	valuesTurnComplete
 648 032c 00000000 		.word	valuesRightLine
 649 0330 00000000 		.word	valuesRightIntersection
 650 0334 00000000 		.word	motorUpdateCount
 651 0338 00000000 		.word	step
 652 033c 00000000 		.word	v2M1
 653 0340 00000000 		.word	v2M2
 654 0344 00000000 		.word	pulsesTravelled
 655 0348 00000000 		.word	v1M1
 656 034c 00000000 		.word	v1M2
 657 0350 00000000 		.word	started
 658              	.L25:
 213:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 659              		.loc 1 213 0 discriminator 3
 660 0354 D7F8E420 		ldr	r2, [r7, #228]
 661 0358 D7F8E030 		ldr	r3, [r7, #224]
 662 035c 1344     		add	r3, r3, r2
 663 035e 834A     		ldr	r2, .L57
 664 0360 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 665 0362 824A     		ldr	r2, .L57
 666 0364 D7F8E430 		ldr	r3, [r7, #228]
 667 0368 1344     		add	r3, r3, r2
 668 036a 0A46     		mov	r2, r1
 669 036c 1A70     		strb	r2, [r3]
 214:main.c        ****                             distance[i] = distance[i + firstNonZeroIndex];
 670              		.loc 1 214 0 discriminator 3
 671 036e D7F8E420 		ldr	r2, [r7, #228]
 672 0372 D7F8E030 		ldr	r3, [r7, #224]
 673 0376 1344     		add	r3, r3, r2
 674 0378 7D4A     		ldr	r2, .L57+4
 675 037a D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 676 037c 7C4A     		ldr	r2, .L57+4
 677 037e D7F8E430 		ldr	r3, [r7, #228]
 678 0382 1344     		add	r3, r3, r2
 679 0384 0A46     		mov	r2, r1
 680 0386 1A70     		strb	r2, [r3]
 212:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 681              		.loc 1 212 0 discriminator 3
 682 0388 D7F8E430 		ldr	r3, [r7, #228]
 683 038c 0133     		adds	r3, r3, #1
 684 038e C7F8E430 		str	r3, [r7, #228]
 685              	.L24:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 17


 212:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 686              		.loc 1 212 0 is_stmt 0 discriminator 1
 687 0392 D7F8E030 		ldr	r3, [r7, #224]
 688 0396 C3F5FA72 		rsb	r2, r3, #500
 689 039a D7F8E430 		ldr	r3, [r7, #228]
 690 039e 9A42     		cmp	r2, r3
 691 03a0 D8DC     		bgt	.L25
 215:main.c        ****                         }
 216:main.c        **** 
 217:main.c        ****                         // Zero out the remaining elements
 218:main.c        ****                         for (i = 500 - firstNonZeroIndex; i < 500; i++) {
 692              		.loc 1 218 0 is_stmt 1
 693 03a2 D7F8E030 		ldr	r3, [r7, #224]
 694 03a6 C3F5FA73 		rsb	r3, r3, #500
 695 03aa C7F8E430 		str	r3, [r7, #228]
 696 03ae 10E0     		b	.L26
 697              	.L27:
 219:main.c        ****                             instruction[i] = 0;
 698              		.loc 1 219 0 discriminator 3
 699 03b0 6E4A     		ldr	r2, .L57
 700 03b2 D7F8E430 		ldr	r3, [r7, #228]
 701 03b6 1344     		add	r3, r3, r2
 702 03b8 0022     		movs	r2, #0
 703 03ba 1A70     		strb	r2, [r3]
 220:main.c        ****                             distance[i] = 0;
 704              		.loc 1 220 0 discriminator 3
 705 03bc 6C4A     		ldr	r2, .L57+4
 706 03be D7F8E430 		ldr	r3, [r7, #228]
 707 03c2 1344     		add	r3, r3, r2
 708 03c4 0022     		movs	r2, #0
 709 03c6 1A70     		strb	r2, [r3]
 218:main.c        ****                             instruction[i] = 0;
 710              		.loc 1 218 0 discriminator 3
 711 03c8 D7F8E430 		ldr	r3, [r7, #228]
 712 03cc 0133     		adds	r3, r3, #1
 713 03ce C7F8E430 		str	r3, [r7, #228]
 714              	.L26:
 218:main.c        ****                             instruction[i] = 0;
 715              		.loc 1 218 0 is_stmt 0 discriminator 1
 716 03d2 D7F8E430 		ldr	r3, [r7, #228]
 717 03d6 B3F5FA7F 		cmp	r3, #500
 718 03da E9DB     		blt	.L27
 719              	.L23:
 720              	.LBB7:
 221:main.c        ****                         }
 222:main.c        **** 
 223:main.c        ****                     } else {
 224:main.c        ****                         // The array contains all zeros
 225:main.c        **** 
 226:main.c        ****                     }
 227:main.c        ****                     for (int i = 0; i < 500; i++) {
 721              		.loc 1 227 0 is_stmt 1
 722 03dc 0023     		movs	r3, #0
 723 03de C7F8DC30 		str	r3, [r7, #220]
 724 03e2 04E0     		b	.L28
 725              	.L29:
 726              		.loc 1 227 0 is_stmt 0 discriminator 3
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 18


 727 03e4 D7F8DC30 		ldr	r3, [r7, #220]
 728 03e8 0133     		adds	r3, r3, #1
 729 03ea C7F8DC30 		str	r3, [r7, #220]
 730              	.L28:
 731              		.loc 1 227 0 discriminator 1
 732 03ee D7F8DC30 		ldr	r3, [r7, #220]
 733 03f2 B3F5FA7F 		cmp	r3, #500
 734 03f6 F5DB     		blt	.L29
 735              	.LBE7:
 228:main.c        **** 
 229:main.c        ****                         char instStr[24];
 230:main.c        **** 
 231:main.c        ****                         //snprintf(instStr, sizeof(instStr), "%u - %u \r\n", (unsigned char) instru
 232:main.c        **** 
 233:main.c        ****                         //usbPutString(instStr);
 234:main.c        ****                     }
 235:main.c        ****                     started = 1;
 736              		.loc 1 235 0 is_stmt 1
 737 03f8 5E4B     		ldr	r3, .L57+8
 738 03fa 0122     		movs	r2, #1
 739 03fc 1A60     		str	r2, [r3]
 740              	.LBE6:
 741 03fe ABE1     		b	.L8
 742              	.L18:
 743              	.LBB8:
 236:main.c        ****                 } else {
 237:main.c        **** 
 238:main.c        ****                     started = 1;
 744              		.loc 1 238 0
 745 0400 5C4B     		ldr	r3, .L57+8
 746 0402 0122     		movs	r2, #1
 747 0404 1A60     		str	r2, [r3]
 239:main.c        **** 
 240:main.c        ****                     char currentInst = instruction[instCounter];
 748              		.loc 1 240 0
 749 0406 5C4B     		ldr	r3, .L57+12
 750 0408 1B68     		ldr	r3, [r3]
 751 040a 584A     		ldr	r2, .L57
 752 040c D35C     		ldrb	r3, [r2, r3]
 753 040e 87F8DB30 		strb	r3, [r7, #219]
 241:main.c        ****                     if (currentInst == 0) {
 754              		.loc 1 241 0
 755 0412 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 756 0416 002B     		cmp	r3, #0
 757 0418 06D1     		bne	.L30
 242:main.c        ****                         LED_PIN_1_Write(0);
 758              		.loc 1 242 0
 759 041a 0020     		movs	r0, #0
 760 041c FFF7FEFF 		bl	LED_PIN_1_Write
 243:main.c        ****                         LED_PIN_6_Write(0);
 761              		.loc 1 243 0
 762 0420 0020     		movs	r0, #0
 763 0422 FFF7FEFF 		bl	LED_PIN_6_Write
 764 0426 56E0     		b	.L31
 765              	.L30:
 244:main.c        ****                         // Stop
 245:main.c        **** 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 19


 246:main.c        ****                     } else if (currentInst == 1) {
 766              		.loc 1 246 0
 767 0428 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 768 042c 012B     		cmp	r3, #1
 769 042e 06D1     		bne	.L32
 247:main.c        ****                         LED_PIN_1_Write(1);
 770              		.loc 1 247 0
 771 0430 0120     		movs	r0, #1
 772 0432 FFF7FEFF 		bl	LED_PIN_1_Write
 248:main.c        ****                         LED_PIN_6_Write(0);
 773              		.loc 1 248 0
 774 0436 0020     		movs	r0, #0
 775 0438 FFF7FEFF 		bl	LED_PIN_6_Write
 776 043c 4BE0     		b	.L31
 777              	.L32:
 249:main.c        ****                         // Complete a left turn, then follow line
 250:main.c        **** 
 251:main.c        ****                     } else if (currentInst == 2) {
 778              		.loc 1 251 0
 779 043e 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 780 0442 022B     		cmp	r3, #2
 781 0444 06D1     		bne	.L33
 252:main.c        ****                         LED_PIN_1_Write(1);
 782              		.loc 1 252 0
 783 0446 0120     		movs	r0, #1
 784 0448 FFF7FEFF 		bl	LED_PIN_1_Write
 253:main.c        ****                         LED_PIN_6_Write(1);
 785              		.loc 1 253 0
 786 044c 0120     		movs	r0, #1
 787 044e FFF7FEFF 		bl	LED_PIN_6_Write
 788 0452 40E0     		b	.L31
 789              	.L33:
 254:main.c        ****                         // Drive straight
 255:main.c        ****                     } else if (currentInst == 3) {
 790              		.loc 1 255 0
 791 0454 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 792 0458 032B     		cmp	r3, #3
 793 045a 06D1     		bne	.L34
 256:main.c        ****                         LED_PIN_1_Write(0);
 794              		.loc 1 256 0
 795 045c 0020     		movs	r0, #0
 796 045e FFF7FEFF 		bl	LED_PIN_1_Write
 257:main.c        ****                         LED_PIN_6_Write(1);
 797              		.loc 1 257 0
 798 0462 0120     		movs	r0, #1
 799 0464 FFF7FEFF 		bl	LED_PIN_6_Write
 800 0468 35E0     		b	.L31
 801              	.L34:
 258:main.c        ****                         // Complete a right turn then follow line
 259:main.c        **** 
 260:main.c        ****                     } else if (currentInst == 4) {
 802              		.loc 1 260 0
 803 046a 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 804 046e 042B     		cmp	r3, #4
 805 0470 06D1     		bne	.L35
 261:main.c        ****                         LED_PIN_1_Write(0);
 806              		.loc 1 261 0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 20


 807 0472 0020     		movs	r0, #0
 808 0474 FFF7FEFF 		bl	LED_PIN_1_Write
 262:main.c        ****                         LED_PIN_6_Write(0);
 809              		.loc 1 262 0
 810 0478 0020     		movs	r0, #0
 811 047a FFF7FEFF 		bl	LED_PIN_6_Write
 812 047e 2AE0     		b	.L31
 813              	.L35:
 263:main.c        ****                         // Do a 180, then follow line
 264:main.c        ****                     } else if (currentInst == 5) {
 814              		.loc 1 264 0
 815 0480 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 816 0484 052B     		cmp	r3, #5
 817 0486 06D1     		bne	.L36
 265:main.c        ****                         LED_PIN_1_Write(1);
 818              		.loc 1 265 0
 819 0488 0120     		movs	r0, #1
 820 048a FFF7FEFF 		bl	LED_PIN_1_Write
 266:main.c        ****                         LED_PIN_6_Write(0);
 821              		.loc 1 266 0
 822 048e 0020     		movs	r0, #0
 823 0490 FFF7FEFF 		bl	LED_PIN_6_Write
 824 0494 1FE0     		b	.L31
 825              	.L36:
 267:main.c        ****                         // Complete a left turn, then follow line until end of encoder position
 268:main.c        ****                     } else if (currentInst == 6) {
 826              		.loc 1 268 0
 827 0496 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 828 049a 062B     		cmp	r3, #6
 829 049c 06D1     		bne	.L37
 269:main.c        ****                         LED_PIN_1_Write(1);
 830              		.loc 1 269 0
 831 049e 0120     		movs	r0, #1
 832 04a0 FFF7FEFF 		bl	LED_PIN_1_Write
 270:main.c        ****                         LED_PIN_6_Write(1);
 833              		.loc 1 270 0
 834 04a4 0120     		movs	r0, #1
 835 04a6 FFF7FEFF 		bl	LED_PIN_6_Write
 836 04aa 14E0     		b	.L31
 837              	.L37:
 271:main.c        ****                         // Follow line until end of encoder position
 272:main.c        ****                     } else if (currentInst == 7) {
 838              		.loc 1 272 0
 839 04ac 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 840 04b0 072B     		cmp	r3, #7
 841 04b2 06D1     		bne	.L38
 273:main.c        ****                         LED_PIN_1_Write(0);
 842              		.loc 1 273 0
 843 04b4 0020     		movs	r0, #0
 844 04b6 FFF7FEFF 		bl	LED_PIN_1_Write
 274:main.c        ****                         LED_PIN_6_Write(1);
 845              		.loc 1 274 0
 846 04ba 0120     		movs	r0, #1
 847 04bc FFF7FEFF 		bl	LED_PIN_6_Write
 848 04c0 09E0     		b	.L31
 849              	.L38:
 275:main.c        ****                         // Complete a right turn, then follow line until end of encoder position
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 21


 276:main.c        ****                     } else if (currentInst == 8) {
 850              		.loc 1 276 0
 851 04c2 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 852 04c6 082B     		cmp	r3, #8
 853 04c8 05D1     		bne	.L31
 277:main.c        ****                         LED_PIN_1_Write(0);
 854              		.loc 1 277 0
 855 04ca 0020     		movs	r0, #0
 856 04cc FFF7FEFF 		bl	LED_PIN_1_Write
 278:main.c        ****                         LED_PIN_6_Write(0);
 857              		.loc 1 278 0
 858 04d0 0020     		movs	r0, #0
 859 04d2 FFF7FEFF 		bl	LED_PIN_6_Write
 860              	.L31:
 279:main.c        ****                         // Complete a 180 turn, then follow line until end of encoder position
 280:main.c        ****                     }
 281:main.c        **** 
 282:main.c        ****                     if (M_LINE_BLACK && L_LINE_BLACK) { // if robot slightly too far right
 861              		.loc 1 282 0
 862 04d6 D7F8F830 		ldr	r3, [r7, #248]
 863 04da 952B     		cmp	r3, #149
 864 04dc 09DC     		bgt	.L39
 865              		.loc 1 282 0 is_stmt 0 discriminator 1
 866 04de D7F8FC30 		ldr	r3, [r7, #252]
 867 04e2 952B     		cmp	r3, #149
 868 04e4 05DC     		bgt	.L39
 283:main.c        ****                         adjustLeft();
 869              		.loc 1 283 0 is_stmt 1
 870 04e6 FFF7FEFF 		bl	adjustLeft
 284:main.c        **** 
 285:main.c        ****                         lastAdjustDirection = 0;
 871              		.loc 1 285 0
 872 04ea 244B     		ldr	r3, .L57+16
 873 04ec 0022     		movs	r2, #0
 874 04ee 1A60     		str	r2, [r3]
 875 04f0 48E0     		b	.L40
 876              	.L39:
 286:main.c        **** 
 287:main.c        ****                     } else if (M_LINE_BLACK && R_LINE_BLACK) { //  if robot slightly too far left
 877              		.loc 1 287 0
 878 04f2 D7F8F830 		ldr	r3, [r7, #248]
 879 04f6 952B     		cmp	r3, #149
 880 04f8 09DC     		bgt	.L41
 881              		.loc 1 287 0 is_stmt 0 discriminator 1
 882 04fa D7F8F030 		ldr	r3, [r7, #240]
 883 04fe 952B     		cmp	r3, #149
 884 0500 05DC     		bgt	.L41
 288:main.c        ****                         adjustRight();
 885              		.loc 1 288 0 is_stmt 1
 886 0502 FFF7FEFF 		bl	adjustRight
 289:main.c        ****                         lastAdjustDirection = 2;
 887              		.loc 1 289 0
 888 0506 1D4B     		ldr	r3, .L57+16
 889 0508 0222     		movs	r2, #2
 890 050a 1A60     		str	r2, [r3]
 891 050c 3AE0     		b	.L40
 892              	.L41:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 22


 290:main.c        **** 
 291:main.c        ****                     } else if (M_LINE_BLACK) { // if robot in the center keep moving straight
 893              		.loc 1 291 0
 894 050e D7F8F830 		ldr	r3, [r7, #248]
 895 0512 952B     		cmp	r3, #149
 896 0514 07DC     		bgt	.L42
 292:main.c        **** 
 293:main.c        ****                         lastAdjustDirection = 1;
 897              		.loc 1 293 0
 898 0516 194B     		ldr	r3, .L57+16
 899 0518 0122     		movs	r2, #1
 900 051a 1A60     		str	r2, [r3]
 294:main.c        **** 
 295:main.c        ****                         driveForward(0, 0);
 901              		.loc 1 295 0
 902 051c 0021     		movs	r1, #0
 903 051e 0020     		movs	r0, #0
 904 0520 FFF7FEFF 		bl	driveForward
 905 0524 2EE0     		b	.L40
 906              	.L42:
 296:main.c        **** 
 297:main.c        ****                     } else if (R_LINE_BLACK) { // if robot too far left
 907              		.loc 1 297 0
 908 0526 D7F8F030 		ldr	r3, [r7, #240]
 909 052a 952B     		cmp	r3, #149
 910 052c 05DC     		bgt	.L43
 298:main.c        ****                         adjustRight();
 911              		.loc 1 298 0
 912 052e FFF7FEFF 		bl	adjustRight
 299:main.c        **** 
 300:main.c        ****                         lastAdjustDirection = 2;
 913              		.loc 1 300 0
 914 0532 124B     		ldr	r3, .L57+16
 915 0534 0222     		movs	r2, #2
 916 0536 1A60     		str	r2, [r3]
 917 0538 24E0     		b	.L40
 918              	.L43:
 301:main.c        **** 
 302:main.c        ****                     } else if (L_LINE_BLACK) { // if robot too far right
 919              		.loc 1 302 0
 920 053a D7F8FC30 		ldr	r3, [r7, #252]
 921 053e 952B     		cmp	r3, #149
 922 0540 05DC     		bgt	.L44
 303:main.c        ****                         adjustLeft();
 923              		.loc 1 303 0
 924 0542 FFF7FEFF 		bl	adjustLeft
 304:main.c        **** 
 305:main.c        ****                         lastAdjustDirection = 0;
 925              		.loc 1 305 0
 926 0546 0D4B     		ldr	r3, .L57+16
 927 0548 0022     		movs	r2, #0
 928 054a 1A60     		str	r2, [r3]
 929 054c 1AE0     		b	.L40
 930              	.L44:
 306:main.c        **** 
 307:main.c        ****                     } else { // completely lost find way
 308:main.c        ****                         if (lastAdjustDirection == 0) {
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 23


 931              		.loc 1 308 0
 932 054e 0B4B     		ldr	r3, .L57+16
 933 0550 1B68     		ldr	r3, [r3]
 934 0552 002B     		cmp	r3, #0
 935 0554 02D1     		bne	.L45
 309:main.c        ****                             turnLeft();
 936              		.loc 1 309 0
 937 0556 FFF7FEFF 		bl	turnLeft
 938 055a 13E0     		b	.L40
 939              	.L45:
 310:main.c        ****                         } else if (lastAdjustDirection == 1) { // last movement was forward (middle
 940              		.loc 1 310 0
 941 055c 074B     		ldr	r3, .L57+16
 942 055e 1B68     		ldr	r3, [r3]
 943 0560 012B     		cmp	r3, #1
 944 0562 0DD1     		bne	.L46
 311:main.c        ****                             //hardAdjustLeft();
 312:main.c        ****                             turnRight();
 945              		.loc 1 312 0
 946 0564 FFF7FEFF 		bl	turnRight
 947 0568 0CE0     		b	.L40
 948              	.L58:
 949 056a 00BF     		.align	2
 950              	.L57:
 951 056c 00000000 		.word	instruction
 952 0570 00000000 		.word	distance
 953 0574 00000000 		.word	started
 954 0578 00000000 		.word	instCounter
 955 057c 00000000 		.word	lastAdjustDirection
 956              	.L46:
 313:main.c        ****                         } else {
 314:main.c        ****                             turnRight();
 957              		.loc 1 314 0
 958 0580 FFF7FEFF 		bl	turnRight
 959              	.L40:
 315:main.c        ****                         }
 316:main.c        **** 
 317:main.c        ****                     }
 318:main.c        **** 
 319:main.c        ****                     // UPDATE INSTRUCTION LOGIC GOES HERE this needs dramatic improving
 320:main.c        ****                     LED_PIN_2_Write(0);
 960              		.loc 1 320 0
 961 0584 0020     		movs	r0, #0
 962 0586 FFF7FEFF 		bl	LED_PIN_2_Write
 321:main.c        ****                     LED_PIN_3_Write(0);
 963              		.loc 1 321 0
 964 058a 0020     		movs	r0, #0
 965 058c FFF7FEFF 		bl	LED_PIN_3_Write
 322:main.c        ****                     LED_PIN_4_Write(0);
 966              		.loc 1 322 0
 967 0590 0020     		movs	r0, #0
 968 0592 FFF7FEFF 		bl	LED_PIN_4_Write
 323:main.c        ****                     char dist[24];
 324:main.c        ****                     char pulses[24];
 325:main.c        ****                     char first[24];
 326:main.c        ****                     char second[24];
 327:main.c        ****                     itoa(distance[instCounter] * 9.13333, first, 10);
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 24


 969              		.loc 1 327 0
 970 0596 784B     		ldr	r3, .L59+16
 971 0598 1B68     		ldr	r3, [r3]
 972 059a 784A     		ldr	r2, .L59+20
 973 059c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 974 059e 1846     		mov	r0, r3
 975 05a0 FFF7FEFF 		bl	__aeabi_i2d
 976 05a4 70A3     		adr	r3, .L59
 977 05a6 D3E90023 		ldrd	r2, [r3]
 978 05aa FFF7FEFF 		bl	__aeabi_dmul
 979 05ae 0346     		mov	r3, r0
 980 05b0 0C46     		mov	r4, r1
 981 05b2 1846     		mov	r0, r3
 982 05b4 2146     		mov	r1, r4
 983 05b6 FFF7FEFF 		bl	__aeabi_d2iz
 984 05ba 07F14803 		add	r3, r7, #72
 985 05be 0A22     		movs	r2, #10
 986 05c0 1946     		mov	r1, r3
 987 05c2 FFF7FEFF 		bl	itoa
 328:main.c        ****                     itoa((pulsesTravelled), pulses, 10);
 988              		.loc 1 328 0
 989 05c6 6E4B     		ldr	r3, .L59+24
 990 05c8 1B68     		ldr	r3, [r3]
 991 05ca 07F16001 		add	r1, r7, #96
 992 05ce 0A22     		movs	r2, #10
 993 05d0 1846     		mov	r0, r3
 994 05d2 FFF7FEFF 		bl	itoa
 329:main.c        ****                     itoa(pulsesTravelled * 20.42 / 57 / 2, second, 10);
 995              		.loc 1 329 0
 996 05d6 6A4B     		ldr	r3, .L59+24
 997 05d8 1B68     		ldr	r3, [r3]
 998 05da 1846     		mov	r0, r3
 999 05dc FFF7FEFF 		bl	__aeabi_i2d
 1000 05e0 63A3     		adr	r3, .L59+8
 1001 05e2 D3E90023 		ldrd	r2, [r3]
 1002 05e6 FFF7FEFF 		bl	__aeabi_dmul
 1003 05ea 0346     		mov	r3, r0
 1004 05ec 0C46     		mov	r4, r1
 1005 05ee 1846     		mov	r0, r3
 1006 05f0 2146     		mov	r1, r4
 1007 05f2 4FF00002 		mov	r2, #0
 1008 05f6 634B     		ldr	r3, .L59+28
 1009 05f8 FFF7FEFF 		bl	__aeabi_ddiv
 1010 05fc 0346     		mov	r3, r0
 1011 05fe 0C46     		mov	r4, r1
 1012 0600 1846     		mov	r0, r3
 1013 0602 2146     		mov	r1, r4
 1014 0604 4FF00002 		mov	r2, #0
 1015 0608 4FF08043 		mov	r3, #1073741824
 1016 060c FFF7FEFF 		bl	__aeabi_ddiv
 1017 0610 0346     		mov	r3, r0
 1018 0612 0C46     		mov	r4, r1
 1019 0614 1846     		mov	r0, r3
 1020 0616 2146     		mov	r1, r4
 1021 0618 FFF7FEFF 		bl	__aeabi_d2iz
 1022 061c 07F13003 		add	r3, r7, #48
 1023 0620 0A22     		movs	r2, #10
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 25


 1024 0622 1946     		mov	r1, r3
 1025 0624 FFF7FEFF 		bl	itoa
 330:main.c        ****                     itoa(distance[instCounter], dist, 10);
 1026              		.loc 1 330 0
 1027 0628 534B     		ldr	r3, .L59+16
 1028 062a 1B68     		ldr	r3, [r3]
 1029 062c 534A     		ldr	r2, .L59+20
 1030 062e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1031 0630 1846     		mov	r0, r3
 1032 0632 07F17803 		add	r3, r7, #120
 1033 0636 0A22     		movs	r2, #10
 1034 0638 1946     		mov	r1, r3
 1035 063a FFF7FEFF 		bl	itoa
 331:main.c        ****                     /*usbPutString(dist);
 332:main.c        ****                     usbPutString(" - ");
 333:main.c        ****                     usbPutString(pulses);
 334:main.c        ****                     usbPutString("       ");
 335:main.c        ****                     usbPutString(first);
 336:main.c        ****                     usbPutString(" <= ");
 337:main.c        ****                     usbPutString(second);
 338:main.c        ****                     usbPutString("\r\n");*/
 339:main.c        ****                     //if (distance[instCounter] * 13.25 * 228 <= (pulsesTravelled) * 20.42 * 0.5) {
 340:main.c        ****                     //57 pulses on 1 motor = 20.42 cm
 341:main.c        ****                     char instStr[24];
 342:main.c        ****                     char cVal[24];
 343:main.c        **** 
 344:main.c        ****                     itoa(instCounter, cVal, 10);
 1036              		.loc 1 344 0
 1037 063e 4E4B     		ldr	r3, .L59+16
 1038 0640 1B68     		ldr	r3, [r3]
 1039 0642 3946     		mov	r1, r7
 1040 0644 0A22     		movs	r2, #10
 1041 0646 1846     		mov	r0, r3
 1042 0648 FFF7FEFF 		bl	itoa
 345:main.c        ****                     if ((distance[instCounter] * 9.13333 <= pulsesTravelled * 20.42 / 57 / 2)) {
 1043              		.loc 1 345 0
 1044 064c 4A4B     		ldr	r3, .L59+16
 1045 064e 1B68     		ldr	r3, [r3]
 1046 0650 4A4A     		ldr	r2, .L59+20
 1047 0652 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1048 0654 1846     		mov	r0, r3
 1049 0656 FFF7FEFF 		bl	__aeabi_i2d
 1050 065a 43A3     		adr	r3, .L59
 1051 065c D3E90023 		ldrd	r2, [r3]
 1052 0660 FFF7FEFF 		bl	__aeabi_dmul
 1053 0664 0346     		mov	r3, r0
 1054 0666 0C46     		mov	r4, r1
 1055 0668 2546     		mov	r5, r4
 1056 066a 1C46     		mov	r4, r3
 1057 066c 444B     		ldr	r3, .L59+24
 1058 066e 1B68     		ldr	r3, [r3]
 1059 0670 1846     		mov	r0, r3
 1060 0672 FFF7FEFF 		bl	__aeabi_i2d
 1061 0676 3EA3     		adr	r3, .L59+8
 1062 0678 D3E90023 		ldrd	r2, [r3]
 1063 067c FFF7FEFF 		bl	__aeabi_dmul
 1064 0680 0246     		mov	r2, r0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 26


 1065 0682 0B46     		mov	r3, r1
 1066 0684 1046     		mov	r0, r2
 1067 0686 1946     		mov	r1, r3
 1068 0688 4FF00002 		mov	r2, #0
 1069 068c 3D4B     		ldr	r3, .L59+28
 1070 068e FFF7FEFF 		bl	__aeabi_ddiv
 1071 0692 0246     		mov	r2, r0
 1072 0694 0B46     		mov	r3, r1
 1073 0696 1046     		mov	r0, r2
 1074 0698 1946     		mov	r1, r3
 1075 069a 4FF00002 		mov	r2, #0
 1076 069e 4FF08043 		mov	r3, #1073741824
 1077 06a2 FFF7FEFF 		bl	__aeabi_ddiv
 1078 06a6 0246     		mov	r2, r0
 1079 06a8 0B46     		mov	r3, r1
 1080 06aa 2046     		mov	r0, r4
 1081 06ac 2946     		mov	r1, r5
 1082 06ae FFF7FEFF 		bl	__aeabi_dcmple
 1083 06b2 0346     		mov	r3, r0
 1084 06b4 002B     		cmp	r3, #0
 1085 06b6 41D0     		beq	.L47
 346:main.c        ****                         if (currentInst == 0) {
 1086              		.loc 1 346 0
 1087 06b8 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1088 06bc 002B     		cmp	r3, #0
 1089 06be 16D1     		bne	.L49
 347:main.c        ****                             LED_PIN_4_Write(1);
 1090              		.loc 1 347 0
 1091 06c0 0120     		movs	r0, #1
 1092 06c2 FFF7FEFF 		bl	LED_PIN_4_Write
 348:main.c        ****                             instCounter++;
 1093              		.loc 1 348 0
 1094 06c6 2C4B     		ldr	r3, .L59+16
 1095 06c8 1B68     		ldr	r3, [r3]
 1096 06ca 0133     		adds	r3, r3, #1
 1097 06cc 2A4A     		ldr	r2, .L59+16
 1098 06ce 1360     		str	r3, [r2]
 349:main.c        ****                             //snprintf(instStr, sizeof(instStr), "%u - %u c:%s\r\n", (unsigned char
 350:main.c        ****                             //usbPutString("INSTCHANGE - ");
 351:main.c        ****                             //usbPutString(instStr);
 352:main.c        ****                             pulsesTravelled = 0;
 1099              		.loc 1 352 0
 1100 06d0 2B4B     		ldr	r3, .L59+24
 1101 06d2 0022     		movs	r2, #0
 1102 06d4 1A60     		str	r2, [r3]
 353:main.c        ****                         
 354:main.c        **** 
 355:main.c        ****                             LED_PIN_4_Write(1);
 1103              		.loc 1 355 0
 1104 06d6 0120     		movs	r0, #1
 1105 06d8 FFF7FEFF 		bl	LED_PIN_4_Write
 356:main.c        ****                             instCounter++;
 1106              		.loc 1 356 0
 1107 06dc 264B     		ldr	r3, .L59+16
 1108 06de 1B68     		ldr	r3, [r3]
 1109 06e0 0133     		adds	r3, r3, #1
 1110 06e2 254A     		ldr	r2, .L59+16
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 27


 1111 06e4 1360     		str	r3, [r2]
 357:main.c        ****                             //snprintf(instStr, sizeof(instStr), "%u - %u c:%s\r\n", (unsigned char
 358:main.c        ****                             //usbPutString("INSTCHANGE - ");
 359:main.c        ****                             //usbPutString(instStr);
 360:main.c        ****                             pulsesTravelled = 0;
 1112              		.loc 1 360 0
 1113 06e6 264B     		ldr	r3, .L59+24
 1114 06e8 0022     		movs	r2, #0
 1115 06ea 1A60     		str	r2, [r3]
 1116 06ec 26E0     		b	.L47
 1117              	.L49:
 361:main.c        **** 
 362:main.c        ****                         } else if (R_INT_BLACK && (currentInst == 3 || currentInst == 2 || currentI
 1118              		.loc 1 362 0
 1119 06ee D7F8EC30 		ldr	r3, [r7, #236]
 1120 06f2 952B     		cmp	r3, #149
 1121 06f4 22DC     		bgt	.L47
 1122              		.loc 1 362 0 is_stmt 0 discriminator 1
 1123 06f6 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1124 06fa 032B     		cmp	r3, #3
 1125 06fc 13D0     		beq	.L50
 1126              		.loc 1 362 0 discriminator 2
 1127 06fe 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1128 0702 022B     		cmp	r3, #2
 1129 0704 0FD0     		beq	.L50
 1130              		.loc 1 362 0 discriminator 3
 1131 0706 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1132 070a 042B     		cmp	r3, #4
 1133 070c 0BD0     		beq	.L50
 1134              		.loc 1 362 0 discriminator 4
 1135 070e 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1136 0712 072B     		cmp	r3, #7
 1137 0714 07D0     		beq	.L50
 1138              		.loc 1 362 0 discriminator 5
 1139 0716 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1140 071a 062B     		cmp	r3, #6
 1141 071c 03D0     		beq	.L50
 1142              		.loc 1 362 0 discriminator 6
 1143 071e 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1144 0722 082B     		cmp	r3, #8
 1145 0724 0AD1     		bne	.L47
 1146              	.L50:
 363:main.c        **** 
 364:main.c        ****                             LED_PIN_4_Write(1);
 1147              		.loc 1 364 0 is_stmt 1
 1148 0726 0120     		movs	r0, #1
 1149 0728 FFF7FEFF 		bl	LED_PIN_4_Write
 365:main.c        ****                             instCounter++;
 1150              		.loc 1 365 0
 1151 072c 124B     		ldr	r3, .L59+16
 1152 072e 1B68     		ldr	r3, [r3]
 1153 0730 0133     		adds	r3, r3, #1
 1154 0732 114A     		ldr	r2, .L59+16
 1155 0734 1360     		str	r3, [r2]
 366:main.c        ****                             //snprintf(instStr, sizeof(instStr), "%u - %u c:%s\r\n", (unsigned char
 367:main.c        ****                             //usbPutString("INSTCHANGE - ");
 368:main.c        ****                             //usbPutString(instStr);
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 28


 369:main.c        ****                             pulsesTravelled = 0;
 1156              		.loc 1 369 0
 1157 0736 124B     		ldr	r3, .L59+24
 1158 0738 0022     		movs	r2, #0
 1159 073a 1A60     		str	r2, [r3]
 1160              	.L47:
 370:main.c        **** 
 371:main.c        ****                         }
 372:main.c        ****                     }
 373:main.c        **** 
 374:main.c        ****                     if (L_INT_BLACK) {
 1161              		.loc 1 374 0
 1162 073c D7F80031 		ldr	r3, [r7, #256]
 1163 0740 952B     		cmp	r3, #149
 1164 0742 02DC     		bgt	.L51
 375:main.c        ****                         LED_PIN_2_Write(1);
 1165              		.loc 1 375 0
 1166 0744 0120     		movs	r0, #1
 1167 0746 FFF7FEFF 		bl	LED_PIN_2_Write
 1168              	.L51:
 376:main.c        ****                     }
 377:main.c        **** 
 378:main.c        ****                     if (R_INT_BLACK) {
 1169              		.loc 1 378 0
 1170 074a D7F8EC30 		ldr	r3, [r7, #236]
 1171 074e 952B     		cmp	r3, #149
 1172 0750 02DC     		bgt	.L8
 379:main.c        ****                         LED_PIN_3_Write(1);
 1173              		.loc 1 379 0
 1174 0752 0120     		movs	r0, #1
 1175 0754 FFF7FEFF 		bl	LED_PIN_3_Write
 1176              	.L8:
 1177              	.LBE8:
 1178              	.LBE3:
 380:main.c        ****                     }
 381:main.c        **** 
 382:main.c        ****                     /*if (instruction[instCounter] == 0) {
 383:main.c        ****                         consecStops++;
 384:main.c        ****                     } else {
 385:main.c        ****                         consecStops = 0;
 386:main.c        ****                     }*/
 387:main.c        ****                 }
 388:main.c        ****             }
 389:main.c        **** 
 390:main.c        ****             flag = 0;
 1179              		.loc 1 390 0
 1180 0758 0B4B     		ldr	r3, .L59+32
 1181 075a 0022     		movs	r2, #0
 1182 075c 1A60     		str	r2, [r3]
 391:main.c        ****             ADC1_IRQ_Enable();
 1183              		.loc 1 391 0
 1184 075e FFF7FEFF 		bl	ADC1_IRQ_Enable
 392:main.c        ****         }
 393:main.c        **** 
 394:main.c        ****     }
 1185              		.loc 1 394 0
 1186 0762 9DE4     		b	.L53
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 29


 1187              	.L60:
 1188 0764 AFF30080 		.align	3
 1189              	.L59:
 1190 0768 C0266BD4 		.word	-731175232
 1191 076c 43442240 		.word	1075987523
 1192 0770 EC51B81E 		.word	515396076
 1193 0774 856B3440 		.word	1077177221
 1194 0778 00000000 		.word	instCounter
 1195 077c 00000000 		.word	distance
 1196 0780 00000000 		.word	pulsesTravelled
 1197 0784 00804C40 		.word	1078755328
 1198 0788 00000000 		.word	flag
 1199              		.cfi_endproc
 1200              	.LFE65:
 1201              		.size	main, .-main
 1202              		.section	.text.usbPutString,"ax",%progbits
 1203              		.align	2
 1204              		.global	usbPutString
 1205              		.thumb
 1206              		.thumb_func
 1207              		.type	usbPutString, %function
 1208              	usbPutString:
 1209              	.LFB66:
 395:main.c        **** }
 396:main.c        **** //* ========================================
 397:main.c        **** void usbPutString(char * s) {
 1210              		.loc 1 397 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 8
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214 0000 80B5     		push	{r7, lr}
 1215              		.cfi_def_cfa_offset 8
 1216              		.cfi_offset 7, -8
 1217              		.cfi_offset 14, -4
 1218 0002 82B0     		sub	sp, sp, #8
 1219              		.cfi_def_cfa_offset 16
 1220 0004 00AF     		add	r7, sp, #0
 1221              		.cfi_def_cfa_register 7
 1222 0006 7860     		str	r0, [r7, #4]
 398:main.c        ****     // !! Assumes that *s is a string with allocated space >=64 chars    
 399:main.c        ****     //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 400:main.c        ****     //  length to 62 char (63rd char is a '!')
 401:main.c        **** 
 402:main.c        ****     #ifdef USE_USB
 403:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1223              		.loc 1 403 0
 1224 0008 00BF     		nop
 1225              	.L62:
 1226              		.loc 1 403 0 is_stmt 0 discriminator 1
 1227 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1228 000e 0346     		mov	r3, r0
 1229 0010 002B     		cmp	r3, #0
 1230 0012 FAD0     		beq	.L62
 404:main.c        ****     s[63] = '\0';
 1231              		.loc 1 404 0 is_stmt 1
 1232 0014 7B68     		ldr	r3, [r7, #4]
 1233 0016 3F33     		adds	r3, r3, #63
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 30


 1234 0018 0022     		movs	r2, #0
 1235 001a 1A70     		strb	r2, [r3]
 405:main.c        ****     s[62] = '!';
 1236              		.loc 1 405 0
 1237 001c 7B68     		ldr	r3, [r7, #4]
 1238 001e 3E33     		adds	r3, r3, #62
 1239 0020 2122     		movs	r2, #33
 1240 0022 1A70     		strb	r2, [r3]
 406:main.c        ****     USBUART_PutData((uint8 * ) s, strlen(s));
 1241              		.loc 1 406 0
 1242 0024 7868     		ldr	r0, [r7, #4]
 1243 0026 FFF7FEFF 		bl	strlen
 1244 002a 0346     		mov	r3, r0
 1245 002c 9BB2     		uxth	r3, r3
 1246 002e 1946     		mov	r1, r3
 1247 0030 7868     		ldr	r0, [r7, #4]
 1248 0032 FFF7FEFF 		bl	USBUART_PutData
 407:main.c        ****     #endif
 408:main.c        **** }
 1249              		.loc 1 408 0
 1250 0036 00BF     		nop
 1251 0038 0837     		adds	r7, r7, #8
 1252              		.cfi_def_cfa_offset 8
 1253 003a BD46     		mov	sp, r7
 1254              		.cfi_def_cfa_register 13
 1255              		@ sp needed
 1256 003c 80BD     		pop	{r7, pc}
 1257              		.cfi_endproc
 1258              	.LFE66:
 1259              		.size	usbPutString, .-usbPutString
 1260 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1261              		.align	2
 1262              		.global	usbPutChar
 1263              		.thumb
 1264              		.thumb_func
 1265              		.type	usbPutChar, %function
 1266              	usbPutChar:
 1267              	.LFB67:
 409:main.c        **** //* ========================================
 410:main.c        **** void usbPutChar(char c) {
 1268              		.loc 1 410 0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 8
 1271              		@ frame_needed = 1, uses_anonymous_args = 0
 1272 0000 80B5     		push	{r7, lr}
 1273              		.cfi_def_cfa_offset 8
 1274              		.cfi_offset 7, -8
 1275              		.cfi_offset 14, -4
 1276 0002 82B0     		sub	sp, sp, #8
 1277              		.cfi_def_cfa_offset 16
 1278 0004 00AF     		add	r7, sp, #0
 1279              		.cfi_def_cfa_register 7
 1280 0006 0346     		mov	r3, r0
 1281 0008 FB71     		strb	r3, [r7, #7]
 411:main.c        ****     #ifdef USE_USB
 412:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1282              		.loc 1 412 0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 31


 1283 000a 00BF     		nop
 1284              	.L64:
 1285              		.loc 1 412 0 is_stmt 0 discriminator 1
 1286 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1287 0010 0346     		mov	r3, r0
 1288 0012 002B     		cmp	r3, #0
 1289 0014 FAD0     		beq	.L64
 413:main.c        ****     USBUART_PutChar(c);
 1290              		.loc 1 413 0 is_stmt 1
 1291 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1292 0018 1846     		mov	r0, r3
 1293 001a FFF7FEFF 		bl	USBUART_PutChar
 414:main.c        ****     #endif
 415:main.c        **** }...
 1294              		.loc 1 415 0
 1295 001e 00BF     		nop
 1296 0020 0837     		adds	r7, r7, #8
 1297              		.cfi_def_cfa_offset 8
 1298 0022 BD46     		mov	sp, r7
 1299              		.cfi_def_cfa_register 13
 1300              		@ sp needed
 1301 0024 80BD     		pop	{r7, pc}
 1302              		.cfi_endproc
 1303              	.LFE67:
 1304              		.size	usbPutChar, .-usbPutChar
 1305 0026 00BF     		.text
 1306              	.Letext0:
 1307              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1308              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1309              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1310              		.file 5 "vars.h"
 1311              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1312              		.section	.debug_info,"",%progbits
 1313              	.Ldebug_info0:
 1314 0000 0A070000 		.4byte	0x70a
 1315 0004 0400     		.2byte	0x4
 1316 0006 00000000 		.4byte	.Ldebug_abbrev0
 1317 000a 04       		.byte	0x4
 1318 000b 01       		.uleb128 0x1
 1319 000c B4000000 		.4byte	.LASF99
 1320 0010 0C       		.byte	0xc
 1321 0011 81040000 		.4byte	.LASF100
 1322 0015 CD010000 		.4byte	.LASF101
 1323 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1324 001d 00000000 		.4byte	0
 1325 0021 00000000 		.4byte	.Ldebug_line0
 1326 0025 02       		.uleb128 0x2
 1327 0026 01       		.byte	0x1
 1328 0027 06       		.byte	0x6
 1329 0028 B3010000 		.4byte	.LASF0
 1330 002c 02       		.uleb128 0x2
 1331 002d 01       		.byte	0x1
 1332 002e 08       		.byte	0x8
 1333 002f E0020000 		.4byte	.LASF1
 1334 0033 02       		.uleb128 0x2
 1335 0034 02       		.byte	0x2
 1336 0035 05       		.byte	0x5
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 32


 1337 0036 72000000 		.4byte	.LASF2
 1338 003a 02       		.uleb128 0x2
 1339 003b 02       		.byte	0x2
 1340 003c 07       		.byte	0x7
 1341 003d C2030000 		.4byte	.LASF3
 1342 0041 03       		.uleb128 0x3
 1343 0042 2A040000 		.4byte	.LASF12
 1344 0046 02       		.byte	0x2
 1345 0047 3F       		.byte	0x3f
 1346 0048 4C000000 		.4byte	0x4c
 1347 004c 02       		.uleb128 0x2
 1348 004d 04       		.byte	0x4
 1349 004e 05       		.byte	0x5
 1350 004f 73020000 		.4byte	.LASF4
 1351 0053 02       		.uleb128 0x2
 1352 0054 04       		.byte	0x4
 1353 0055 07       		.byte	0x7
 1354 0056 88040000 		.4byte	.LASF5
 1355 005a 02       		.uleb128 0x2
 1356 005b 08       		.byte	0x8
 1357 005c 05       		.byte	0x5
 1358 005d 42010000 		.4byte	.LASF6
 1359 0061 02       		.uleb128 0x2
 1360 0062 08       		.byte	0x8
 1361 0063 07       		.byte	0x7
 1362 0064 6D030000 		.4byte	.LASF7
 1363 0068 04       		.uleb128 0x4
 1364 0069 04       		.byte	0x4
 1365 006a 05       		.byte	0x5
 1366 006b 696E7400 		.ascii	"int\000"
 1367 006f 02       		.uleb128 0x2
 1368 0070 04       		.byte	0x4
 1369 0071 07       		.byte	0x7
 1370 0072 84030000 		.4byte	.LASF8
 1371 0076 02       		.uleb128 0x2
 1372 0077 08       		.byte	0x8
 1373 0078 04       		.byte	0x4
 1374 0079 F6020000 		.4byte	.LASF9
 1375 007d 02       		.uleb128 0x2
 1376 007e 04       		.byte	0x4
 1377 007f 07       		.byte	0x7
 1378 0080 9C000000 		.4byte	.LASF10
 1379 0084 05       		.uleb128 0x5
 1380 0085 04       		.byte	0x4
 1381 0086 8A000000 		.4byte	0x8a
 1382 008a 02       		.uleb128 0x2
 1383 008b 01       		.byte	0x1
 1384 008c 08       		.byte	0x8
 1385 008d 04040000 		.4byte	.LASF11
 1386 0091 06       		.uleb128 0x6
 1387 0092 8A000000 		.4byte	0x8a
 1388 0096 A1000000 		.4byte	0xa1
 1389 009a 07       		.uleb128 0x7
 1390 009b 7D000000 		.4byte	0x7d
 1391 009f 17       		.byte	0x17
 1392 00a0 00       		.byte	0
 1393 00a1 03       		.uleb128 0x3
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 33


 1394 00a2 1D040000 		.4byte	.LASF13
 1395 00a6 03       		.byte	0x3
 1396 00a7 2C       		.byte	0x2c
 1397 00a8 41000000 		.4byte	0x41
 1398 00ac 08       		.uleb128 0x8
 1399 00ad 73010000 		.4byte	.LASF14
 1400 00b1 04       		.byte	0x4
 1401 00b2 E701     		.2byte	0x1e7
 1402 00b4 2C000000 		.4byte	0x2c
 1403 00b8 08       		.uleb128 0x8
 1404 00b9 60010000 		.4byte	.LASF15
 1405 00bd 04       		.byte	0x4
 1406 00be E801     		.2byte	0x1e8
 1407 00c0 3A000000 		.4byte	0x3a
 1408 00c4 08       		.uleb128 0x8
 1409 00c5 42020000 		.4byte	.LASF16
 1410 00c9 04       		.byte	0x4
 1411 00ca EA01     		.2byte	0x1ea
 1412 00cc 25000000 		.4byte	0x25
 1413 00d0 08       		.uleb128 0x8
 1414 00d1 6D010000 		.4byte	.LASF17
 1415 00d5 04       		.byte	0x4
 1416 00d6 EB01     		.2byte	0x1eb
 1417 00d8 33000000 		.4byte	0x33
 1418 00dc 02       		.uleb128 0x2
 1419 00dd 04       		.byte	0x4
 1420 00de 04       		.byte	0x4
 1421 00df BF010000 		.4byte	.LASF18
 1422 00e3 02       		.uleb128 0x2
 1423 00e4 08       		.byte	0x8
 1424 00e5 04       		.byte	0x4
 1425 00e6 9A040000 		.4byte	.LASF19
 1426 00ea 09       		.uleb128 0x9
 1427 00eb FA030000 		.4byte	.LASF102
 1428 00ef 20       		.byte	0x20
 1429 00f0 05       		.byte	0x5
 1430 00f1 29       		.byte	0x29
 1431 00f2 C3010000 		.4byte	0x1c3
 1432 00f6 0A       		.uleb128 0xa
 1433 00f7 6A050000 		.4byte	.LASF20
 1434 00fb 05       		.byte	0x5
 1435 00fc 2A       		.byte	0x2a
 1436 00fd C4000000 		.4byte	0xc4
 1437 0101 00       		.byte	0
 1438 0102 0A       		.uleb128 0xa
 1439 0103 67010000 		.4byte	.LASF21
 1440 0107 05       		.byte	0x5
 1441 0108 2B       		.byte	0x2b
 1442 0109 AC000000 		.4byte	0xac
 1443 010d 01       		.byte	0x1
 1444 010e 0A       		.uleb128 0xa
 1445 010f 12040000 		.4byte	.LASF22
 1446 0113 05       		.byte	0x5
 1447 0114 2C       		.byte	0x2c
 1448 0115 D0000000 		.4byte	0xd0
 1449 0119 02       		.byte	0x2
 1450 011a 0A       		.uleb128 0xa
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 34


 1451 011b 30050000 		.4byte	.LASF23
 1452 011f 05       		.byte	0x5
 1453 0120 2D       		.byte	0x2d
 1454 0121 D0000000 		.4byte	0xd0
 1455 0125 04       		.byte	0x4
 1456 0126 0A       		.uleb128 0xa
 1457 0127 6F050000 		.4byte	.LASF24
 1458 012b 05       		.byte	0x5
 1459 012c 2E       		.byte	0x2e
 1460 012d D0000000 		.4byte	0xd0
 1461 0131 06       		.byte	0x6
 1462 0132 0A       		.uleb128 0xa
 1463 0133 6B020000 		.4byte	.LASF25
 1464 0137 05       		.byte	0x5
 1465 0138 2F       		.byte	0x2f
 1466 0139 D0000000 		.4byte	0xd0
 1467 013d 08       		.byte	0x8
 1468 013e 0A       		.uleb128 0xa
 1469 013f E7040000 		.4byte	.LASF26
 1470 0143 05       		.byte	0x5
 1471 0144 30       		.byte	0x30
 1472 0145 D0000000 		.4byte	0xd0
 1473 0149 0A       		.byte	0xa
 1474 014a 0A       		.uleb128 0xa
 1475 014b 2A030000 		.4byte	.LASF27
 1476 014f 05       		.byte	0x5
 1477 0150 31       		.byte	0x31
 1478 0151 D0000000 		.4byte	0xd0
 1479 0155 0C       		.byte	0xc
 1480 0156 0A       		.uleb128 0xa
 1481 0157 5E020000 		.4byte	.LASF28
 1482 015b 05       		.byte	0x5
 1483 015c 32       		.byte	0x32
 1484 015d D0000000 		.4byte	0xd0
 1485 0161 0E       		.byte	0xe
 1486 0162 0A       		.uleb128 0xa
 1487 0163 BA030000 		.4byte	.LASF29
 1488 0167 05       		.byte	0x5
 1489 0168 33       		.byte	0x33
 1490 0169 D0000000 		.4byte	0xd0
 1491 016d 10       		.byte	0x10
 1492 016e 0A       		.uleb128 0xa
 1493 016f EE020000 		.4byte	.LASF30
 1494 0173 05       		.byte	0x5
 1495 0174 34       		.byte	0x34
 1496 0175 D0000000 		.4byte	0xd0
 1497 0179 12       		.byte	0x12
 1498 017a 0A       		.uleb128 0xa
 1499 017b 33030000 		.4byte	.LASF31
 1500 017f 05       		.byte	0x5
 1501 0180 35       		.byte	0x35
 1502 0181 D0000000 		.4byte	0xd0
 1503 0185 14       		.byte	0x14
 1504 0186 0A       		.uleb128 0xa
 1505 0187 79010000 		.4byte	.LASF32
 1506 018b 05       		.byte	0x5
 1507 018c 36       		.byte	0x36
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 35


 1508 018d D0000000 		.4byte	0xd0
 1509 0191 16       		.byte	0x16
 1510 0192 0A       		.uleb128 0xa
 1511 0193 6A000000 		.4byte	.LASF33
 1512 0197 05       		.byte	0x5
 1513 0198 37       		.byte	0x37
 1514 0199 D0000000 		.4byte	0xd0
 1515 019d 18       		.byte	0x18
 1516 019e 0A       		.uleb128 0xa
 1517 019f 56020000 		.4byte	.LASF34
 1518 01a3 05       		.byte	0x5
 1519 01a4 38       		.byte	0x38
 1520 01a5 D0000000 		.4byte	0xd0
 1521 01a9 1A       		.byte	0x1a
 1522 01aa 0A       		.uleb128 0xa
 1523 01ab AC030000 		.4byte	.LASF35
 1524 01af 05       		.byte	0x5
 1525 01b0 39       		.byte	0x39
 1526 01b1 D0000000 		.4byte	0xd0
 1527 01b5 1C       		.byte	0x1c
 1528 01b6 0A       		.uleb128 0xa
 1529 01b7 B8020000 		.4byte	.LASF36
 1530 01bb 05       		.byte	0x5
 1531 01bc 3A       		.byte	0x3a
 1532 01bd D0000000 		.4byte	0xd0
 1533 01c1 1E       		.byte	0x1e
 1534 01c2 00       		.byte	0
 1535 01c3 0B       		.uleb128 0xb
 1536 01c4 656F6300 		.ascii	"eoc\000"
 1537 01c8 01       		.byte	0x1
 1538 01c9 4A       		.byte	0x4a
 1539 01ca 00000000 		.4byte	.LFB64
 1540 01ce 18000000 		.4byte	.LFE64-.LFB64
 1541 01d2 01       		.uleb128 0x1
 1542 01d3 9C       		.byte	0x9c
 1543 01d4 0C       		.uleb128 0xc
 1544 01d5 A5000000 		.4byte	.LASF53
 1545 01d9 01       		.byte	0x1
 1546 01da 4E       		.byte	0x4e
 1547 01db 68000000 		.4byte	0x68
 1548 01df 00000000 		.4byte	.LFB65
 1549 01e3 8C070000 		.4byte	.LFE65-.LFB65
 1550 01e7 01       		.uleb128 0x1
 1551 01e8 9C       		.byte	0x9c
 1552 01e9 5E030000 		.4byte	0x35e
 1553 01ed 0D       		.uleb128 0xd
 1554 01ee 34000000 		.4byte	.LBB2
 1555 01f2 5A000000 		.4byte	.LBE2-.LBB2
 1556 01f6 07020000 		.4byte	0x207
 1557 01fa 0E       		.uleb128 0xe
 1558 01fb 6900     		.ascii	"i\000"
 1559 01fd 01       		.byte	0x1
 1560 01fe 67       		.byte	0x67
 1561 01ff 68000000 		.4byte	0x68
 1562 0203 02       		.uleb128 0x2
 1563 0204 91       		.byte	0x91
 1564 0205 6C       		.sleb128 -20
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 36


 1565 0206 00       		.byte	0
 1566 0207 0F       		.uleb128 0xf
 1567 0208 3A010000 		.4byte	.LBB3
 1568 020c 1E060000 		.4byte	.LBE3-.LBB3
 1569 0210 10       		.uleb128 0x10
 1570 0211 0B000000 		.4byte	.LASF37
 1571 0215 01       		.byte	0x1
 1572 0216 81       		.byte	0x81
 1573 0217 68000000 		.4byte	0x68
 1574 021b 02       		.uleb128 0x2
 1575 021c 91       		.byte	0x91
 1576 021d 68       		.sleb128 -24
 1577 021e 10       		.uleb128 0x10
 1578 021f 6F040000 		.4byte	.LASF38
 1579 0223 01       		.byte	0x1
 1580 0224 82       		.byte	0x82
 1581 0225 68000000 		.4byte	0x68
 1582 0229 02       		.uleb128 0x2
 1583 022a 91       		.byte	0x91
 1584 022b 64       		.sleb128 -28
 1585 022c 10       		.uleb128 0x10
 1586 022d D5030000 		.4byte	.LASF39
 1587 0231 01       		.byte	0x1
 1588 0232 83       		.byte	0x83
 1589 0233 68000000 		.4byte	0x68
 1590 0237 02       		.uleb128 0x2
 1591 0238 91       		.byte	0x91
 1592 0239 60       		.sleb128 -32
 1593 023a 10       		.uleb128 0x10
 1594 023b 4F050000 		.4byte	.LASF40
 1595 023f 01       		.byte	0x1
 1596 0240 84       		.byte	0x84
 1597 0241 68000000 		.4byte	0x68
 1598 0245 02       		.uleb128 0x2
 1599 0246 91       		.byte	0x91
 1600 0247 5C       		.sleb128 -36
 1601 0248 10       		.uleb128 0x10
 1602 0249 3C030000 		.4byte	.LASF41
 1603 024d 01       		.byte	0x1
 1604 024e 85       		.byte	0x85
 1605 024f 68000000 		.4byte	0x68
 1606 0253 02       		.uleb128 0x2
 1607 0254 91       		.byte	0x91
 1608 0255 58       		.sleb128 -40
 1609 0256 10       		.uleb128 0x10
 1610 0257 C5020000 		.4byte	.LASF42
 1611 025b 01       		.byte	0x1
 1612 025c 86       		.byte	0x86
 1613 025d 68000000 		.4byte	0x68
 1614 0261 02       		.uleb128 0x2
 1615 0262 91       		.byte	0x91
 1616 0263 54       		.sleb128 -44
 1617 0264 0D       		.uleb128 0xd
 1618 0265 6E010000 		.4byte	.LBB4
 1619 0269 3E010000 		.4byte	.LBE4-.LBB4
 1620 026d A6020000 		.4byte	0x2a6
 1621 0271 0E       		.uleb128 0xe
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 37


 1622 0272 6900     		.ascii	"i\000"
 1623 0274 01       		.byte	0x1
 1624 0275 87       		.byte	0x87
 1625 0276 68000000 		.4byte	0x68
 1626 027a 02       		.uleb128 0x2
 1627 027b 91       		.byte	0x91
 1628 027c 50       		.sleb128 -48
 1629 027d 0F       		.uleb128 0xf
 1630 027e 76010000 		.4byte	.LBB5
 1631 0282 20010000 		.4byte	.LBE5-.LBB5
 1632 0286 10       		.uleb128 0x10
 1633 0287 08030000 		.4byte	.LASF43
 1634 028b 01       		.byte	0x1
 1635 028c 89       		.byte	0x89
 1636 028d 91000000 		.4byte	0x91
 1637 0291 03       		.uleb128 0x3
 1638 0292 91       		.byte	0x91
 1639 0293 A87F     		.sleb128 -88
 1640 0295 10       		.uleb128 0x10
 1641 0296 10030000 		.4byte	.LASF44
 1642 029a 01       		.byte	0x1
 1643 029b 8A       		.byte	0x8a
 1644 029c 91000000 		.4byte	0x91
 1645 02a0 03       		.uleb128 0x3
 1646 02a1 91       		.byte	0x91
 1647 02a2 907F     		.sleb128 -112
 1648 02a4 00       		.byte	0
 1649 02a5 00       		.byte	0
 1650 02a6 0D       		.uleb128 0xd
 1651 02a7 B6020000 		.4byte	.LBB6
 1652 02ab 48010000 		.4byte	.LBE6-.LBB6
 1653 02af E4020000 		.4byte	0x2e4
 1654 02b3 0E       		.uleb128 0xe
 1655 02b4 6900     		.ascii	"i\000"
 1656 02b6 01       		.byte	0x1
 1657 02b7 CA       		.byte	0xca
 1658 02b8 68000000 		.4byte	0x68
 1659 02bc 02       		.uleb128 0x2
 1660 02bd 91       		.byte	0x91
 1661 02be 4C       		.sleb128 -52
 1662 02bf 10       		.uleb128 0x10
 1663 02c0 18030000 		.4byte	.LASF45
 1664 02c4 01       		.byte	0x1
 1665 02c5 CA       		.byte	0xca
 1666 02c6 68000000 		.4byte	0x68
 1667 02ca 02       		.uleb128 0x2
 1668 02cb 91       		.byte	0x91
 1669 02cc 48       		.sleb128 -56
 1670 02cd 0F       		.uleb128 0xf
 1671 02ce DC030000 		.4byte	.LBB7
 1672 02d2 1C000000 		.4byte	.LBE7-.LBB7
 1673 02d6 0E       		.uleb128 0xe
 1674 02d7 6900     		.ascii	"i\000"
 1675 02d9 01       		.byte	0x1
 1676 02da E3       		.byte	0xe3
 1677 02db 68000000 		.4byte	0x68
 1678 02df 02       		.uleb128 0x2
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 38


 1679 02e0 91       		.byte	0x91
 1680 02e1 44       		.sleb128 -60
 1681 02e2 00       		.byte	0
 1682 02e3 00       		.byte	0
 1683 02e4 0F       		.uleb128 0xf
 1684 02e5 00040000 		.4byte	.LBB8
 1685 02e9 58030000 		.4byte	.LBE8-.LBB8
 1686 02ed 10       		.uleb128 0x10
 1687 02ee AC020000 		.4byte	.LASF46
 1688 02f2 01       		.byte	0x1
 1689 02f3 F0       		.byte	0xf0
 1690 02f4 8A000000 		.4byte	0x8a
 1691 02f8 02       		.uleb128 0x2
 1692 02f9 91       		.byte	0x91
 1693 02fa 43       		.sleb128 -61
 1694 02fb 11       		.uleb128 0x11
 1695 02fc B5030000 		.4byte	.LASF47
 1696 0300 01       		.byte	0x1
 1697 0301 4301     		.2byte	0x143
 1698 0303 91000000 		.4byte	0x91
 1699 0307 03       		.uleb128 0x3
 1700 0308 91       		.byte	0x91
 1701 0309 E07E     		.sleb128 -160
 1702 030b 11       		.uleb128 0x11
 1703 030c 34040000 		.4byte	.LASF48
 1704 0310 01       		.byte	0x1
 1705 0311 4401     		.2byte	0x144
 1706 0313 91000000 		.4byte	0x91
 1707 0317 03       		.uleb128 0x3
 1708 0318 91       		.byte	0x91
 1709 0319 C87E     		.sleb128 -184
 1710 031b 11       		.uleb128 0x11
 1711 031c 81050000 		.4byte	.LASF49
 1712 0320 01       		.byte	0x1
 1713 0321 4501     		.2byte	0x145
 1714 0323 91000000 		.4byte	0x91
 1715 0327 03       		.uleb128 0x3
 1716 0328 91       		.byte	0x91
 1717 0329 B07E     		.sleb128 -208
 1718 032b 11       		.uleb128 0x11
 1719 032c 66030000 		.4byte	.LASF50
 1720 0330 01       		.byte	0x1
 1721 0331 4601     		.2byte	0x146
 1722 0333 91000000 		.4byte	0x91
 1723 0337 03       		.uleb128 0x3
 1724 0338 91       		.byte	0x91
 1725 0339 987E     		.sleb128 -232
 1726 033b 11       		.uleb128 0x11
 1727 033c 3B050000 		.4byte	.LASF51
 1728 0340 01       		.byte	0x1
 1729 0341 5501     		.2byte	0x155
 1730 0343 91000000 		.4byte	0x91
 1731 0347 03       		.uleb128 0x3
 1732 0348 91       		.byte	0x91
 1733 0349 807E     		.sleb128 -256
 1734 034b 11       		.uleb128 0x11
 1735 034c 3B040000 		.4byte	.LASF52
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 39


 1736 0350 01       		.byte	0x1
 1737 0351 5601     		.2byte	0x156
 1738 0353 91000000 		.4byte	0x91
 1739 0357 03       		.uleb128 0x3
 1740 0358 91       		.byte	0x91
 1741 0359 E87D     		.sleb128 -280
 1742 035b 00       		.byte	0
 1743 035c 00       		.byte	0
 1744 035d 00       		.byte	0
 1745 035e 12       		.uleb128 0x12
 1746 035f 35020000 		.4byte	.LASF54
 1747 0363 01       		.byte	0x1
 1748 0364 8D01     		.2byte	0x18d
 1749 0366 00000000 		.4byte	.LFB66
 1750 036a 3E000000 		.4byte	.LFE66-.LFB66
 1751 036e 01       		.uleb128 0x1
 1752 036f 9C       		.byte	0x9c
 1753 0370 82030000 		.4byte	0x382
 1754 0374 13       		.uleb128 0x13
 1755 0375 7300     		.ascii	"s\000"
 1756 0377 01       		.byte	0x1
 1757 0378 8D01     		.2byte	0x18d
 1758 037a 84000000 		.4byte	0x84
 1759 037e 02       		.uleb128 0x2
 1760 037f 91       		.byte	0x91
 1761 0380 74       		.sleb128 -12
 1762 0381 00       		.byte	0
 1763 0382 12       		.uleb128 0x12
 1764 0383 00000000 		.4byte	.LASF55
 1765 0387 01       		.byte	0x1
 1766 0388 9A01     		.2byte	0x19a
 1767 038a 00000000 		.4byte	.LFB67
 1768 038e 26000000 		.4byte	.LFE67-.LFB67
 1769 0392 01       		.uleb128 0x1
 1770 0393 9C       		.byte	0x9c
 1771 0394 A6030000 		.4byte	0x3a6
 1772 0398 13       		.uleb128 0x13
 1773 0399 6300     		.ascii	"c\000"
 1774 039b 01       		.byte	0x1
 1775 039c 9A01     		.2byte	0x19a
 1776 039e 8A000000 		.4byte	0x8a
 1777 03a2 02       		.uleb128 0x2
 1778 03a3 91       		.byte	0x91
 1779 03a4 77       		.sleb128 -9
 1780 03a5 00       		.byte	0
 1781 03a6 14       		.uleb128 0x14
 1782 03a7 A1040000 		.4byte	.LASF56
 1783 03ab 06       		.byte	0x6
 1784 03ac 1207     		.2byte	0x712
 1785 03ae B2030000 		.4byte	0x3b2
 1786 03b2 15       		.uleb128 0x15
 1787 03b3 A1000000 		.4byte	0xa1
 1788 03b7 16       		.uleb128 0x16
 1789 03b8 747300   		.ascii	"ts\000"
 1790 03bb 05       		.byte	0x5
 1791 03bc 10       		.byte	0x10
 1792 03bd AC000000 		.4byte	0xac
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 40


 1793 03c1 05       		.uleb128 0x5
 1794 03c2 03       		.byte	0x3
 1795 03c3 00000000 		.4byte	ts
 1796 03c7 17       		.uleb128 0x17
 1797 03c8 03050000 		.4byte	.LASF57
 1798 03cc 05       		.byte	0x5
 1799 03cd 11       		.byte	0x11
 1800 03ce B8000000 		.4byte	0xb8
 1801 03d2 05       		.uleb128 0x5
 1802 03d3 03       		.byte	0x3
 1803 03d4 00000000 		.4byte	ts_enc
 1804 03d8 17       		.uleb128 0x17
 1805 03d9 0A050000 		.4byte	.LASF58
 1806 03dd 05       		.byte	0x5
 1807 03de 12       		.byte	0x12
 1808 03df B8000000 		.4byte	0xb8
 1809 03e3 05       		.uleb128 0x5
 1810 03e4 03       		.byte	0x3
 1811 03e5 00000000 		.4byte	ts_update
 1812 03e9 17       		.uleb128 0x17
 1813 03ea FA040000 		.4byte	.LASF59
 1814 03ee 05       		.byte	0x5
 1815 03ef 13       		.byte	0x13
 1816 03f0 B8000000 		.4byte	0xb8
 1817 03f4 05       		.uleb128 0x5
 1818 03f5 03       		.byte	0x3
 1819 03f6 00000000 		.4byte	ts_speed
 1820 03fa 17       		.uleb128 0x17
 1821 03fb EF040000 		.4byte	.LASF60
 1822 03ff 05       		.byte	0x5
 1823 0400 14       		.byte	0x14
 1824 0401 B8000000 		.4byte	0xb8
 1825 0405 05       		.uleb128 0x5
 1826 0406 03       		.byte	0x3
 1827 0407 00000000 		.4byte	ts_display
 1828 040b 17       		.uleb128 0x17
 1829 040c C0040000 		.4byte	.LASF61
 1830 0410 05       		.byte	0x5
 1831 0411 16       		.byte	0x16
 1832 0412 AC000000 		.4byte	0xac
 1833 0416 05       		.uleb128 0x5
 1834 0417 03       		.byte	0x3
 1835 0418 00000000 		.4byte	flag_ts_enc
 1836 041c 17       		.uleb128 0x17
 1837 041d 47020000 		.4byte	.LASF62
 1838 0421 05       		.byte	0x5
 1839 0422 17       		.byte	0x17
 1840 0423 AC000000 		.4byte	0xac
 1841 0427 05       		.uleb128 0x5
 1842 0428 03       		.byte	0x3
 1843 0429 00000000 		.4byte	flag_ts_update
 1844 042d 17       		.uleb128 0x17
 1845 042e 5C000000 		.4byte	.LASF63
 1846 0432 05       		.byte	0x5
 1847 0433 18       		.byte	0x18
 1848 0434 AC000000 		.4byte	0xac
 1849 0438 05       		.uleb128 0x5
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 41


 1850 0439 03       		.byte	0x3
 1851 043a 00000000 		.4byte	flag_ts_speed
 1852 043e 17       		.uleb128 0x17
 1853 043f 9C020000 		.4byte	.LASF64
 1854 0443 05       		.byte	0x5
 1855 0444 19       		.byte	0x19
 1856 0445 AC000000 		.4byte	0xac
 1857 0449 05       		.uleb128 0x5
 1858 044a 03       		.byte	0x3
 1859 044b 00000000 		.4byte	flag_ts_display
 1860 044f 17       		.uleb128 0x17
 1861 0450 5E030000 		.4byte	.LASF65
 1862 0454 05       		.byte	0x5
 1863 0455 1C       		.byte	0x1c
 1864 0456 AC000000 		.4byte	0xac
 1865 045a 05       		.uleb128 0x5
 1866 045b 03       		.byte	0x3
 1867 045c 00000000 		.4byte	flag_rx
 1868 0460 17       		.uleb128 0x17
 1869 0461 41000000 		.4byte	.LASF66
 1870 0465 05       		.byte	0x5
 1871 0466 1D       		.byte	0x1d
 1872 0467 AC000000 		.4byte	0xac
 1873 046b 05       		.uleb128 0x5
 1874 046c 03       		.byte	0x3
 1875 046d 00000000 		.4byte	flag_packet
 1876 0471 17       		.uleb128 0x17
 1877 0472 91030000 		.4byte	.LASF67
 1878 0476 05       		.byte	0x5
 1879 0477 1E       		.byte	0x1e
 1880 0478 AC000000 		.4byte	0xac
 1881 047c 05       		.uleb128 0x5
 1882 047d 03       		.byte	0x3
 1883 047e 00000000 		.4byte	flag_KB_string
 1884 0482 17       		.uleb128 0x17
 1885 0483 4F030000 		.4byte	.LASF68
 1886 0487 05       		.byte	0x5
 1887 0488 20       		.byte	0x20
 1888 0489 AC000000 		.4byte	0xac
 1889 048d 05       		.uleb128 0x5
 1890 048e 03       		.byte	0x3
 1891 048f 00000000 		.4byte	dataready_flag
 1892 0493 17       		.uleb128 0x17
 1893 0494 14050000 		.4byte	.LASF69
 1894 0498 05       		.byte	0x5
 1895 0499 22       		.byte	0x22
 1896 049a AC000000 		.4byte	0xac
 1897 049e 05       		.uleb128 0x5
 1898 049f 03       		.byte	0x3
 1899 04a0 00000000 		.4byte	flag_rf_transmission_active
 1900 04a4 06       		.uleb128 0x6
 1901 04a5 8A000000 		.4byte	0x8a
 1902 04a9 B4040000 		.4byte	0x4b4
 1903 04ad 07       		.uleb128 0x7
 1904 04ae 7D000000 		.4byte	0x7d
 1905 04b2 3F       		.byte	0x3f
 1906 04b3 00       		.byte	0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 42


 1907 04b4 17       		.uleb128 0x17
 1908 04b5 57040000 		.4byte	.LASF70
 1909 04b9 05       		.byte	0x5
 1910 04ba 25       		.byte	0x25
 1911 04bb A4040000 		.4byte	0x4a4
 1912 04bf 05       		.uleb128 0x5
 1913 04c0 03       		.byte	0x3
 1914 04c1 00000000 		.4byte	displaystring
 1915 04c5 17       		.uleb128 0x17
 1916 04c6 AE010000 		.4byte	.LASF71
 1917 04ca 05       		.byte	0x5
 1918 04cb 26       		.byte	0x26
 1919 04cc A4040000 		.4byte	0x4a4
 1920 04d0 05       		.uleb128 0x5
 1921 04d1 03       		.byte	0x3
 1922 04d2 00000000 		.4byte	line
 1923 04d6 17       		.uleb128 0x17
 1924 04d7 02030000 		.4byte	.LASF72
 1925 04db 05       		.byte	0x5
 1926 04dc 26       		.byte	0x26
 1927 04dd A4040000 		.4byte	0x4a4
 1928 04e1 05       		.uleb128 0x5
 1929 04e2 03       		.byte	0x3
 1930 04e3 00000000 		.4byte	entry
 1931 04e7 06       		.uleb128 0x6
 1932 04e8 AC000000 		.4byte	0xac
 1933 04ec F7040000 		.4byte	0x4f7
 1934 04f0 07       		.uleb128 0x7
 1935 04f1 7D000000 		.4byte	0x7d
 1936 04f5 3F       		.byte	0x3f
 1937 04f6 00       		.byte	0
 1938 04f7 17       		.uleb128 0x17
 1939 04f8 AA000000 		.4byte	.LASF73
 1940 04fc 05       		.byte	0x5
 1941 04fd 27       		.byte	0x27
 1942 04fe E7040000 		.4byte	0x4e7
 1943 0502 05       		.uleb128 0x5
 1944 0503 03       		.byte	0x3
 1945 0504 00000000 		.4byte	usbBuffer
 1946 0508 17       		.uleb128 0x17
 1947 0509 8F000000 		.4byte	.LASF74
 1948 050d 05       		.byte	0x5
 1949 050e 3C       		.byte	0x3c
 1950 050f EA000000 		.4byte	0xea
 1951 0513 05       		.uleb128 0x5
 1952 0514 03       		.byte	0x3
 1953 0515 00000000 		.4byte	system_state
 1954 0519 17       		.uleb128 0x17
 1955 051a A0030000 		.4byte	.LASF75
 1956 051e 01       		.byte	0x1
 1957 051f 2A       		.byte	0x2a
 1958 0520 68000000 		.4byte	0x68
 1959 0524 05       		.uleb128 0x5
 1960 0525 03       		.byte	0x3
 1961 0526 00000000 		.4byte	consecStops
 1962 052a 17       		.uleb128 0x17
 1963 052b C5010000 		.4byte	.LASF76
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 43


 1964 052f 01       		.byte	0x1
 1965 0530 2B       		.byte	0x2b
 1966 0531 68000000 		.4byte	0x68
 1967 0535 05       		.uleb128 0x5
 1968 0536 03       		.byte	0x3
 1969 0537 00000000 		.4byte	started
 1970 053b 17       		.uleb128 0x17
 1971 053c AE040000 		.4byte	.LASF77
 1972 0540 01       		.byte	0x1
 1973 0541 2C       		.byte	0x2c
 1974 0542 68000000 		.4byte	0x68
 1975 0546 05       		.uleb128 0x5
 1976 0547 03       		.byte	0x3
 1977 0548 00000000 		.4byte	instCounter
 1978 054c 17       		.uleb128 0x17
 1979 054d 25040000 		.4byte	.LASF78
 1980 0551 01       		.byte	0x1
 1981 0552 32       		.byte	0x32
 1982 0553 5D050000 		.4byte	0x55d
 1983 0557 05       		.uleb128 0x5
 1984 0558 03       		.byte	0x3
 1985 0559 00000000 		.4byte	flag
 1986 055d 15       		.uleb128 0x15
 1987 055e 68000000 		.4byte	0x68
 1988 0562 06       		.uleb128 0x6
 1989 0563 5D050000 		.4byte	0x55d
 1990 0567 73050000 		.4byte	0x573
 1991 056b 18       		.uleb128 0x18
 1992 056c 7D000000 		.4byte	0x7d
 1993 0570 E703     		.2byte	0x3e7
 1994 0572 00       		.byte	0
 1995 0573 17       		.uleb128 0x17
 1996 0574 40040000 		.4byte	.LASF79
 1997 0578 01       		.byte	0x1
 1998 0579 33       		.byte	0x33
 1999 057a 84050000 		.4byte	0x584
 2000 057e 05       		.uleb128 0x5
 2001 057f 03       		.byte	0x3
 2002 0580 00000000 		.4byte	valuesLeftIntersection
 2003 0584 15       		.uleb128 0x15
 2004 0585 62050000 		.4byte	0x562
 2005 0589 17       		.uleb128 0x17
 2006 058a 4D000000 		.4byte	.LASF80
 2007 058e 01       		.byte	0x1
 2008 058f 34       		.byte	0x34
 2009 0590 9A050000 		.4byte	0x59a
 2010 0594 05       		.uleb128 0x5
 2011 0595 03       		.byte	0x3
 2012 0596 00000000 		.4byte	valuesLeftLine
 2013 059a 15       		.uleb128 0x15
 2014 059b 62050000 		.4byte	0x562
 2015 059f 17       		.uleb128 0x17
 2016 05a0 E9030000 		.4byte	.LASF81
 2017 05a4 01       		.byte	0x1
 2018 05a5 35       		.byte	0x35
 2019 05a6 B0050000 		.4byte	0x5b0
 2020 05aa 05       		.uleb128 0x5
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 44


 2021 05ab 03       		.byte	0x3
 2022 05ac 00000000 		.4byte	valuesMiddleLine
 2023 05b0 15       		.uleb128 0x15
 2024 05b1 62050000 		.4byte	0x562
 2025 05b5 17       		.uleb128 0x17
 2026 05b6 7C000000 		.4byte	.LASF82
 2027 05ba 01       		.byte	0x1
 2028 05bb 36       		.byte	0x36
 2029 05bc C6050000 		.4byte	0x5c6
 2030 05c0 05       		.uleb128 0x5
 2031 05c1 03       		.byte	0x3
 2032 05c2 00000000 		.4byte	valuesTurnComplete
 2033 05c6 15       		.uleb128 0x15
 2034 05c7 62050000 		.4byte	0x562
 2035 05cb 17       		.uleb128 0x17
 2036 05cc 50010000 		.4byte	.LASF83
 2037 05d0 01       		.byte	0x1
 2038 05d1 37       		.byte	0x37
 2039 05d2 DC050000 		.4byte	0x5dc
 2040 05d6 05       		.uleb128 0x5
 2041 05d7 03       		.byte	0x3
 2042 05d8 00000000 		.4byte	valuesRightLine
 2043 05dc 15       		.uleb128 0x15
 2044 05dd 62050000 		.4byte	0x562
 2045 05e1 17       		.uleb128 0x17
 2046 05e2 86010000 		.4byte	.LASF84
 2047 05e6 01       		.byte	0x1
 2048 05e7 38       		.byte	0x38
 2049 05e8 F2050000 		.4byte	0x5f2
 2050 05ec 05       		.uleb128 0x5
 2051 05ed 03       		.byte	0x3
 2052 05ee 00000000 		.4byte	valuesRightIntersection
 2053 05f2 15       		.uleb128 0x15
 2054 05f3 62050000 		.4byte	0x562
 2055 05f7 17       		.uleb128 0x17
 2056 05f8 BA040000 		.4byte	.LASF85
 2057 05fc 01       		.byte	0x1
 2058 05fd 39       		.byte	0x39
 2059 05fe 5D050000 		.4byte	0x55d
 2060 0602 05       		.uleb128 0x5
 2061 0603 03       		.byte	0x3
 2062 0604 00000000 		.4byte	count
 2063 0608 17       		.uleb128 0x17
 2064 0609 D6040000 		.4byte	.LASF86
 2065 060d 01       		.byte	0x1
 2066 060e 3A       		.byte	0x3a
 2067 060f 5D050000 		.4byte	0x55d
 2068 0613 05       		.uleb128 0x5
 2069 0614 03       		.byte	0x3
 2070 0615 00000000 		.4byte	motorUpdateCount
 2071 0619 17       		.uleb128 0x17
 2072 061a 7C020000 		.4byte	.LASF87
 2073 061e 01       		.byte	0x1
 2074 061f 3B       		.byte	0x3b
 2075 0620 5D050000 		.4byte	0x55d
 2076 0624 05       		.uleb128 0x5
 2077 0625 03       		.byte	0x3
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 45


 2078 0626 00000000 		.4byte	lastVeerDirection
 2079 062a 17       		.uleb128 0x17
 2080 062b CC040000 		.4byte	.LASF88
 2081 062f 01       		.byte	0x1
 2082 0630 3D       		.byte	0x3d
 2083 0631 5D050000 		.4byte	0x55d
 2084 0635 05       		.uleb128 0x5
 2085 0636 03       		.byte	0x3
 2086 0637 00000000 		.4byte	v1M1
 2087 063b 17       		.uleb128 0x17
 2088 063c D1040000 		.4byte	.LASF89
 2089 0640 01       		.byte	0x1
 2090 0641 3E       		.byte	0x3e
 2091 0642 5D050000 		.4byte	0x55d
 2092 0646 05       		.uleb128 0x5
 2093 0647 03       		.byte	0x3
 2094 0648 00000000 		.4byte	v1M2
 2095 064c 17       		.uleb128 0x17
 2096 064d 65040000 		.4byte	.LASF90
 2097 0651 01       		.byte	0x1
 2098 0652 3F       		.byte	0x3f
 2099 0653 5D050000 		.4byte	0x55d
 2100 0657 05       		.uleb128 0x5
 2101 0658 03       		.byte	0x3
 2102 0659 00000000 		.4byte	v2M1
 2103 065d 17       		.uleb128 0x17
 2104 065e 6A040000 		.4byte	.LASF91
 2105 0662 01       		.byte	0x1
 2106 0663 40       		.byte	0x40
 2107 0664 5D050000 		.4byte	0x55d
 2108 0668 05       		.uleb128 0x5
 2109 0669 03       		.byte	0x3
 2110 066a 00000000 		.4byte	v2M2
 2111 066e 17       		.uleb128 0x17
 2112 066f 9E010000 		.4byte	.LASF92
 2113 0673 01       		.byte	0x1
 2114 0674 41       		.byte	0x41
 2115 0675 68000000 		.4byte	0x68
 2116 0679 05       		.uleb128 0x5
 2117 067a 03       		.byte	0x3
 2118 067b 00000000 		.4byte	pulsesTravelled
 2119 067f 17       		.uleb128 0x17
 2120 0680 65050000 		.4byte	.LASF93
 2121 0684 01       		.byte	0x1
 2122 0685 42       		.byte	0x42
 2123 0686 5D050000 		.4byte	0x55d
 2124 068a 05       		.uleb128 0x5
 2125 068b 03       		.byte	0x3
 2126 068c 00000000 		.4byte	step
 2127 0690 17       		.uleb128 0x17
 2128 0691 8E020000 		.4byte	.LASF94
 2129 0695 01       		.byte	0x1
 2130 0696 43       		.byte	0x43
 2131 0697 5D050000 		.4byte	0x55d
 2132 069b 05       		.uleb128 0x5
 2133 069c 03       		.byte	0x3
 2134 069d 00000000 		.4byte	interruptFlag
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 46


 2135 06a1 17       		.uleb128 0x17
 2136 06a2 2D000000 		.4byte	.LASF95
 2137 06a6 01       		.byte	0x1
 2138 06a7 45       		.byte	0x45
 2139 06a8 68000000 		.4byte	0x68
 2140 06ac 05       		.uleb128 0x5
 2141 06ad 03       		.byte	0x3
 2142 06ae 00000000 		.4byte	lastAdjustDirection
 2143 06b2 06       		.uleb128 0x6
 2144 06b3 2C000000 		.4byte	0x2c
 2145 06b7 C9060000 		.4byte	0x6c9
 2146 06bb 18       		.uleb128 0x18
 2147 06bc 7D000000 		.4byte	0x7d
 2148 06c0 F301     		.2byte	0x1f3
 2149 06c2 07       		.uleb128 0x7
 2150 06c3 7D000000 		.4byte	0x7d
 2151 06c7 01       		.byte	0x1
 2152 06c8 00       		.byte	0
 2153 06c9 17       		.uleb128 0x17
 2154 06ca 25000000 		.4byte	.LASF96
 2155 06ce 01       		.byte	0x1
 2156 06cf 46       		.byte	0x46
 2157 06d0 B2060000 		.4byte	0x6b2
 2158 06d4 05       		.uleb128 0x5
 2159 06d5 03       		.byte	0x3
 2160 06d6 00000000 		.4byte	squares
 2161 06da 06       		.uleb128 0x6
 2162 06db 2C000000 		.4byte	0x2c
 2163 06df EB060000 		.4byte	0x6eb
 2164 06e3 18       		.uleb128 0x18
 2165 06e4 7D000000 		.4byte	0x7d
 2166 06e8 F301     		.2byte	0x1f3
 2167 06ea 00       		.byte	0
 2168 06eb 17       		.uleb128 0x17
 2169 06ec 43050000 		.4byte	.LASF97
 2170 06f0 01       		.byte	0x1
 2171 06f1 47       		.byte	0x47
 2172 06f2 DA060000 		.4byte	0x6da
 2173 06f6 05       		.uleb128 0x5
 2174 06f7 03       		.byte	0x3
 2175 06f8 00000000 		.4byte	instruction
 2176 06fc 17       		.uleb128 0x17
 2177 06fd 09040000 		.4byte	.LASF98
 2178 0701 01       		.byte	0x1
 2179 0702 48       		.byte	0x48
 2180 0703 DA060000 		.4byte	0x6da
 2181 0707 05       		.uleb128 0x5
 2182 0708 03       		.byte	0x3
 2183 0709 00000000 		.4byte	distance
 2184 070d 00       		.byte	0
 2185              		.section	.debug_abbrev,"",%progbits
 2186              	.Ldebug_abbrev0:
 2187 0000 01       		.uleb128 0x1
 2188 0001 11       		.uleb128 0x11
 2189 0002 01       		.byte	0x1
 2190 0003 25       		.uleb128 0x25
 2191 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 47


 2192 0005 13       		.uleb128 0x13
 2193 0006 0B       		.uleb128 0xb
 2194 0007 03       		.uleb128 0x3
 2195 0008 0E       		.uleb128 0xe
 2196 0009 1B       		.uleb128 0x1b
 2197 000a 0E       		.uleb128 0xe
 2198 000b 55       		.uleb128 0x55
 2199 000c 17       		.uleb128 0x17
 2200 000d 11       		.uleb128 0x11
 2201 000e 01       		.uleb128 0x1
 2202 000f 10       		.uleb128 0x10
 2203 0010 17       		.uleb128 0x17
 2204 0011 00       		.byte	0
 2205 0012 00       		.byte	0
 2206 0013 02       		.uleb128 0x2
 2207 0014 24       		.uleb128 0x24
 2208 0015 00       		.byte	0
 2209 0016 0B       		.uleb128 0xb
 2210 0017 0B       		.uleb128 0xb
 2211 0018 3E       		.uleb128 0x3e
 2212 0019 0B       		.uleb128 0xb
 2213 001a 03       		.uleb128 0x3
 2214 001b 0E       		.uleb128 0xe
 2215 001c 00       		.byte	0
 2216 001d 00       		.byte	0
 2217 001e 03       		.uleb128 0x3
 2218 001f 16       		.uleb128 0x16
 2219 0020 00       		.byte	0
 2220 0021 03       		.uleb128 0x3
 2221 0022 0E       		.uleb128 0xe
 2222 0023 3A       		.uleb128 0x3a
 2223 0024 0B       		.uleb128 0xb
 2224 0025 3B       		.uleb128 0x3b
 2225 0026 0B       		.uleb128 0xb
 2226 0027 49       		.uleb128 0x49
 2227 0028 13       		.uleb128 0x13
 2228 0029 00       		.byte	0
 2229 002a 00       		.byte	0
 2230 002b 04       		.uleb128 0x4
 2231 002c 24       		.uleb128 0x24
 2232 002d 00       		.byte	0
 2233 002e 0B       		.uleb128 0xb
 2234 002f 0B       		.uleb128 0xb
 2235 0030 3E       		.uleb128 0x3e
 2236 0031 0B       		.uleb128 0xb
 2237 0032 03       		.uleb128 0x3
 2238 0033 08       		.uleb128 0x8
 2239 0034 00       		.byte	0
 2240 0035 00       		.byte	0
 2241 0036 05       		.uleb128 0x5
 2242 0037 0F       		.uleb128 0xf
 2243 0038 00       		.byte	0
 2244 0039 0B       		.uleb128 0xb
 2245 003a 0B       		.uleb128 0xb
 2246 003b 49       		.uleb128 0x49
 2247 003c 13       		.uleb128 0x13
 2248 003d 00       		.byte	0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 48


 2249 003e 00       		.byte	0
 2250 003f 06       		.uleb128 0x6
 2251 0040 01       		.uleb128 0x1
 2252 0041 01       		.byte	0x1
 2253 0042 49       		.uleb128 0x49
 2254 0043 13       		.uleb128 0x13
 2255 0044 01       		.uleb128 0x1
 2256 0045 13       		.uleb128 0x13
 2257 0046 00       		.byte	0
 2258 0047 00       		.byte	0
 2259 0048 07       		.uleb128 0x7
 2260 0049 21       		.uleb128 0x21
 2261 004a 00       		.byte	0
 2262 004b 49       		.uleb128 0x49
 2263 004c 13       		.uleb128 0x13
 2264 004d 2F       		.uleb128 0x2f
 2265 004e 0B       		.uleb128 0xb
 2266 004f 00       		.byte	0
 2267 0050 00       		.byte	0
 2268 0051 08       		.uleb128 0x8
 2269 0052 16       		.uleb128 0x16
 2270 0053 00       		.byte	0
 2271 0054 03       		.uleb128 0x3
 2272 0055 0E       		.uleb128 0xe
 2273 0056 3A       		.uleb128 0x3a
 2274 0057 0B       		.uleb128 0xb
 2275 0058 3B       		.uleb128 0x3b
 2276 0059 05       		.uleb128 0x5
 2277 005a 49       		.uleb128 0x49
 2278 005b 13       		.uleb128 0x13
 2279 005c 00       		.byte	0
 2280 005d 00       		.byte	0
 2281 005e 09       		.uleb128 0x9
 2282 005f 13       		.uleb128 0x13
 2283 0060 01       		.byte	0x1
 2284 0061 03       		.uleb128 0x3
 2285 0062 0E       		.uleb128 0xe
 2286 0063 0B       		.uleb128 0xb
 2287 0064 0B       		.uleb128 0xb
 2288 0065 3A       		.uleb128 0x3a
 2289 0066 0B       		.uleb128 0xb
 2290 0067 3B       		.uleb128 0x3b
 2291 0068 0B       		.uleb128 0xb
 2292 0069 01       		.uleb128 0x1
 2293 006a 13       		.uleb128 0x13
 2294 006b 00       		.byte	0
 2295 006c 00       		.byte	0
 2296 006d 0A       		.uleb128 0xa
 2297 006e 0D       		.uleb128 0xd
 2298 006f 00       		.byte	0
 2299 0070 03       		.uleb128 0x3
 2300 0071 0E       		.uleb128 0xe
 2301 0072 3A       		.uleb128 0x3a
 2302 0073 0B       		.uleb128 0xb
 2303 0074 3B       		.uleb128 0x3b
 2304 0075 0B       		.uleb128 0xb
 2305 0076 49       		.uleb128 0x49
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 49


 2306 0077 13       		.uleb128 0x13
 2307 0078 38       		.uleb128 0x38
 2308 0079 0B       		.uleb128 0xb
 2309 007a 00       		.byte	0
 2310 007b 00       		.byte	0
 2311 007c 0B       		.uleb128 0xb
 2312 007d 2E       		.uleb128 0x2e
 2313 007e 00       		.byte	0
 2314 007f 3F       		.uleb128 0x3f
 2315 0080 19       		.uleb128 0x19
 2316 0081 03       		.uleb128 0x3
 2317 0082 08       		.uleb128 0x8
 2318 0083 3A       		.uleb128 0x3a
 2319 0084 0B       		.uleb128 0xb
 2320 0085 3B       		.uleb128 0x3b
 2321 0086 0B       		.uleb128 0xb
 2322 0087 27       		.uleb128 0x27
 2323 0088 19       		.uleb128 0x19
 2324 0089 11       		.uleb128 0x11
 2325 008a 01       		.uleb128 0x1
 2326 008b 12       		.uleb128 0x12
 2327 008c 06       		.uleb128 0x6
 2328 008d 40       		.uleb128 0x40
 2329 008e 18       		.uleb128 0x18
 2330 008f 9742     		.uleb128 0x2117
 2331 0091 19       		.uleb128 0x19
 2332 0092 00       		.byte	0
 2333 0093 00       		.byte	0
 2334 0094 0C       		.uleb128 0xc
 2335 0095 2E       		.uleb128 0x2e
 2336 0096 01       		.byte	0x1
 2337 0097 3F       		.uleb128 0x3f
 2338 0098 19       		.uleb128 0x19
 2339 0099 03       		.uleb128 0x3
 2340 009a 0E       		.uleb128 0xe
 2341 009b 3A       		.uleb128 0x3a
 2342 009c 0B       		.uleb128 0xb
 2343 009d 3B       		.uleb128 0x3b
 2344 009e 0B       		.uleb128 0xb
 2345 009f 49       		.uleb128 0x49
 2346 00a0 13       		.uleb128 0x13
 2347 00a1 11       		.uleb128 0x11
 2348 00a2 01       		.uleb128 0x1
 2349 00a3 12       		.uleb128 0x12
 2350 00a4 06       		.uleb128 0x6
 2351 00a5 40       		.uleb128 0x40
 2352 00a6 18       		.uleb128 0x18
 2353 00a7 9642     		.uleb128 0x2116
 2354 00a9 19       		.uleb128 0x19
 2355 00aa 01       		.uleb128 0x1
 2356 00ab 13       		.uleb128 0x13
 2357 00ac 00       		.byte	0
 2358 00ad 00       		.byte	0
 2359 00ae 0D       		.uleb128 0xd
 2360 00af 0B       		.uleb128 0xb
 2361 00b0 01       		.byte	0x1
 2362 00b1 11       		.uleb128 0x11
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 50


 2363 00b2 01       		.uleb128 0x1
 2364 00b3 12       		.uleb128 0x12
 2365 00b4 06       		.uleb128 0x6
 2366 00b5 01       		.uleb128 0x1
 2367 00b6 13       		.uleb128 0x13
 2368 00b7 00       		.byte	0
 2369 00b8 00       		.byte	0
 2370 00b9 0E       		.uleb128 0xe
 2371 00ba 34       		.uleb128 0x34
 2372 00bb 00       		.byte	0
 2373 00bc 03       		.uleb128 0x3
 2374 00bd 08       		.uleb128 0x8
 2375 00be 3A       		.uleb128 0x3a
 2376 00bf 0B       		.uleb128 0xb
 2377 00c0 3B       		.uleb128 0x3b
 2378 00c1 0B       		.uleb128 0xb
 2379 00c2 49       		.uleb128 0x49
 2380 00c3 13       		.uleb128 0x13
 2381 00c4 02       		.uleb128 0x2
 2382 00c5 18       		.uleb128 0x18
 2383 00c6 00       		.byte	0
 2384 00c7 00       		.byte	0
 2385 00c8 0F       		.uleb128 0xf
 2386 00c9 0B       		.uleb128 0xb
 2387 00ca 01       		.byte	0x1
 2388 00cb 11       		.uleb128 0x11
 2389 00cc 01       		.uleb128 0x1
 2390 00cd 12       		.uleb128 0x12
 2391 00ce 06       		.uleb128 0x6
 2392 00cf 00       		.byte	0
 2393 00d0 00       		.byte	0
 2394 00d1 10       		.uleb128 0x10
 2395 00d2 34       		.uleb128 0x34
 2396 00d3 00       		.byte	0
 2397 00d4 03       		.uleb128 0x3
 2398 00d5 0E       		.uleb128 0xe
 2399 00d6 3A       		.uleb128 0x3a
 2400 00d7 0B       		.uleb128 0xb
 2401 00d8 3B       		.uleb128 0x3b
 2402 00d9 0B       		.uleb128 0xb
 2403 00da 49       		.uleb128 0x49
 2404 00db 13       		.uleb128 0x13
 2405 00dc 02       		.uleb128 0x2
 2406 00dd 18       		.uleb128 0x18
 2407 00de 00       		.byte	0
 2408 00df 00       		.byte	0
 2409 00e0 11       		.uleb128 0x11
 2410 00e1 34       		.uleb128 0x34
 2411 00e2 00       		.byte	0
 2412 00e3 03       		.uleb128 0x3
 2413 00e4 0E       		.uleb128 0xe
 2414 00e5 3A       		.uleb128 0x3a
 2415 00e6 0B       		.uleb128 0xb
 2416 00e7 3B       		.uleb128 0x3b
 2417 00e8 05       		.uleb128 0x5
 2418 00e9 49       		.uleb128 0x49
 2419 00ea 13       		.uleb128 0x13
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 51


 2420 00eb 02       		.uleb128 0x2
 2421 00ec 18       		.uleb128 0x18
 2422 00ed 00       		.byte	0
 2423 00ee 00       		.byte	0
 2424 00ef 12       		.uleb128 0x12
 2425 00f0 2E       		.uleb128 0x2e
 2426 00f1 01       		.byte	0x1
 2427 00f2 3F       		.uleb128 0x3f
 2428 00f3 19       		.uleb128 0x19
 2429 00f4 03       		.uleb128 0x3
 2430 00f5 0E       		.uleb128 0xe
 2431 00f6 3A       		.uleb128 0x3a
 2432 00f7 0B       		.uleb128 0xb
 2433 00f8 3B       		.uleb128 0x3b
 2434 00f9 05       		.uleb128 0x5
 2435 00fa 27       		.uleb128 0x27
 2436 00fb 19       		.uleb128 0x19
 2437 00fc 11       		.uleb128 0x11
 2438 00fd 01       		.uleb128 0x1
 2439 00fe 12       		.uleb128 0x12
 2440 00ff 06       		.uleb128 0x6
 2441 0100 40       		.uleb128 0x40
 2442 0101 18       		.uleb128 0x18
 2443 0102 9642     		.uleb128 0x2116
 2444 0104 19       		.uleb128 0x19
 2445 0105 01       		.uleb128 0x1
 2446 0106 13       		.uleb128 0x13
 2447 0107 00       		.byte	0
 2448 0108 00       		.byte	0
 2449 0109 13       		.uleb128 0x13
 2450 010a 05       		.uleb128 0x5
 2451 010b 00       		.byte	0
 2452 010c 03       		.uleb128 0x3
 2453 010d 08       		.uleb128 0x8
 2454 010e 3A       		.uleb128 0x3a
 2455 010f 0B       		.uleb128 0xb
 2456 0110 3B       		.uleb128 0x3b
 2457 0111 05       		.uleb128 0x5
 2458 0112 49       		.uleb128 0x49
 2459 0113 13       		.uleb128 0x13
 2460 0114 02       		.uleb128 0x2
 2461 0115 18       		.uleb128 0x18
 2462 0116 00       		.byte	0
 2463 0117 00       		.byte	0
 2464 0118 14       		.uleb128 0x14
 2465 0119 34       		.uleb128 0x34
 2466 011a 00       		.byte	0
 2467 011b 03       		.uleb128 0x3
 2468 011c 0E       		.uleb128 0xe
 2469 011d 3A       		.uleb128 0x3a
 2470 011e 0B       		.uleb128 0xb
 2471 011f 3B       		.uleb128 0x3b
 2472 0120 05       		.uleb128 0x5
 2473 0121 49       		.uleb128 0x49
 2474 0122 13       		.uleb128 0x13
 2475 0123 3F       		.uleb128 0x3f
 2476 0124 19       		.uleb128 0x19
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 52


 2477 0125 3C       		.uleb128 0x3c
 2478 0126 19       		.uleb128 0x19
 2479 0127 00       		.byte	0
 2480 0128 00       		.byte	0
 2481 0129 15       		.uleb128 0x15
 2482 012a 35       		.uleb128 0x35
 2483 012b 00       		.byte	0
 2484 012c 49       		.uleb128 0x49
 2485 012d 13       		.uleb128 0x13
 2486 012e 00       		.byte	0
 2487 012f 00       		.byte	0
 2488 0130 16       		.uleb128 0x16
 2489 0131 34       		.uleb128 0x34
 2490 0132 00       		.byte	0
 2491 0133 03       		.uleb128 0x3
 2492 0134 08       		.uleb128 0x8
 2493 0135 3A       		.uleb128 0x3a
 2494 0136 0B       		.uleb128 0xb
 2495 0137 3B       		.uleb128 0x3b
 2496 0138 0B       		.uleb128 0xb
 2497 0139 49       		.uleb128 0x49
 2498 013a 13       		.uleb128 0x13
 2499 013b 3F       		.uleb128 0x3f
 2500 013c 19       		.uleb128 0x19
 2501 013d 02       		.uleb128 0x2
 2502 013e 18       		.uleb128 0x18
 2503 013f 00       		.byte	0
 2504 0140 00       		.byte	0
 2505 0141 17       		.uleb128 0x17
 2506 0142 34       		.uleb128 0x34
 2507 0143 00       		.byte	0
 2508 0144 03       		.uleb128 0x3
 2509 0145 0E       		.uleb128 0xe
 2510 0146 3A       		.uleb128 0x3a
 2511 0147 0B       		.uleb128 0xb
 2512 0148 3B       		.uleb128 0x3b
 2513 0149 0B       		.uleb128 0xb
 2514 014a 49       		.uleb128 0x49
 2515 014b 13       		.uleb128 0x13
 2516 014c 3F       		.uleb128 0x3f
 2517 014d 19       		.uleb128 0x19
 2518 014e 02       		.uleb128 0x2
 2519 014f 18       		.uleb128 0x18
 2520 0150 00       		.byte	0
 2521 0151 00       		.byte	0
 2522 0152 18       		.uleb128 0x18
 2523 0153 21       		.uleb128 0x21
 2524 0154 00       		.byte	0
 2525 0155 49       		.uleb128 0x49
 2526 0156 13       		.uleb128 0x13
 2527 0157 2F       		.uleb128 0x2f
 2528 0158 05       		.uleb128 0x5
 2529 0159 00       		.byte	0
 2530 015a 00       		.byte	0
 2531 015b 00       		.byte	0
 2532              		.section	.debug_aranges,"",%progbits
 2533 0000 34000000 		.4byte	0x34
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 53


 2534 0004 0200     		.2byte	0x2
 2535 0006 00000000 		.4byte	.Ldebug_info0
 2536 000a 04       		.byte	0x4
 2537 000b 00       		.byte	0
 2538 000c 0000     		.2byte	0
 2539 000e 0000     		.2byte	0
 2540 0010 00000000 		.4byte	.LFB64
 2541 0014 18000000 		.4byte	.LFE64-.LFB64
 2542 0018 00000000 		.4byte	.LFB65
 2543 001c 8C070000 		.4byte	.LFE65-.LFB65
 2544 0020 00000000 		.4byte	.LFB66
 2545 0024 3E000000 		.4byte	.LFE66-.LFB66
 2546 0028 00000000 		.4byte	.LFB67
 2547 002c 26000000 		.4byte	.LFE67-.LFB67
 2548 0030 00000000 		.4byte	0
 2549 0034 00000000 		.4byte	0
 2550              		.section	.debug_ranges,"",%progbits
 2551              	.Ldebug_ranges0:
 2552 0000 00000000 		.4byte	.LFB64
 2553 0004 18000000 		.4byte	.LFE64
 2554 0008 00000000 		.4byte	.LFB65
 2555 000c 8C070000 		.4byte	.LFE65
 2556 0010 00000000 		.4byte	.LFB66
 2557 0014 3E000000 		.4byte	.LFE66
 2558 0018 00000000 		.4byte	.LFB67
 2559 001c 26000000 		.4byte	.LFE67
 2560 0020 00000000 		.4byte	0
 2561 0024 00000000 		.4byte	0
 2562              		.section	.debug_line,"",%progbits
 2563              	.Ldebug_line0:
 2564 0000 F7020000 		.section	.debug_str,"MS",%progbits,1
 2564      02005601 
 2564      00000201 
 2564      FB0E0D00 
 2564      01010101 
 2565              	.LASF55:
 2566 0000 75736250 		.ascii	"usbPutChar\000"
 2566      75744368 
 2566      617200
 2567              	.LASF37:
 2568 000b 68696768 		.ascii	"highCountLeftIntersection\000"
 2568      436F756E 
 2568      744C6566 
 2568      74496E74 
 2568      65727365 
 2569              	.LASF96:
 2570 0025 73717561 		.ascii	"squares\000"
 2570      72657300 
 2571              	.LASF95:
 2572 002d 6C617374 		.ascii	"lastAdjustDirection\000"
 2572      41646A75 
 2572      73744469 
 2572      72656374 
 2572      696F6E00 
 2573              	.LASF66:
 2574 0041 666C6167 		.ascii	"flag_packet\000"
 2574      5F706163 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 54


 2574      6B657400 
 2575              	.LASF80:
 2576 004d 76616C75 		.ascii	"valuesLeftLine\000"
 2576      65734C65 
 2576      66744C69 
 2576      6E6500
 2577              	.LASF63:
 2578 005c 666C6167 		.ascii	"flag_ts_speed\000"
 2578      5F74735F 
 2578      73706565 
 2578      6400
 2579              	.LASF33:
 2580 006a 67325F78 		.ascii	"g2_xpos\000"
 2580      706F7300 
 2581              	.LASF2:
 2582 0072 73686F72 		.ascii	"short int\000"
 2582      7420696E 
 2582      7400
 2583              	.LASF82:
 2584 007c 76616C75 		.ascii	"valuesTurnComplete\000"
 2584      65735475 
 2584      726E436F 
 2584      6D706C65 
 2584      746500
 2585              	.LASF74:
 2586 008f 73797374 		.ascii	"system_state\000"
 2586      656D5F73 
 2586      74617465 
 2586      00
 2587              	.LASF10:
 2588 009c 73697A65 		.ascii	"sizetype\000"
 2588      74797065 
 2588      00
 2589              	.LASF53:
 2590 00a5 6D61696E 		.ascii	"main\000"
 2590      00
 2591              	.LASF73:
 2592 00aa 75736242 		.ascii	"usbBuffer\000"
 2592      75666665 
 2592      7200
 2593              	.LASF99:
 2594 00b4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2594      43313120 
 2594      352E342E 
 2594      31203230 
 2594      31363036 
 2595 00e7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2595      20726576 
 2595      6973696F 
 2595      6E203233 
 2595      37373135 
 2596 011a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2596      66756E63 
 2596      74696F6E 
 2596      2D736563 
 2596      74696F6E 
 2597              	.LASF6:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 55


 2598 0142 6C6F6E67 		.ascii	"long long int\000"
 2598      206C6F6E 
 2598      6720696E 
 2598      7400
 2599              	.LASF83:
 2600 0150 76616C75 		.ascii	"valuesRightLine\000"
 2600      65735269 
 2600      6768744C 
 2600      696E6500 
 2601              	.LASF15:
 2602 0160 75696E74 		.ascii	"uint16\000"
 2602      313600
 2603              	.LASF21:
 2604 0167 696E6465 		.ascii	"index\000"
 2604      7800
 2605              	.LASF17:
 2606 016d 696E7431 		.ascii	"int16\000"
 2606      3600
 2607              	.LASF14:
 2608 0173 75696E74 		.ascii	"uint8\000"
 2608      3800
 2609              	.LASF32:
 2610 0179 67315F64 		.ascii	"g1_direction\000"
 2610      69726563 
 2610      74696F6E 
 2610      00
 2611              	.LASF84:
 2612 0186 76616C75 		.ascii	"valuesRightIntersection\000"
 2612      65735269 
 2612      67687449 
 2612      6E746572 
 2612      73656374 
 2613              	.LASF92:
 2614 019e 70756C73 		.ascii	"pulsesTravelled\000"
 2614      65735472 
 2614      6176656C 
 2614      6C656400 
 2615              	.LASF71:
 2616 01ae 6C696E65 		.ascii	"line\000"
 2616      00
 2617              	.LASF0:
 2618 01b3 7369676E 		.ascii	"signed char\000"
 2618      65642063 
 2618      68617200 
 2619              	.LASF18:
 2620 01bf 666C6F61 		.ascii	"float\000"
 2620      7400
 2621              	.LASF76:
 2622 01c5 73746172 		.ascii	"started\000"
 2622      74656400 
 2623              	.LASF101:
 2624 01cd 483A5C44 		.ascii	"H:\\Documents\\301\\Post-Benchmark\\team14\\301_lab"
 2624      6F63756D 
 2624      656E7473 
 2624      5C333031 
 2624      5C506F73 
 2625 01fb 5F746173 		.ascii	"_tasks\\psoc student pack\\psoc_code_base\\CS301_Cl"
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 56


 2625      6B735C70 
 2625      736F6320 
 2625      73747564 
 2625      656E7420 
 2626 022b 6173732E 		.ascii	"ass.cydsn\000"
 2626      63796473 
 2626      6E00
 2627              	.LASF54:
 2628 0235 75736250 		.ascii	"usbPutString\000"
 2628      75745374 
 2628      72696E67 
 2628      00
 2629              	.LASF16:
 2630 0242 696E7438 		.ascii	"int8\000"
 2630      00
 2631              	.LASF62:
 2632 0247 666C6167 		.ascii	"flag_ts_update\000"
 2632      5F74735F 
 2632      75706461 
 2632      746500
 2633              	.LASF34:
 2634 0256 67325F79 		.ascii	"g2_ypos\000"
 2634      706F7300 
 2635              	.LASF28:
 2636 025e 67305F64 		.ascii	"g0_direction\000"
 2636      69726563 
 2636      74696F6E 
 2636      00
 2637              	.LASF25:
 2638 026b 67305F78 		.ascii	"g0_xpos\000"
 2638      706F7300 
 2639              	.LASF4:
 2640 0273 6C6F6E67 		.ascii	"long int\000"
 2640      20696E74 
 2640      00
 2641              	.LASF87:
 2642 027c 6C617374 		.ascii	"lastVeerDirection\000"
 2642      56656572 
 2642      44697265 
 2642      6374696F 
 2642      6E00
 2643              	.LASF94:
 2644 028e 696E7465 		.ascii	"interruptFlag\000"
 2644      72727570 
 2644      74466C61 
 2644      6700
 2645              	.LASF64:
 2646 029c 666C6167 		.ascii	"flag_ts_display\000"
 2646      5F74735F 
 2646      64697370 
 2646      6C617900 
 2647              	.LASF46:
 2648 02ac 63757272 		.ascii	"currentInst\000"
 2648      656E7449 
 2648      6E737400 
 2649              	.LASF36:
 2650 02b8 67325F64 		.ascii	"g2_direction\000"
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 57


 2650      69726563 
 2650      74696F6E 
 2650      00
 2651              	.LASF42:
 2652 02c5 68696768 		.ascii	"highCountRightIntersection\000"
 2652      436F756E 
 2652      74526967 
 2652      6874496E 
 2652      74657273 
 2653              	.LASF1:
 2654 02e0 756E7369 		.ascii	"unsigned char\000"
 2654      676E6564 
 2654      20636861 
 2654      7200
 2655              	.LASF30:
 2656 02ee 67315F79 		.ascii	"g1_ypos\000"
 2656      706F7300 
 2657              	.LASF9:
 2658 02f6 6C6F6E67 		.ascii	"long double\000"
 2658      20646F75 
 2658      626C6500 
 2659              	.LASF72:
 2660 0302 656E7472 		.ascii	"entry\000"
 2660      7900
 2661              	.LASF43:
 2662 0308 72657375 		.ascii	"result1\000"
 2662      6C743100 
 2663              	.LASF44:
 2664 0310 72657375 		.ascii	"result2\000"
 2664      6C743200 
 2665              	.LASF45:
 2666 0318 66697273 		.ascii	"firstNonZeroIndex\000"
 2666      744E6F6E 
 2666      5A65726F 
 2666      496E6465 
 2666      7800
 2667              	.LASF27:
 2668 032a 67305F73 		.ascii	"g0_speed\000"
 2668      70656564 
 2668      00
 2669              	.LASF31:
 2670 0333 67315F73 		.ascii	"g1_speed\000"
 2670      70656564 
 2670      00
 2671              	.LASF41:
 2672 033c 68696768 		.ascii	"highCountRightLine\000"
 2672      436F756E 
 2672      74526967 
 2672      68744C69 
 2672      6E6500
 2673              	.LASF68:
 2674 034f 64617461 		.ascii	"dataready_flag\000"
 2674      72656164 
 2674      795F666C 
 2674      616700
 2675              	.LASF65:
 2676 035e 666C6167 		.ascii	"flag_rx\000"
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 58


 2676      5F727800 
 2677              	.LASF50:
 2678 0366 7365636F 		.ascii	"second\000"
 2678      6E6400
 2679              	.LASF7:
 2680 036d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2680      206C6F6E 
 2680      6720756E 
 2680      7369676E 
 2680      65642069 
 2681              	.LASF8:
 2682 0384 756E7369 		.ascii	"unsigned int\000"
 2682      676E6564 
 2682      20696E74 
 2682      00
 2683              	.LASF67:
 2684 0391 666C6167 		.ascii	"flag_KB_string\000"
 2684      5F4B425F 
 2684      73747269 
 2684      6E6700
 2685              	.LASF75:
 2686 03a0 636F6E73 		.ascii	"consecStops\000"
 2686      65635374 
 2686      6F707300 
 2687              	.LASF35:
 2688 03ac 67325F73 		.ascii	"g2_speed\000"
 2688      70656564 
 2688      00
 2689              	.LASF47:
 2690 03b5 64697374 		.ascii	"dist\000"
 2690      00
 2691              	.LASF29:
 2692 03ba 67315F78 		.ascii	"g1_xpos\000"
 2692      706F7300 
 2693              	.LASF3:
 2694 03c2 73686F72 		.ascii	"short unsigned int\000"
 2694      7420756E 
 2694      7369676E 
 2694      65642069 
 2694      6E7400
 2695              	.LASF39:
 2696 03d5 68696768 		.ascii	"highCountMiddleLine\000"
 2696      436F756E 
 2696      744D6964 
 2696      646C654C 
 2696      696E6500 
 2697              	.LASF81:
 2698 03e9 76616C75 		.ascii	"valuesMiddleLine\000"
 2698      65734D69 
 2698      64646C65 
 2698      4C696E65 
 2698      00
 2699              	.LASF102:
 2700 03fa 64617461 		.ascii	"data_main\000"
 2700      5F6D6169 
 2700      6E00
 2701              	.LASF11:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 59


 2702 0404 63686172 		.ascii	"char\000"
 2702      00
 2703              	.LASF98:
 2704 0409 64697374 		.ascii	"distance\000"
 2704      616E6365 
 2704      00
 2705              	.LASF22:
 2706 0412 726F626F 		.ascii	"robot_xpos\000"
 2706      745F7870 
 2706      6F7300
 2707              	.LASF13:
 2708 041d 696E7433 		.ascii	"int32_t\000"
 2708      325F7400 
 2709              	.LASF78:
 2710 0425 666C6167 		.ascii	"flag\000"
 2710      00
 2711              	.LASF12:
 2712 042a 5F5F696E 		.ascii	"__int32_t\000"
 2712      7433325F 
 2712      7400
 2713              	.LASF48:
 2714 0434 70756C73 		.ascii	"pulses\000"
 2714      657300
 2715              	.LASF52:
 2716 043b 6356616C 		.ascii	"cVal\000"
 2716      00
 2717              	.LASF79:
 2718 0440 76616C75 		.ascii	"valuesLeftIntersection\000"
 2718      65734C65 
 2718      6674496E 
 2718      74657273 
 2718      65637469 
 2719              	.LASF70:
 2720 0457 64697370 		.ascii	"displaystring\000"
 2720      6C617973 
 2720      7472696E 
 2720      6700
 2721              	.LASF90:
 2722 0465 76324D31 		.ascii	"v2M1\000"
 2722      00
 2723              	.LASF91:
 2724 046a 76324D32 		.ascii	"v2M2\000"
 2724      00
 2725              	.LASF38:
 2726 046f 68696768 		.ascii	"highCountLeftLine\000"
 2726      436F756E 
 2726      744C6566 
 2726      744C696E 
 2726      6500
 2727              	.LASF100:
 2728 0481 6D61696E 		.ascii	"main.c\000"
 2728      2E6300
 2729              	.LASF5:
 2730 0488 6C6F6E67 		.ascii	"long unsigned int\000"
 2730      20756E73 
 2730      69676E65 
 2730      6420696E 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 60


 2730      7400
 2731              	.LASF19:
 2732 049a 646F7562 		.ascii	"double\000"
 2732      6C6500
 2733              	.LASF56:
 2734 04a1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2734      52784275 
 2734      66666572 
 2734      00
 2735              	.LASF77:
 2736 04ae 696E7374 		.ascii	"instCounter\000"
 2736      436F756E 
 2736      74657200 
 2737              	.LASF85:
 2738 04ba 636F756E 		.ascii	"count\000"
 2738      7400
 2739              	.LASF61:
 2740 04c0 666C6167 		.ascii	"flag_ts_enc\000"
 2740      5F74735F 
 2740      656E6300 
 2741              	.LASF88:
 2742 04cc 76314D31 		.ascii	"v1M1\000"
 2742      00
 2743              	.LASF89:
 2744 04d1 76314D32 		.ascii	"v1M2\000"
 2744      00
 2745              	.LASF86:
 2746 04d6 6D6F746F 		.ascii	"motorUpdateCount\000"
 2746      72557064 
 2746      61746543 
 2746      6F756E74 
 2746      00
 2747              	.LASF26:
 2748 04e7 67305F79 		.ascii	"g0_ypos\000"
 2748      706F7300 
 2749              	.LASF60:
 2750 04ef 74735F64 		.ascii	"ts_display\000"
 2750      6973706C 
 2750      617900
 2751              	.LASF59:
 2752 04fa 74735F73 		.ascii	"ts_speed\000"
 2752      70656564 
 2752      00
 2753              	.LASF57:
 2754 0503 74735F65 		.ascii	"ts_enc\000"
 2754      6E6300
 2755              	.LASF58:
 2756 050a 74735F75 		.ascii	"ts_update\000"
 2756      70646174 
 2756      6500
 2757              	.LASF69:
 2758 0514 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2758      5F72665F 
 2758      7472616E 
 2758      736D6973 
 2758      73696F6E 
 2759              	.LASF23:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccxDGRsd.s 			page 61


 2760 0530 726F626F 		.ascii	"robot_ypos\000"
 2760      745F7970 
 2760      6F7300
 2761              	.LASF51:
 2762 053b 696E7374 		.ascii	"instStr\000"
 2762      53747200 
 2763              	.LASF97:
 2764 0543 696E7374 		.ascii	"instruction\000"
 2764      72756374 
 2764      696F6E00 
 2765              	.LASF40:
 2766 054f 68696768 		.ascii	"highCountTurnComplete\000"
 2766      436F756E 
 2766      74547572 
 2766      6E436F6D 
 2766      706C6574 
 2767              	.LASF93:
 2768 0565 73746570 		.ascii	"step\000"
 2768      00
 2769              	.LASF20:
 2770 056a 72737369 		.ascii	"rssi\000"
 2770      00
 2771              	.LASF24:
 2772 056f 726F626F 		.ascii	"robot_orientation\000"
 2772      745F6F72 
 2772      69656E74 
 2772      6174696F 
 2772      6E00
 2773              	.LASF49:
 2774 0581 66697273 		.ascii	"first\000"
 2774      7400
 2775              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
