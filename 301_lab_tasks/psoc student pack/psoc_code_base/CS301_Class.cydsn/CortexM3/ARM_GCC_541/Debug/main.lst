ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	consecStops
 107              		.bss
 108 0012 0000     		.align	2
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 3


 109              		.type	consecStops, %object
 110              		.size	consecStops, 4
 111              	consecStops:
 112 0014 00000000 		.space	4
 113              		.global	started
 114              		.align	2
 115              		.type	started, %object
 116              		.size	started, 4
 117              	started:
 118 0018 00000000 		.space	4
 119              		.global	instCounter
 120              		.align	2
 121              		.type	instCounter, %object
 122              		.size	instCounter, 4
 123              	instCounter:
 124 001c 00000000 		.space	4
 125              		.global	flag
 126              		.align	2
 127              		.type	flag, %object
 128              		.size	flag, 4
 129              	flag:
 130 0020 00000000 		.space	4
 131              		.comm	valuesLeftIntersection,4000,4
 132              		.comm	valuesLeftLine,4000,4
 133              		.comm	valuesMiddleLine,4000,4
 134              		.comm	valuesTurnComplete,4000,4
 135              		.comm	valuesRightLine,4000,4
 136              		.comm	valuesRightIntersection,4000,4
 137              		.global	count
 138              		.align	2
 139              		.type	count, %object
 140              		.size	count, 4
 141              	count:
 142 0024 00000000 		.space	4
 143              		.global	motorUpdateCount
 144              		.align	2
 145              		.type	motorUpdateCount, %object
 146              		.size	motorUpdateCount, 4
 147              	motorUpdateCount:
 148 0028 00000000 		.space	4
 149              		.global	lastVeerDirection
 150              		.align	2
 151              		.type	lastVeerDirection, %object
 152              		.size	lastVeerDirection, 4
 153              	lastVeerDirection:
 154 002c 00000000 		.space	4
 155              		.comm	v1M1,4,4
 156              		.comm	v1M2,4,4
 157              		.comm	v2M1,4,4
 158              		.comm	v2M2,4,4
 159              		.comm	turnComplete,4,4
 160              		.global	pulsesTravelled
 161              		.align	2
 162              		.type	pulsesTravelled, %object
 163              		.size	pulsesTravelled, 4
 164              	pulsesTravelled:
 165 0030 00000000 		.space	4
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 4


 166              		.global	checkDistance
 167              		.align	2
 168              		.type	checkDistance, %object
 169              		.size	checkDistance, 4
 170              	checkDistance:
 171 0034 00000000 		.space	4
 172              		.global	step
 173              		.align	2
 174              		.type	step, %object
 175              		.size	step, 4
 176              	step:
 177 0038 00000000 		.space	4
 178              		.global	interruptFlag
 179              		.align	2
 180              		.type	interruptFlag, %object
 181              		.size	interruptFlag, 4
 182              	interruptFlag:
 183 003c 00000000 		.space	4
 184              		.global	lastAdjustDirection
 185              		.align	2
 186              		.type	lastAdjustDirection, %object
 187              		.size	lastAdjustDirection, 4
 188              	lastAdjustDirection:
 189 0040 00000000 		.space	4
 190              		.comm	squares,1000,4
 191              		.comm	instruction,500,4
 192              		.comm	distance,500,4
 193              		.section	.text.eoc,"ax",%progbits
 194              		.align	2
 195              		.global	eoc
 196              		.thumb
 197              		.thumb_func
 198              		.type	eoc, %function
 199              	eoc:
 200              	.LFB64:
 201              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 5


  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** 
  30:main.c        **** #include "pathfind.h"
  31:main.c        **** 
  32:main.c        **** #include "vars.h"
  33:main.c        **** 
  34:main.c        **** #define ADC_COUNT 1000
  35:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 150
  36:main.c        **** #define R_INT_BLACK highCountRightIntersection < 150
  37:main.c        **** #define L_LINE_BLACK highCountLeftLine < 150
  38:main.c        **** #define R_LINE_BLACK highCountRightLine < 150
  39:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 150
  40:main.c        **** #define TC_BLACK highCountTurnComplete < 150
  41:main.c        **** 
  42:main.c        **** int consecStops = 0;
  43:main.c        **** int started = 0;
  44:main.c        **** int instCounter = 0;
  45:main.c        **** //* ========================================
  46:main.c        **** void usbPutString(char * s);
  47:main.c        **** void usbPutChar(char c);
  48:main.c        **** //* ========================================
  49:main.c        **** 
  50:main.c        **** volatile int flag = 0;
  51:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  52:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  53:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  54:main.c        **** volatile int valuesTurnComplete[ADC_COUNT];
  55:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  56:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  57:main.c        **** volatile int count = 0;
  58:main.c        **** volatile int motorUpdateCount = 0;
  59:main.c        **** volatile int lastVeerDirection = 0;
  60:main.c        **** 
  61:main.c        **** volatile int v1M1;
  62:main.c        **** volatile int v1M2;
  63:main.c        **** volatile int v2M1;
  64:main.c        **** volatile int v2M2;
  65:main.c        **** volatile int turnComplete;
  66:main.c        **** int pulsesTravelled = 0;
  67:main.c        **** volatile int checkDistance = 0;
  68:main.c        **** volatile int step = 0;
  69:main.c        **** volatile int interruptFlag = 0;
  70:main.c        **** 
  71:main.c        **** int lastAdjustDirection = 0;
  72:main.c        **** unsigned char squares[500][2];
  73:main.c        **** unsigned char instruction[500];
  74:main.c        **** unsigned char distance[500];
  75:main.c        **** 
  76:main.c        **** CY_ISR(eoc) {
 202              		.loc 1 76 0
 203              		.cfi_startproc
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 6


 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207 0000 80B4     		push	{r7}
 208              		.cfi_def_cfa_offset 4
 209              		.cfi_offset 7, -4
 210 0002 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
  77:main.c        ****     flag = 1;
 212              		.loc 1 77 0
 213 0004 034B     		ldr	r3, .L2
 214 0006 0122     		movs	r2, #1
 215 0008 1A60     		str	r2, [r3]
  78:main.c        **** }
 216              		.loc 1 78 0
 217 000a 00BF     		nop
 218 000c BD46     		mov	sp, r7
 219              		.cfi_def_cfa_register 13
 220              		@ sp needed
 221 000e 80BC     		pop	{r7}
 222              		.cfi_restore 7
 223              		.cfi_def_cfa_offset 0
 224 0010 7047     		bx	lr
 225              	.L3:
 226 0012 00BF     		.align	2
 227              	.L2:
 228 0014 00000000 		.word	flag
 229              		.cfi_endproc
 230              	.LFE64:
 231              		.size	eoc, .-eoc
 232              		.global	__aeabi_i2d
 233              		.global	__aeabi_dmul
 234              		.global	__aeabi_d2iz
 235              		.global	__aeabi_ddiv
 236              		.global	__aeabi_dcmple
 237              		.section	.text.main,"ax",%progbits
 238              		.align	2
 239              		.global	main
 240              		.thumb
 241              		.thumb_func
 242              		.type	main, %function
 243              	main:
 244              	.LFB65:
  79:main.c        **** 
  80:main.c        **** int main() {
 245              		.loc 1 80 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 264
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 B0B5     		push	{r4, r5, r7, lr}
 250              		.cfi_def_cfa_offset 16
 251              		.cfi_offset 4, -16
 252              		.cfi_offset 5, -12
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 C2B0     		sub	sp, sp, #264
 256              		.cfi_def_cfa_offset 280
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 7


 257 0004 00AF     		add	r7, sp, #0
 258              		.cfi_def_cfa_register 7
  81:main.c        ****     CYGlobalIntEnable;
 259              		.loc 1 81 0
 260              		.syntax unified
 261              	@ 81 "main.c" 1
 262 0006 62B6     		CPSIE   i
 263              	@ 0 "" 2
  82:main.c        ****     USBUART_Start(0, USBUART_5V_OPERATION);
 264              		.loc 1 82 0
 265              		.thumb
 266              		.syntax unified
 267 0008 0121     		movs	r1, #1
 268 000a 0020     		movs	r0, #0
 269 000c FFF7FEFF 		bl	USBUART_Start
  83:main.c        ****     //UART_Start();
  84:main.c        **** 
  85:main.c        ****     QuadDec_M1_Start();
 270              		.loc 1 85 0
 271 0010 FFF7FEFF 		bl	QuadDec_M1_Start
  86:main.c        ****     QuadDec_M2_Start();
 272              		.loc 1 86 0
 273 0014 FFF7FEFF 		bl	QuadDec_M2_Start
  87:main.c        **** 
  88:main.c        ****     //isr_TS_StartEx(MyISR);
  89:main.c        **** 
  90:main.c        ****     RF_BT_SELECT_Write(1);
 274              		.loc 1 90 0
 275 0018 0120     		movs	r0, #1
 276 001a FFF7FEFF 		bl	RF_BT_SELECT_Write
  91:main.c        ****     //ADC1_IRQ_Enable();
  92:main.c        ****     ADC1_Start();
 277              		.loc 1 92 0
 278 001e FFF7FEFF 		bl	ADC1_Start
  93:main.c        **** 
  94:main.c        ****     ADC1_StartConvert();
 279              		.loc 1 94 0
 280 0022 FFF7FEFF 		bl	ADC1_StartConvert
  95:main.c        **** 
  96:main.c        ****     eoc_StartEx(eoc);
 281              		.loc 1 96 0
 282 0026 B548     		ldr	r0, .L58
 283 0028 FFF7FEFF 		bl	eoc_StartEx
  97:main.c        **** 
  98:main.c        ****     initMotors();
 284              		.loc 1 98 0
 285 002c FFF7FEFF 		bl	initMotors
  99:main.c        **** 
 100:main.c        ****     stop();
 286              		.loc 1 100 0
 287 0030 FFF7FEFF 		bl	stop
 288              	.LBB2:
 101:main.c        ****     //isr_TS_StartEx(MyISR);
 102:main.c        ****     //Timer_TS_Start();
 103:main.c        **** 
 104:main.c        ****     // Loop through the arrays and set each element to 55 or 0
 105:main.c        ****     for (int i = 0; i < 500; i++) {
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 8


 289              		.loc 1 105 0
 290 0034 0023     		movs	r3, #0
 291 0036 C7F80431 		str	r3, [r7, #260]
 292 003a 23E0     		b	.L5
 293              	.L6:
 106:main.c        ****         squares[i][0] = 55;
 294              		.loc 1 106 0 discriminator 3
 295 003c B04A     		ldr	r2, .L58+4
 296 003e D7F80431 		ldr	r3, [r7, #260]
 297 0042 3721     		movs	r1, #55
 298 0044 02F81310 		strb	r1, [r2, r3, lsl #1]
 107:main.c        ****         squares[i][1] = 55;
 299              		.loc 1 107 0 discriminator 3
 300 0048 AD4A     		ldr	r2, .L58+4
 301 004a D7F80431 		ldr	r3, [r7, #260]
 302 004e 5B00     		lsls	r3, r3, #1
 303 0050 1344     		add	r3, r3, r2
 304 0052 3722     		movs	r2, #55
 305 0054 5A70     		strb	r2, [r3, #1]
 108:main.c        ****         instruction[i] = 0;
 306              		.loc 1 108 0 discriminator 3
 307 0056 AB4A     		ldr	r2, .L58+8
 308 0058 D7F80431 		ldr	r3, [r7, #260]
 309 005c 1344     		add	r3, r3, r2
 310 005e 0022     		movs	r2, #0
 311 0060 1A70     		strb	r2, [r3]
 109:main.c        ****         distance[i] = 0;
 312              		.loc 1 109 0 discriminator 3
 313 0062 A94A     		ldr	r2, .L58+12
 314 0064 D7F80431 		ldr	r3, [r7, #260]
 315 0068 1344     		add	r3, r3, r2
 316 006a 0022     		movs	r2, #0
 317 006c 1A70     		strb	r2, [r3]
 110:main.c        ****         distance[i] = 55;
 318              		.loc 1 110 0 discriminator 3
 319 006e A64A     		ldr	r2, .L58+12
 320 0070 D7F80431 		ldr	r3, [r7, #260]
 321 0074 1344     		add	r3, r3, r2
 322 0076 3722     		movs	r2, #55
 323 0078 1A70     		strb	r2, [r3]
 105:main.c        ****         squares[i][0] = 55;
 324              		.loc 1 105 0 discriminator 3
 325 007a D7F80431 		ldr	r3, [r7, #260]
 326 007e 0133     		adds	r3, r3, #1
 327 0080 C7F80431 		str	r3, [r7, #260]
 328              	.L5:
 105:main.c        ****         squares[i][0] = 55;
 329              		.loc 1 105 0 is_stmt 0 discriminator 1
 330 0084 D7F80431 		ldr	r3, [r7, #260]
 331 0088 B3F5FA7F 		cmp	r3, #500
 332 008c D6DB     		blt	.L6
 333              	.LBE2:
 111:main.c        ****     }
 112:main.c        ****     pathfind(instruction, distance, squares);
 334              		.loc 1 112 0 is_stmt 1
 335 008e 9C4A     		ldr	r2, .L58+4
 336 0090 9D49     		ldr	r1, .L58+12
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 9


 337 0092 9C48     		ldr	r0, .L58+8
 338 0094 FFF7FEFF 		bl	pathfind
 339              	.L56:
 113:main.c        ****     //CyDelay(2000);
 114:main.c        ****     for (;;) {
 115:main.c        **** 
 116:main.c        ****         if (flag == 1) {
 340              		.loc 1 116 0
 341 0098 9C4B     		ldr	r3, .L58+16
 342 009a 1B68     		ldr	r3, [r3]
 343 009c 012B     		cmp	r3, #1
 344 009e FBD1     		bne	.L56
 117:main.c        **** 
 118:main.c        ****             ADC1_IRQ_Disable();
 345              		.loc 1 118 0
 346 00a0 FFF7FEFF 		bl	ADC1_IRQ_Disable
 119:main.c        ****             valuesLeftIntersection[count] = ADC1_GetResult16(0);
 347              		.loc 1 119 0
 348 00a4 9A4B     		ldr	r3, .L58+20
 349 00a6 1C68     		ldr	r4, [r3]
 350 00a8 0020     		movs	r0, #0
 351 00aa FFF7FEFF 		bl	ADC1_GetResult16
 352 00ae 0346     		mov	r3, r0
 353 00b0 1A46     		mov	r2, r3
 354 00b2 984B     		ldr	r3, .L58+24
 355 00b4 43F82420 		str	r2, [r3, r4, lsl #2]
 120:main.c        ****             valuesLeftLine[count] = ADC1_GetResult16(1);
 356              		.loc 1 120 0
 357 00b8 954B     		ldr	r3, .L58+20
 358 00ba 1C68     		ldr	r4, [r3]
 359 00bc 0120     		movs	r0, #1
 360 00be FFF7FEFF 		bl	ADC1_GetResult16
 361 00c2 0346     		mov	r3, r0
 362 00c4 1A46     		mov	r2, r3
 363 00c6 944B     		ldr	r3, .L58+28
 364 00c8 43F82420 		str	r2, [r3, r4, lsl #2]
 121:main.c        ****             valuesMiddleLine[count] = ADC1_GetResult16(2);
 365              		.loc 1 121 0
 366 00cc 904B     		ldr	r3, .L58+20
 367 00ce 1C68     		ldr	r4, [r3]
 368 00d0 0220     		movs	r0, #2
 369 00d2 FFF7FEFF 		bl	ADC1_GetResult16
 370 00d6 0346     		mov	r3, r0
 371 00d8 1A46     		mov	r2, r3
 372 00da 904B     		ldr	r3, .L58+32
 373 00dc 43F82420 		str	r2, [r3, r4, lsl #2]
 122:main.c        ****             valuesTurnComplete[count] = ADC1_GetResult16(3);
 374              		.loc 1 122 0
 375 00e0 8B4B     		ldr	r3, .L58+20
 376 00e2 1C68     		ldr	r4, [r3]
 377 00e4 0320     		movs	r0, #3
 378 00e6 FFF7FEFF 		bl	ADC1_GetResult16
 379 00ea 0346     		mov	r3, r0
 380 00ec 1A46     		mov	r2, r3
 381 00ee 8C4B     		ldr	r3, .L58+36
 382 00f0 43F82420 		str	r2, [r3, r4, lsl #2]
 123:main.c        ****             valuesRightLine[count] = ADC1_GetResult16(4);
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 10


 383              		.loc 1 123 0
 384 00f4 864B     		ldr	r3, .L58+20
 385 00f6 1C68     		ldr	r4, [r3]
 386 00f8 0420     		movs	r0, #4
 387 00fa FFF7FEFF 		bl	ADC1_GetResult16
 388 00fe 0346     		mov	r3, r0
 389 0100 1A46     		mov	r2, r3
 390 0102 884B     		ldr	r3, .L58+40
 391 0104 43F82420 		str	r2, [r3, r4, lsl #2]
 124:main.c        ****             valuesRightIntersection[count] = ADC1_GetResult16(5);
 392              		.loc 1 124 0
 393 0108 814B     		ldr	r3, .L58+20
 394 010a 1C68     		ldr	r4, [r3]
 395 010c 0520     		movs	r0, #5
 396 010e FFF7FEFF 		bl	ADC1_GetResult16
 397 0112 0346     		mov	r3, r0
 398 0114 1A46     		mov	r2, r3
 399 0116 844B     		ldr	r3, .L58+44
 400 0118 43F82420 		str	r2, [r3, r4, lsl #2]
 125:main.c        **** 
 126:main.c        ****             count++;
 401              		.loc 1 126 0
 402 011c 7C4B     		ldr	r3, .L58+20
 403 011e 1B68     		ldr	r3, [r3]
 404 0120 0133     		adds	r3, r3, #1
 405 0122 7B4A     		ldr	r2, .L58+20
 406 0124 1360     		str	r3, [r2]
 127:main.c        ****             if (count == ADC_COUNT) {
 407              		.loc 1 127 0
 408 0126 7A4B     		ldr	r3, .L58+20
 409 0128 1B68     		ldr	r3, [r3]
 410 012a B3F57A7F 		cmp	r3, #1000
 411 012e 40F02883 		bne	.L8
 412              	.LBB3:
 128:main.c        **** 
 129:main.c        ****                 count = 0;
 413              		.loc 1 129 0
 414 0132 774B     		ldr	r3, .L58+20
 415 0134 0022     		movs	r2, #0
 416 0136 1A60     		str	r2, [r3]
 130:main.c        ****                 motorUpdateCount++;
 417              		.loc 1 130 0
 418 0138 7C4B     		ldr	r3, .L58+48
 419 013a 1B68     		ldr	r3, [r3]
 420 013c 0133     		adds	r3, r3, #1
 421 013e 7B4A     		ldr	r2, .L58+48
 422 0140 1360     		str	r3, [r2]
 131:main.c        ****                 int highCountLeftIntersection = 0;
 423              		.loc 1 131 0
 424 0142 0023     		movs	r3, #0
 425 0144 C7F80031 		str	r3, [r7, #256]
 132:main.c        ****                 int highCountLeftLine = 0;
 426              		.loc 1 132 0
 427 0148 0023     		movs	r3, #0
 428 014a C7F8FC30 		str	r3, [r7, #252]
 133:main.c        ****                 int highCountMiddleLine = 0;
 429              		.loc 1 133 0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 11


 430 014e 0023     		movs	r3, #0
 431 0150 C7F8F830 		str	r3, [r7, #248]
 134:main.c        ****                 int highCountTurnComplete = 0;
 432              		.loc 1 134 0
 433 0154 0023     		movs	r3, #0
 434 0156 C7F8F430 		str	r3, [r7, #244]
 135:main.c        ****                 int highCountRightLine = 0;
 435              		.loc 1 135 0
 436 015a 0023     		movs	r3, #0
 437 015c C7F8F030 		str	r3, [r7, #240]
 136:main.c        ****                 int highCountRightIntersection = 0;
 438              		.loc 1 136 0
 439 0160 0023     		movs	r3, #0
 440 0162 C7F8EC30 		str	r3, [r7, #236]
 441              	.LBB4:
 137:main.c        ****                 for (int i = 0; i < ADC_COUNT; i++) {
 442              		.loc 1 137 0
 443 0166 0023     		movs	r3, #0
 444 0168 C7F8E830 		str	r3, [r7, #232]
 445 016c 94E0     		b	.L9
 446              	.L17:
 447              	.LBB5:
 138:main.c        ****                     step = 0;
 448              		.loc 1 138 0
 449 016e 704B     		ldr	r3, .L58+52
 450 0170 0022     		movs	r2, #0
 451 0172 1A60     		str	r2, [r3]
 139:main.c        ****                     char result1[24];
 140:main.c        ****                     char result2[24];
 141:main.c        ****                     if (motorUpdateCount == 1) {
 452              		.loc 1 141 0
 453 0174 6D4B     		ldr	r3, .L58+48
 454 0176 1B68     		ldr	r3, [r3]
 455 0178 012B     		cmp	r3, #1
 456 017a 34D1     		bne	.L10
 142:main.c        ****                         v2M1 = QuadDec_M1_GetCounter() * -1;
 457              		.loc 1 142 0
 458 017c FFF7FEFF 		bl	QuadDec_M1_GetCounter
 459 0180 0346     		mov	r3, r0
 460 0182 5B42     		negs	r3, r3
 461 0184 6B4A     		ldr	r2, .L58+56
 462 0186 1360     		str	r3, [r2]
 143:main.c        ****                         v2M2 = QuadDec_M2_GetCounter() * -1;
 463              		.loc 1 143 0
 464 0188 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 465 018c 0346     		mov	r3, r0
 466 018e 5B42     		negs	r3, r3
 467 0190 694A     		ldr	r2, .L58+60
 468 0192 1360     		str	r3, [r2]
 144:main.c        ****                         pulsesTravelled = pulsesTravelled + v2M1 + v2M2;
 469              		.loc 1 144 0
 470 0194 694B     		ldr	r3, .L58+64
 471 0196 1A68     		ldr	r2, [r3]
 472 0198 664B     		ldr	r3, .L58+56
 473 019a 1B68     		ldr	r3, [r3]
 474 019c 1A44     		add	r2, r2, r3
 475 019e 664B     		ldr	r3, .L58+60
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 12


 476 01a0 1B68     		ldr	r3, [r3]
 477 01a2 1344     		add	r3, r3, r2
 478 01a4 654A     		ldr	r2, .L58+64
 479 01a6 1360     		str	r3, [r2]
 145:main.c        ****                         itoa((v2M1 - v1M1), result1, 10);
 480              		.loc 1 145 0
 481 01a8 624B     		ldr	r3, .L58+56
 482 01aa 1A68     		ldr	r2, [r3]
 483 01ac 644B     		ldr	r3, .L58+68
 484 01ae 1B68     		ldr	r3, [r3]
 485 01b0 D31A     		subs	r3, r2, r3
 486 01b2 07F1C001 		add	r1, r7, #192
 487 01b6 0A22     		movs	r2, #10
 488 01b8 1846     		mov	r0, r3
 489 01ba FFF7FEFF 		bl	itoa
 146:main.c        ****                         itoa((v2M2 - v1M2), result2, 10);
 490              		.loc 1 146 0
 491 01be 5E4B     		ldr	r3, .L58+60
 492 01c0 1A68     		ldr	r2, [r3]
 493 01c2 604B     		ldr	r3, .L58+72
 494 01c4 1B68     		ldr	r3, [r3]
 495 01c6 D31A     		subs	r3, r2, r3
 496 01c8 07F1A801 		add	r1, r7, #168
 497 01cc 0A22     		movs	r2, #10
 498 01ce 1846     		mov	r0, r3
 499 01d0 FFF7FEFF 		bl	itoa
 147:main.c        **** 
 148:main.c        ****                         QuadDec_M1_SetCounter(0);
 500              		.loc 1 148 0
 501 01d4 0020     		movs	r0, #0
 502 01d6 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 149:main.c        ****                         QuadDec_M2_SetCounter(0);
 503              		.loc 1 149 0
 504 01da 0020     		movs	r0, #0
 505 01dc FFF7FEFF 		bl	QuadDec_M2_SetCounter
 150:main.c        ****                         motorUpdateCount = 0;
 506              		.loc 1 150 0
 507 01e0 524B     		ldr	r3, .L58+48
 508 01e2 0022     		movs	r2, #0
 509 01e4 1A60     		str	r2, [r3]
 510              	.L10:
 151:main.c        ****                     }
 152:main.c        ****                     if (valuesLeftIntersection[i] > 3000) {
 511              		.loc 1 152 0
 512 01e6 4B4A     		ldr	r2, .L58+24
 513 01e8 D7F8E830 		ldr	r3, [r7, #232]
 514 01ec 52F82330 		ldr	r3, [r2, r3, lsl #2]
 515 01f0 40F6B832 		movw	r2, #3000
 516 01f4 9342     		cmp	r3, r2
 517 01f6 04DD     		ble	.L11
 153:main.c        ****                         highCountLeftIntersection++;
 518              		.loc 1 153 0
 519 01f8 D7F80031 		ldr	r3, [r7, #256]
 520 01fc 0133     		adds	r3, r3, #1
 521 01fe C7F80031 		str	r3, [r7, #256]
 522              	.L11:
 154:main.c        **** 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 13


 155:main.c        ****                     }
 156:main.c        **** 
 157:main.c        ****                     if (valuesLeftLine[i] > 3000) {
 523              		.loc 1 157 0
 524 0202 454A     		ldr	r2, .L58+28
 525 0204 D7F8E830 		ldr	r3, [r7, #232]
 526 0208 52F82330 		ldr	r3, [r2, r3, lsl #2]
 527 020c 40F6B832 		movw	r2, #3000
 528 0210 9342     		cmp	r3, r2
 529 0212 04DD     		ble	.L12
 158:main.c        ****                         highCountLeftLine++;
 530              		.loc 1 158 0
 531 0214 D7F8FC30 		ldr	r3, [r7, #252]
 532 0218 0133     		adds	r3, r3, #1
 533 021a C7F8FC30 		str	r3, [r7, #252]
 534              	.L12:
 159:main.c        **** 
 160:main.c        ****                     }
 161:main.c        **** 
 162:main.c        ****                     if (valuesMiddleLine[i] > 3000) {
 535              		.loc 1 162 0
 536 021e 3F4A     		ldr	r2, .L58+32
 537 0220 D7F8E830 		ldr	r3, [r7, #232]
 538 0224 52F82330 		ldr	r3, [r2, r3, lsl #2]
 539 0228 40F6B832 		movw	r2, #3000
 540 022c 9342     		cmp	r3, r2
 541 022e 04DD     		ble	.L13
 163:main.c        ****                         highCountMiddleLine++;
 542              		.loc 1 163 0
 543 0230 D7F8F830 		ldr	r3, [r7, #248]
 544 0234 0133     		adds	r3, r3, #1
 545 0236 C7F8F830 		str	r3, [r7, #248]
 546              	.L13:
 164:main.c        **** 
 165:main.c        ****                     }
 166:main.c        **** 
 167:main.c        ****                     if (valuesTurnComplete[i] > 3000) {
 547              		.loc 1 167 0
 548 023a 394A     		ldr	r2, .L58+36
 549 023c D7F8E830 		ldr	r3, [r7, #232]
 550 0240 52F82330 		ldr	r3, [r2, r3, lsl #2]
 551 0244 40F6B832 		movw	r2, #3000
 552 0248 9342     		cmp	r3, r2
 553 024a 04DD     		ble	.L14
 168:main.c        ****                         highCountTurnComplete++;
 554              		.loc 1 168 0
 555 024c D7F8F430 		ldr	r3, [r7, #244]
 556 0250 0133     		adds	r3, r3, #1
 557 0252 C7F8F430 		str	r3, [r7, #244]
 558              	.L14:
 169:main.c        **** 
 170:main.c        ****                     }
 171:main.c        **** 
 172:main.c        ****                     if (valuesRightLine[i] > 3000) {
 559              		.loc 1 172 0
 560 0256 334A     		ldr	r2, .L58+40
 561 0258 D7F8E830 		ldr	r3, [r7, #232]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 14


 562 025c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 563 0260 40F6B832 		movw	r2, #3000
 564 0264 9342     		cmp	r3, r2
 565 0266 04DD     		ble	.L15
 173:main.c        ****                         highCountRightLine++;
 566              		.loc 1 173 0
 567 0268 D7F8F030 		ldr	r3, [r7, #240]
 568 026c 0133     		adds	r3, r3, #1
 569 026e C7F8F030 		str	r3, [r7, #240]
 570              	.L15:
 174:main.c        **** 
 175:main.c        ****                     }
 176:main.c        **** 
 177:main.c        ****                     if (valuesRightIntersection[i] > 3000) {
 571              		.loc 1 177 0
 572 0272 2D4A     		ldr	r2, .L58+44
 573 0274 D7F8E830 		ldr	r3, [r7, #232]
 574 0278 52F82330 		ldr	r3, [r2, r3, lsl #2]
 575 027c 40F6B832 		movw	r2, #3000
 576 0280 9342     		cmp	r3, r2
 577 0282 04DD     		ble	.L16
 178:main.c        ****                         highCountRightIntersection++;
 578              		.loc 1 178 0
 579 0284 D7F8EC30 		ldr	r3, [r7, #236]
 580 0288 0133     		adds	r3, r3, #1
 581 028a C7F8EC30 		str	r3, [r7, #236]
 582              	.L16:
 583              	.LBE5:
 137:main.c        ****                     step = 0;
 584              		.loc 1 137 0 discriminator 2
 585 028e D7F8E830 		ldr	r3, [r7, #232]
 586 0292 0133     		adds	r3, r3, #1
 587 0294 C7F8E830 		str	r3, [r7, #232]
 588              	.L9:
 137:main.c        ****                     step = 0;
 589              		.loc 1 137 0 is_stmt 0 discriminator 1
 590 0298 D7F8E830 		ldr	r3, [r7, #232]
 591 029c B3F57A7F 		cmp	r3, #1000
 592 02a0 FFF665AF 		blt	.L17
 593              	.LBE4:
 179:main.c        **** 
 180:main.c        ****                     }
 181:main.c        **** 
 182:main.c        ****                 }
 183:main.c        **** 
 184:main.c        ****                 if (started == 0) {
 594              		.loc 1 184 0 is_stmt 1
 595 02a4 284B     		ldr	r3, .L58+76
 596 02a6 1B68     		ldr	r3, [r3]
 597 02a8 002B     		cmp	r3, #0
 598 02aa 40F0AB80 		bne	.L18
 599              	.LBB6:
 185:main.c        ****                     //LED_PIN_1_Write(!LED_PIN_1_Read());
 186:main.c        ****                     // Look for start using a coarse grain approach, gradually get more fine
 187:main.c        ****                     /*if (instruction[instCounter + 23] == 0 && instruction[instCounter + 24] == 0 
 188:main.c        ****                       instCounter = instCounter + 25;
 189:main.c        ****                     } else if (instruction[instCounter + 8] == 0 && instruction[instCounter + 9] ==
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 15


 190:main.c        ****                       instCounter = instCounter + 10;
 191:main.c        ****                     } else if (instruction[instCounter + 3] == 0 && instruction[instCounter + 4] ==
 192:main.c        ****                       instCounter = instCounter + 5;
 193:main.c        ****                     } else {
 194:main.c        ****                       if (instruction[instCounter + 1] == 0) {
 195:main.c        ****                         instCounter++;
 196:main.c        ****                       } else if (instruction[instCounter + 2] == 0) {
 197:main.c        ****                         instCounter = instCounter + 2;
 198:main.c        ****                       } else if (instruction[instCounter + 3] == 0) {
 199:main.c        ****                         instCounter = instCounter + 3;
 200:main.c        ****                       } else if (instruction[instCounter + 4] == 0) {
 201:main.c        ****                         instCounter = instCounter + 4;
 202:main.c        ****                       }
 203:main.c        ****                     }*/
 204:main.c        ****                     int i, firstNonZeroIndex = -1;
 600              		.loc 1 204 0
 601 02ae 4FF0FF33 		mov	r3, #-1
 602 02b2 C7F8E030 		str	r3, [r7, #224]
 205:main.c        ****                     for (i = 0; i < 500; i++) {
 603              		.loc 1 205 0
 604 02b6 0023     		movs	r3, #0
 605 02b8 C7F8E430 		str	r3, [r7, #228]
 606 02bc 10E0     		b	.L19
 607              	.L22:
 206:main.c        ****                         if (instruction[i] != 0) {
 608              		.loc 1 206 0
 609 02be 114A     		ldr	r2, .L58+8
 610 02c0 D7F8E430 		ldr	r3, [r7, #228]
 611 02c4 1344     		add	r3, r3, r2
 612 02c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 613 02c8 002B     		cmp	r3, #0
 614 02ca 04D0     		beq	.L20
 207:main.c        ****                             firstNonZeroIndex = i;
 615              		.loc 1 207 0
 616 02cc D7F8E430 		ldr	r3, [r7, #228]
 617 02d0 C7F8E030 		str	r3, [r7, #224]
 208:main.c        ****                             break;
 618              		.loc 1 208 0
 619 02d4 09E0     		b	.L21
 620              	.L20:
 205:main.c        ****                         if (instruction[i] != 0) {
 621              		.loc 1 205 0 discriminator 2
 622 02d6 D7F8E430 		ldr	r3, [r7, #228]
 623 02da 0133     		adds	r3, r3, #1
 624 02dc C7F8E430 		str	r3, [r7, #228]
 625              	.L19:
 205:main.c        ****                         if (instruction[i] != 0) {
 626              		.loc 1 205 0 is_stmt 0 discriminator 1
 627 02e0 D7F8E430 		ldr	r3, [r7, #228]
 628 02e4 B3F5FA7F 		cmp	r3, #500
 629 02e8 E9DB     		blt	.L22
 630              	.L21:
 209:main.c        ****                         }
 210:main.c        ****                     }
 211:main.c        **** 
 212:main.c        ****                     if (firstNonZeroIndex != -1) {
 631              		.loc 1 212 0 is_stmt 1
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 16


 632 02ea D7F8E030 		ldr	r3, [r7, #224]
 633 02ee B3F1FF3F 		cmp	r3, #-1
 634 02f2 6FD0     		beq	.L23
 213:main.c        ****                         // Shift the array to start with the first non-zero element
 214:main.c        ****                         for (i = 0; i < 500 - firstNonZeroIndex; i++) {
 635              		.loc 1 214 0
 636 02f4 0023     		movs	r3, #0
 637 02f6 C7F8E430 		str	r3, [r7, #228]
 638 02fa 46E0     		b	.L24
 639              	.L59:
 640              		.align	2
 641              	.L58:
 642 02fc 00000000 		.word	eoc
 643 0300 00000000 		.word	squares
 644 0304 00000000 		.word	instruction
 645 0308 00000000 		.word	distance
 646 030c 00000000 		.word	flag
 647 0310 00000000 		.word	count
 648 0314 00000000 		.word	valuesLeftIntersection
 649 0318 00000000 		.word	valuesLeftLine
 650 031c 00000000 		.word	valuesMiddleLine
 651 0320 00000000 		.word	valuesTurnComplete
 652 0324 00000000 		.word	valuesRightLine
 653 0328 00000000 		.word	valuesRightIntersection
 654 032c 00000000 		.word	motorUpdateCount
 655 0330 00000000 		.word	step
 656 0334 00000000 		.word	v2M1
 657 0338 00000000 		.word	v2M2
 658 033c 00000000 		.word	pulsesTravelled
 659 0340 00000000 		.word	v1M1
 660 0344 00000000 		.word	v1M2
 661 0348 00000000 		.word	started
 662              	.L25:
 215:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 663              		.loc 1 215 0 discriminator 3
 664 034c D7F8E420 		ldr	r2, [r7, #228]
 665 0350 D7F8E030 		ldr	r3, [r7, #224]
 666 0354 1344     		add	r3, r3, r2
 667 0356 9B4A     		ldr	r2, .L60
 668 0358 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 669 035a 9A4A     		ldr	r2, .L60
 670 035c D7F8E430 		ldr	r3, [r7, #228]
 671 0360 1344     		add	r3, r3, r2
 672 0362 0A46     		mov	r2, r1
 673 0364 1A70     		strb	r2, [r3]
 216:main.c        ****                             distance[i] = distance[i + firstNonZeroIndex];
 674              		.loc 1 216 0 discriminator 3
 675 0366 D7F8E420 		ldr	r2, [r7, #228]
 676 036a D7F8E030 		ldr	r3, [r7, #224]
 677 036e 1344     		add	r3, r3, r2
 678 0370 954A     		ldr	r2, .L60+4
 679 0372 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 680 0374 944A     		ldr	r2, .L60+4
 681 0376 D7F8E430 		ldr	r3, [r7, #228]
 682 037a 1344     		add	r3, r3, r2
 683 037c 0A46     		mov	r2, r1
 684 037e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 17


 214:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 685              		.loc 1 214 0 discriminator 3
 686 0380 D7F8E430 		ldr	r3, [r7, #228]
 687 0384 0133     		adds	r3, r3, #1
 688 0386 C7F8E430 		str	r3, [r7, #228]
 689              	.L24:
 214:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 690              		.loc 1 214 0 is_stmt 0 discriminator 1
 691 038a D7F8E030 		ldr	r3, [r7, #224]
 692 038e C3F5FA72 		rsb	r2, r3, #500
 693 0392 D7F8E430 		ldr	r3, [r7, #228]
 694 0396 9A42     		cmp	r2, r3
 695 0398 D8DC     		bgt	.L25
 217:main.c        ****                         }
 218:main.c        **** 
 219:main.c        ****                         // Zero out the remaining elements
 220:main.c        ****                         for (i = 500 - firstNonZeroIndex; i < 500; i++) {
 696              		.loc 1 220 0 is_stmt 1
 697 039a D7F8E030 		ldr	r3, [r7, #224]
 698 039e C3F5FA73 		rsb	r3, r3, #500
 699 03a2 C7F8E430 		str	r3, [r7, #228]
 700 03a6 10E0     		b	.L26
 701              	.L27:
 221:main.c        ****                             instruction[i] = 0;
 702              		.loc 1 221 0 discriminator 3
 703 03a8 864A     		ldr	r2, .L60
 704 03aa D7F8E430 		ldr	r3, [r7, #228]
 705 03ae 1344     		add	r3, r3, r2
 706 03b0 0022     		movs	r2, #0
 707 03b2 1A70     		strb	r2, [r3]
 222:main.c        ****                             distance[i] = 0;
 708              		.loc 1 222 0 discriminator 3
 709 03b4 844A     		ldr	r2, .L60+4
 710 03b6 D7F8E430 		ldr	r3, [r7, #228]
 711 03ba 1344     		add	r3, r3, r2
 712 03bc 0022     		movs	r2, #0
 713 03be 1A70     		strb	r2, [r3]
 220:main.c        ****                             instruction[i] = 0;
 714              		.loc 1 220 0 discriminator 3
 715 03c0 D7F8E430 		ldr	r3, [r7, #228]
 716 03c4 0133     		adds	r3, r3, #1
 717 03c6 C7F8E430 		str	r3, [r7, #228]
 718              	.L26:
 220:main.c        ****                             instruction[i] = 0;
 719              		.loc 1 220 0 is_stmt 0 discriminator 1
 720 03ca D7F8E430 		ldr	r3, [r7, #228]
 721 03ce B3F5FA7F 		cmp	r3, #500
 722 03d2 E9DB     		blt	.L27
 723              	.L23:
 724              	.LBB7:
 223:main.c        ****                         }
 224:main.c        **** 
 225:main.c        ****                     } else {
 226:main.c        ****                         // The array contains all zeros
 227:main.c        **** 
 228:main.c        ****                     }
 229:main.c        ****                     for (int i = 0; i < 500; i++) {
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 18


 725              		.loc 1 229 0 is_stmt 1
 726 03d4 0023     		movs	r3, #0
 727 03d6 C7F8DC30 		str	r3, [r7, #220]
 728 03da 04E0     		b	.L28
 729              	.L29:
 730              		.loc 1 229 0 is_stmt 0 discriminator 3
 731 03dc D7F8DC30 		ldr	r3, [r7, #220]
 732 03e0 0133     		adds	r3, r3, #1
 733 03e2 C7F8DC30 		str	r3, [r7, #220]
 734              	.L28:
 735              		.loc 1 229 0 discriminator 1
 736 03e6 D7F8DC30 		ldr	r3, [r7, #220]
 737 03ea B3F5FA7F 		cmp	r3, #500
 738 03ee F5DB     		blt	.L29
 739              	.LBE7:
 230:main.c        **** 
 231:main.c        ****                         char instStr[24];
 232:main.c        **** 
 233:main.c        ****                         //snprintf(instStr, sizeof(instStr), "%u - %u \r\n", (unsigned char) instru
 234:main.c        **** 
 235:main.c        ****                         //usbPutString(instStr);
 236:main.c        ****                     }
 237:main.c        ****                     started = 1;
 740              		.loc 1 237 0 is_stmt 1
 741 03f0 764B     		ldr	r3, .L60+8
 742 03f2 0122     		movs	r2, #1
 743 03f4 1A60     		str	r2, [r3]
 238:main.c        ****                     turnComplete = 1; //let the robot travel forward first
 744              		.loc 1 238 0
 745 03f6 764B     		ldr	r3, .L60+12
 746 03f8 0122     		movs	r2, #1
 747 03fa 1A60     		str	r2, [r3]
 239:main.c        ****                     checkDistance = 0; //robot checks/stops distance when this is on
 748              		.loc 1 239 0
 749 03fc 754B     		ldr	r3, .L60+16
 750 03fe 0022     		movs	r2, #0
 751 0400 1A60     		str	r2, [r3]
 752              	.LBE6:
 753 0402 BEE1     		b	.L8
 754              	.L18:
 755              	.LBB8:
 240:main.c        ****                 } else {
 241:main.c        **** 
 242:main.c        ****                     started = 1;
 756              		.loc 1 242 0
 757 0404 714B     		ldr	r3, .L60+8
 758 0406 0122     		movs	r2, #1
 759 0408 1A60     		str	r2, [r3]
 243:main.c        ****                     
 244:main.c        **** 
 245:main.c        ****                     char currentInst = instruction[instCounter];
 760              		.loc 1 245 0
 761 040a 734B     		ldr	r3, .L60+20
 762 040c 1B68     		ldr	r3, [r3]
 763 040e 6D4A     		ldr	r2, .L60
 764 0410 D35C     		ldrb	r3, [r2, r3]
 765 0412 87F8DB30 		strb	r3, [r7, #219]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 19


 246:main.c        ****                     if (currentInst == 0) {
 766              		.loc 1 246 0
 767 0416 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 768 041a 002B     		cmp	r3, #0
 769 041c 06D1     		bne	.L30
 247:main.c        ****                         LED_PIN_1_Write(0);
 770              		.loc 1 247 0
 771 041e 0020     		movs	r0, #0
 772 0420 FFF7FEFF 		bl	LED_PIN_1_Write
 248:main.c        ****                         LED_PIN_6_Write(0);
 773              		.loc 1 248 0
 774 0424 0020     		movs	r0, #0
 775 0426 FFF7FEFF 		bl	LED_PIN_6_Write
 776 042a 95E0     		b	.L31
 777              	.L30:
 249:main.c        ****                         // Stop
 250:main.c        **** 
 251:main.c        ****                     } else if (currentInst == 1 && turnComplete == 0) {
 778              		.loc 1 251 0
 779 042c 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 780 0430 012B     		cmp	r3, #1
 781 0432 1CD1     		bne	.L32
 782              		.loc 1 251 0 is_stmt 0 discriminator 1
 783 0434 664B     		ldr	r3, .L60+12
 784 0436 1B68     		ldr	r3, [r3]
 785 0438 002B     		cmp	r3, #0
 786 043a 18D1     		bne	.L32
 252:main.c        ****                         LED_PIN_1_Write(1);
 787              		.loc 1 252 0 is_stmt 1
 788 043c 0120     		movs	r0, #1
 789 043e FFF7FEFF 		bl	LED_PIN_1_Write
 253:main.c        ****                         LED_PIN_6_Write(0);
 790              		.loc 1 253 0
 791 0442 0020     		movs	r0, #0
 792 0444 FFF7FEFF 		bl	LED_PIN_6_Write
 254:main.c        ****                         // Complete a left turn, then follow line
 255:main.c        ****                         if (turnComplete == 0) {
 793              		.loc 1 255 0
 794 0448 614B     		ldr	r3, .L60+12
 795 044a 1B68     		ldr	r3, [r3]
 796 044c 002B     		cmp	r3, #0
 797 044e 40F08380 		bne	.L31
 256:main.c        ****                             if (R_INT_BLACK) { //code that senses when the turn is done, can be opt
 798              		.loc 1 256 0
 799 0452 D7F8EC30 		ldr	r3, [r7, #236]
 800 0456 952B     		cmp	r3, #149
 801 0458 06DC     		bgt	.L34
 257:main.c        ****                                 turnComplete = 1;
 802              		.loc 1 257 0
 803 045a 5D4B     		ldr	r3, .L60+12
 804 045c 0122     		movs	r2, #1
 805 045e 1A60     		str	r2, [r3]
 258:main.c        ****                                 pulsesTravelled = 0;
 806              		.loc 1 258 0
 807 0460 5E4B     		ldr	r3, .L60+24
 808 0462 0022     		movs	r2, #0
 809 0464 1A60     		str	r2, [r3]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 20


 255:main.c        ****                             if (R_INT_BLACK) { //code that senses when the turn is done, can be opt
 810              		.loc 1 255 0
 811 0466 77E0     		b	.L31
 812              	.L34:
 259:main.c        ****                             } else {
 260:main.c        ****                                 turnLeft();
 813              		.loc 1 260 0
 814 0468 FFF7FEFF 		bl	turnLeft
 255:main.c        ****                             if (R_INT_BLACK) { //code that senses when the turn is done, can be opt
 815              		.loc 1 255 0
 816 046c 74E0     		b	.L31
 817              	.L32:
 261:main.c        ****                             }
 262:main.c        ****                         }
 263:main.c        **** 
 264:main.c        ****                     } else if (currentInst == 2) {
 818              		.loc 1 264 0
 819 046e 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 820 0472 022B     		cmp	r3, #2
 821 0474 06D1     		bne	.L35
 265:main.c        ****                         LED_PIN_1_Write(1);
 822              		.loc 1 265 0
 823 0476 0120     		movs	r0, #1
 824 0478 FFF7FEFF 		bl	LED_PIN_1_Write
 266:main.c        ****                         LED_PIN_6_Write(1);
 825              		.loc 1 266 0
 826 047c 0120     		movs	r0, #1
 827 047e FFF7FEFF 		bl	LED_PIN_6_Write
 828 0482 69E0     		b	.L31
 829              	.L35:
 267:main.c        ****                         // Drive straight
 268:main.c        ****                     } else if (currentInst == 3 && turnComplete == 0) { 
 830              		.loc 1 268 0
 831 0484 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 832 0488 032B     		cmp	r3, #3
 833 048a 1BD1     		bne	.L36
 834              		.loc 1 268 0 is_stmt 0 discriminator 1
 835 048c 504B     		ldr	r3, .L60+12
 836 048e 1B68     		ldr	r3, [r3]
 837 0490 002B     		cmp	r3, #0
 838 0492 17D1     		bne	.L36
 269:main.c        ****                         LED_PIN_1_Write(0);
 839              		.loc 1 269 0 is_stmt 1
 840 0494 0020     		movs	r0, #0
 841 0496 FFF7FEFF 		bl	LED_PIN_1_Write
 270:main.c        ****                         LED_PIN_6_Write(1);
 842              		.loc 1 270 0
 843 049a 0120     		movs	r0, #1
 844 049c FFF7FEFF 		bl	LED_PIN_6_Write
 271:main.c        ****                         // Complete a right turn then follow line
 272:main.c        ****                         if (turnComplete == 0) {
 845              		.loc 1 272 0
 846 04a0 4B4B     		ldr	r3, .L60+12
 847 04a2 1B68     		ldr	r3, [r3]
 848 04a4 002B     		cmp	r3, #0
 849 04a6 57D1     		bne	.L31
 273:main.c        ****                             if (L_INT_BLACK) { //code that senses when the turn is done, can be opt
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 21


 850              		.loc 1 273 0
 851 04a8 D7F80031 		ldr	r3, [r7, #256]
 852 04ac 952B     		cmp	r3, #149
 853 04ae 06DC     		bgt	.L38
 274:main.c        ****                                 turnComplete = 1;
 854              		.loc 1 274 0
 855 04b0 474B     		ldr	r3, .L60+12
 856 04b2 0122     		movs	r2, #1
 857 04b4 1A60     		str	r2, [r3]
 275:main.c        ****                                 pulsesTravelled = 0;
 858              		.loc 1 275 0
 859 04b6 494B     		ldr	r3, .L60+24
 860 04b8 0022     		movs	r2, #0
 861 04ba 1A60     		str	r2, [r3]
 272:main.c        ****                             if (L_INT_BLACK) { //code that senses when the turn is done, can be opt
 862              		.loc 1 272 0
 863 04bc 4CE0     		b	.L31
 864              	.L38:
 276:main.c        ****                             } else {
 277:main.c        ****                                 turnRight();
 865              		.loc 1 277 0
 866 04be FFF7FEFF 		bl	turnRight
 272:main.c        ****                             if (L_INT_BLACK) { //code that senses when the turn is done, can be opt
 867              		.loc 1 272 0
 868 04c2 49E0     		b	.L31
 869              	.L36:
 278:main.c        ****                             }
 279:main.c        ****                         }
 280:main.c        ****                         
 281:main.c        ****                     } else if (currentInst == 4) {
 870              		.loc 1 281 0
 871 04c4 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 872 04c8 042B     		cmp	r3, #4
 873 04ca 06D1     		bne	.L39
 282:main.c        ****                         LED_PIN_1_Write(0);
 874              		.loc 1 282 0
 875 04cc 0020     		movs	r0, #0
 876 04ce FFF7FEFF 		bl	LED_PIN_1_Write
 283:main.c        ****                         LED_PIN_6_Write(0);
 877              		.loc 1 283 0
 878 04d2 0020     		movs	r0, #0
 879 04d4 FFF7FEFF 		bl	LED_PIN_6_Write
 880 04d8 3EE0     		b	.L31
 881              	.L39:
 284:main.c        ****                         // Do a 180, then follow line
 285:main.c        ****                     } else if (currentInst == 5) {
 882              		.loc 1 285 0
 883 04da 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 884 04de 052B     		cmp	r3, #5
 885 04e0 1AD1     		bne	.L40
 286:main.c        ****                         LED_PIN_1_Write(1);
 886              		.loc 1 286 0
 887 04e2 0120     		movs	r0, #1
 888 04e4 FFF7FEFF 		bl	LED_PIN_1_Write
 287:main.c        ****                         LED_PIN_6_Write(0);
 889              		.loc 1 287 0
 890 04e8 0020     		movs	r0, #0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 22


 891 04ea FFF7FEFF 		bl	LED_PIN_6_Write
 288:main.c        ****                         // Complete a left turn, then follow line until end of encoder position
 289:main.c        ****                         if (turnComplete == 0) {
 892              		.loc 1 289 0
 893 04ee 384B     		ldr	r3, .L60+12
 894 04f0 1B68     		ldr	r3, [r3]
 895 04f2 002B     		cmp	r3, #0
 896 04f4 30D1     		bne	.L31
 290:main.c        ****                             if (R_INT_BLACK) { //code that senses when the turn is done, can be opt
 897              		.loc 1 290 0
 898 04f6 D7F8EC30 		ldr	r3, [r7, #236]
 899 04fa 952B     		cmp	r3, #149
 900 04fc 09DC     		bgt	.L42
 291:main.c        ****                                 turnComplete = 1;
 901              		.loc 1 291 0
 902 04fe 344B     		ldr	r3, .L60+12
 903 0500 0122     		movs	r2, #1
 904 0502 1A60     		str	r2, [r3]
 292:main.c        ****                                 pulsesTravelled = 0;
 905              		.loc 1 292 0
 906 0504 354B     		ldr	r3, .L60+24
 907 0506 0022     		movs	r2, #0
 908 0508 1A60     		str	r2, [r3]
 293:main.c        ****                                 checkDistance = 1;
 909              		.loc 1 293 0
 910 050a 324B     		ldr	r3, .L60+16
 911 050c 0122     		movs	r2, #1
 912 050e 1A60     		str	r2, [r3]
 913 0510 22E0     		b	.L31
 914              	.L42:
 294:main.c        ****                                 
 295:main.c        ****                             } else {
 296:main.c        ****                                 turnLeft();
 915              		.loc 1 296 0
 916 0512 FFF7FEFF 		bl	turnLeft
 917 0516 1FE0     		b	.L31
 918              	.L40:
 297:main.c        ****                             }
 298:main.c        ****                         }
 299:main.c        ****                     } else if (currentInst == 6) {
 919              		.loc 1 299 0
 920 0518 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 921 051c 062B     		cmp	r3, #6
 922 051e 06D1     		bne	.L43
 300:main.c        ****                         LED_PIN_1_Write(1);
 923              		.loc 1 300 0
 924 0520 0120     		movs	r0, #1
 925 0522 FFF7FEFF 		bl	LED_PIN_1_Write
 301:main.c        ****                         LED_PIN_6_Write(1);
 926              		.loc 1 301 0
 927 0526 0120     		movs	r0, #1
 928 0528 FFF7FEFF 		bl	LED_PIN_6_Write
 929 052c 14E0     		b	.L31
 930              	.L43:
 302:main.c        ****                         // Follow line until end of encoder position
 303:main.c        ****                     } else if (currentInst == 7) {
 931              		.loc 1 303 0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 23


 932 052e 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 933 0532 072B     		cmp	r3, #7
 934 0534 06D1     		bne	.L44
 304:main.c        ****                         LED_PIN_1_Write(0);
 935              		.loc 1 304 0
 936 0536 0020     		movs	r0, #0
 937 0538 FFF7FEFF 		bl	LED_PIN_1_Write
 305:main.c        ****                         LED_PIN_6_Write(1);
 938              		.loc 1 305 0
 939 053c 0120     		movs	r0, #1
 940 053e FFF7FEFF 		bl	LED_PIN_6_Write
 941 0542 09E0     		b	.L31
 942              	.L44:
 306:main.c        ****                         // Complete a right turn, then follow line until end of encoder position
 307:main.c        ****                     } else if (currentInst == 8) {
 943              		.loc 1 307 0
 944 0544 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 945 0548 082B     		cmp	r3, #8
 946 054a 05D1     		bne	.L31
 308:main.c        ****                         LED_PIN_1_Write(0);
 947              		.loc 1 308 0
 948 054c 0020     		movs	r0, #0
 949 054e FFF7FEFF 		bl	LED_PIN_1_Write
 309:main.c        ****                         LED_PIN_6_Write(0);
 950              		.loc 1 309 0
 951 0552 0020     		movs	r0, #0
 952 0554 FFF7FEFF 		bl	LED_PIN_6_Write
 953              	.L31:
 310:main.c        ****                         // Complete a 180 turn, then follow line until end of encoder position
 311:main.c        ****                     }
 312:main.c        **** 
 313:main.c        ****                     //only allow code to straighten if turn is complete
 314:main.c        ****                     if (turnComplete == 1) {
 954              		.loc 1 314 0
 955 0558 1D4B     		ldr	r3, .L60+12
 956 055a 1B68     		ldr	r3, [r3]
 957 055c 012B     		cmp	r3, #1
 958 055e 4AD1     		bne	.L45
 315:main.c        ****                     if ((M_LINE_BLACK && L_LINE_BLACK)) { // if robot slightly too far right
 959              		.loc 1 315 0
 960 0560 D7F8F830 		ldr	r3, [r7, #248]
 961 0564 952B     		cmp	r3, #149
 962 0566 09DC     		bgt	.L46
 963              		.loc 1 315 0 is_stmt 0 discriminator 1
 964 0568 D7F8FC30 		ldr	r3, [r7, #252]
 965 056c 952B     		cmp	r3, #149
 966 056e 05DC     		bgt	.L46
 316:main.c        ****                         adjustLeft();
 967              		.loc 1 316 0 is_stmt 1
 968 0570 FFF7FEFF 		bl	adjustLeft
 317:main.c        ****                         lastAdjustDirection = 0;
 969              		.loc 1 317 0
 970 0574 1A4B     		ldr	r3, .L60+28
 971 0576 0022     		movs	r2, #0
 972 0578 1A60     		str	r2, [r3]
 973 057a 3CE0     		b	.L45
 974              	.L46:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 24


 318:main.c        **** 
 319:main.c        ****                     } else if (M_LINE_BLACK && R_LINE_BLACK) { //  if robot slightly too far left
 975              		.loc 1 319 0
 976 057c D7F8F830 		ldr	r3, [r7, #248]
 977 0580 952B     		cmp	r3, #149
 978 0582 09DC     		bgt	.L47
 979              		.loc 1 319 0 is_stmt 0 discriminator 1
 980 0584 D7F8F030 		ldr	r3, [r7, #240]
 981 0588 952B     		cmp	r3, #149
 982 058a 05DC     		bgt	.L47
 320:main.c        ****                         adjustRight();
 983              		.loc 1 320 0 is_stmt 1
 984 058c FFF7FEFF 		bl	adjustRight
 321:main.c        ****                         lastAdjustDirection = 2;
 985              		.loc 1 321 0
 986 0590 134B     		ldr	r3, .L60+28
 987 0592 0222     		movs	r2, #2
 988 0594 1A60     		str	r2, [r3]
 989 0596 2EE0     		b	.L45
 990              	.L47:
 322:main.c        **** 
 323:main.c        ****                     } else if (M_LINE_BLACK) { // if robot in the center keep moving straight
 991              		.loc 1 323 0
 992 0598 D7F8F830 		ldr	r3, [r7, #248]
 993 059c 952B     		cmp	r3, #149
 994 059e 07DC     		bgt	.L48
 324:main.c        ****                         lastAdjustDirection = 1;
 995              		.loc 1 324 0
 996 05a0 0F4B     		ldr	r3, .L60+28
 997 05a2 0122     		movs	r2, #1
 998 05a4 1A60     		str	r2, [r3]
 325:main.c        ****                         driveForward(0, 0);
 999              		.loc 1 325 0
 1000 05a6 0021     		movs	r1, #0
 1001 05a8 0020     		movs	r0, #0
 1002 05aa FFF7FEFF 		bl	driveForward
 1003 05ae 22E0     		b	.L45
 1004              	.L48:
 326:main.c        **** 
 327:main.c        ****                     } else if (R_LINE_BLACK) { // if robot too far left
 1005              		.loc 1 327 0
 1006 05b0 D7F8F030 		ldr	r3, [r7, #240]
 1007 05b4 952B     		cmp	r3, #149
 1008 05b6 15DC     		bgt	.L49
 328:main.c        ****                         adjustRight();
 1009              		.loc 1 328 0
 1010 05b8 FFF7FEFF 		bl	adjustRight
 329:main.c        ****                         lastAdjustDirection = 2;
 1011              		.loc 1 329 0
 1012 05bc 084B     		ldr	r3, .L60+28
 1013 05be 0222     		movs	r2, #2
 1014 05c0 1A60     		str	r2, [r3]
 1015 05c2 18E0     		b	.L45
 1016              	.L61:
 1017              		.align	2
 1018              	.L60:
 1019 05c4 00000000 		.word	instruction
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 25


 1020 05c8 00000000 		.word	distance
 1021 05cc 00000000 		.word	started
 1022 05d0 00000000 		.word	turnComplete
 1023 05d4 00000000 		.word	checkDistance
 1024 05d8 00000000 		.word	instCounter
 1025 05dc 00000000 		.word	pulsesTravelled
 1026 05e0 00000000 		.word	lastAdjustDirection
 1027              	.L49:
 330:main.c        **** 
 331:main.c        ****                     } else if (L_LINE_BLACK) { // if robot too far right
 1028              		.loc 1 331 0
 1029 05e4 D7F8FC30 		ldr	r3, [r7, #252]
 1030 05e8 952B     		cmp	r3, #149
 1031 05ea 04DC     		bgt	.L45
 332:main.c        ****                         adjustLeft();
 1032              		.loc 1 332 0
 1033 05ec FFF7FEFF 		bl	adjustLeft
 333:main.c        ****                         lastAdjustDirection = 0;
 1034              		.loc 1 333 0
 1035 05f0 6B4B     		ldr	r3, .L62+16
 1036 05f2 0022     		movs	r2, #0
 1037 05f4 1A60     		str	r2, [r3]
 1038              	.L45:
 334:main.c        ****                     }
 335:main.c        ****                     else {
 336:main.c        ****                     }
 337:main.c        ****                     }
 338:main.c        **** 
 339:main.c        ****                     /*} else { // completely lost find way
 340:main.c        ****                         if (lastAdjustDirection == 0) {
 341:main.c        ****                             turnLeft();
 342:main.c        ****                         } else if (lastAdjustDirection == 1) { // last movement was forward (middle
 343:main.c        ****                             //hardAdjustLeft();
 344:main.c        ****                             turnRight();
 345:main.c        ****                         } else {
 346:main.c        ****                             turnRight();
 347:main.c        ****                         }
 348:main.c        **** 
 349:main.c        ****                     }
 350:main.c        ****                     */
 351:main.c        **** 
 352:main.c        ****                     // UPDATE INSTRUCTION LOGIC GOES HERE this needs dramatic improving
 353:main.c        ****                     LED_PIN_2_Write(0);
 1039              		.loc 1 353 0
 1040 05f6 0020     		movs	r0, #0
 1041 05f8 FFF7FEFF 		bl	LED_PIN_2_Write
 354:main.c        ****                     LED_PIN_3_Write(0);
 1042              		.loc 1 354 0
 1043 05fc 0020     		movs	r0, #0
 1044 05fe FFF7FEFF 		bl	LED_PIN_3_Write
 355:main.c        ****                     LED_PIN_4_Write(0);
 1045              		.loc 1 355 0
 1046 0602 0020     		movs	r0, #0
 1047 0604 FFF7FEFF 		bl	LED_PIN_4_Write
 356:main.c        ****                     char dist[24];
 357:main.c        ****                     char pulses[24];
 358:main.c        ****                     char first[24];
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 26


 359:main.c        ****                     char second[24];
 360:main.c        ****                     itoa(distance[instCounter] * 9.13333, first, 10);
 1048              		.loc 1 360 0
 1049 0608 664B     		ldr	r3, .L62+20
 1050 060a 1B68     		ldr	r3, [r3]
 1051 060c 664A     		ldr	r2, .L62+24
 1052 060e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1053 0610 1846     		mov	r0, r3
 1054 0612 FFF7FEFF 		bl	__aeabi_i2d
 1055 0616 5EA3     		adr	r3, .L62
 1056 0618 D3E90023 		ldrd	r2, [r3]
 1057 061c FFF7FEFF 		bl	__aeabi_dmul
 1058 0620 0346     		mov	r3, r0
 1059 0622 0C46     		mov	r4, r1
 1060 0624 1846     		mov	r0, r3
 1061 0626 2146     		mov	r1, r4
 1062 0628 FFF7FEFF 		bl	__aeabi_d2iz
 1063 062c 07F14803 		add	r3, r7, #72
 1064 0630 0A22     		movs	r2, #10
 1065 0632 1946     		mov	r1, r3
 1066 0634 FFF7FEFF 		bl	itoa
 361:main.c        ****                     itoa((pulsesTravelled), pulses, 10);
 1067              		.loc 1 361 0
 1068 0638 5C4B     		ldr	r3, .L62+28
 1069 063a 1B68     		ldr	r3, [r3]
 1070 063c 07F16001 		add	r1, r7, #96
 1071 0640 0A22     		movs	r2, #10
 1072 0642 1846     		mov	r0, r3
 1073 0644 FFF7FEFF 		bl	itoa
 362:main.c        ****                     itoa(pulsesTravelled * 20.42 / 57 / 2, second, 10);
 1074              		.loc 1 362 0
 1075 0648 584B     		ldr	r3, .L62+28
 1076 064a 1B68     		ldr	r3, [r3]
 1077 064c 1846     		mov	r0, r3
 1078 064e FFF7FEFF 		bl	__aeabi_i2d
 1079 0652 51A3     		adr	r3, .L62+8
 1080 0654 D3E90023 		ldrd	r2, [r3]
 1081 0658 FFF7FEFF 		bl	__aeabi_dmul
 1082 065c 0346     		mov	r3, r0
 1083 065e 0C46     		mov	r4, r1
 1084 0660 1846     		mov	r0, r3
 1085 0662 2146     		mov	r1, r4
 1086 0664 4FF00002 		mov	r2, #0
 1087 0668 514B     		ldr	r3, .L62+32
 1088 066a FFF7FEFF 		bl	__aeabi_ddiv
 1089 066e 0346     		mov	r3, r0
 1090 0670 0C46     		mov	r4, r1
 1091 0672 1846     		mov	r0, r3
 1092 0674 2146     		mov	r1, r4
 1093 0676 4FF00002 		mov	r2, #0
 1094 067a 4FF08043 		mov	r3, #1073741824
 1095 067e FFF7FEFF 		bl	__aeabi_ddiv
 1096 0682 0346     		mov	r3, r0
 1097 0684 0C46     		mov	r4, r1
 1098 0686 1846     		mov	r0, r3
 1099 0688 2146     		mov	r1, r4
 1100 068a FFF7FEFF 		bl	__aeabi_d2iz
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 27


 1101 068e 07F13003 		add	r3, r7, #48
 1102 0692 0A22     		movs	r2, #10
 1103 0694 1946     		mov	r1, r3
 1104 0696 FFF7FEFF 		bl	itoa
 363:main.c        ****                     itoa(distance[instCounter], dist, 10);
 1105              		.loc 1 363 0
 1106 069a 424B     		ldr	r3, .L62+20
 1107 069c 1B68     		ldr	r3, [r3]
 1108 069e 424A     		ldr	r2, .L62+24
 1109 06a0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1110 06a2 1846     		mov	r0, r3
 1111 06a4 07F17803 		add	r3, r7, #120
 1112 06a8 0A22     		movs	r2, #10
 1113 06aa 1946     		mov	r1, r3
 1114 06ac FFF7FEFF 		bl	itoa
 364:main.c        ****                     /*usbPutString(dist);
 365:main.c        ****                     usbPutString(" - ");
 366:main.c        ****                     usbPutString(pulses);
 367:main.c        ****                     usbPutString("       ");
 368:main.c        ****                     usbPutString(first);
 369:main.c        ****                     usbPutString(" <= ");
 370:main.c        ****                     usbPutString(second);
 371:main.c        ****                     usbPutString("\r\n");*/
 372:main.c        ****                     //if (distance[instCounter] * 13.25 * 228 <= (pulsesTravelled) * 20.42 * 0.5) {
 373:main.c        ****                     //57 pulses on 1 motor = 20.42 cm
 374:main.c        ****                     char instStr[24];
 375:main.c        ****                     char cVal[24];
 376:main.c        **** 
 377:main.c        ****                     itoa(instCounter, cVal, 10);
 1115              		.loc 1 377 0
 1116 06b0 3C4B     		ldr	r3, .L62+20
 1117 06b2 1B68     		ldr	r3, [r3]
 1118 06b4 3946     		mov	r1, r7
 1119 06b6 0A22     		movs	r2, #10
 1120 06b8 1846     		mov	r0, r3
 1121 06ba FFF7FEFF 		bl	itoa
 378:main.c        ****                     if ((distance[instCounter] * 9.13333 <= pulsesTravelled * 20.42 / 57 / 2) && (t
 1122              		.loc 1 378 0
 1123 06be 394B     		ldr	r3, .L62+20
 1124 06c0 1B68     		ldr	r3, [r3]
 1125 06c2 394A     		ldr	r2, .L62+24
 1126 06c4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1127 06c6 1846     		mov	r0, r3
 1128 06c8 FFF7FEFF 		bl	__aeabi_i2d
 1129 06cc 30A3     		adr	r3, .L62
 1130 06ce D3E90023 		ldrd	r2, [r3]
 1131 06d2 FFF7FEFF 		bl	__aeabi_dmul
 1132 06d6 0346     		mov	r3, r0
 1133 06d8 0C46     		mov	r4, r1
 1134 06da 2546     		mov	r5, r4
 1135 06dc 1C46     		mov	r4, r3
 1136 06de 334B     		ldr	r3, .L62+28
 1137 06e0 1B68     		ldr	r3, [r3]
 1138 06e2 1846     		mov	r0, r3
 1139 06e4 FFF7FEFF 		bl	__aeabi_i2d
 1140 06e8 2BA3     		adr	r3, .L62+8
 1141 06ea D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 28


 1142 06ee FFF7FEFF 		bl	__aeabi_dmul
 1143 06f2 0246     		mov	r2, r0
 1144 06f4 0B46     		mov	r3, r1
 1145 06f6 1046     		mov	r0, r2
 1146 06f8 1946     		mov	r1, r3
 1147 06fa 4FF00002 		mov	r2, #0
 1148 06fe 2C4B     		ldr	r3, .L62+32
 1149 0700 FFF7FEFF 		bl	__aeabi_ddiv
 1150 0704 0246     		mov	r2, r0
 1151 0706 0B46     		mov	r3, r1
 1152 0708 1046     		mov	r0, r2
 1153 070a 1946     		mov	r1, r3
 1154 070c 4FF00002 		mov	r2, #0
 1155 0710 4FF08043 		mov	r3, #1073741824
 1156 0714 FFF7FEFF 		bl	__aeabi_ddiv
 1157 0718 0246     		mov	r2, r0
 1158 071a 0B46     		mov	r3, r1
 1159 071c 2046     		mov	r0, r4
 1160 071e 2946     		mov	r1, r5
 1161 0720 FFF7FEFF 		bl	__aeabi_dcmple
 1162 0724 0346     		mov	r3, r0
 1163 0726 002B     		cmp	r3, #0
 1164 0728 1DD0     		beq	.L50
 1165              		.loc 1 378 0 is_stmt 0 discriminator 1
 1166 072a 224B     		ldr	r3, .L62+36
 1167 072c 1B68     		ldr	r3, [r3]
 1168 072e 012B     		cmp	r3, #1
 1169 0730 03D0     		beq	.L52
 1170              		.loc 1 378 0 discriminator 2
 1171 0732 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1172 0736 022B     		cmp	r3, #2
 1173 0738 15D1     		bne	.L50
 1174              	.L52:
 379:main.c        ****                         if (R_INT_BLACK || L_INT_BLACK) { //reached an intersection
 1175              		.loc 1 379 0 is_stmt 1
 1176 073a D7F8EC30 		ldr	r3, [r7, #236]
 1177 073e 952B     		cmp	r3, #149
 1178 0740 03DD     		ble	.L53
 1179              		.loc 1 379 0 is_stmt 0 discriminator 1
 1180 0742 D7F80031 		ldr	r3, [r7, #256]
 1181 0746 952B     		cmp	r3, #149
 1182 0748 0DDC     		bgt	.L50
 1183              	.L53:
 380:main.c        ****                             LED_PIN_4_Write(1);
 1184              		.loc 1 380 0 is_stmt 1
 1185 074a 0120     		movs	r0, #1
 1186 074c FFF7FEFF 		bl	LED_PIN_4_Write
 381:main.c        ****                             instCounter++;
 1187              		.loc 1 381 0
 1188 0750 144B     		ldr	r3, .L62+20
 1189 0752 1B68     		ldr	r3, [r3]
 1190 0754 0133     		adds	r3, r3, #1
 1191 0756 134A     		ldr	r2, .L62+20
 1192 0758 1360     		str	r3, [r2]
 382:main.c        ****                             turnComplete = 0;
 1193              		.loc 1 382 0
 1194 075a 164B     		ldr	r3, .L62+36
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 29


 1195 075c 0022     		movs	r2, #0
 1196 075e 1A60     		str	r2, [r3]
 383:main.c        ****                             pulsesTravelled = 0;
 1197              		.loc 1 383 0
 1198 0760 124B     		ldr	r3, .L62+28
 1199 0762 0022     		movs	r2, #0
 1200 0764 1A60     		str	r2, [r3]
 1201              	.L50:
 384:main.c        ****                         }
 385:main.c        **** //                        if (checkDistance == 1) {
 386:main.c        **** //                            if (distance[instCounter] * 9.13333 <= pulsesTravelled * 20.42 / 57 /
 387:main.c        **** //                                LED_PIN_4_Write(1);
 388:main.c        **** //                                instCounter++;
 389:main.c        **** //                                turnComplete = 0;
 390:main.c        **** //                                pulsesTravelled = 0;
 391:main.c        **** //                            }
 392:main.c        **** //                        }
 393:main.c        ****                         
 394:main.c        ****                     }
 395:main.c        ****                     
 396:main.c        ****                     //if distance has been covered and ready to switch
 397:main.c        **** //                        if (currentInst == 0) {
 398:main.c        **** //                            LED_PIN_4_Write(1);
 399:main.c        **** //                            instCounter++;
 400:main.c        **** //                            //snprintf(instStr, sizeof(instStr), "%u - %u c:%s\r\n", (unsigned ch
 401:main.c        **** //                            //usbPutString("INSTCHANGE - ");
 402:main.c        **** //                            //usbPutString(instStr);
 403:main.c        **** //                            pulsesTravelled = 0;
 404:main.c        **** //
 405:main.c        **** //                        } else if (R_INT_BLACK && (currentInst == 3 || currentInst == 2 || curren
 406:main.c        **** //
 407:main.c        **** //                            LED_PIN_4_Write(1);
 408:main.c        **** //                            instCounter++;
 409:main.c        **** //                            //snprintf(instStr, sizeof(instStr), "%u - %u c:%s\r\n", (unsigned ch
 410:main.c        **** //                            //usbPutString("INSTCHANGE - ");
 411:main.c        **** //                            //usbPutString(instStr);
 412:main.c        **** //                            pulsesTravelled = 0;
 413:main.c        **** //                        }
 414:main.c        **** //                        else if (L_INT_BLACK && (currentInst == 1 || currentInst == 5)) { //reach
 415:main.c        **** //                            LED_PIN_4_Write(1);
 416:main.c        **** //                            instCounter++;
 417:main.c        **** //                            //snprintf(instStr, sizeof(instStr), "%u - %u c:%s\r\n", (unsigned ch
 418:main.c        **** //                            //usbPutString("INSTCHANGE - ");
 419:main.c        **** //                            //usbPutString(instStr);
 420:main.c        **** //                            pulsesTravelled = 0;
 421:main.c        **** //                        }
 422:main.c        **** //                        else {
 423:main.c        **** //                            
 424:main.c        **** //                        }
 425:main.c        **** //                    }
 426:main.c        **** 
 427:main.c        ****                     if (L_INT_BLACK) {
 1202              		.loc 1 427 0
 1203 0766 D7F80031 		ldr	r3, [r7, #256]
 1204 076a 952B     		cmp	r3, #149
 1205 076c 02DC     		bgt	.L54
 428:main.c        ****                         LED_PIN_2_Write(1);
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 30


 1206              		.loc 1 428 0
 1207 076e 0120     		movs	r0, #1
 1208 0770 FFF7FEFF 		bl	LED_PIN_2_Write
 1209              	.L54:
 429:main.c        ****                     }
 430:main.c        **** 
 431:main.c        ****                     if (R_INT_BLACK) {
 1210              		.loc 1 431 0
 1211 0774 D7F8EC30 		ldr	r3, [r7, #236]
 1212 0778 952B     		cmp	r3, #149
 1213 077a 02DC     		bgt	.L8
 432:main.c        ****                         LED_PIN_3_Write(1);
 1214              		.loc 1 432 0
 1215 077c 0120     		movs	r0, #1
 1216 077e FFF7FEFF 		bl	LED_PIN_3_Write
 1217              	.L8:
 1218              	.LBE8:
 1219              	.LBE3:
 433:main.c        ****                     }
 434:main.c        **** 
 435:main.c        ****                     /*if (instruction[instCounter] == 0) {
 436:main.c        ****                         consecStops++;
 437:main.c        ****                     } else {
 438:main.c        ****                         consecStops = 0;
 439:main.c        ****                     }*/
 440:main.c        ****                 }
 441:main.c        ****             }
 442:main.c        **** 
 443:main.c        ****             flag = 0;
 1220              		.loc 1 443 0
 1221 0782 0D4B     		ldr	r3, .L62+40
 1222 0784 0022     		movs	r2, #0
 1223 0786 1A60     		str	r2, [r3]
 444:main.c        ****             ADC1_IRQ_Enable();
 1224              		.loc 1 444 0
 1225 0788 FFF7FEFF 		bl	ADC1_IRQ_Enable
 445:main.c        ****         }
 446:main.c        **** 
 447:main.c        ****     }
 1226              		.loc 1 447 0
 1227 078c 84E4     		b	.L56
 1228              	.L63:
 1229 078e 00BF     		.align	3
 1230              	.L62:
 1231 0790 C0266BD4 		.word	-731175232
 1232 0794 43442240 		.word	1075987523
 1233 0798 EC51B81E 		.word	515396076
 1234 079c 856B3440 		.word	1077177221
 1235 07a0 00000000 		.word	lastAdjustDirection
 1236 07a4 00000000 		.word	instCounter
 1237 07a8 00000000 		.word	distance
 1238 07ac 00000000 		.word	pulsesTravelled
 1239 07b0 00804C40 		.word	1078755328
 1240 07b4 00000000 		.word	turnComplete
 1241 07b8 00000000 		.word	flag
 1242              		.cfi_endproc
 1243              	.LFE65:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 31


 1244              		.size	main, .-main
 1245              		.section	.text.usbPutString,"ax",%progbits
 1246              		.align	2
 1247              		.global	usbPutString
 1248              		.thumb
 1249              		.thumb_func
 1250              		.type	usbPutString, %function
 1251              	usbPutString:
 1252              	.LFB66:
 448:main.c        **** }
 449:main.c        **** //* ========================================
 450:main.c        **** void usbPutString(char * s) {
 1253              		.loc 1 450 0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 8
 1256              		@ frame_needed = 1, uses_anonymous_args = 0
 1257 0000 80B5     		push	{r7, lr}
 1258              		.cfi_def_cfa_offset 8
 1259              		.cfi_offset 7, -8
 1260              		.cfi_offset 14, -4
 1261 0002 82B0     		sub	sp, sp, #8
 1262              		.cfi_def_cfa_offset 16
 1263 0004 00AF     		add	r7, sp, #0
 1264              		.cfi_def_cfa_register 7
 1265 0006 7860     		str	r0, [r7, #4]
 451:main.c        ****     // !! Assumes that *s is a string with allocated space >=64 chars    
 452:main.c        ****     //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 453:main.c        ****     //  length to 62 char (63rd char is a '!')
 454:main.c        **** 
 455:main.c        ****     #ifdef USE_USB
 456:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1266              		.loc 1 456 0
 1267 0008 00BF     		nop
 1268              	.L65:
 1269              		.loc 1 456 0 is_stmt 0 discriminator 1
 1270 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1271 000e 0346     		mov	r3, r0
 1272 0010 002B     		cmp	r3, #0
 1273 0012 FAD0     		beq	.L65
 457:main.c        ****     s[63] = '\0';
 1274              		.loc 1 457 0 is_stmt 1
 1275 0014 7B68     		ldr	r3, [r7, #4]
 1276 0016 3F33     		adds	r3, r3, #63
 1277 0018 0022     		movs	r2, #0
 1278 001a 1A70     		strb	r2, [r3]
 458:main.c        ****     s[62] = '!';
 1279              		.loc 1 458 0
 1280 001c 7B68     		ldr	r3, [r7, #4]
 1281 001e 3E33     		adds	r3, r3, #62
 1282 0020 2122     		movs	r2, #33
 1283 0022 1A70     		strb	r2, [r3]
 459:main.c        ****     USBUART_PutData((uint8 * ) s, strlen(s));
 1284              		.loc 1 459 0
 1285 0024 7868     		ldr	r0, [r7, #4]
 1286 0026 FFF7FEFF 		bl	strlen
 1287 002a 0346     		mov	r3, r0
 1288 002c 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 32


 1289 002e 1946     		mov	r1, r3
 1290 0030 7868     		ldr	r0, [r7, #4]
 1291 0032 FFF7FEFF 		bl	USBUART_PutData
 460:main.c        ****     #endif
 461:main.c        **** }
 1292              		.loc 1 461 0
 1293 0036 00BF     		nop
 1294 0038 0837     		adds	r7, r7, #8
 1295              		.cfi_def_cfa_offset 8
 1296 003a BD46     		mov	sp, r7
 1297              		.cfi_def_cfa_register 13
 1298              		@ sp needed
 1299 003c 80BD     		pop	{r7, pc}
 1300              		.cfi_endproc
 1301              	.LFE66:
 1302              		.size	usbPutString, .-usbPutString
 1303 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1304              		.align	2
 1305              		.global	usbPutChar
 1306              		.thumb
 1307              		.thumb_func
 1308              		.type	usbPutChar, %function
 1309              	usbPutChar:
 1310              	.LFB67:
 462:main.c        **** //* ========================================
 463:main.c        **** void usbPutChar(char c) {
 1311              		.loc 1 463 0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 8
 1314              		@ frame_needed = 1, uses_anonymous_args = 0
 1315 0000 80B5     		push	{r7, lr}
 1316              		.cfi_def_cfa_offset 8
 1317              		.cfi_offset 7, -8
 1318              		.cfi_offset 14, -4
 1319 0002 82B0     		sub	sp, sp, #8
 1320              		.cfi_def_cfa_offset 16
 1321 0004 00AF     		add	r7, sp, #0
 1322              		.cfi_def_cfa_register 7
 1323 0006 0346     		mov	r3, r0
 1324 0008 FB71     		strb	r3, [r7, #7]
 464:main.c        ****     #ifdef USE_USB
 465:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1325              		.loc 1 465 0
 1326 000a 00BF     		nop
 1327              	.L67:
 1328              		.loc 1 465 0 is_stmt 0 discriminator 1
 1329 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1330 0010 0346     		mov	r3, r0
 1331 0012 002B     		cmp	r3, #0
 1332 0014 FAD0     		beq	.L67
 466:main.c        ****     USBUART_PutChar(c);
 1333              		.loc 1 466 0 is_stmt 1
 1334 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1335 0018 1846     		mov	r0, r3
 1336 001a FFF7FEFF 		bl	USBUART_PutChar
 467:main.c        ****     #endif
 468:main.c        **** }...
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 33


 1337              		.loc 1 468 0
 1338 001e 00BF     		nop
 1339 0020 0837     		adds	r7, r7, #8
 1340              		.cfi_def_cfa_offset 8
 1341 0022 BD46     		mov	sp, r7
 1342              		.cfi_def_cfa_register 13
 1343              		@ sp needed
 1344 0024 80BD     		pop	{r7, pc}
 1345              		.cfi_endproc
 1346              	.LFE67:
 1347              		.size	usbPutChar, .-usbPutChar
 1348 0026 00BF     		.text
 1349              	.Letext0:
 1350              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1351              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1352              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1353              		.file 5 "vars.h"
 1354              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1355              		.section	.debug_info,"",%progbits
 1356              	.Ldebug_info0:
 1357 0000 2C070000 		.4byte	0x72c
 1358 0004 0400     		.2byte	0x4
 1359 0006 00000000 		.4byte	.Ldebug_abbrev0
 1360 000a 04       		.byte	0x4
 1361 000b 01       		.uleb128 0x1
 1362 000c 17010000 		.4byte	.LASF101
 1363 0010 0C       		.byte	0xc
 1364 0011 8F040000 		.4byte	.LASF102
 1365 0015 4D000000 		.4byte	.LASF103
 1366 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1367 001d 00000000 		.4byte	0
 1368 0021 00000000 		.4byte	.Ldebug_line0
 1369 0025 02       		.uleb128 0x2
 1370 0026 01       		.byte	0x1
 1371 0027 06       		.byte	0x6
 1372 0028 1A020000 		.4byte	.LASF0
 1373 002c 02       		.uleb128 0x2
 1374 002d 01       		.byte	0x1
 1375 002e 08       		.byte	0x8
 1376 002f EE020000 		.4byte	.LASF1
 1377 0033 02       		.uleb128 0x2
 1378 0034 02       		.byte	0x2
 1379 0035 05       		.byte	0x5
 1380 0036 CD000000 		.4byte	.LASF2
 1381 003a 02       		.uleb128 0x2
 1382 003b 02       		.byte	0x2
 1383 003c 07       		.byte	0x7
 1384 003d D0030000 		.4byte	.LASF3
 1385 0041 03       		.uleb128 0x3
 1386 0042 38040000 		.4byte	.LASF12
 1387 0046 02       		.byte	0x2
 1388 0047 3F       		.byte	0x3f
 1389 0048 4C000000 		.4byte	0x4c
 1390 004c 02       		.uleb128 0x2
 1391 004d 04       		.byte	0x4
 1392 004e 05       		.byte	0x5
 1393 004f 80020000 		.4byte	.LASF4
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 34


 1394 0053 02       		.uleb128 0x2
 1395 0054 04       		.byte	0x4
 1396 0055 07       		.byte	0x7
 1397 0056 96040000 		.4byte	.LASF5
 1398 005a 02       		.uleb128 0x2
 1399 005b 08       		.byte	0x8
 1400 005c 05       		.byte	0x5
 1401 005d 34020000 		.4byte	.LASF6
 1402 0061 02       		.uleb128 0x2
 1403 0062 08       		.byte	0x8
 1404 0063 07       		.byte	0x7
 1405 0064 7B030000 		.4byte	.LASF7
 1406 0068 04       		.uleb128 0x4
 1407 0069 04       		.byte	0x4
 1408 006a 05       		.byte	0x5
 1409 006b 696E7400 		.ascii	"int\000"
 1410 006f 02       		.uleb128 0x2
 1411 0070 04       		.byte	0x4
 1412 0071 07       		.byte	0x7
 1413 0072 92030000 		.4byte	.LASF8
 1414 0076 02       		.uleb128 0x2
 1415 0077 08       		.byte	0x8
 1416 0078 04       		.byte	0x4
 1417 0079 04030000 		.4byte	.LASF9
 1418 007d 02       		.uleb128 0x2
 1419 007e 04       		.byte	0x4
 1420 007f 07       		.byte	0x7
 1421 0080 F7000000 		.4byte	.LASF10
 1422 0084 05       		.uleb128 0x5
 1423 0085 04       		.byte	0x4
 1424 0086 8A000000 		.4byte	0x8a
 1425 008a 02       		.uleb128 0x2
 1426 008b 01       		.byte	0x1
 1427 008c 08       		.byte	0x8
 1428 008d 12040000 		.4byte	.LASF11
 1429 0091 06       		.uleb128 0x6
 1430 0092 8A000000 		.4byte	0x8a
 1431 0096 A1000000 		.4byte	0xa1
 1432 009a 07       		.uleb128 0x7
 1433 009b 7D000000 		.4byte	0x7d
 1434 009f 17       		.byte	0x17
 1435 00a0 00       		.byte	0
 1436 00a1 03       		.uleb128 0x3
 1437 00a2 2B040000 		.4byte	.LASF13
 1438 00a6 03       		.byte	0x3
 1439 00a7 2C       		.byte	0x2c
 1440 00a8 41000000 		.4byte	0x41
 1441 00ac 08       		.uleb128 0x8
 1442 00ad DA010000 		.4byte	.LASF14
 1443 00b1 04       		.byte	0x4
 1444 00b2 E701     		.2byte	0x1e7
 1445 00b4 2C000000 		.4byte	0x2c
 1446 00b8 08       		.uleb128 0x8
 1447 00b9 C7010000 		.4byte	.LASF15
 1448 00bd 04       		.byte	0x4
 1449 00be E801     		.2byte	0x1e8
 1450 00c0 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 35


 1451 00c4 08       		.uleb128 0x8
 1452 00c5 4F020000 		.4byte	.LASF16
 1453 00c9 04       		.byte	0x4
 1454 00ca EA01     		.2byte	0x1ea
 1455 00cc 25000000 		.4byte	0x25
 1456 00d0 08       		.uleb128 0x8
 1457 00d1 D4010000 		.4byte	.LASF17
 1458 00d5 04       		.byte	0x4
 1459 00d6 EB01     		.2byte	0x1eb
 1460 00d8 33000000 		.4byte	0x33
 1461 00dc 02       		.uleb128 0x2
 1462 00dd 04       		.byte	0x4
 1463 00de 04       		.byte	0x4
 1464 00df 26020000 		.4byte	.LASF18
 1465 00e3 02       		.uleb128 0x2
 1466 00e4 08       		.byte	0x8
 1467 00e5 04       		.byte	0x4
 1468 00e6 A8040000 		.4byte	.LASF19
 1469 00ea 09       		.uleb128 0x9
 1470 00eb 08040000 		.4byte	.LASF104
 1471 00ef 20       		.byte	0x20
 1472 00f0 05       		.byte	0x5
 1473 00f1 29       		.byte	0x29
 1474 00f2 C3010000 		.4byte	0x1c3
 1475 00f6 0A       		.uleb128 0xa
 1476 00f7 78050000 		.4byte	.LASF20
 1477 00fb 05       		.byte	0x5
 1478 00fc 2A       		.byte	0x2a
 1479 00fd C4000000 		.4byte	0xc4
 1480 0101 00       		.byte	0
 1481 0102 0A       		.uleb128 0xa
 1482 0103 CE010000 		.4byte	.LASF21
 1483 0107 05       		.byte	0x5
 1484 0108 2B       		.byte	0x2b
 1485 0109 AC000000 		.4byte	0xac
 1486 010d 01       		.byte	0x1
 1487 010e 0A       		.uleb128 0xa
 1488 010f 20040000 		.4byte	.LASF22
 1489 0113 05       		.byte	0x5
 1490 0114 2C       		.byte	0x2c
 1491 0115 D0000000 		.4byte	0xd0
 1492 0119 02       		.byte	0x2
 1493 011a 0A       		.uleb128 0xa
 1494 011b 3E050000 		.4byte	.LASF23
 1495 011f 05       		.byte	0x5
 1496 0120 2D       		.byte	0x2d
 1497 0121 D0000000 		.4byte	0xd0
 1498 0125 04       		.byte	0x4
 1499 0126 0A       		.uleb128 0xa
 1500 0127 7D050000 		.4byte	.LASF24
 1501 012b 05       		.byte	0x5
 1502 012c 2E       		.byte	0x2e
 1503 012d D0000000 		.4byte	0xd0
 1504 0131 06       		.byte	0x6
 1505 0132 0A       		.uleb128 0xa
 1506 0133 78020000 		.4byte	.LASF25
 1507 0137 05       		.byte	0x5
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 36


 1508 0138 2F       		.byte	0x2f
 1509 0139 D0000000 		.4byte	0xd0
 1510 013d 08       		.byte	0x8
 1511 013e 0A       		.uleb128 0xa
 1512 013f F5040000 		.4byte	.LASF26
 1513 0143 05       		.byte	0x5
 1514 0144 30       		.byte	0x30
 1515 0145 D0000000 		.4byte	0xd0
 1516 0149 0A       		.byte	0xa
 1517 014a 0A       		.uleb128 0xa
 1518 014b 38030000 		.4byte	.LASF27
 1519 014f 05       		.byte	0x5
 1520 0150 31       		.byte	0x31
 1521 0151 D0000000 		.4byte	0xd0
 1522 0155 0C       		.byte	0xc
 1523 0156 0A       		.uleb128 0xa
 1524 0157 6B020000 		.4byte	.LASF28
 1525 015b 05       		.byte	0x5
 1526 015c 32       		.byte	0x32
 1527 015d D0000000 		.4byte	0xd0
 1528 0161 0E       		.byte	0xe
 1529 0162 0A       		.uleb128 0xa
 1530 0163 C8030000 		.4byte	.LASF29
 1531 0167 05       		.byte	0x5
 1532 0168 33       		.byte	0x33
 1533 0169 D0000000 		.4byte	0xd0
 1534 016d 10       		.byte	0x10
 1535 016e 0A       		.uleb128 0xa
 1536 016f FC020000 		.4byte	.LASF30
 1537 0173 05       		.byte	0x5
 1538 0174 34       		.byte	0x34
 1539 0175 D0000000 		.4byte	0xd0
 1540 0179 12       		.byte	0x12
 1541 017a 0A       		.uleb128 0xa
 1542 017b 41030000 		.4byte	.LASF31
 1543 017f 05       		.byte	0x5
 1544 0180 35       		.byte	0x35
 1545 0181 D0000000 		.4byte	0xd0
 1546 0185 14       		.byte	0x14
 1547 0186 0A       		.uleb128 0xa
 1548 0187 E0010000 		.4byte	.LASF32
 1549 018b 05       		.byte	0x5
 1550 018c 36       		.byte	0x36
 1551 018d D0000000 		.4byte	0xd0
 1552 0191 16       		.byte	0x16
 1553 0192 0A       		.uleb128 0xa
 1554 0193 C5000000 		.4byte	.LASF33
 1555 0197 05       		.byte	0x5
 1556 0198 37       		.byte	0x37
 1557 0199 D0000000 		.4byte	0xd0
 1558 019d 18       		.byte	0x18
 1559 019e 0A       		.uleb128 0xa
 1560 019f 63020000 		.4byte	.LASF34
 1561 01a3 05       		.byte	0x5
 1562 01a4 38       		.byte	0x38
 1563 01a5 D0000000 		.4byte	0xd0
 1564 01a9 1A       		.byte	0x1a
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 37


 1565 01aa 0A       		.uleb128 0xa
 1566 01ab BA030000 		.4byte	.LASF35
 1567 01af 05       		.byte	0x5
 1568 01b0 39       		.byte	0x39
 1569 01b1 D0000000 		.4byte	0xd0
 1570 01b5 1C       		.byte	0x1c
 1571 01b6 0A       		.uleb128 0xa
 1572 01b7 BA010000 		.4byte	.LASF36
 1573 01bb 05       		.byte	0x5
 1574 01bc 3A       		.byte	0x3a
 1575 01bd D0000000 		.4byte	0xd0
 1576 01c1 1E       		.byte	0x1e
 1577 01c2 00       		.byte	0
 1578 01c3 0B       		.uleb128 0xb
 1579 01c4 656F6300 		.ascii	"eoc\000"
 1580 01c8 01       		.byte	0x1
 1581 01c9 4C       		.byte	0x4c
 1582 01ca 00000000 		.4byte	.LFB64
 1583 01ce 18000000 		.4byte	.LFE64-.LFB64
 1584 01d2 01       		.uleb128 0x1
 1585 01d3 9C       		.byte	0x9c
 1586 01d4 0C       		.uleb128 0xc
 1587 01d5 A5010000 		.4byte	.LASF53
 1588 01d9 01       		.byte	0x1
 1589 01da 50       		.byte	0x50
 1590 01db 68000000 		.4byte	0x68
 1591 01df 00000000 		.4byte	.LFB65
 1592 01e3 BC070000 		.4byte	.LFE65-.LFB65
 1593 01e7 01       		.uleb128 0x1
 1594 01e8 9C       		.byte	0x9c
 1595 01e9 5E030000 		.4byte	0x35e
 1596 01ed 0D       		.uleb128 0xd
 1597 01ee 34000000 		.4byte	.LBB2
 1598 01f2 5A000000 		.4byte	.LBE2-.LBB2
 1599 01f6 07020000 		.4byte	0x207
 1600 01fa 0E       		.uleb128 0xe
 1601 01fb 6900     		.ascii	"i\000"
 1602 01fd 01       		.byte	0x1
 1603 01fe 69       		.byte	0x69
 1604 01ff 68000000 		.4byte	0x68
 1605 0203 02       		.uleb128 0x2
 1606 0204 91       		.byte	0x91
 1607 0205 6C       		.sleb128 -20
 1608 0206 00       		.byte	0
 1609 0207 0F       		.uleb128 0xf
 1610 0208 32010000 		.4byte	.LBB3
 1611 020c 50060000 		.4byte	.LBE3-.LBB3
 1612 0210 10       		.uleb128 0x10
 1613 0211 0B000000 		.4byte	.LASF37
 1614 0215 01       		.byte	0x1
 1615 0216 83       		.byte	0x83
 1616 0217 68000000 		.4byte	0x68
 1617 021b 02       		.uleb128 0x2
 1618 021c 91       		.byte	0x91
 1619 021d 68       		.sleb128 -24
 1620 021e 10       		.uleb128 0x10
 1621 021f 7D040000 		.4byte	.LASF38
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 38


 1622 0223 01       		.byte	0x1
 1623 0224 84       		.byte	0x84
 1624 0225 68000000 		.4byte	0x68
 1625 0229 02       		.uleb128 0x2
 1626 022a 91       		.byte	0x91
 1627 022b 64       		.sleb128 -28
 1628 022c 10       		.uleb128 0x10
 1629 022d E3030000 		.4byte	.LASF39
 1630 0231 01       		.byte	0x1
 1631 0232 85       		.byte	0x85
 1632 0233 68000000 		.4byte	0x68
 1633 0237 02       		.uleb128 0x2
 1634 0238 91       		.byte	0x91
 1635 0239 60       		.sleb128 -32
 1636 023a 10       		.uleb128 0x10
 1637 023b 5D050000 		.4byte	.LASF40
 1638 023f 01       		.byte	0x1
 1639 0240 86       		.byte	0x86
 1640 0241 68000000 		.4byte	0x68
 1641 0245 02       		.uleb128 0x2
 1642 0246 91       		.byte	0x91
 1643 0247 5C       		.sleb128 -36
 1644 0248 10       		.uleb128 0x10
 1645 0249 4A030000 		.4byte	.LASF41
 1646 024d 01       		.byte	0x1
 1647 024e 87       		.byte	0x87
 1648 024f 68000000 		.4byte	0x68
 1649 0253 02       		.uleb128 0x2
 1650 0254 91       		.byte	0x91
 1651 0255 58       		.sleb128 -40
 1652 0256 10       		.uleb128 0x10
 1653 0257 D3020000 		.4byte	.LASF42
 1654 025b 01       		.byte	0x1
 1655 025c 88       		.byte	0x88
 1656 025d 68000000 		.4byte	0x68
 1657 0261 02       		.uleb128 0x2
 1658 0262 91       		.byte	0x91
 1659 0263 54       		.sleb128 -44
 1660 0264 0D       		.uleb128 0xd
 1661 0265 66010000 		.4byte	.LBB4
 1662 0269 3E010000 		.4byte	.LBE4-.LBB4
 1663 026d A6020000 		.4byte	0x2a6
 1664 0271 0E       		.uleb128 0xe
 1665 0272 6900     		.ascii	"i\000"
 1666 0274 01       		.byte	0x1
 1667 0275 89       		.byte	0x89
 1668 0276 68000000 		.4byte	0x68
 1669 027a 02       		.uleb128 0x2
 1670 027b 91       		.byte	0x91
 1671 027c 50       		.sleb128 -48
 1672 027d 0F       		.uleb128 0xf
 1673 027e 6E010000 		.4byte	.LBB5
 1674 0282 20010000 		.4byte	.LBE5-.LBB5
 1675 0286 10       		.uleb128 0x10
 1676 0287 16030000 		.4byte	.LASF43
 1677 028b 01       		.byte	0x1
 1678 028c 8B       		.byte	0x8b
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 39


 1679 028d 91000000 		.4byte	0x91
 1680 0291 03       		.uleb128 0x3
 1681 0292 91       		.byte	0x91
 1682 0293 A87F     		.sleb128 -88
 1683 0295 10       		.uleb128 0x10
 1684 0296 1E030000 		.4byte	.LASF44
 1685 029a 01       		.byte	0x1
 1686 029b 8C       		.byte	0x8c
 1687 029c 91000000 		.4byte	0x91
 1688 02a0 03       		.uleb128 0x3
 1689 02a1 91       		.byte	0x91
 1690 02a2 907F     		.sleb128 -112
 1691 02a4 00       		.byte	0
 1692 02a5 00       		.byte	0
 1693 02a6 0D       		.uleb128 0xd
 1694 02a7 AE020000 		.4byte	.LBB6
 1695 02ab 54010000 		.4byte	.LBE6-.LBB6
 1696 02af E4020000 		.4byte	0x2e4
 1697 02b3 0E       		.uleb128 0xe
 1698 02b4 6900     		.ascii	"i\000"
 1699 02b6 01       		.byte	0x1
 1700 02b7 CC       		.byte	0xcc
 1701 02b8 68000000 		.4byte	0x68
 1702 02bc 02       		.uleb128 0x2
 1703 02bd 91       		.byte	0x91
 1704 02be 4C       		.sleb128 -52
 1705 02bf 10       		.uleb128 0x10
 1706 02c0 26030000 		.4byte	.LASF45
 1707 02c4 01       		.byte	0x1
 1708 02c5 CC       		.byte	0xcc
 1709 02c6 68000000 		.4byte	0x68
 1710 02ca 02       		.uleb128 0x2
 1711 02cb 91       		.byte	0x91
 1712 02cc 48       		.sleb128 -56
 1713 02cd 0F       		.uleb128 0xf
 1714 02ce D4030000 		.4byte	.LBB7
 1715 02d2 1C000000 		.4byte	.LBE7-.LBB7
 1716 02d6 0E       		.uleb128 0xe
 1717 02d7 6900     		.ascii	"i\000"
 1718 02d9 01       		.byte	0x1
 1719 02da E5       		.byte	0xe5
 1720 02db 68000000 		.4byte	0x68
 1721 02df 02       		.uleb128 0x2
 1722 02e0 91       		.byte	0x91
 1723 02e1 44       		.sleb128 -60
 1724 02e2 00       		.byte	0
 1725 02e3 00       		.byte	0
 1726 02e4 0F       		.uleb128 0xf
 1727 02e5 04040000 		.4byte	.LBB8
 1728 02e9 7E030000 		.4byte	.LBE8-.LBB8
 1729 02ed 10       		.uleb128 0x10
 1730 02ee B9020000 		.4byte	.LASF46
 1731 02f2 01       		.byte	0x1
 1732 02f3 F5       		.byte	0xf5
 1733 02f4 8A000000 		.4byte	0x8a
 1734 02f8 02       		.uleb128 0x2
 1735 02f9 91       		.byte	0x91
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 40


 1736 02fa 43       		.sleb128 -61
 1737 02fb 11       		.uleb128 0x11
 1738 02fc C3030000 		.4byte	.LASF47
 1739 0300 01       		.byte	0x1
 1740 0301 6401     		.2byte	0x164
 1741 0303 91000000 		.4byte	0x91
 1742 0307 03       		.uleb128 0x3
 1743 0308 91       		.byte	0x91
 1744 0309 E07E     		.sleb128 -160
 1745 030b 11       		.uleb128 0x11
 1746 030c 42040000 		.4byte	.LASF48
 1747 0310 01       		.byte	0x1
 1748 0311 6501     		.2byte	0x165
 1749 0313 91000000 		.4byte	0x91
 1750 0317 03       		.uleb128 0x3
 1751 0318 91       		.byte	0x91
 1752 0319 C87E     		.sleb128 -184
 1753 031b 11       		.uleb128 0x11
 1754 031c 8F050000 		.4byte	.LASF49
 1755 0320 01       		.byte	0x1
 1756 0321 6601     		.2byte	0x166
 1757 0323 91000000 		.4byte	0x91
 1758 0327 03       		.uleb128 0x3
 1759 0328 91       		.byte	0x91
 1760 0329 B07E     		.sleb128 -208
 1761 032b 11       		.uleb128 0x11
 1762 032c 74030000 		.4byte	.LASF50
 1763 0330 01       		.byte	0x1
 1764 0331 6701     		.2byte	0x167
 1765 0333 91000000 		.4byte	0x91
 1766 0337 03       		.uleb128 0x3
 1767 0338 91       		.byte	0x91
 1768 0339 987E     		.sleb128 -232
 1769 033b 11       		.uleb128 0x11
 1770 033c 49050000 		.4byte	.LASF51
 1771 0340 01       		.byte	0x1
 1772 0341 7601     		.2byte	0x176
 1773 0343 91000000 		.4byte	0x91
 1774 0347 03       		.uleb128 0x3
 1775 0348 91       		.byte	0x91
 1776 0349 807E     		.sleb128 -256
 1777 034b 11       		.uleb128 0x11
 1778 034c 49040000 		.4byte	.LASF52
 1779 0350 01       		.byte	0x1
 1780 0351 7701     		.2byte	0x177
 1781 0353 91000000 		.4byte	0x91
 1782 0357 03       		.uleb128 0x3
 1783 0358 91       		.byte	0x91
 1784 0359 E87D     		.sleb128 -280
 1785 035b 00       		.byte	0
 1786 035c 00       		.byte	0
 1787 035d 00       		.byte	0
 1788 035e 12       		.uleb128 0x12
 1789 035f 42020000 		.4byte	.LASF54
 1790 0363 01       		.byte	0x1
 1791 0364 C201     		.2byte	0x1c2
 1792 0366 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 41


 1793 036a 3E000000 		.4byte	.LFE66-.LFB66
 1794 036e 01       		.uleb128 0x1
 1795 036f 9C       		.byte	0x9c
 1796 0370 82030000 		.4byte	0x382
 1797 0374 13       		.uleb128 0x13
 1798 0375 7300     		.ascii	"s\000"
 1799 0377 01       		.byte	0x1
 1800 0378 C201     		.2byte	0x1c2
 1801 037a 84000000 		.4byte	0x84
 1802 037e 02       		.uleb128 0x2
 1803 037f 91       		.byte	0x91
 1804 0380 74       		.sleb128 -12
 1805 0381 00       		.byte	0
 1806 0382 12       		.uleb128 0x12
 1807 0383 00000000 		.4byte	.LASF55
 1808 0387 01       		.byte	0x1
 1809 0388 CF01     		.2byte	0x1cf
 1810 038a 00000000 		.4byte	.LFB67
 1811 038e 26000000 		.4byte	.LFE67-.LFB67
 1812 0392 01       		.uleb128 0x1
 1813 0393 9C       		.byte	0x9c
 1814 0394 A6030000 		.4byte	0x3a6
 1815 0398 13       		.uleb128 0x13
 1816 0399 6300     		.ascii	"c\000"
 1817 039b 01       		.byte	0x1
 1818 039c CF01     		.2byte	0x1cf
 1819 039e 8A000000 		.4byte	0x8a
 1820 03a2 02       		.uleb128 0x2
 1821 03a3 91       		.byte	0x91
 1822 03a4 77       		.sleb128 -9
 1823 03a5 00       		.byte	0
 1824 03a6 14       		.uleb128 0x14
 1825 03a7 AF040000 		.4byte	.LASF56
 1826 03ab 06       		.byte	0x6
 1827 03ac 1207     		.2byte	0x712
 1828 03ae B2030000 		.4byte	0x3b2
 1829 03b2 15       		.uleb128 0x15
 1830 03b3 A1000000 		.4byte	0xa1
 1831 03b7 16       		.uleb128 0x16
 1832 03b8 747300   		.ascii	"ts\000"
 1833 03bb 05       		.byte	0x5
 1834 03bc 10       		.byte	0x10
 1835 03bd AC000000 		.4byte	0xac
 1836 03c1 05       		.uleb128 0x5
 1837 03c2 03       		.byte	0x3
 1838 03c3 00000000 		.4byte	ts
 1839 03c7 17       		.uleb128 0x17
 1840 03c8 11050000 		.4byte	.LASF57
 1841 03cc 05       		.byte	0x5
 1842 03cd 11       		.byte	0x11
 1843 03ce B8000000 		.4byte	0xb8
 1844 03d2 05       		.uleb128 0x5
 1845 03d3 03       		.byte	0x3
 1846 03d4 00000000 		.4byte	ts_enc
 1847 03d8 17       		.uleb128 0x17
 1848 03d9 18050000 		.4byte	.LASF58
 1849 03dd 05       		.byte	0x5
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 42


 1850 03de 12       		.byte	0x12
 1851 03df B8000000 		.4byte	0xb8
 1852 03e3 05       		.uleb128 0x5
 1853 03e4 03       		.byte	0x3
 1854 03e5 00000000 		.4byte	ts_update
 1855 03e9 17       		.uleb128 0x17
 1856 03ea 08050000 		.4byte	.LASF59
 1857 03ee 05       		.byte	0x5
 1858 03ef 13       		.byte	0x13
 1859 03f0 B8000000 		.4byte	0xb8
 1860 03f4 05       		.uleb128 0x5
 1861 03f5 03       		.byte	0x3
 1862 03f6 00000000 		.4byte	ts_speed
 1863 03fa 17       		.uleb128 0x17
 1864 03fb FD040000 		.4byte	.LASF60
 1865 03ff 05       		.byte	0x5
 1866 0400 14       		.byte	0x14
 1867 0401 B8000000 		.4byte	0xb8
 1868 0405 05       		.uleb128 0x5
 1869 0406 03       		.byte	0x3
 1870 0407 00000000 		.4byte	ts_display
 1871 040b 17       		.uleb128 0x17
 1872 040c CE040000 		.4byte	.LASF61
 1873 0410 05       		.byte	0x5
 1874 0411 16       		.byte	0x16
 1875 0412 AC000000 		.4byte	0xac
 1876 0416 05       		.uleb128 0x5
 1877 0417 03       		.byte	0x3
 1878 0418 00000000 		.4byte	flag_ts_enc
 1879 041c 17       		.uleb128 0x17
 1880 041d 54020000 		.4byte	.LASF62
 1881 0421 05       		.byte	0x5
 1882 0422 17       		.byte	0x17
 1883 0423 AC000000 		.4byte	0xac
 1884 0427 05       		.uleb128 0x5
 1885 0428 03       		.byte	0x3
 1886 0429 00000000 		.4byte	flag_ts_update
 1887 042d 17       		.uleb128 0x17
 1888 042e B7000000 		.4byte	.LASF63
 1889 0432 05       		.byte	0x5
 1890 0433 18       		.byte	0x18
 1891 0434 AC000000 		.4byte	0xac
 1892 0438 05       		.uleb128 0x5
 1893 0439 03       		.byte	0x3
 1894 043a 00000000 		.4byte	flag_ts_speed
 1895 043e 17       		.uleb128 0x17
 1896 043f A9020000 		.4byte	.LASF64
 1897 0443 05       		.byte	0x5
 1898 0444 19       		.byte	0x19
 1899 0445 AC000000 		.4byte	0xac
 1900 0449 05       		.uleb128 0x5
 1901 044a 03       		.byte	0x3
 1902 044b 00000000 		.4byte	flag_ts_display
 1903 044f 17       		.uleb128 0x17
 1904 0450 6C030000 		.4byte	.LASF65
 1905 0454 05       		.byte	0x5
 1906 0455 1C       		.byte	0x1c
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 43


 1907 0456 AC000000 		.4byte	0xac
 1908 045a 05       		.uleb128 0x5
 1909 045b 03       		.byte	0x3
 1910 045c 00000000 		.4byte	flag_rx
 1911 0460 17       		.uleb128 0x17
 1912 0461 41000000 		.4byte	.LASF66
 1913 0465 05       		.byte	0x5
 1914 0466 1D       		.byte	0x1d
 1915 0467 AC000000 		.4byte	0xac
 1916 046b 05       		.uleb128 0x5
 1917 046c 03       		.byte	0x3
 1918 046d 00000000 		.4byte	flag_packet
 1919 0471 17       		.uleb128 0x17
 1920 0472 9F030000 		.4byte	.LASF67
 1921 0476 05       		.byte	0x5
 1922 0477 1E       		.byte	0x1e
 1923 0478 AC000000 		.4byte	0xac
 1924 047c 05       		.uleb128 0x5
 1925 047d 03       		.byte	0x3
 1926 047e 00000000 		.4byte	flag_KB_string
 1927 0482 17       		.uleb128 0x17
 1928 0483 5D030000 		.4byte	.LASF68
 1929 0487 05       		.byte	0x5
 1930 0488 20       		.byte	0x20
 1931 0489 AC000000 		.4byte	0xac
 1932 048d 05       		.uleb128 0x5
 1933 048e 03       		.byte	0x3
 1934 048f 00000000 		.4byte	dataready_flag
 1935 0493 17       		.uleb128 0x17
 1936 0494 22050000 		.4byte	.LASF69
 1937 0498 05       		.byte	0x5
 1938 0499 22       		.byte	0x22
 1939 049a AC000000 		.4byte	0xac
 1940 049e 05       		.uleb128 0x5
 1941 049f 03       		.byte	0x3
 1942 04a0 00000000 		.4byte	flag_rf_transmission_active
 1943 04a4 06       		.uleb128 0x6
 1944 04a5 8A000000 		.4byte	0x8a
 1945 04a9 B4040000 		.4byte	0x4b4
 1946 04ad 07       		.uleb128 0x7
 1947 04ae 7D000000 		.4byte	0x7d
 1948 04b2 3F       		.byte	0x3f
 1949 04b3 00       		.byte	0
 1950 04b4 17       		.uleb128 0x17
 1951 04b5 65040000 		.4byte	.LASF70
 1952 04b9 05       		.byte	0x5
 1953 04ba 25       		.byte	0x25
 1954 04bb A4040000 		.4byte	0x4a4
 1955 04bf 05       		.uleb128 0x5
 1956 04c0 03       		.byte	0x3
 1957 04c1 00000000 		.4byte	displaystring
 1958 04c5 17       		.uleb128 0x17
 1959 04c6 15020000 		.4byte	.LASF71
 1960 04ca 05       		.byte	0x5
 1961 04cb 26       		.byte	0x26
 1962 04cc A4040000 		.4byte	0x4a4
 1963 04d0 05       		.uleb128 0x5
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 44


 1964 04d1 03       		.byte	0x3
 1965 04d2 00000000 		.4byte	line
 1966 04d6 17       		.uleb128 0x17
 1967 04d7 10030000 		.4byte	.LASF72
 1968 04db 05       		.byte	0x5
 1969 04dc 26       		.byte	0x26
 1970 04dd A4040000 		.4byte	0x4a4
 1971 04e1 05       		.uleb128 0x5
 1972 04e2 03       		.byte	0x3
 1973 04e3 00000000 		.4byte	entry
 1974 04e7 06       		.uleb128 0x6
 1975 04e8 AC000000 		.4byte	0xac
 1976 04ec F7040000 		.4byte	0x4f7
 1977 04f0 07       		.uleb128 0x7
 1978 04f1 7D000000 		.4byte	0x7d
 1979 04f5 3F       		.byte	0x3f
 1980 04f6 00       		.byte	0
 1981 04f7 17       		.uleb128 0x17
 1982 04f8 0D010000 		.4byte	.LASF73
 1983 04fc 05       		.byte	0x5
 1984 04fd 27       		.byte	0x27
 1985 04fe E7040000 		.4byte	0x4e7
 1986 0502 05       		.uleb128 0x5
 1987 0503 03       		.byte	0x3
 1988 0504 00000000 		.4byte	usbBuffer
 1989 0508 17       		.uleb128 0x17
 1990 0509 EA000000 		.4byte	.LASF74
 1991 050d 05       		.byte	0x5
 1992 050e 3C       		.byte	0x3c
 1993 050f EA000000 		.4byte	0xea
 1994 0513 05       		.uleb128 0x5
 1995 0514 03       		.byte	0x3
 1996 0515 00000000 		.4byte	system_state
 1997 0519 17       		.uleb128 0x17
 1998 051a AE030000 		.4byte	.LASF75
 1999 051e 01       		.byte	0x1
 2000 051f 2A       		.byte	0x2a
 2001 0520 68000000 		.4byte	0x68
 2002 0524 05       		.uleb128 0x5
 2003 0525 03       		.byte	0x3
 2004 0526 00000000 		.4byte	consecStops
 2005 052a 17       		.uleb128 0x17
 2006 052b 2C020000 		.4byte	.LASF76
 2007 052f 01       		.byte	0x1
 2008 0530 2B       		.byte	0x2b
 2009 0531 68000000 		.4byte	0x68
 2010 0535 05       		.uleb128 0x5
 2011 0536 03       		.byte	0x3
 2012 0537 00000000 		.4byte	started
 2013 053b 17       		.uleb128 0x17
 2014 053c BC040000 		.4byte	.LASF77
 2015 0540 01       		.byte	0x1
 2016 0541 2C       		.byte	0x2c
 2017 0542 68000000 		.4byte	0x68
 2018 0546 05       		.uleb128 0x5
 2019 0547 03       		.byte	0x3
 2020 0548 00000000 		.4byte	instCounter
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 45


 2021 054c 17       		.uleb128 0x17
 2022 054d 33040000 		.4byte	.LASF78
 2023 0551 01       		.byte	0x1
 2024 0552 32       		.byte	0x32
 2025 0553 5D050000 		.4byte	0x55d
 2026 0557 05       		.uleb128 0x5
 2027 0558 03       		.byte	0x3
 2028 0559 00000000 		.4byte	flag
 2029 055d 15       		.uleb128 0x15
 2030 055e 68000000 		.4byte	0x68
 2031 0562 06       		.uleb128 0x6
 2032 0563 5D050000 		.4byte	0x55d
 2033 0567 73050000 		.4byte	0x573
 2034 056b 18       		.uleb128 0x18
 2035 056c 7D000000 		.4byte	0x7d
 2036 0570 E703     		.2byte	0x3e7
 2037 0572 00       		.byte	0
 2038 0573 17       		.uleb128 0x17
 2039 0574 4E040000 		.4byte	.LASF79
 2040 0578 01       		.byte	0x1
 2041 0579 33       		.byte	0x33
 2042 057a 84050000 		.4byte	0x584
 2043 057e 05       		.uleb128 0x5
 2044 057f 03       		.byte	0x3
 2045 0580 00000000 		.4byte	valuesLeftIntersection
 2046 0584 15       		.uleb128 0x15
 2047 0585 62050000 		.4byte	0x562
 2048 0589 17       		.uleb128 0x17
 2049 058a A8000000 		.4byte	.LASF80
 2050 058e 01       		.byte	0x1
 2051 058f 34       		.byte	0x34
 2052 0590 9A050000 		.4byte	0x59a
 2053 0594 05       		.uleb128 0x5
 2054 0595 03       		.byte	0x3
 2055 0596 00000000 		.4byte	valuesLeftLine
 2056 059a 15       		.uleb128 0x15
 2057 059b 62050000 		.4byte	0x562
 2058 059f 17       		.uleb128 0x17
 2059 05a0 F7030000 		.4byte	.LASF81
 2060 05a4 01       		.byte	0x1
 2061 05a5 35       		.byte	0x35
 2062 05a6 B0050000 		.4byte	0x5b0
 2063 05aa 05       		.uleb128 0x5
 2064 05ab 03       		.byte	0x3
 2065 05ac 00000000 		.4byte	valuesMiddleLine
 2066 05b0 15       		.uleb128 0x15
 2067 05b1 62050000 		.4byte	0x562
 2068 05b5 17       		.uleb128 0x17
 2069 05b6 D7000000 		.4byte	.LASF82
 2070 05ba 01       		.byte	0x1
 2071 05bb 36       		.byte	0x36
 2072 05bc C6050000 		.4byte	0x5c6
 2073 05c0 05       		.uleb128 0x5
 2074 05c1 03       		.byte	0x3
 2075 05c2 00000000 		.4byte	valuesTurnComplete
 2076 05c6 15       		.uleb128 0x15
 2077 05c7 62050000 		.4byte	0x562
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 46


 2078 05cb 17       		.uleb128 0x17
 2079 05cc AA010000 		.4byte	.LASF83
 2080 05d0 01       		.byte	0x1
 2081 05d1 37       		.byte	0x37
 2082 05d2 DC050000 		.4byte	0x5dc
 2083 05d6 05       		.uleb128 0x5
 2084 05d7 03       		.byte	0x3
 2085 05d8 00000000 		.4byte	valuesRightLine
 2086 05dc 15       		.uleb128 0x15
 2087 05dd 62050000 		.4byte	0x562
 2088 05e1 17       		.uleb128 0x17
 2089 05e2 ED010000 		.4byte	.LASF84
 2090 05e6 01       		.byte	0x1
 2091 05e7 38       		.byte	0x38
 2092 05e8 F2050000 		.4byte	0x5f2
 2093 05ec 05       		.uleb128 0x5
 2094 05ed 03       		.byte	0x3
 2095 05ee 00000000 		.4byte	valuesRightIntersection
 2096 05f2 15       		.uleb128 0x15
 2097 05f3 62050000 		.4byte	0x562
 2098 05f7 17       		.uleb128 0x17
 2099 05f8 C8040000 		.4byte	.LASF85
 2100 05fc 01       		.byte	0x1
 2101 05fd 39       		.byte	0x39
 2102 05fe 5D050000 		.4byte	0x55d
 2103 0602 05       		.uleb128 0x5
 2104 0603 03       		.byte	0x3
 2105 0604 00000000 		.4byte	count
 2106 0608 17       		.uleb128 0x17
 2107 0609 E4040000 		.4byte	.LASF86
 2108 060d 01       		.byte	0x1
 2109 060e 3A       		.byte	0x3a
 2110 060f 5D050000 		.4byte	0x55d
 2111 0613 05       		.uleb128 0x5
 2112 0614 03       		.byte	0x3
 2113 0615 00000000 		.4byte	motorUpdateCount
 2114 0619 17       		.uleb128 0x17
 2115 061a 89020000 		.4byte	.LASF87
 2116 061e 01       		.byte	0x1
 2117 061f 3B       		.byte	0x3b
 2118 0620 5D050000 		.4byte	0x55d
 2119 0624 05       		.uleb128 0x5
 2120 0625 03       		.byte	0x3
 2121 0626 00000000 		.4byte	lastVeerDirection
 2122 062a 17       		.uleb128 0x17
 2123 062b DA040000 		.4byte	.LASF88
 2124 062f 01       		.byte	0x1
 2125 0630 3D       		.byte	0x3d
 2126 0631 5D050000 		.4byte	0x55d
 2127 0635 05       		.uleb128 0x5
 2128 0636 03       		.byte	0x3
 2129 0637 00000000 		.4byte	v1M1
 2130 063b 17       		.uleb128 0x17
 2131 063c DF040000 		.4byte	.LASF89
 2132 0640 01       		.byte	0x1
 2133 0641 3E       		.byte	0x3e
 2134 0642 5D050000 		.4byte	0x55d
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 47


 2135 0646 05       		.uleb128 0x5
 2136 0647 03       		.byte	0x3
 2137 0648 00000000 		.4byte	v1M2
 2138 064c 17       		.uleb128 0x17
 2139 064d 73040000 		.4byte	.LASF90
 2140 0651 01       		.byte	0x1
 2141 0652 3F       		.byte	0x3f
 2142 0653 5D050000 		.4byte	0x55d
 2143 0657 05       		.uleb128 0x5
 2144 0658 03       		.byte	0x3
 2145 0659 00000000 		.4byte	v2M1
 2146 065d 17       		.uleb128 0x17
 2147 065e 78040000 		.4byte	.LASF91
 2148 0662 01       		.byte	0x1
 2149 0663 40       		.byte	0x40
 2150 0664 5D050000 		.4byte	0x55d
 2151 0668 05       		.uleb128 0x5
 2152 0669 03       		.byte	0x3
 2153 066a 00000000 		.4byte	v2M2
 2154 066e 17       		.uleb128 0x17
 2155 066f 00010000 		.4byte	.LASF92
 2156 0673 01       		.byte	0x1
 2157 0674 41       		.byte	0x41
 2158 0675 5D050000 		.4byte	0x55d
 2159 0679 05       		.uleb128 0x5
 2160 067a 03       		.byte	0x3
 2161 067b 00000000 		.4byte	turnComplete
 2162 067f 17       		.uleb128 0x17
 2163 0680 05020000 		.4byte	.LASF93
 2164 0684 01       		.byte	0x1
 2165 0685 42       		.byte	0x42
 2166 0686 68000000 		.4byte	0x68
 2167 068a 05       		.uleb128 0x5
 2168 068b 03       		.byte	0x3
 2169 068c 00000000 		.4byte	pulsesTravelled
 2170 0690 17       		.uleb128 0x17
 2171 0691 C5020000 		.4byte	.LASF94
 2172 0695 01       		.byte	0x1
 2173 0696 43       		.byte	0x43
 2174 0697 5D050000 		.4byte	0x55d
 2175 069b 05       		.uleb128 0x5
 2176 069c 03       		.byte	0x3
 2177 069d 00000000 		.4byte	checkDistance
 2178 06a1 17       		.uleb128 0x17
 2179 06a2 73050000 		.4byte	.LASF95
 2180 06a6 01       		.byte	0x1
 2181 06a7 44       		.byte	0x44
 2182 06a8 5D050000 		.4byte	0x55d
 2183 06ac 05       		.uleb128 0x5
 2184 06ad 03       		.byte	0x3
 2185 06ae 00000000 		.4byte	step
 2186 06b2 17       		.uleb128 0x17
 2187 06b3 9B020000 		.4byte	.LASF96
 2188 06b7 01       		.byte	0x1
 2189 06b8 45       		.byte	0x45
 2190 06b9 5D050000 		.4byte	0x55d
 2191 06bd 05       		.uleb128 0x5
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 48


 2192 06be 03       		.byte	0x3
 2193 06bf 00000000 		.4byte	interruptFlag
 2194 06c3 17       		.uleb128 0x17
 2195 06c4 2D000000 		.4byte	.LASF97
 2196 06c8 01       		.byte	0x1
 2197 06c9 47       		.byte	0x47
 2198 06ca 68000000 		.4byte	0x68
 2199 06ce 05       		.uleb128 0x5
 2200 06cf 03       		.byte	0x3
 2201 06d0 00000000 		.4byte	lastAdjustDirection
 2202 06d4 06       		.uleb128 0x6
 2203 06d5 2C000000 		.4byte	0x2c
 2204 06d9 EB060000 		.4byte	0x6eb
 2205 06dd 18       		.uleb128 0x18
 2206 06de 7D000000 		.4byte	0x7d
 2207 06e2 F301     		.2byte	0x1f3
 2208 06e4 07       		.uleb128 0x7
 2209 06e5 7D000000 		.4byte	0x7d
 2210 06e9 01       		.byte	0x1
 2211 06ea 00       		.byte	0
 2212 06eb 17       		.uleb128 0x17
 2213 06ec 25000000 		.4byte	.LASF98
 2214 06f0 01       		.byte	0x1
 2215 06f1 48       		.byte	0x48
 2216 06f2 D4060000 		.4byte	0x6d4
 2217 06f6 05       		.uleb128 0x5
 2218 06f7 03       		.byte	0x3
 2219 06f8 00000000 		.4byte	squares
 2220 06fc 06       		.uleb128 0x6
 2221 06fd 2C000000 		.4byte	0x2c
 2222 0701 0D070000 		.4byte	0x70d
 2223 0705 18       		.uleb128 0x18
 2224 0706 7D000000 		.4byte	0x7d
 2225 070a F301     		.2byte	0x1f3
 2226 070c 00       		.byte	0
 2227 070d 17       		.uleb128 0x17
 2228 070e 51050000 		.4byte	.LASF99
 2229 0712 01       		.byte	0x1
 2230 0713 49       		.byte	0x49
 2231 0714 FC060000 		.4byte	0x6fc
 2232 0718 05       		.uleb128 0x5
 2233 0719 03       		.byte	0x3
 2234 071a 00000000 		.4byte	instruction
 2235 071e 17       		.uleb128 0x17
 2236 071f 17040000 		.4byte	.LASF100
 2237 0723 01       		.byte	0x1
 2238 0724 4A       		.byte	0x4a
 2239 0725 FC060000 		.4byte	0x6fc
 2240 0729 05       		.uleb128 0x5
 2241 072a 03       		.byte	0x3
 2242 072b 00000000 		.4byte	distance
 2243 072f 00       		.byte	0
 2244              		.section	.debug_abbrev,"",%progbits
 2245              	.Ldebug_abbrev0:
 2246 0000 01       		.uleb128 0x1
 2247 0001 11       		.uleb128 0x11
 2248 0002 01       		.byte	0x1
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 49


 2249 0003 25       		.uleb128 0x25
 2250 0004 0E       		.uleb128 0xe
 2251 0005 13       		.uleb128 0x13
 2252 0006 0B       		.uleb128 0xb
 2253 0007 03       		.uleb128 0x3
 2254 0008 0E       		.uleb128 0xe
 2255 0009 1B       		.uleb128 0x1b
 2256 000a 0E       		.uleb128 0xe
 2257 000b 55       		.uleb128 0x55
 2258 000c 17       		.uleb128 0x17
 2259 000d 11       		.uleb128 0x11
 2260 000e 01       		.uleb128 0x1
 2261 000f 10       		.uleb128 0x10
 2262 0010 17       		.uleb128 0x17
 2263 0011 00       		.byte	0
 2264 0012 00       		.byte	0
 2265 0013 02       		.uleb128 0x2
 2266 0014 24       		.uleb128 0x24
 2267 0015 00       		.byte	0
 2268 0016 0B       		.uleb128 0xb
 2269 0017 0B       		.uleb128 0xb
 2270 0018 3E       		.uleb128 0x3e
 2271 0019 0B       		.uleb128 0xb
 2272 001a 03       		.uleb128 0x3
 2273 001b 0E       		.uleb128 0xe
 2274 001c 00       		.byte	0
 2275 001d 00       		.byte	0
 2276 001e 03       		.uleb128 0x3
 2277 001f 16       		.uleb128 0x16
 2278 0020 00       		.byte	0
 2279 0021 03       		.uleb128 0x3
 2280 0022 0E       		.uleb128 0xe
 2281 0023 3A       		.uleb128 0x3a
 2282 0024 0B       		.uleb128 0xb
 2283 0025 3B       		.uleb128 0x3b
 2284 0026 0B       		.uleb128 0xb
 2285 0027 49       		.uleb128 0x49
 2286 0028 13       		.uleb128 0x13
 2287 0029 00       		.byte	0
 2288 002a 00       		.byte	0
 2289 002b 04       		.uleb128 0x4
 2290 002c 24       		.uleb128 0x24
 2291 002d 00       		.byte	0
 2292 002e 0B       		.uleb128 0xb
 2293 002f 0B       		.uleb128 0xb
 2294 0030 3E       		.uleb128 0x3e
 2295 0031 0B       		.uleb128 0xb
 2296 0032 03       		.uleb128 0x3
 2297 0033 08       		.uleb128 0x8
 2298 0034 00       		.byte	0
 2299 0035 00       		.byte	0
 2300 0036 05       		.uleb128 0x5
 2301 0037 0F       		.uleb128 0xf
 2302 0038 00       		.byte	0
 2303 0039 0B       		.uleb128 0xb
 2304 003a 0B       		.uleb128 0xb
 2305 003b 49       		.uleb128 0x49
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 50


 2306 003c 13       		.uleb128 0x13
 2307 003d 00       		.byte	0
 2308 003e 00       		.byte	0
 2309 003f 06       		.uleb128 0x6
 2310 0040 01       		.uleb128 0x1
 2311 0041 01       		.byte	0x1
 2312 0042 49       		.uleb128 0x49
 2313 0043 13       		.uleb128 0x13
 2314 0044 01       		.uleb128 0x1
 2315 0045 13       		.uleb128 0x13
 2316 0046 00       		.byte	0
 2317 0047 00       		.byte	0
 2318 0048 07       		.uleb128 0x7
 2319 0049 21       		.uleb128 0x21
 2320 004a 00       		.byte	0
 2321 004b 49       		.uleb128 0x49
 2322 004c 13       		.uleb128 0x13
 2323 004d 2F       		.uleb128 0x2f
 2324 004e 0B       		.uleb128 0xb
 2325 004f 00       		.byte	0
 2326 0050 00       		.byte	0
 2327 0051 08       		.uleb128 0x8
 2328 0052 16       		.uleb128 0x16
 2329 0053 00       		.byte	0
 2330 0054 03       		.uleb128 0x3
 2331 0055 0E       		.uleb128 0xe
 2332 0056 3A       		.uleb128 0x3a
 2333 0057 0B       		.uleb128 0xb
 2334 0058 3B       		.uleb128 0x3b
 2335 0059 05       		.uleb128 0x5
 2336 005a 49       		.uleb128 0x49
 2337 005b 13       		.uleb128 0x13
 2338 005c 00       		.byte	0
 2339 005d 00       		.byte	0
 2340 005e 09       		.uleb128 0x9
 2341 005f 13       		.uleb128 0x13
 2342 0060 01       		.byte	0x1
 2343 0061 03       		.uleb128 0x3
 2344 0062 0E       		.uleb128 0xe
 2345 0063 0B       		.uleb128 0xb
 2346 0064 0B       		.uleb128 0xb
 2347 0065 3A       		.uleb128 0x3a
 2348 0066 0B       		.uleb128 0xb
 2349 0067 3B       		.uleb128 0x3b
 2350 0068 0B       		.uleb128 0xb
 2351 0069 01       		.uleb128 0x1
 2352 006a 13       		.uleb128 0x13
 2353 006b 00       		.byte	0
 2354 006c 00       		.byte	0
 2355 006d 0A       		.uleb128 0xa
 2356 006e 0D       		.uleb128 0xd
 2357 006f 00       		.byte	0
 2358 0070 03       		.uleb128 0x3
 2359 0071 0E       		.uleb128 0xe
 2360 0072 3A       		.uleb128 0x3a
 2361 0073 0B       		.uleb128 0xb
 2362 0074 3B       		.uleb128 0x3b
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 51


 2363 0075 0B       		.uleb128 0xb
 2364 0076 49       		.uleb128 0x49
 2365 0077 13       		.uleb128 0x13
 2366 0078 38       		.uleb128 0x38
 2367 0079 0B       		.uleb128 0xb
 2368 007a 00       		.byte	0
 2369 007b 00       		.byte	0
 2370 007c 0B       		.uleb128 0xb
 2371 007d 2E       		.uleb128 0x2e
 2372 007e 00       		.byte	0
 2373 007f 3F       		.uleb128 0x3f
 2374 0080 19       		.uleb128 0x19
 2375 0081 03       		.uleb128 0x3
 2376 0082 08       		.uleb128 0x8
 2377 0083 3A       		.uleb128 0x3a
 2378 0084 0B       		.uleb128 0xb
 2379 0085 3B       		.uleb128 0x3b
 2380 0086 0B       		.uleb128 0xb
 2381 0087 27       		.uleb128 0x27
 2382 0088 19       		.uleb128 0x19
 2383 0089 11       		.uleb128 0x11
 2384 008a 01       		.uleb128 0x1
 2385 008b 12       		.uleb128 0x12
 2386 008c 06       		.uleb128 0x6
 2387 008d 40       		.uleb128 0x40
 2388 008e 18       		.uleb128 0x18
 2389 008f 9742     		.uleb128 0x2117
 2390 0091 19       		.uleb128 0x19
 2391 0092 00       		.byte	0
 2392 0093 00       		.byte	0
 2393 0094 0C       		.uleb128 0xc
 2394 0095 2E       		.uleb128 0x2e
 2395 0096 01       		.byte	0x1
 2396 0097 3F       		.uleb128 0x3f
 2397 0098 19       		.uleb128 0x19
 2398 0099 03       		.uleb128 0x3
 2399 009a 0E       		.uleb128 0xe
 2400 009b 3A       		.uleb128 0x3a
 2401 009c 0B       		.uleb128 0xb
 2402 009d 3B       		.uleb128 0x3b
 2403 009e 0B       		.uleb128 0xb
 2404 009f 49       		.uleb128 0x49
 2405 00a0 13       		.uleb128 0x13
 2406 00a1 11       		.uleb128 0x11
 2407 00a2 01       		.uleb128 0x1
 2408 00a3 12       		.uleb128 0x12
 2409 00a4 06       		.uleb128 0x6
 2410 00a5 40       		.uleb128 0x40
 2411 00a6 18       		.uleb128 0x18
 2412 00a7 9642     		.uleb128 0x2116
 2413 00a9 19       		.uleb128 0x19
 2414 00aa 01       		.uleb128 0x1
 2415 00ab 13       		.uleb128 0x13
 2416 00ac 00       		.byte	0
 2417 00ad 00       		.byte	0
 2418 00ae 0D       		.uleb128 0xd
 2419 00af 0B       		.uleb128 0xb
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 52


 2420 00b0 01       		.byte	0x1
 2421 00b1 11       		.uleb128 0x11
 2422 00b2 01       		.uleb128 0x1
 2423 00b3 12       		.uleb128 0x12
 2424 00b4 06       		.uleb128 0x6
 2425 00b5 01       		.uleb128 0x1
 2426 00b6 13       		.uleb128 0x13
 2427 00b7 00       		.byte	0
 2428 00b8 00       		.byte	0
 2429 00b9 0E       		.uleb128 0xe
 2430 00ba 34       		.uleb128 0x34
 2431 00bb 00       		.byte	0
 2432 00bc 03       		.uleb128 0x3
 2433 00bd 08       		.uleb128 0x8
 2434 00be 3A       		.uleb128 0x3a
 2435 00bf 0B       		.uleb128 0xb
 2436 00c0 3B       		.uleb128 0x3b
 2437 00c1 0B       		.uleb128 0xb
 2438 00c2 49       		.uleb128 0x49
 2439 00c3 13       		.uleb128 0x13
 2440 00c4 02       		.uleb128 0x2
 2441 00c5 18       		.uleb128 0x18
 2442 00c6 00       		.byte	0
 2443 00c7 00       		.byte	0
 2444 00c8 0F       		.uleb128 0xf
 2445 00c9 0B       		.uleb128 0xb
 2446 00ca 01       		.byte	0x1
 2447 00cb 11       		.uleb128 0x11
 2448 00cc 01       		.uleb128 0x1
 2449 00cd 12       		.uleb128 0x12
 2450 00ce 06       		.uleb128 0x6
 2451 00cf 00       		.byte	0
 2452 00d0 00       		.byte	0
 2453 00d1 10       		.uleb128 0x10
 2454 00d2 34       		.uleb128 0x34
 2455 00d3 00       		.byte	0
 2456 00d4 03       		.uleb128 0x3
 2457 00d5 0E       		.uleb128 0xe
 2458 00d6 3A       		.uleb128 0x3a
 2459 00d7 0B       		.uleb128 0xb
 2460 00d8 3B       		.uleb128 0x3b
 2461 00d9 0B       		.uleb128 0xb
 2462 00da 49       		.uleb128 0x49
 2463 00db 13       		.uleb128 0x13
 2464 00dc 02       		.uleb128 0x2
 2465 00dd 18       		.uleb128 0x18
 2466 00de 00       		.byte	0
 2467 00df 00       		.byte	0
 2468 00e0 11       		.uleb128 0x11
 2469 00e1 34       		.uleb128 0x34
 2470 00e2 00       		.byte	0
 2471 00e3 03       		.uleb128 0x3
 2472 00e4 0E       		.uleb128 0xe
 2473 00e5 3A       		.uleb128 0x3a
 2474 00e6 0B       		.uleb128 0xb
 2475 00e7 3B       		.uleb128 0x3b
 2476 00e8 05       		.uleb128 0x5
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 53


 2477 00e9 49       		.uleb128 0x49
 2478 00ea 13       		.uleb128 0x13
 2479 00eb 02       		.uleb128 0x2
 2480 00ec 18       		.uleb128 0x18
 2481 00ed 00       		.byte	0
 2482 00ee 00       		.byte	0
 2483 00ef 12       		.uleb128 0x12
 2484 00f0 2E       		.uleb128 0x2e
 2485 00f1 01       		.byte	0x1
 2486 00f2 3F       		.uleb128 0x3f
 2487 00f3 19       		.uleb128 0x19
 2488 00f4 03       		.uleb128 0x3
 2489 00f5 0E       		.uleb128 0xe
 2490 00f6 3A       		.uleb128 0x3a
 2491 00f7 0B       		.uleb128 0xb
 2492 00f8 3B       		.uleb128 0x3b
 2493 00f9 05       		.uleb128 0x5
 2494 00fa 27       		.uleb128 0x27
 2495 00fb 19       		.uleb128 0x19
 2496 00fc 11       		.uleb128 0x11
 2497 00fd 01       		.uleb128 0x1
 2498 00fe 12       		.uleb128 0x12
 2499 00ff 06       		.uleb128 0x6
 2500 0100 40       		.uleb128 0x40
 2501 0101 18       		.uleb128 0x18
 2502 0102 9642     		.uleb128 0x2116
 2503 0104 19       		.uleb128 0x19
 2504 0105 01       		.uleb128 0x1
 2505 0106 13       		.uleb128 0x13
 2506 0107 00       		.byte	0
 2507 0108 00       		.byte	0
 2508 0109 13       		.uleb128 0x13
 2509 010a 05       		.uleb128 0x5
 2510 010b 00       		.byte	0
 2511 010c 03       		.uleb128 0x3
 2512 010d 08       		.uleb128 0x8
 2513 010e 3A       		.uleb128 0x3a
 2514 010f 0B       		.uleb128 0xb
 2515 0110 3B       		.uleb128 0x3b
 2516 0111 05       		.uleb128 0x5
 2517 0112 49       		.uleb128 0x49
 2518 0113 13       		.uleb128 0x13
 2519 0114 02       		.uleb128 0x2
 2520 0115 18       		.uleb128 0x18
 2521 0116 00       		.byte	0
 2522 0117 00       		.byte	0
 2523 0118 14       		.uleb128 0x14
 2524 0119 34       		.uleb128 0x34
 2525 011a 00       		.byte	0
 2526 011b 03       		.uleb128 0x3
 2527 011c 0E       		.uleb128 0xe
 2528 011d 3A       		.uleb128 0x3a
 2529 011e 0B       		.uleb128 0xb
 2530 011f 3B       		.uleb128 0x3b
 2531 0120 05       		.uleb128 0x5
 2532 0121 49       		.uleb128 0x49
 2533 0122 13       		.uleb128 0x13
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 54


 2534 0123 3F       		.uleb128 0x3f
 2535 0124 19       		.uleb128 0x19
 2536 0125 3C       		.uleb128 0x3c
 2537 0126 19       		.uleb128 0x19
 2538 0127 00       		.byte	0
 2539 0128 00       		.byte	0
 2540 0129 15       		.uleb128 0x15
 2541 012a 35       		.uleb128 0x35
 2542 012b 00       		.byte	0
 2543 012c 49       		.uleb128 0x49
 2544 012d 13       		.uleb128 0x13
 2545 012e 00       		.byte	0
 2546 012f 00       		.byte	0
 2547 0130 16       		.uleb128 0x16
 2548 0131 34       		.uleb128 0x34
 2549 0132 00       		.byte	0
 2550 0133 03       		.uleb128 0x3
 2551 0134 08       		.uleb128 0x8
 2552 0135 3A       		.uleb128 0x3a
 2553 0136 0B       		.uleb128 0xb
 2554 0137 3B       		.uleb128 0x3b
 2555 0138 0B       		.uleb128 0xb
 2556 0139 49       		.uleb128 0x49
 2557 013a 13       		.uleb128 0x13
 2558 013b 3F       		.uleb128 0x3f
 2559 013c 19       		.uleb128 0x19
 2560 013d 02       		.uleb128 0x2
 2561 013e 18       		.uleb128 0x18
 2562 013f 00       		.byte	0
 2563 0140 00       		.byte	0
 2564 0141 17       		.uleb128 0x17
 2565 0142 34       		.uleb128 0x34
 2566 0143 00       		.byte	0
 2567 0144 03       		.uleb128 0x3
 2568 0145 0E       		.uleb128 0xe
 2569 0146 3A       		.uleb128 0x3a
 2570 0147 0B       		.uleb128 0xb
 2571 0148 3B       		.uleb128 0x3b
 2572 0149 0B       		.uleb128 0xb
 2573 014a 49       		.uleb128 0x49
 2574 014b 13       		.uleb128 0x13
 2575 014c 3F       		.uleb128 0x3f
 2576 014d 19       		.uleb128 0x19
 2577 014e 02       		.uleb128 0x2
 2578 014f 18       		.uleb128 0x18
 2579 0150 00       		.byte	0
 2580 0151 00       		.byte	0
 2581 0152 18       		.uleb128 0x18
 2582 0153 21       		.uleb128 0x21
 2583 0154 00       		.byte	0
 2584 0155 49       		.uleb128 0x49
 2585 0156 13       		.uleb128 0x13
 2586 0157 2F       		.uleb128 0x2f
 2587 0158 05       		.uleb128 0x5
 2588 0159 00       		.byte	0
 2589 015a 00       		.byte	0
 2590 015b 00       		.byte	0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 55


 2591              		.section	.debug_aranges,"",%progbits
 2592 0000 34000000 		.4byte	0x34
 2593 0004 0200     		.2byte	0x2
 2594 0006 00000000 		.4byte	.Ldebug_info0
 2595 000a 04       		.byte	0x4
 2596 000b 00       		.byte	0
 2597 000c 0000     		.2byte	0
 2598 000e 0000     		.2byte	0
 2599 0010 00000000 		.4byte	.LFB64
 2600 0014 18000000 		.4byte	.LFE64-.LFB64
 2601 0018 00000000 		.4byte	.LFB65
 2602 001c BC070000 		.4byte	.LFE65-.LFB65
 2603 0020 00000000 		.4byte	.LFB66
 2604 0024 3E000000 		.4byte	.LFE66-.LFB66
 2605 0028 00000000 		.4byte	.LFB67
 2606 002c 26000000 		.4byte	.LFE67-.LFB67
 2607 0030 00000000 		.4byte	0
 2608 0034 00000000 		.4byte	0
 2609              		.section	.debug_ranges,"",%progbits
 2610              	.Ldebug_ranges0:
 2611 0000 00000000 		.4byte	.LFB64
 2612 0004 18000000 		.4byte	.LFE64
 2613 0008 00000000 		.4byte	.LFB65
 2614 000c BC070000 		.4byte	.LFE65
 2615 0010 00000000 		.4byte	.LFB66
 2616 0014 3E000000 		.4byte	.LFE66
 2617 0018 00000000 		.4byte	.LFB67
 2618 001c 26000000 		.4byte	.LFE67
 2619 0020 00000000 		.4byte	0
 2620 0024 00000000 		.4byte	0
 2621              		.section	.debug_line,"",%progbits
 2622              	.Ldebug_line0:
 2623 0000 0C030000 		.section	.debug_str,"MS",%progbits,1
 2623      02005601 
 2623      00000201 
 2623      FB0E0D00 
 2623      01010101 
 2624              	.LASF55:
 2625 0000 75736250 		.ascii	"usbPutChar\000"
 2625      75744368 
 2625      617200
 2626              	.LASF37:
 2627 000b 68696768 		.ascii	"highCountLeftIntersection\000"
 2627      436F756E 
 2627      744C6566 
 2627      74496E74 
 2627      65727365 
 2628              	.LASF98:
 2629 0025 73717561 		.ascii	"squares\000"
 2629      72657300 
 2630              	.LASF97:
 2631 002d 6C617374 		.ascii	"lastAdjustDirection\000"
 2631      41646A75 
 2631      73744469 
 2631      72656374 
 2631      696F6E00 
 2632              	.LASF66:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 56


 2633 0041 666C6167 		.ascii	"flag_packet\000"
 2633      5F706163 
 2633      6B657400 
 2634              	.LASF103:
 2635 004d 483A5C44 		.ascii	"H:\\Desktop\\Team 14\\team14\\301_lab_tasks\\psoc s"
 2635      65736B74 
 2635      6F705C54 
 2635      65616D20 
 2635      31345C74 
 2636 007b 74756465 		.ascii	"tudent pack\\psoc_code_base\\CS301_Class.cydsn\000"
 2636      6E742070 
 2636      61636B5C 
 2636      70736F63 
 2636      5F636F64 
 2637              	.LASF80:
 2638 00a8 76616C75 		.ascii	"valuesLeftLine\000"
 2638      65734C65 
 2638      66744C69 
 2638      6E6500
 2639              	.LASF63:
 2640 00b7 666C6167 		.ascii	"flag_ts_speed\000"
 2640      5F74735F 
 2640      73706565 
 2640      6400
 2641              	.LASF33:
 2642 00c5 67325F78 		.ascii	"g2_xpos\000"
 2642      706F7300 
 2643              	.LASF2:
 2644 00cd 73686F72 		.ascii	"short int\000"
 2644      7420696E 
 2644      7400
 2645              	.LASF82:
 2646 00d7 76616C75 		.ascii	"valuesTurnComplete\000"
 2646      65735475 
 2646      726E436F 
 2646      6D706C65 
 2646      746500
 2647              	.LASF74:
 2648 00ea 73797374 		.ascii	"system_state\000"
 2648      656D5F73 
 2648      74617465 
 2648      00
 2649              	.LASF10:
 2650 00f7 73697A65 		.ascii	"sizetype\000"
 2650      74797065 
 2650      00
 2651              	.LASF92:
 2652 0100 7475726E 		.ascii	"turnComplete\000"
 2652      436F6D70 
 2652      6C657465 
 2652      00
 2653              	.LASF73:
 2654 010d 75736242 		.ascii	"usbBuffer\000"
 2654      75666665 
 2654      7200
 2655              	.LASF101:
 2656 0117 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 57


 2656      43313120 
 2656      352E342E 
 2656      31203230 
 2656      31363036 
 2657 014a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2657      20726576 
 2657      6973696F 
 2657      6E203233 
 2657      37373135 
 2658 017d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2658      66756E63 
 2658      74696F6E 
 2658      2D736563 
 2658      74696F6E 
 2659              	.LASF53:
 2660 01a5 6D61696E 		.ascii	"main\000"
 2660      00
 2661              	.LASF83:
 2662 01aa 76616C75 		.ascii	"valuesRightLine\000"
 2662      65735269 
 2662      6768744C 
 2662      696E6500 
 2663              	.LASF36:
 2664 01ba 67325F64 		.ascii	"g2_direction\000"
 2664      69726563 
 2664      74696F6E 
 2664      00
 2665              	.LASF15:
 2666 01c7 75696E74 		.ascii	"uint16\000"
 2666      313600
 2667              	.LASF21:
 2668 01ce 696E6465 		.ascii	"index\000"
 2668      7800
 2669              	.LASF17:
 2670 01d4 696E7431 		.ascii	"int16\000"
 2670      3600
 2671              	.LASF14:
 2672 01da 75696E74 		.ascii	"uint8\000"
 2672      3800
 2673              	.LASF32:
 2674 01e0 67315F64 		.ascii	"g1_direction\000"
 2674      69726563 
 2674      74696F6E 
 2674      00
 2675              	.LASF84:
 2676 01ed 76616C75 		.ascii	"valuesRightIntersection\000"
 2676      65735269 
 2676      67687449 
 2676      6E746572 
 2676      73656374 
 2677              	.LASF93:
 2678 0205 70756C73 		.ascii	"pulsesTravelled\000"
 2678      65735472 
 2678      6176656C 
 2678      6C656400 
 2679              	.LASF71:
 2680 0215 6C696E65 		.ascii	"line\000"
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 58


 2680      00
 2681              	.LASF0:
 2682 021a 7369676E 		.ascii	"signed char\000"
 2682      65642063 
 2682      68617200 
 2683              	.LASF18:
 2684 0226 666C6F61 		.ascii	"float\000"
 2684      7400
 2685              	.LASF76:
 2686 022c 73746172 		.ascii	"started\000"
 2686      74656400 
 2687              	.LASF6:
 2688 0234 6C6F6E67 		.ascii	"long long int\000"
 2688      206C6F6E 
 2688      6720696E 
 2688      7400
 2689              	.LASF54:
 2690 0242 75736250 		.ascii	"usbPutString\000"
 2690      75745374 
 2690      72696E67 
 2690      00
 2691              	.LASF16:
 2692 024f 696E7438 		.ascii	"int8\000"
 2692      00
 2693              	.LASF62:
 2694 0254 666C6167 		.ascii	"flag_ts_update\000"
 2694      5F74735F 
 2694      75706461 
 2694      746500
 2695              	.LASF34:
 2696 0263 67325F79 		.ascii	"g2_ypos\000"
 2696      706F7300 
 2697              	.LASF28:
 2698 026b 67305F64 		.ascii	"g0_direction\000"
 2698      69726563 
 2698      74696F6E 
 2698      00
 2699              	.LASF25:
 2700 0278 67305F78 		.ascii	"g0_xpos\000"
 2700      706F7300 
 2701              	.LASF4:
 2702 0280 6C6F6E67 		.ascii	"long int\000"
 2702      20696E74 
 2702      00
 2703              	.LASF87:
 2704 0289 6C617374 		.ascii	"lastVeerDirection\000"
 2704      56656572 
 2704      44697265 
 2704      6374696F 
 2704      6E00
 2705              	.LASF96:
 2706 029b 696E7465 		.ascii	"interruptFlag\000"
 2706      72727570 
 2706      74466C61 
 2706      6700
 2707              	.LASF64:
 2708 02a9 666C6167 		.ascii	"flag_ts_display\000"
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 59


 2708      5F74735F 
 2708      64697370 
 2708      6C617900 
 2709              	.LASF46:
 2710 02b9 63757272 		.ascii	"currentInst\000"
 2710      656E7449 
 2710      6E737400 
 2711              	.LASF94:
 2712 02c5 63686563 		.ascii	"checkDistance\000"
 2712      6B446973 
 2712      74616E63 
 2712      6500
 2713              	.LASF42:
 2714 02d3 68696768 		.ascii	"highCountRightIntersection\000"
 2714      436F756E 
 2714      74526967 
 2714      6874496E 
 2714      74657273 
 2715              	.LASF1:
 2716 02ee 756E7369 		.ascii	"unsigned char\000"
 2716      676E6564 
 2716      20636861 
 2716      7200
 2717              	.LASF30:
 2718 02fc 67315F79 		.ascii	"g1_ypos\000"
 2718      706F7300 
 2719              	.LASF9:
 2720 0304 6C6F6E67 		.ascii	"long double\000"
 2720      20646F75 
 2720      626C6500 
 2721              	.LASF72:
 2722 0310 656E7472 		.ascii	"entry\000"
 2722      7900
 2723              	.LASF43:
 2724 0316 72657375 		.ascii	"result1\000"
 2724      6C743100 
 2725              	.LASF44:
 2726 031e 72657375 		.ascii	"result2\000"
 2726      6C743200 
 2727              	.LASF45:
 2728 0326 66697273 		.ascii	"firstNonZeroIndex\000"
 2728      744E6F6E 
 2728      5A65726F 
 2728      496E6465 
 2728      7800
 2729              	.LASF27:
 2730 0338 67305F73 		.ascii	"g0_speed\000"
 2730      70656564 
 2730      00
 2731              	.LASF31:
 2732 0341 67315F73 		.ascii	"g1_speed\000"
 2732      70656564 
 2732      00
 2733              	.LASF41:
 2734 034a 68696768 		.ascii	"highCountRightLine\000"
 2734      436F756E 
 2734      74526967 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 60


 2734      68744C69 
 2734      6E6500
 2735              	.LASF68:
 2736 035d 64617461 		.ascii	"dataready_flag\000"
 2736      72656164 
 2736      795F666C 
 2736      616700
 2737              	.LASF65:
 2738 036c 666C6167 		.ascii	"flag_rx\000"
 2738      5F727800 
 2739              	.LASF50:
 2740 0374 7365636F 		.ascii	"second\000"
 2740      6E6400
 2741              	.LASF7:
 2742 037b 6C6F6E67 		.ascii	"long long unsigned int\000"
 2742      206C6F6E 
 2742      6720756E 
 2742      7369676E 
 2742      65642069 
 2743              	.LASF8:
 2744 0392 756E7369 		.ascii	"unsigned int\000"
 2744      676E6564 
 2744      20696E74 
 2744      00
 2745              	.LASF67:
 2746 039f 666C6167 		.ascii	"flag_KB_string\000"
 2746      5F4B425F 
 2746      73747269 
 2746      6E6700
 2747              	.LASF75:
 2748 03ae 636F6E73 		.ascii	"consecStops\000"
 2748      65635374 
 2748      6F707300 
 2749              	.LASF35:
 2750 03ba 67325F73 		.ascii	"g2_speed\000"
 2750      70656564 
 2750      00
 2751              	.LASF47:
 2752 03c3 64697374 		.ascii	"dist\000"
 2752      00
 2753              	.LASF29:
 2754 03c8 67315F78 		.ascii	"g1_xpos\000"
 2754      706F7300 
 2755              	.LASF3:
 2756 03d0 73686F72 		.ascii	"short unsigned int\000"
 2756      7420756E 
 2756      7369676E 
 2756      65642069 
 2756      6E7400
 2757              	.LASF39:
 2758 03e3 68696768 		.ascii	"highCountMiddleLine\000"
 2758      436F756E 
 2758      744D6964 
 2758      646C654C 
 2758      696E6500 
 2759              	.LASF81:
 2760 03f7 76616C75 		.ascii	"valuesMiddleLine\000"
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 61


 2760      65734D69 
 2760      64646C65 
 2760      4C696E65 
 2760      00
 2761              	.LASF104:
 2762 0408 64617461 		.ascii	"data_main\000"
 2762      5F6D6169 
 2762      6E00
 2763              	.LASF11:
 2764 0412 63686172 		.ascii	"char\000"
 2764      00
 2765              	.LASF100:
 2766 0417 64697374 		.ascii	"distance\000"
 2766      616E6365 
 2766      00
 2767              	.LASF22:
 2768 0420 726F626F 		.ascii	"robot_xpos\000"
 2768      745F7870 
 2768      6F7300
 2769              	.LASF13:
 2770 042b 696E7433 		.ascii	"int32_t\000"
 2770      325F7400 
 2771              	.LASF78:
 2772 0433 666C6167 		.ascii	"flag\000"
 2772      00
 2773              	.LASF12:
 2774 0438 5F5F696E 		.ascii	"__int32_t\000"
 2774      7433325F 
 2774      7400
 2775              	.LASF48:
 2776 0442 70756C73 		.ascii	"pulses\000"
 2776      657300
 2777              	.LASF52:
 2778 0449 6356616C 		.ascii	"cVal\000"
 2778      00
 2779              	.LASF79:
 2780 044e 76616C75 		.ascii	"valuesLeftIntersection\000"
 2780      65734C65 
 2780      6674496E 
 2780      74657273 
 2780      65637469 
 2781              	.LASF70:
 2782 0465 64697370 		.ascii	"displaystring\000"
 2782      6C617973 
 2782      7472696E 
 2782      6700
 2783              	.LASF90:
 2784 0473 76324D31 		.ascii	"v2M1\000"
 2784      00
 2785              	.LASF91:
 2786 0478 76324D32 		.ascii	"v2M2\000"
 2786      00
 2787              	.LASF38:
 2788 047d 68696768 		.ascii	"highCountLeftLine\000"
 2788      436F756E 
 2788      744C6566 
 2788      744C696E 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 62


 2788      6500
 2789              	.LASF102:
 2790 048f 6D61696E 		.ascii	"main.c\000"
 2790      2E6300
 2791              	.LASF5:
 2792 0496 6C6F6E67 		.ascii	"long unsigned int\000"
 2792      20756E73 
 2792      69676E65 
 2792      6420696E 
 2792      7400
 2793              	.LASF19:
 2794 04a8 646F7562 		.ascii	"double\000"
 2794      6C6500
 2795              	.LASF56:
 2796 04af 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2796      52784275 
 2796      66666572 
 2796      00
 2797              	.LASF77:
 2798 04bc 696E7374 		.ascii	"instCounter\000"
 2798      436F756E 
 2798      74657200 
 2799              	.LASF85:
 2800 04c8 636F756E 		.ascii	"count\000"
 2800      7400
 2801              	.LASF61:
 2802 04ce 666C6167 		.ascii	"flag_ts_enc\000"
 2802      5F74735F 
 2802      656E6300 
 2803              	.LASF88:
 2804 04da 76314D31 		.ascii	"v1M1\000"
 2804      00
 2805              	.LASF89:
 2806 04df 76314D32 		.ascii	"v1M2\000"
 2806      00
 2807              	.LASF86:
 2808 04e4 6D6F746F 		.ascii	"motorUpdateCount\000"
 2808      72557064 
 2808      61746543 
 2808      6F756E74 
 2808      00
 2809              	.LASF26:
 2810 04f5 67305F79 		.ascii	"g0_ypos\000"
 2810      706F7300 
 2811              	.LASF60:
 2812 04fd 74735F64 		.ascii	"ts_display\000"
 2812      6973706C 
 2812      617900
 2813              	.LASF59:
 2814 0508 74735F73 		.ascii	"ts_speed\000"
 2814      70656564 
 2814      00
 2815              	.LASF57:
 2816 0511 74735F65 		.ascii	"ts_enc\000"
 2816      6E6300
 2817              	.LASF58:
 2818 0518 74735F75 		.ascii	"ts_update\000"
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccbufvjb.s 			page 63


 2818      70646174 
 2818      6500
 2819              	.LASF69:
 2820 0522 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2820      5F72665F 
 2820      7472616E 
 2820      736D6973 
 2820      73696F6E 
 2821              	.LASF23:
 2822 053e 726F626F 		.ascii	"robot_ypos\000"
 2822      745F7970 
 2822      6F7300
 2823              	.LASF51:
 2824 0549 696E7374 		.ascii	"instStr\000"
 2824      53747200 
 2825              	.LASF99:
 2826 0551 696E7374 		.ascii	"instruction\000"
 2826      72756374 
 2826      696F6E00 
 2827              	.LASF40:
 2828 055d 68696768 		.ascii	"highCountTurnComplete\000"
 2828      436F756E 
 2828      74547572 
 2828      6E436F6D 
 2828      706C6574 
 2829              	.LASF95:
 2830 0573 73746570 		.ascii	"step\000"
 2830      00
 2831              	.LASF20:
 2832 0578 72737369 		.ascii	"rssi\000"
 2832      00
 2833              	.LASF24:
 2834 057d 726F626F 		.ascii	"robot_orientation\000"
 2834      745F6F72 
 2834      69656E74 
 2834      6174696F 
 2834      6E00
 2835              	.LASF49:
 2836 058f 66697273 		.ascii	"first\000"
 2836      7400
 2837              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
