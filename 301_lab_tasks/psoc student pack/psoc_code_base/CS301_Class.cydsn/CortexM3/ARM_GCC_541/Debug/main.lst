ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	consecStops
 107              		.bss
 108 0012 0000     		.align	2
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 3


 109              		.type	consecStops, %object
 110              		.size	consecStops, 4
 111              	consecStops:
 112 0014 00000000 		.space	4
 113              		.global	started
 114              		.align	2
 115              		.type	started, %object
 116              		.size	started, 4
 117              	started:
 118 0018 00000000 		.space	4
 119              		.global	instCounter
 120              		.align	2
 121              		.type	instCounter, %object
 122              		.size	instCounter, 4
 123              	instCounter:
 124 001c 00000000 		.space	4
 125              		.global	flag
 126              		.align	2
 127              		.type	flag, %object
 128              		.size	flag, 4
 129              	flag:
 130 0020 00000000 		.space	4
 131              		.comm	valuesLeftIntersection,4000,4
 132              		.comm	valuesLeftLine,4000,4
 133              		.comm	valuesMiddleLine,4000,4
 134              		.comm	valuesTurnComplete,4000,4
 135              		.comm	valuesRightLine,4000,4
 136              		.comm	valuesRightIntersection,4000,4
 137              		.global	count
 138              		.align	2
 139              		.type	count, %object
 140              		.size	count, 4
 141              	count:
 142 0024 00000000 		.space	4
 143              		.global	motorUpdateCount
 144              		.align	2
 145              		.type	motorUpdateCount, %object
 146              		.size	motorUpdateCount, 4
 147              	motorUpdateCount:
 148 0028 00000000 		.space	4
 149              		.global	lastVeerDirection
 150              		.align	2
 151              		.type	lastVeerDirection, %object
 152              		.size	lastVeerDirection, 4
 153              	lastVeerDirection:
 154 002c 00000000 		.space	4
 155              		.comm	v1M1,4,4
 156              		.comm	v1M2,4,4
 157              		.comm	v2M1,4,4
 158              		.comm	v2M2,4,4
 159              		.global	turnComplete
 160              		.data
 161              		.align	2
 162              		.type	turnComplete, %object
 163              		.size	turnComplete, 4
 164              	turnComplete:
 165 0044 FFFFFFFF 		.word	-1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 4


 166              		.global	pulsesTravelled
 167              		.bss
 168              		.align	2
 169              		.type	pulsesTravelled, %object
 170              		.size	pulsesTravelled, 4
 171              	pulsesTravelled:
 172 0030 00000000 		.space	4
 173              		.global	checkDistance
 174              		.align	2
 175              		.type	checkDistance, %object
 176              		.size	checkDistance, 4
 177              	checkDistance:
 178 0034 00000000 		.space	4
 179              		.global	step
 180              		.align	2
 181              		.type	step, %object
 182              		.size	step, 4
 183              	step:
 184 0038 00000000 		.space	4
 185              		.global	interruptFlag
 186              		.align	2
 187              		.type	interruptFlag, %object
 188              		.size	interruptFlag, 4
 189              	interruptFlag:
 190 003c 00000000 		.space	4
 191              		.global	lastAdjustDirection
 192              		.align	2
 193              		.type	lastAdjustDirection, %object
 194              		.size	lastAdjustDirection, 4
 195              	lastAdjustDirection:
 196 0040 00000000 		.space	4
 197              		.comm	squares,1000,4
 198              		.comm	instruction,500,4
 199              		.comm	distance,500,4
 200              		.section	.text.eoc,"ax",%progbits
 201              		.align	2
 202              		.global	eoc
 203              		.thumb
 204              		.thumb_func
 205              		.type	eoc, %function
 206              	eoc:
 207              	.LFB64:
 208              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 5


  15:main.c        ****  * ========================================
  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** 
  30:main.c        **** #include "pathfind.h"
  31:main.c        **** 
  32:main.c        **** #include "vars.h"
  33:main.c        **** 
  34:main.c        **** #define ADC_COUNT 1000
  35:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 75
  36:main.c        **** #define R_INT_BLACK highCountRightIntersection < 75
  37:main.c        **** #define L_LINE_BLACK highCountLeftLine < 75
  38:main.c        **** #define R_LINE_BLACK highCountRightLine < 75
  39:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 75
  40:main.c        **** #define TC_BLACK highCountTurnComplete < 75
  41:main.c        **** 
  42:main.c        **** int consecStops = 0;
  43:main.c        **** int started = 0;
  44:main.c        **** int instCounter = 0;
  45:main.c        **** //* ========================================
  46:main.c        **** void usbPutString(char * s);
  47:main.c        **** void usbPutChar(char c);
  48:main.c        **** //* ========================================
  49:main.c        **** 
  50:main.c        **** volatile int flag = 0;
  51:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  52:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  53:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  54:main.c        **** volatile int valuesTurnComplete[ADC_COUNT];
  55:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  56:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  57:main.c        **** volatile int count = 0;
  58:main.c        **** volatile int motorUpdateCount = 0;
  59:main.c        **** volatile int lastVeerDirection = 0;
  60:main.c        **** 
  61:main.c        **** volatile int v1M1;
  62:main.c        **** volatile int v1M2;
  63:main.c        **** volatile int v2M1;
  64:main.c        **** volatile int v2M2;
  65:main.c        **** volatile int turnComplete = -1;
  66:main.c        **** int pulsesTravelled = 0;
  67:main.c        **** volatile int checkDistance = 0;
  68:main.c        **** volatile int step = 0;
  69:main.c        **** volatile int interruptFlag = 0;
  70:main.c        **** 
  71:main.c        **** int lastAdjustDirection = 0;
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 6


  72:main.c        **** unsigned char squares[500][2];
  73:main.c        **** unsigned char instruction[500];
  74:main.c        **** unsigned char distance[500];
  75:main.c        **** 
  76:main.c        **** CY_ISR(eoc) {
 209              		.loc 1 76 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214 0000 80B4     		push	{r7}
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 7, -4
 217 0002 00AF     		add	r7, sp, #0
 218              		.cfi_def_cfa_register 7
  77:main.c        ****     flag = 1;
 219              		.loc 1 77 0
 220 0004 034B     		ldr	r3, .L2
 221 0006 0122     		movs	r2, #1
 222 0008 1A60     		str	r2, [r3]
  78:main.c        **** }
 223              		.loc 1 78 0
 224 000a 00BF     		nop
 225 000c BD46     		mov	sp, r7
 226              		.cfi_def_cfa_register 13
 227              		@ sp needed
 228 000e 80BC     		pop	{r7}
 229              		.cfi_restore 7
 230              		.cfi_def_cfa_offset 0
 231 0010 7047     		bx	lr
 232              	.L3:
 233 0012 00BF     		.align	2
 234              	.L2:
 235 0014 00000000 		.word	flag
 236              		.cfi_endproc
 237              	.LFE64:
 238              		.size	eoc, .-eoc
 239              		.global	__aeabi_i2d
 240              		.global	__aeabi_dmul
 241              		.global	__aeabi_ddiv
 242              		.global	__aeabi_dcmple
 243              		.section	.text.main,"ax",%progbits
 244              		.align	2
 245              		.global	main
 246              		.thumb
 247              		.thumb_func
 248              		.type	main, %function
 249              	main:
 250              	.LFB65:
  79:main.c        **** 
  80:main.c        **** int main() {
 251              		.loc 1 80 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 264
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 B0B5     		push	{r4, r5, r7, lr}
 256              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 7


 257              		.cfi_offset 4, -16
 258              		.cfi_offset 5, -12
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 C2B0     		sub	sp, sp, #264
 262              		.cfi_def_cfa_offset 280
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
  81:main.c        ****     CYGlobalIntEnable;
 265              		.loc 1 81 0
 266              		.syntax unified
 267              	@ 81 "main.c" 1
 268 0006 62B6     		CPSIE   i
 269              	@ 0 "" 2
  82:main.c        ****     USBUART_Start(0, USBUART_5V_OPERATION);
 270              		.loc 1 82 0
 271              		.thumb
 272              		.syntax unified
 273 0008 0121     		movs	r1, #1
 274 000a 0020     		movs	r0, #0
 275 000c FFF7FEFF 		bl	USBUART_Start
  83:main.c        ****     //UART_Start();
  84:main.c        **** 
  85:main.c        ****     QuadDec_M1_Start();
 276              		.loc 1 85 0
 277 0010 FFF7FEFF 		bl	QuadDec_M1_Start
  86:main.c        ****     QuadDec_M2_Start();
 278              		.loc 1 86 0
 279 0014 FFF7FEFF 		bl	QuadDec_M2_Start
  87:main.c        **** 
  88:main.c        ****     //isr_TS_StartEx(MyISR);
  89:main.c        **** 
  90:main.c        ****     RF_BT_SELECT_Write(1);
 280              		.loc 1 90 0
 281 0018 0120     		movs	r0, #1
 282 001a FFF7FEFF 		bl	RF_BT_SELECT_Write
  91:main.c        ****     //ADC1_IRQ_Enable();
  92:main.c        ****     ADC1_Start();
 283              		.loc 1 92 0
 284 001e FFF7FEFF 		bl	ADC1_Start
  93:main.c        **** 
  94:main.c        ****     ADC1_StartConvert();
 285              		.loc 1 94 0
 286 0022 FFF7FEFF 		bl	ADC1_StartConvert
  95:main.c        **** 
  96:main.c        ****     eoc_StartEx(eoc);
 287              		.loc 1 96 0
 288 0026 B748     		ldr	r0, .L69
 289 0028 FFF7FEFF 		bl	eoc_StartEx
  97:main.c        **** 
  98:main.c        ****     initMotors();
 290              		.loc 1 98 0
 291 002c FFF7FEFF 		bl	initMotors
  99:main.c        **** 
 100:main.c        ****     stop();
 292              		.loc 1 100 0
 293 0030 FFF7FEFF 		bl	stop
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 8


 294              	.LBB2:
 101:main.c        ****     //isr_TS_StartEx(MyISR);
 102:main.c        ****     //Timer_TS_Start();
 103:main.c        **** 
 104:main.c        ****     // Loop through the arrays and set each element to 55 or 0
 105:main.c        ****     for (int i = 0; i < 500; i++) {
 295              		.loc 1 105 0
 296 0034 0023     		movs	r3, #0
 297 0036 C7F80431 		str	r3, [r7, #260]
 298 003a 23E0     		b	.L5
 299              	.L6:
 106:main.c        ****         squares[i][0] = 55;
 300              		.loc 1 106 0 discriminator 3
 301 003c B24A     		ldr	r2, .L69+4
 302 003e D7F80431 		ldr	r3, [r7, #260]
 303 0042 3721     		movs	r1, #55
 304 0044 02F81310 		strb	r1, [r2, r3, lsl #1]
 107:main.c        ****         squares[i][1] = 55;
 305              		.loc 1 107 0 discriminator 3
 306 0048 AF4A     		ldr	r2, .L69+4
 307 004a D7F80431 		ldr	r3, [r7, #260]
 308 004e 5B00     		lsls	r3, r3, #1
 309 0050 1344     		add	r3, r3, r2
 310 0052 3722     		movs	r2, #55
 311 0054 5A70     		strb	r2, [r3, #1]
 108:main.c        ****         instruction[i] = 0;
 312              		.loc 1 108 0 discriminator 3
 313 0056 AD4A     		ldr	r2, .L69+8
 314 0058 D7F80431 		ldr	r3, [r7, #260]
 315 005c 1344     		add	r3, r3, r2
 316 005e 0022     		movs	r2, #0
 317 0060 1A70     		strb	r2, [r3]
 109:main.c        ****         distance[i] = 0;
 318              		.loc 1 109 0 discriminator 3
 319 0062 AB4A     		ldr	r2, .L69+12
 320 0064 D7F80431 		ldr	r3, [r7, #260]
 321 0068 1344     		add	r3, r3, r2
 322 006a 0022     		movs	r2, #0
 323 006c 1A70     		strb	r2, [r3]
 110:main.c        ****         distance[i] = 55;
 324              		.loc 1 110 0 discriminator 3
 325 006e A84A     		ldr	r2, .L69+12
 326 0070 D7F80431 		ldr	r3, [r7, #260]
 327 0074 1344     		add	r3, r3, r2
 328 0076 3722     		movs	r2, #55
 329 0078 1A70     		strb	r2, [r3]
 105:main.c        ****         squares[i][0] = 55;
 330              		.loc 1 105 0 discriminator 3
 331 007a D7F80431 		ldr	r3, [r7, #260]
 332 007e 0133     		adds	r3, r3, #1
 333 0080 C7F80431 		str	r3, [r7, #260]
 334              	.L5:
 105:main.c        ****         squares[i][0] = 55;
 335              		.loc 1 105 0 is_stmt 0 discriminator 1
 336 0084 D7F80431 		ldr	r3, [r7, #260]
 337 0088 B3F5FA7F 		cmp	r3, #500
 338 008c D6DB     		blt	.L6
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 9


 339              	.LBE2:
 111:main.c        ****     }
 112:main.c        ****     pathfind(instruction, distance, squares);
 340              		.loc 1 112 0 is_stmt 1
 341 008e 9E4A     		ldr	r2, .L69+4
 342 0090 9F49     		ldr	r1, .L69+12
 343 0092 9E48     		ldr	r0, .L69+8
 344 0094 FFF7FEFF 		bl	pathfind
 345              	.L68:
 113:main.c        **** 
 114:main.c        ****     //CyDelay(2000);
 115:main.c        ****     for (;;) {
 116:main.c        **** 
 117:main.c        ****         if (flag == 1) {
 346              		.loc 1 117 0
 347 0098 9E4B     		ldr	r3, .L69+16
 348 009a 1B68     		ldr	r3, [r3]
 349 009c 012B     		cmp	r3, #1
 350 009e FBD1     		bne	.L68
 118:main.c        **** 
 119:main.c        ****             ADC1_IRQ_Disable();
 351              		.loc 1 119 0
 352 00a0 FFF7FEFF 		bl	ADC1_IRQ_Disable
 120:main.c        ****             valuesLeftIntersection[count] = ADC1_GetResult16(0);
 353              		.loc 1 120 0
 354 00a4 9C4B     		ldr	r3, .L69+20
 355 00a6 1C68     		ldr	r4, [r3]
 356 00a8 0020     		movs	r0, #0
 357 00aa FFF7FEFF 		bl	ADC1_GetResult16
 358 00ae 0346     		mov	r3, r0
 359 00b0 1A46     		mov	r2, r3
 360 00b2 9A4B     		ldr	r3, .L69+24
 361 00b4 43F82420 		str	r2, [r3, r4, lsl #2]
 121:main.c        ****             valuesLeftLine[count] = ADC1_GetResult16(1);
 362              		.loc 1 121 0
 363 00b8 974B     		ldr	r3, .L69+20
 364 00ba 1C68     		ldr	r4, [r3]
 365 00bc 0120     		movs	r0, #1
 366 00be FFF7FEFF 		bl	ADC1_GetResult16
 367 00c2 0346     		mov	r3, r0
 368 00c4 1A46     		mov	r2, r3
 369 00c6 964B     		ldr	r3, .L69+28
 370 00c8 43F82420 		str	r2, [r3, r4, lsl #2]
 122:main.c        ****             valuesMiddleLine[count] = ADC1_GetResult16(2);
 371              		.loc 1 122 0
 372 00cc 924B     		ldr	r3, .L69+20
 373 00ce 1C68     		ldr	r4, [r3]
 374 00d0 0220     		movs	r0, #2
 375 00d2 FFF7FEFF 		bl	ADC1_GetResult16
 376 00d6 0346     		mov	r3, r0
 377 00d8 1A46     		mov	r2, r3
 378 00da 924B     		ldr	r3, .L69+32
 379 00dc 43F82420 		str	r2, [r3, r4, lsl #2]
 123:main.c        ****             valuesTurnComplete[count] = ADC1_GetResult16(3);
 380              		.loc 1 123 0
 381 00e0 8D4B     		ldr	r3, .L69+20
 382 00e2 1C68     		ldr	r4, [r3]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 10


 383 00e4 0320     		movs	r0, #3
 384 00e6 FFF7FEFF 		bl	ADC1_GetResult16
 385 00ea 0346     		mov	r3, r0
 386 00ec 1A46     		mov	r2, r3
 387 00ee 8E4B     		ldr	r3, .L69+36
 388 00f0 43F82420 		str	r2, [r3, r4, lsl #2]
 124:main.c        ****             valuesRightLine[count] = ADC1_GetResult16(4);
 389              		.loc 1 124 0
 390 00f4 884B     		ldr	r3, .L69+20
 391 00f6 1C68     		ldr	r4, [r3]
 392 00f8 0420     		movs	r0, #4
 393 00fa FFF7FEFF 		bl	ADC1_GetResult16
 394 00fe 0346     		mov	r3, r0
 395 0100 1A46     		mov	r2, r3
 396 0102 8A4B     		ldr	r3, .L69+40
 397 0104 43F82420 		str	r2, [r3, r4, lsl #2]
 125:main.c        ****             valuesRightIntersection[count] = ADC1_GetResult16(5);
 398              		.loc 1 125 0
 399 0108 834B     		ldr	r3, .L69+20
 400 010a 1C68     		ldr	r4, [r3]
 401 010c 0520     		movs	r0, #5
 402 010e FFF7FEFF 		bl	ADC1_GetResult16
 403 0112 0346     		mov	r3, r0
 404 0114 1A46     		mov	r2, r3
 405 0116 864B     		ldr	r3, .L69+44
 406 0118 43F82420 		str	r2, [r3, r4, lsl #2]
 126:main.c        **** 
 127:main.c        ****             count++;
 407              		.loc 1 127 0
 408 011c 7E4B     		ldr	r3, .L69+20
 409 011e 1B68     		ldr	r3, [r3]
 410 0120 0133     		adds	r3, r3, #1
 411 0122 7D4A     		ldr	r2, .L69+20
 412 0124 1360     		str	r3, [r2]
 128:main.c        ****             if (count == ADC_COUNT) {
 413              		.loc 1 128 0
 414 0126 7C4B     		ldr	r3, .L69+20
 415 0128 1B68     		ldr	r3, [r3]
 416 012a B3F57A7F 		cmp	r3, #1000
 417 012e 40F0EB83 		bne	.L8
 418              	.LBB3:
 129:main.c        **** 
 130:main.c        ****                 count = 0;
 419              		.loc 1 130 0
 420 0132 794B     		ldr	r3, .L69+20
 421 0134 0022     		movs	r2, #0
 422 0136 1A60     		str	r2, [r3]
 131:main.c        ****                 motorUpdateCount++;
 423              		.loc 1 131 0
 424 0138 7E4B     		ldr	r3, .L69+48
 425 013a 1B68     		ldr	r3, [r3]
 426 013c 0133     		adds	r3, r3, #1
 427 013e 7D4A     		ldr	r2, .L69+48
 428 0140 1360     		str	r3, [r2]
 132:main.c        ****                 int highCountLeftIntersection = 0;
 429              		.loc 1 132 0
 430 0142 0023     		movs	r3, #0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 11


 431 0144 C7F80031 		str	r3, [r7, #256]
 133:main.c        ****                 int highCountLeftLine = 0;
 432              		.loc 1 133 0
 433 0148 0023     		movs	r3, #0
 434 014a C7F8FC30 		str	r3, [r7, #252]
 134:main.c        ****                 int highCountMiddleLine = 0;
 435              		.loc 1 134 0
 436 014e 0023     		movs	r3, #0
 437 0150 C7F8F830 		str	r3, [r7, #248]
 135:main.c        ****                 int highCountTurnComplete = 0;
 438              		.loc 1 135 0
 439 0154 0023     		movs	r3, #0
 440 0156 C7F8F430 		str	r3, [r7, #244]
 136:main.c        ****                 int highCountRightLine = 0;
 441              		.loc 1 136 0
 442 015a 0023     		movs	r3, #0
 443 015c C7F8F030 		str	r3, [r7, #240]
 137:main.c        ****                 int highCountRightIntersection = 0;
 444              		.loc 1 137 0
 445 0160 0023     		movs	r3, #0
 446 0162 C7F8EC30 		str	r3, [r7, #236]
 447              	.LBB4:
 138:main.c        ****                 for (int i = 0; i < ADC_COUNT; i++) {
 448              		.loc 1 138 0
 449 0166 0023     		movs	r3, #0
 450 0168 C7F8E830 		str	r3, [r7, #232]
 451 016c 97E0     		b	.L9
 452              	.L19:
 453              	.LBB5:
 139:main.c        ****                     step = 0;
 454              		.loc 1 139 0
 455 016e 724B     		ldr	r3, .L69+52
 456 0170 0022     		movs	r2, #0
 457 0172 1A60     		str	r2, [r3]
 140:main.c        ****                     char result1[24];
 141:main.c        ****                     char result2[24];
 142:main.c        ****                     if (motorUpdateCount == 1) {
 458              		.loc 1 142 0
 459 0174 6F4B     		ldr	r3, .L69+48
 460 0176 1B68     		ldr	r3, [r3]
 461 0178 012B     		cmp	r3, #1
 462 017a 3DD1     		bne	.L10
 143:main.c        ****                         if (turnComplete == -1 || turnComplete == 1) {
 463              		.loc 1 143 0
 464 017c 6F4B     		ldr	r3, .L69+56
 465 017e 1B68     		ldr	r3, [r3]
 466 0180 B3F1FF3F 		cmp	r3, #-1
 467 0184 03D0     		beq	.L11
 468              		.loc 1 143 0 is_stmt 0 discriminator 1
 469 0186 6D4B     		ldr	r3, .L69+56
 470 0188 1B68     		ldr	r3, [r3]
 471 018a 012B     		cmp	r3, #1
 472 018c 2BD1     		bne	.L12
 473              	.L11:
 144:main.c        ****                             v2M1 = QuadDec_M1_GetCounter() * -1;
 474              		.loc 1 144 0 is_stmt 1
 475 018e FFF7FEFF 		bl	QuadDec_M1_GetCounter
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 12


 476 0192 0346     		mov	r3, r0
 477 0194 5B42     		negs	r3, r3
 478 0196 6A4A     		ldr	r2, .L69+60
 479 0198 1360     		str	r3, [r2]
 145:main.c        ****                             v2M2 = QuadDec_M2_GetCounter() * -1;
 480              		.loc 1 145 0
 481 019a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 482 019e 0346     		mov	r3, r0
 483 01a0 5B42     		negs	r3, r3
 484 01a2 684A     		ldr	r2, .L69+64
 485 01a4 1360     		str	r3, [r2]
 146:main.c        ****                             pulsesTravelled = pulsesTravelled + v2M1 + v2M2;
 486              		.loc 1 146 0
 487 01a6 684B     		ldr	r3, .L69+68
 488 01a8 1A68     		ldr	r2, [r3]
 489 01aa 654B     		ldr	r3, .L69+60
 490 01ac 1B68     		ldr	r3, [r3]
 491 01ae 1A44     		add	r2, r2, r3
 492 01b0 644B     		ldr	r3, .L69+64
 493 01b2 1B68     		ldr	r3, [r3]
 494 01b4 1344     		add	r3, r3, r2
 495 01b6 644A     		ldr	r2, .L69+68
 496 01b8 1360     		str	r3, [r2]
 147:main.c        ****                             itoa((v2M1 - v1M1), result1, 10);
 497              		.loc 1 147 0
 498 01ba 614B     		ldr	r3, .L69+60
 499 01bc 1A68     		ldr	r2, [r3]
 500 01be 634B     		ldr	r3, .L69+72
 501 01c0 1B68     		ldr	r3, [r3]
 502 01c2 D31A     		subs	r3, r2, r3
 503 01c4 07F1C001 		add	r1, r7, #192
 504 01c8 0A22     		movs	r2, #10
 505 01ca 1846     		mov	r0, r3
 506 01cc FFF7FEFF 		bl	itoa
 148:main.c        ****                             itoa((v2M2 - v1M2), result2, 10);
 507              		.loc 1 148 0
 508 01d0 5C4B     		ldr	r3, .L69+64
 509 01d2 1A68     		ldr	r2, [r3]
 510 01d4 5E4B     		ldr	r3, .L69+76
 511 01d6 1B68     		ldr	r3, [r3]
 512 01d8 D31A     		subs	r3, r2, r3
 513 01da 07F1A801 		add	r1, r7, #168
 514 01de 0A22     		movs	r2, #10
 515 01e0 1846     		mov	r0, r3
 516 01e2 FFF7FEFF 		bl	itoa
 517              	.L12:
 149:main.c        ****                         }
 150:main.c        ****                         QuadDec_M1_SetCounter(0);
 518              		.loc 1 150 0
 519 01e6 0020     		movs	r0, #0
 520 01e8 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 151:main.c        ****                         QuadDec_M2_SetCounter(0);
 521              		.loc 1 151 0
 522 01ec 0020     		movs	r0, #0
 523 01ee FFF7FEFF 		bl	QuadDec_M2_SetCounter
 152:main.c        ****                         motorUpdateCount = 0;
 524              		.loc 1 152 0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 13


 525 01f2 504B     		ldr	r3, .L69+48
 526 01f4 0022     		movs	r2, #0
 527 01f6 1A60     		str	r2, [r3]
 528              	.L10:
 153:main.c        ****                     }
 154:main.c        ****                     if (valuesLeftIntersection[i] > 2000) {
 529              		.loc 1 154 0
 530 01f8 484A     		ldr	r2, .L69+24
 531 01fa D7F8E830 		ldr	r3, [r7, #232]
 532 01fe 52F82330 		ldr	r3, [r2, r3, lsl #2]
 533 0202 B3F5FA6F 		cmp	r3, #2000
 534 0206 04DD     		ble	.L13
 155:main.c        ****                         highCountLeftIntersection++;
 535              		.loc 1 155 0
 536 0208 D7F80031 		ldr	r3, [r7, #256]
 537 020c 0133     		adds	r3, r3, #1
 538 020e C7F80031 		str	r3, [r7, #256]
 539              	.L13:
 156:main.c        **** 
 157:main.c        ****                     }
 158:main.c        **** 
 159:main.c        ****                     if (valuesLeftLine[i] > 2000) {
 540              		.loc 1 159 0
 541 0212 434A     		ldr	r2, .L69+28
 542 0214 D7F8E830 		ldr	r3, [r7, #232]
 543 0218 52F82330 		ldr	r3, [r2, r3, lsl #2]
 544 021c B3F5FA6F 		cmp	r3, #2000
 545 0220 04DD     		ble	.L14
 160:main.c        ****                         highCountLeftLine++;
 546              		.loc 1 160 0
 547 0222 D7F8FC30 		ldr	r3, [r7, #252]
 548 0226 0133     		adds	r3, r3, #1
 549 0228 C7F8FC30 		str	r3, [r7, #252]
 550              	.L14:
 161:main.c        **** 
 162:main.c        ****                     }
 163:main.c        **** 
 164:main.c        ****                     if (valuesMiddleLine[i] > 2000) {
 551              		.loc 1 164 0
 552 022c 3D4A     		ldr	r2, .L69+32
 553 022e D7F8E830 		ldr	r3, [r7, #232]
 554 0232 52F82330 		ldr	r3, [r2, r3, lsl #2]
 555 0236 B3F5FA6F 		cmp	r3, #2000
 556 023a 04DD     		ble	.L15
 165:main.c        ****                         highCountMiddleLine++;
 557              		.loc 1 165 0
 558 023c D7F8F830 		ldr	r3, [r7, #248]
 559 0240 0133     		adds	r3, r3, #1
 560 0242 C7F8F830 		str	r3, [r7, #248]
 561              	.L15:
 166:main.c        **** 
 167:main.c        ****                     }
 168:main.c        **** 
 169:main.c        ****                     if (valuesTurnComplete[i] > 2000) {
 562              		.loc 1 169 0
 563 0246 384A     		ldr	r2, .L69+36
 564 0248 D7F8E830 		ldr	r3, [r7, #232]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 14


 565 024c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 566 0250 B3F5FA6F 		cmp	r3, #2000
 567 0254 04DD     		ble	.L16
 170:main.c        ****                         highCountTurnComplete++;
 568              		.loc 1 170 0
 569 0256 D7F8F430 		ldr	r3, [r7, #244]
 570 025a 0133     		adds	r3, r3, #1
 571 025c C7F8F430 		str	r3, [r7, #244]
 572              	.L16:
 171:main.c        **** 
 172:main.c        ****                     }
 173:main.c        **** 
 174:main.c        ****                     if (valuesRightLine[i] > 2000) {
 573              		.loc 1 174 0
 574 0260 324A     		ldr	r2, .L69+40
 575 0262 D7F8E830 		ldr	r3, [r7, #232]
 576 0266 52F82330 		ldr	r3, [r2, r3, lsl #2]
 577 026a B3F5FA6F 		cmp	r3, #2000
 578 026e 04DD     		ble	.L17
 175:main.c        ****                         highCountRightLine++;
 579              		.loc 1 175 0
 580 0270 D7F8F030 		ldr	r3, [r7, #240]
 581 0274 0133     		adds	r3, r3, #1
 582 0276 C7F8F030 		str	r3, [r7, #240]
 583              	.L17:
 176:main.c        **** 
 177:main.c        ****                     }
 178:main.c        **** 
 179:main.c        ****                     if (valuesRightIntersection[i] > 2000) {
 584              		.loc 1 179 0
 585 027a 2D4A     		ldr	r2, .L69+44
 586 027c D7F8E830 		ldr	r3, [r7, #232]
 587 0280 52F82330 		ldr	r3, [r2, r3, lsl #2]
 588 0284 B3F5FA6F 		cmp	r3, #2000
 589 0288 04DD     		ble	.L18
 180:main.c        ****                         highCountRightIntersection++;
 590              		.loc 1 180 0
 591 028a D7F8EC30 		ldr	r3, [r7, #236]
 592 028e 0133     		adds	r3, r3, #1
 593 0290 C7F8EC30 		str	r3, [r7, #236]
 594              	.L18:
 595              	.LBE5:
 138:main.c        ****                     step = 0;
 596              		.loc 1 138 0 discriminator 2
 597 0294 D7F8E830 		ldr	r3, [r7, #232]
 598 0298 0133     		adds	r3, r3, #1
 599 029a C7F8E830 		str	r3, [r7, #232]
 600              	.L9:
 138:main.c        ****                     step = 0;
 601              		.loc 1 138 0 is_stmt 0 discriminator 1
 602 029e D7F8E830 		ldr	r3, [r7, #232]
 603 02a2 B3F57A7F 		cmp	r3, #1000
 604 02a6 FFF662AF 		blt	.L19
 605              	.LBE4:
 181:main.c        **** 
 182:main.c        ****                     }
 183:main.c        **** 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 15


 184:main.c        ****                 }
 185:main.c        **** 
 186:main.c        ****                 if (started == 0) {
 606              		.loc 1 186 0 is_stmt 1
 607 02aa 2A4B     		ldr	r3, .L69+80
 608 02ac 1B68     		ldr	r3, [r3]
 609 02ae 002B     		cmp	r3, #0
 610 02b0 40F0AF80 		bne	.L20
 611              	.LBB6:
 187:main.c        ****                     //LED_PIN_1_Write(!LED_PIN_1_Read());
 188:main.c        ****                     // Look for start using a coarse grain approach, gradually get more fine
 189:main.c        ****                     /*if (instruction[instCounter + 23] == 0 && instruction[instCounter + 24] == 0 
 190:main.c        ****                       instCounter = instCounter + 25;
 191:main.c        ****                     } else if (instruction[instCounter + 8] == 0 && instruction[instCounter + 9] ==
 192:main.c        ****                       instCounter = instCounter + 10;
 193:main.c        ****                     } else if (instruction[instCounter + 3] == 0 && instruction[instCounter + 4] ==
 194:main.c        ****                       instCounter = instCounter + 5;
 195:main.c        ****                     } else {
 196:main.c        ****                       if (instruction[instCounter + 1] == 0) {
 197:main.c        ****                         instCounter++;
 198:main.c        ****                       } else if (instruction[instCounter + 2] == 0) {
 199:main.c        ****                         instCounter = instCounter + 2;
 200:main.c        ****                       } else if (instruction[instCounter + 3] == 0) {
 201:main.c        ****                         instCounter = instCounter + 3;
 202:main.c        ****                       } else if (instruction[instCounter + 4] == 0) {
 203:main.c        ****                         instCounter = instCounter + 4;
 204:main.c        ****                       }
 205:main.c        ****                     }*/
 206:main.c        ****                     int i, firstNonZeroIndex = -1;
 612              		.loc 1 206 0
 613 02b4 4FF0FF33 		mov	r3, #-1
 614 02b8 C7F8E030 		str	r3, [r7, #224]
 207:main.c        ****                     for (i = 0; i < 500; i++) {
 615              		.loc 1 207 0
 616 02bc 0023     		movs	r3, #0
 617 02be C7F8E430 		str	r3, [r7, #228]
 618 02c2 10E0     		b	.L21
 619              	.L24:
 208:main.c        ****                         if (instruction[i] != 0) {
 620              		.loc 1 208 0
 621 02c4 114A     		ldr	r2, .L69+8
 622 02c6 D7F8E430 		ldr	r3, [r7, #228]
 623 02ca 1344     		add	r3, r3, r2
 624 02cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 625 02ce 002B     		cmp	r3, #0
 626 02d0 04D0     		beq	.L22
 209:main.c        ****                             firstNonZeroIndex = i;
 627              		.loc 1 209 0
 628 02d2 D7F8E430 		ldr	r3, [r7, #228]
 629 02d6 C7F8E030 		str	r3, [r7, #224]
 210:main.c        ****                             break;
 630              		.loc 1 210 0
 631 02da 09E0     		b	.L23
 632              	.L22:
 207:main.c        ****                         if (instruction[i] != 0) {
 633              		.loc 1 207 0 discriminator 2
 634 02dc D7F8E430 		ldr	r3, [r7, #228]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 16


 635 02e0 0133     		adds	r3, r3, #1
 636 02e2 C7F8E430 		str	r3, [r7, #228]
 637              	.L21:
 207:main.c        ****                         if (instruction[i] != 0) {
 638              		.loc 1 207 0 is_stmt 0 discriminator 1
 639 02e6 D7F8E430 		ldr	r3, [r7, #228]
 640 02ea B3F5FA7F 		cmp	r3, #500
 641 02ee E9DB     		blt	.L24
 642              	.L23:
 211:main.c        ****                         }
 212:main.c        ****                     }
 213:main.c        **** 
 214:main.c        ****                     if (firstNonZeroIndex != -1) {
 643              		.loc 1 214 0 is_stmt 1
 644 02f0 D7F8E030 		ldr	r3, [r7, #224]
 645 02f4 B3F1FF3F 		cmp	r3, #-1
 646 02f8 72D0     		beq	.L25
 215:main.c        ****                         // Shift the array to start with the first non-zero element
 216:main.c        ****                         for (i = 0; i < 500 - firstNonZeroIndex; i++) {
 647              		.loc 1 216 0
 648 02fa 0023     		movs	r3, #0
 649 02fc C7F8E430 		str	r3, [r7, #228]
 650 0300 49E0     		b	.L26
 651              	.L70:
 652 0302 00BF     		.align	2
 653              	.L69:
 654 0304 00000000 		.word	eoc
 655 0308 00000000 		.word	squares
 656 030c 00000000 		.word	instruction
 657 0310 00000000 		.word	distance
 658 0314 00000000 		.word	flag
 659 0318 00000000 		.word	count
 660 031c 00000000 		.word	valuesLeftIntersection
 661 0320 00000000 		.word	valuesLeftLine
 662 0324 00000000 		.word	valuesMiddleLine
 663 0328 00000000 		.word	valuesTurnComplete
 664 032c 00000000 		.word	valuesRightLine
 665 0330 00000000 		.word	valuesRightIntersection
 666 0334 00000000 		.word	motorUpdateCount
 667 0338 00000000 		.word	step
 668 033c 00000000 		.word	turnComplete
 669 0340 00000000 		.word	v2M1
 670 0344 00000000 		.word	v2M2
 671 0348 00000000 		.word	pulsesTravelled
 672 034c 00000000 		.word	v1M1
 673 0350 00000000 		.word	v1M2
 674 0354 00000000 		.word	started
 675              	.L27:
 217:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 676              		.loc 1 217 0 discriminator 3
 677 0358 D7F8E420 		ldr	r2, [r7, #228]
 678 035c D7F8E030 		ldr	r3, [r7, #224]
 679 0360 1344     		add	r3, r3, r2
 680 0362 C34A     		ldr	r2, .L71
 681 0364 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 682 0366 C24A     		ldr	r2, .L71
 683 0368 D7F8E430 		ldr	r3, [r7, #228]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 17


 684 036c 1344     		add	r3, r3, r2
 685 036e 0A46     		mov	r2, r1
 686 0370 1A70     		strb	r2, [r3]
 218:main.c        ****                             distance[i] = distance[i + firstNonZeroIndex];
 687              		.loc 1 218 0 discriminator 3
 688 0372 D7F8E420 		ldr	r2, [r7, #228]
 689 0376 D7F8E030 		ldr	r3, [r7, #224]
 690 037a 1344     		add	r3, r3, r2
 691 037c BD4A     		ldr	r2, .L71+4
 692 037e D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 693 0380 BC4A     		ldr	r2, .L71+4
 694 0382 D7F8E430 		ldr	r3, [r7, #228]
 695 0386 1344     		add	r3, r3, r2
 696 0388 0A46     		mov	r2, r1
 697 038a 1A70     		strb	r2, [r3]
 216:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 698              		.loc 1 216 0 discriminator 3
 699 038c D7F8E430 		ldr	r3, [r7, #228]
 700 0390 0133     		adds	r3, r3, #1
 701 0392 C7F8E430 		str	r3, [r7, #228]
 702              	.L26:
 216:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 703              		.loc 1 216 0 is_stmt 0 discriminator 1
 704 0396 D7F8E030 		ldr	r3, [r7, #224]
 705 039a C3F5FA72 		rsb	r2, r3, #500
 706 039e D7F8E430 		ldr	r3, [r7, #228]
 707 03a2 9A42     		cmp	r2, r3
 708 03a4 D8DC     		bgt	.L27
 219:main.c        ****                         }
 220:main.c        **** 
 221:main.c        ****                         // Zero out the remaining elements
 222:main.c        ****                         for (i = 500 - firstNonZeroIndex; i < 500; i++) {
 709              		.loc 1 222 0 is_stmt 1
 710 03a6 D7F8E030 		ldr	r3, [r7, #224]
 711 03aa C3F5FA73 		rsb	r3, r3, #500
 712 03ae C7F8E430 		str	r3, [r7, #228]
 713 03b2 10E0     		b	.L28
 714              	.L29:
 223:main.c        ****                             instruction[i] = 0;
 715              		.loc 1 223 0 discriminator 3
 716 03b4 AE4A     		ldr	r2, .L71
 717 03b6 D7F8E430 		ldr	r3, [r7, #228]
 718 03ba 1344     		add	r3, r3, r2
 719 03bc 0022     		movs	r2, #0
 720 03be 1A70     		strb	r2, [r3]
 224:main.c        ****                             distance[i] = 0;
 721              		.loc 1 224 0 discriminator 3
 722 03c0 AC4A     		ldr	r2, .L71+4
 723 03c2 D7F8E430 		ldr	r3, [r7, #228]
 724 03c6 1344     		add	r3, r3, r2
 725 03c8 0022     		movs	r2, #0
 726 03ca 1A70     		strb	r2, [r3]
 222:main.c        ****                             instruction[i] = 0;
 727              		.loc 1 222 0 discriminator 3
 728 03cc D7F8E430 		ldr	r3, [r7, #228]
 729 03d0 0133     		adds	r3, r3, #1
 730 03d2 C7F8E430 		str	r3, [r7, #228]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 18


 731              	.L28:
 222:main.c        ****                             instruction[i] = 0;
 732              		.loc 1 222 0 is_stmt 0 discriminator 1
 733 03d6 D7F8E430 		ldr	r3, [r7, #228]
 734 03da B3F5FA7F 		cmp	r3, #500
 735 03de E9DB     		blt	.L29
 736              	.L25:
 737              	.LBB7:
 225:main.c        ****                         }
 226:main.c        **** 
 227:main.c        ****                     } else {
 228:main.c        ****                         // The array contains all zeros
 229:main.c        **** 
 230:main.c        ****                     }
 231:main.c        ****                     for (int i = 0; i < 500; i++) {
 738              		.loc 1 231 0 is_stmt 1
 739 03e0 0023     		movs	r3, #0
 740 03e2 C7F8DC30 		str	r3, [r7, #220]
 741 03e6 04E0     		b	.L30
 742              	.L31:
 743              		.loc 1 231 0 is_stmt 0 discriminator 3
 744 03e8 D7F8DC30 		ldr	r3, [r7, #220]
 745 03ec 0133     		adds	r3, r3, #1
 746 03ee C7F8DC30 		str	r3, [r7, #220]
 747              	.L30:
 748              		.loc 1 231 0 discriminator 1
 749 03f2 D7F8DC30 		ldr	r3, [r7, #220]
 750 03f6 B3F5FA7F 		cmp	r3, #500
 751 03fa F5DB     		blt	.L31
 752              	.LBE7:
 232:main.c        **** 
 233:main.c        ****                         char instStr[24];
 234:main.c        **** 
 235:main.c        ****                         //snprintf(instStr, sizeof(instStr), "%u - %u \r\n", (unsigned char) instru
 236:main.c        **** 
 237:main.c        ****                         //usbPutString(instStr);
 238:main.c        ****                     }
 239:main.c        ****                     started = 1;
 753              		.loc 1 239 0 is_stmt 1
 754 03fc 9E4B     		ldr	r3, .L71+8
 755 03fe 0122     		movs	r2, #1
 756 0400 1A60     		str	r2, [r3]
 240:main.c        ****                     turnComplete = -1; //let the robot travel forward first
 757              		.loc 1 240 0
 758 0402 9E4B     		ldr	r3, .L71+12
 759 0404 4FF0FF32 		mov	r2, #-1
 760 0408 1A60     		str	r2, [r3]
 241:main.c        ****                     checkDistance = 0; //robot checks/stops distance when this is on
 761              		.loc 1 241 0
 762 040a 9D4B     		ldr	r3, .L71+16
 763 040c 0022     		movs	r2, #0
 764 040e 1A60     		str	r2, [r3]
 765              	.LBE6:
 766 0410 7AE2     		b	.L8
 767              	.L20:
 768              	.LBB8:
 242:main.c        ****                 } else {
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 19


 243:main.c        **** 
 244:main.c        ****                     started = 1;
 769              		.loc 1 244 0
 770 0412 994B     		ldr	r3, .L71+8
 771 0414 0122     		movs	r2, #1
 772 0416 1A60     		str	r2, [r3]
 245:main.c        **** 
 246:main.c        ****                     char currentInst = instruction[instCounter];
 773              		.loc 1 246 0
 774 0418 9A4B     		ldr	r3, .L71+20
 775 041a 1B68     		ldr	r3, [r3]
 776 041c 944A     		ldr	r2, .L71
 777 041e D35C     		ldrb	r3, [r2, r3]
 778 0420 87F8DB30 		strb	r3, [r7, #219]
 247:main.c        ****                     char nextInst = instruction[instCounter + 1];
 779              		.loc 1 247 0
 780 0424 974B     		ldr	r3, .L71+20
 781 0426 1B68     		ldr	r3, [r3]
 782 0428 0133     		adds	r3, r3, #1
 783 042a 914A     		ldr	r2, .L71
 784 042c D35C     		ldrb	r3, [r2, r3]
 785 042e 87F8DA30 		strb	r3, [r7, #218]
 248:main.c        ****                     if (currentInst == 0) {
 786              		.loc 1 248 0
 787 0432 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 788 0436 002B     		cmp	r3, #0
 789 0438 1AD1     		bne	.L32
 249:main.c        ****                         LED_PIN_1_Write(0);
 790              		.loc 1 249 0
 791 043a 0020     		movs	r0, #0
 792 043c FFF7FEFF 		bl	LED_PIN_1_Write
 250:main.c        ****                         LED_PIN_6_Write(0);
 793              		.loc 1 250 0
 794 0440 0020     		movs	r0, #0
 795 0442 FFF7FEFF 		bl	LED_PIN_6_Write
 251:main.c        ****                         stop();
 796              		.loc 1 251 0
 797 0446 FFF7FEFF 		bl	stop
 252:main.c        ****                         // Stop
 253:main.c        ****                         CyDelay(1000);
 798              		.loc 1 253 0
 799 044a 4FF47A70 		mov	r0, #1000
 800 044e FFF7FEFF 		bl	CyDelay
 254:main.c        ****                         if (nextInst == 1 || nextInst == 5) {
 801              		.loc 1 254 0
 802 0452 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 803 0456 012B     		cmp	r3, #1
 804 0458 04D0     		beq	.L33
 805              		.loc 1 254 0 is_stmt 0 discriminator 1
 806 045a 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 807 045e 052B     		cmp	r3, #5
 808 0460 40F02081 		bne	.L35
 809              	.L33:
 255:main.c        ****                             turnLeft();
 810              		.loc 1 255 0 is_stmt 1
 811 0464 FFF7FEFF 		bl	turnLeft
 256:main.c        ****                             CyDelay(50);
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 20


 812              		.loc 1 256 0
 813 0468 3220     		movs	r0, #50
 814 046a FFF7FEFF 		bl	CyDelay
 815 046e 19E1     		b	.L35
 816              	.L32:
 257:main.c        ****                         }
 258:main.c        ****                     } else if (currentInst == 1 && turnComplete == -1) {
 817              		.loc 1 258 0
 818 0470 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 819 0474 012B     		cmp	r3, #1
 820 0476 19D1     		bne	.L36
 821              		.loc 1 258 0 is_stmt 0 discriminator 1
 822 0478 804B     		ldr	r3, .L71+12
 823 047a 1B68     		ldr	r3, [r3]
 824 047c B3F1FF3F 		cmp	r3, #-1
 825 0480 14D1     		bne	.L36
 259:main.c        ****                         LED_PIN_1_Write(1);
 826              		.loc 1 259 0 is_stmt 1
 827 0482 0120     		movs	r0, #1
 828 0484 FFF7FEFF 		bl	LED_PIN_1_Write
 260:main.c        ****                         LED_PIN_6_Write(0);
 829              		.loc 1 260 0
 830 0488 0020     		movs	r0, #0
 831 048a FFF7FEFF 		bl	LED_PIN_6_Write
 261:main.c        ****                         turnComplete = 0;
 832              		.loc 1 261 0
 833 048e 7B4B     		ldr	r3, .L71+12
 834 0490 0022     		movs	r2, #0
 835 0492 1A60     		str	r2, [r3]
 262:main.c        ****                         turnLeft();
 836              		.loc 1 262 0
 837 0494 FFF7FEFF 		bl	turnLeft
 263:main.c        ****                         LED_PIN_4_Write(0);
 838              		.loc 1 263 0
 839 0498 0020     		movs	r0, #0
 840 049a FFF7FEFF 		bl	LED_PIN_4_Write
 264:main.c        ****                         CyDelay(150);
 841              		.loc 1 264 0
 842 049e 9620     		movs	r0, #150
 843 04a0 FFF7FEFF 		bl	CyDelay
 265:main.c        ****                         pulsesTravelled = 0;
 844              		.loc 1 265 0
 845 04a4 784B     		ldr	r3, .L71+24
 846 04a6 0022     		movs	r2, #0
 847 04a8 1A60     		str	r2, [r3]
 848 04aa FBE0     		b	.L35
 849              	.L36:
 266:main.c        ****                         // Complete a left turn, then follow line
 267:main.c        **** 
 268:main.c        ****                     } else if (currentInst == 1 && turnComplete == 0) {
 850              		.loc 1 268 0
 851 04ac 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 852 04b0 012B     		cmp	r3, #1
 853 04b2 20D1     		bne	.L37
 854              		.loc 1 268 0 is_stmt 0 discriminator 1
 855 04b4 714B     		ldr	r3, .L71+12
 856 04b6 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 21


 857 04b8 002B     		cmp	r3, #0
 858 04ba 1CD1     		bne	.L37
 269:main.c        ****                         lastAdjustDirection = 0;
 859              		.loc 1 269 0 is_stmt 1
 860 04bc 734B     		ldr	r3, .L71+28
 861 04be 0022     		movs	r2, #0
 862 04c0 1A60     		str	r2, [r3]
 270:main.c        ****                         if (L_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 863              		.loc 1 270 0
 864 04c2 D7F8FC30 		ldr	r3, [r7, #252]
 865 04c6 4A2B     		cmp	r3, #74
 866 04c8 11DC     		bgt	.L38
 271:main.c        ****                             turnComplete = 1;
 867              		.loc 1 271 0
 868 04ca 6C4B     		ldr	r3, .L71+12
 869 04cc 0122     		movs	r2, #1
 870 04ce 1A60     		str	r2, [r3]
 272:main.c        ****                             stop();
 871              		.loc 1 272 0
 872 04d0 FFF7FEFF 		bl	stop
 273:main.c        ****                             CyDelay(200);
 873              		.loc 1 273 0
 874 04d4 C820     		movs	r0, #200
 875 04d6 FFF7FEFF 		bl	CyDelay
 274:main.c        ****                             
 275:main.c        ****                             adjustRight();
 876              		.loc 1 275 0
 877 04da FFF7FEFF 		bl	adjustRight
 276:main.c        ****                             CyDelay(225);
 878              		.loc 1 276 0
 879 04de E120     		movs	r0, #225
 880 04e0 FFF7FEFF 		bl	CyDelay
 277:main.c        ****                             
 278:main.c        ****                             stop();
 881              		.loc 1 278 0
 882 04e4 FFF7FEFF 		bl	stop
 279:main.c        ****                             CyDelay(200);
 883              		.loc 1 279 0
 884 04e8 C820     		movs	r0, #200
 885 04ea FFF7FEFF 		bl	CyDelay
 886              	.L38:
 280:main.c        ****                         }
 281:main.c        ****                         pulsesTravelled = 0;
 887              		.loc 1 281 0
 888 04ee 664B     		ldr	r3, .L71+24
 889 04f0 0022     		movs	r2, #0
 890 04f2 1A60     		str	r2, [r3]
 891 04f4 D6E0     		b	.L35
 892              	.L37:
 282:main.c        ****                     } else if (currentInst == 2) {
 893              		.loc 1 282 0
 894 04f6 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 895 04fa 022B     		cmp	r3, #2
 896 04fc 06D1     		bne	.L39
 283:main.c        ****                         LED_PIN_1_Write(1);
 897              		.loc 1 283 0
 898 04fe 0120     		movs	r0, #1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 22


 899 0500 FFF7FEFF 		bl	LED_PIN_1_Write
 284:main.c        ****                         LED_PIN_6_Write(1);
 900              		.loc 1 284 0
 901 0504 0120     		movs	r0, #1
 902 0506 FFF7FEFF 		bl	LED_PIN_6_Write
 903 050a CBE0     		b	.L35
 904              	.L39:
 285:main.c        ****                         // Drive straight
 286:main.c        ****                     } else if (currentInst == 3 && turnComplete == -1) {
 905              		.loc 1 286 0
 906 050c 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 907 0510 032B     		cmp	r3, #3
 908 0512 19D1     		bne	.L40
 909              		.loc 1 286 0 is_stmt 0 discriminator 1
 910 0514 594B     		ldr	r3, .L71+12
 911 0516 1B68     		ldr	r3, [r3]
 912 0518 B3F1FF3F 		cmp	r3, #-1
 913 051c 14D1     		bne	.L40
 287:main.c        ****                         LED_PIN_1_Write(0);
 914              		.loc 1 287 0 is_stmt 1
 915 051e 0020     		movs	r0, #0
 916 0520 FFF7FEFF 		bl	LED_PIN_1_Write
 288:main.c        ****                         LED_PIN_6_Write(1);
 917              		.loc 1 288 0
 918 0524 0120     		movs	r0, #1
 919 0526 FFF7FEFF 		bl	LED_PIN_6_Write
 289:main.c        ****                         turnComplete = 0;
 920              		.loc 1 289 0
 921 052a 544B     		ldr	r3, .L71+12
 922 052c 0022     		movs	r2, #0
 923 052e 1A60     		str	r2, [r3]
 290:main.c        ****                         turnRight();
 924              		.loc 1 290 0
 925 0530 FFF7FEFF 		bl	turnRight
 291:main.c        ****                         LED_PIN_4_Write(0);
 926              		.loc 1 291 0
 927 0534 0020     		movs	r0, #0
 928 0536 FFF7FEFF 		bl	LED_PIN_4_Write
 292:main.c        ****                         CyDelay(150);
 929              		.loc 1 292 0
 930 053a 9620     		movs	r0, #150
 931 053c FFF7FEFF 		bl	CyDelay
 293:main.c        ****                         pulsesTravelled = 0;
 932              		.loc 1 293 0
 933 0540 514B     		ldr	r3, .L71+24
 934 0542 0022     		movs	r2, #0
 935 0544 1A60     		str	r2, [r3]
 936 0546 ADE0     		b	.L35
 937              	.L40:
 294:main.c        **** 
 295:main.c        ****                     } else if (currentInst == 3 && turnComplete == 0) {
 938              		.loc 1 295 0
 939 0548 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 940 054c 032B     		cmp	r3, #3
 941 054e 20D1     		bne	.L41
 942              		.loc 1 295 0 is_stmt 0 discriminator 1
 943 0550 4A4B     		ldr	r3, .L71+12
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 23


 944 0552 1B68     		ldr	r3, [r3]
 945 0554 002B     		cmp	r3, #0
 946 0556 1CD1     		bne	.L41
 296:main.c        ****                         lastAdjustDirection = 2;
 947              		.loc 1 296 0 is_stmt 1
 948 0558 4C4B     		ldr	r3, .L71+28
 949 055a 0222     		movs	r2, #2
 950 055c 1A60     		str	r2, [r3]
 297:main.c        ****                         if (R_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 951              		.loc 1 297 0
 952 055e D7F8F030 		ldr	r3, [r7, #240]
 953 0562 4A2B     		cmp	r3, #74
 954 0564 11DC     		bgt	.L42
 298:main.c        ****                             turnComplete = 1;
 955              		.loc 1 298 0
 956 0566 454B     		ldr	r3, .L71+12
 957 0568 0122     		movs	r2, #1
 958 056a 1A60     		str	r2, [r3]
 299:main.c        ****                             stop();
 959              		.loc 1 299 0
 960 056c FFF7FEFF 		bl	stop
 300:main.c        ****                             CyDelay(200);
 961              		.loc 1 300 0
 962 0570 C820     		movs	r0, #200
 963 0572 FFF7FEFF 		bl	CyDelay
 301:main.c        ****                             
 302:main.c        ****                             adjustLeft();
 964              		.loc 1 302 0
 965 0576 FFF7FEFF 		bl	adjustLeft
 303:main.c        ****                             CyDelay(225);
 966              		.loc 1 303 0
 967 057a E120     		movs	r0, #225
 968 057c FFF7FEFF 		bl	CyDelay
 304:main.c        ****                             
 305:main.c        ****                             stop();
 969              		.loc 1 305 0
 970 0580 FFF7FEFF 		bl	stop
 306:main.c        ****                             CyDelay(200);
 971              		.loc 1 306 0
 972 0584 C820     		movs	r0, #200
 973 0586 FFF7FEFF 		bl	CyDelay
 974              	.L42:
 307:main.c        ****                         }
 308:main.c        ****                         pulsesTravelled = 0;
 975              		.loc 1 308 0
 976 058a 3F4B     		ldr	r3, .L71+24
 977 058c 0022     		movs	r2, #0
 978 058e 1A60     		str	r2, [r3]
 979 0590 88E0     		b	.L35
 980              	.L41:
 309:main.c        ****                     } else if (currentInst == 4 && turnComplete == -1) {
 981              		.loc 1 309 0
 982 0592 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 983 0596 042B     		cmp	r3, #4
 984 0598 1AD1     		bne	.L43
 985              		.loc 1 309 0 is_stmt 0 discriminator 1
 986 059a 384B     		ldr	r3, .L71+12
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 24


 987 059c 1B68     		ldr	r3, [r3]
 988 059e B3F1FF3F 		cmp	r3, #-1
 989 05a2 15D1     		bne	.L43
 310:main.c        ****                         LED_PIN_1_Write(0);
 990              		.loc 1 310 0 is_stmt 1
 991 05a4 0020     		movs	r0, #0
 992 05a6 FFF7FEFF 		bl	LED_PIN_1_Write
 311:main.c        ****                         LED_PIN_6_Write(0);
 993              		.loc 1 311 0
 994 05aa 0020     		movs	r0, #0
 995 05ac FFF7FEFF 		bl	LED_PIN_6_Write
 312:main.c        ****                         turnComplete = 0;
 996              		.loc 1 312 0
 997 05b0 324B     		ldr	r3, .L71+12
 998 05b2 0022     		movs	r2, #0
 999 05b4 1A60     		str	r2, [r3]
 313:main.c        ****                         turnRight();
 1000              		.loc 1 313 0
 1001 05b6 FFF7FEFF 		bl	turnRight
 314:main.c        ****                         LED_PIN_4_Write(0);
 1002              		.loc 1 314 0
 1003 05ba 0020     		movs	r0, #0
 1004 05bc FFF7FEFF 		bl	LED_PIN_4_Write
 315:main.c        ****                         CyDelay(300);
 1005              		.loc 1 315 0
 1006 05c0 4FF49670 		mov	r0, #300
 1007 05c4 FFF7FEFF 		bl	CyDelay
 316:main.c        ****                         pulsesTravelled = 0;
 1008              		.loc 1 316 0
 1009 05c8 2F4B     		ldr	r3, .L71+24
 1010 05ca 0022     		movs	r2, #0
 1011 05cc 1A60     		str	r2, [r3]
 1012 05ce 69E0     		b	.L35
 1013              	.L43:
 317:main.c        **** 
 318:main.c        ****                     } else if (currentInst == 4 && turnComplete == 0) {
 1014              		.loc 1 318 0
 1015 05d0 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1016 05d4 042B     		cmp	r3, #4
 1017 05d6 23D1     		bne	.L44
 1018              		.loc 1 318 0 is_stmt 0 discriminator 1
 1019 05d8 284B     		ldr	r3, .L71+12
 1020 05da 1B68     		ldr	r3, [r3]
 1021 05dc 002B     		cmp	r3, #0
 1022 05de 1FD1     		bne	.L44
 319:main.c        ****                         LED_PIN_1_Write(0);
 1023              		.loc 1 319 0 is_stmt 1
 1024 05e0 0020     		movs	r0, #0
 1025 05e2 FFF7FEFF 		bl	LED_PIN_1_Write
 320:main.c        ****                         LED_PIN_6_Write(0);
 1026              		.loc 1 320 0
 1027 05e6 0020     		movs	r0, #0
 1028 05e8 FFF7FEFF 		bl	LED_PIN_6_Write
 321:main.c        ****                         // Do a 180, then follow line
 322:main.c        ****                         if (R_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 1029              		.loc 1 322 0
 1030 05ec D7F8F030 		ldr	r3, [r7, #240]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 25


 1031 05f0 4A2B     		cmp	r3, #74
 1032 05f2 11DC     		bgt	.L45
 323:main.c        ****                             turnComplete = 1;
 1033              		.loc 1 323 0
 1034 05f4 214B     		ldr	r3, .L71+12
 1035 05f6 0122     		movs	r2, #1
 1036 05f8 1A60     		str	r2, [r3]
 324:main.c        ****                             stop();
 1037              		.loc 1 324 0
 1038 05fa FFF7FEFF 		bl	stop
 325:main.c        ****                             CyDelay(200);
 1039              		.loc 1 325 0
 1040 05fe C820     		movs	r0, #200
 1041 0600 FFF7FEFF 		bl	CyDelay
 326:main.c        ****                             
 327:main.c        ****                             adjustLeft();
 1042              		.loc 1 327 0
 1043 0604 FFF7FEFF 		bl	adjustLeft
 328:main.c        ****                             CyDelay(225);
 1044              		.loc 1 328 0
 1045 0608 E120     		movs	r0, #225
 1046 060a FFF7FEFF 		bl	CyDelay
 329:main.c        ****                             
 330:main.c        ****                             stop();
 1047              		.loc 1 330 0
 1048 060e FFF7FEFF 		bl	stop
 331:main.c        ****                             CyDelay(200);
 1049              		.loc 1 331 0
 1050 0612 C820     		movs	r0, #200
 1051 0614 FFF7FEFF 		bl	CyDelay
 1052              	.L45:
 332:main.c        ****                         }
 333:main.c        ****                         pulsesTravelled = 0;
 1053              		.loc 1 333 0
 1054 0618 1B4B     		ldr	r3, .L71+24
 1055 061a 0022     		movs	r2, #0
 1056 061c 1A60     		str	r2, [r3]
 1057 061e 41E0     		b	.L35
 1058              	.L44:
 334:main.c        ****                     } else if (currentInst == 5) {
 1059              		.loc 1 334 0
 1060 0620 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1061 0624 052B     		cmp	r3, #5
 1062 0626 0CD1     		bne	.L46
 335:main.c        ****                         LED_PIN_1_Write(1);
 1063              		.loc 1 335 0
 1064 0628 0120     		movs	r0, #1
 1065 062a FFF7FEFF 		bl	LED_PIN_1_Write
 336:main.c        ****                         LED_PIN_6_Write(0);
 1066              		.loc 1 336 0
 1067 062e 0020     		movs	r0, #0
 1068 0630 FFF7FEFF 		bl	LED_PIN_6_Write
 337:main.c        ****                         // Complete a left turn, then follow line until end of encoder position
 338:main.c        ****                         if (turnComplete == 0) {
 1069              		.loc 1 338 0
 1070 0634 114B     		ldr	r3, .L71+12
 1071 0636 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 26


 1072 0638 002B     		cmp	r3, #0
 1073 063a 33D1     		bne	.L35
 339:main.c        ****                             turnLeft();
 1074              		.loc 1 339 0
 1075 063c FFF7FEFF 		bl	turnLeft
 1076 0640 30E0     		b	.L35
 1077              	.L46:
 340:main.c        ****                         }
 341:main.c        ****                     } else if (currentInst == 6) {
 1078              		.loc 1 341 0
 1079 0642 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1080 0646 062B     		cmp	r3, #6
 1081 0648 06D1     		bne	.L48
 342:main.c        ****                         LED_PIN_1_Write(1);
 1082              		.loc 1 342 0
 1083 064a 0120     		movs	r0, #1
 1084 064c FFF7FEFF 		bl	LED_PIN_1_Write
 343:main.c        ****                         LED_PIN_6_Write(1);
 1085              		.loc 1 343 0
 1086 0650 0120     		movs	r0, #1
 1087 0652 FFF7FEFF 		bl	LED_PIN_6_Write
 1088 0656 25E0     		b	.L35
 1089              	.L48:
 344:main.c        ****                         // Follow line until end of encoder position
 345:main.c        ****                     } else if (currentInst == 7) {
 1090              		.loc 1 345 0
 1091 0658 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1092 065c 072B     		cmp	r3, #7
 1093 065e 17D1     		bne	.L49
 346:main.c        ****                         LED_PIN_1_Write(0);
 1094              		.loc 1 346 0
 1095 0660 0020     		movs	r0, #0
 1096 0662 FFF7FEFF 		bl	LED_PIN_1_Write
 347:main.c        ****                         LED_PIN_6_Write(1);
 1097              		.loc 1 347 0
 1098 0666 0120     		movs	r0, #1
 1099 0668 FFF7FEFF 		bl	LED_PIN_6_Write
 1100 066c 1AE0     		b	.L35
 1101              	.L72:
 1102 066e 00BF     		.align	2
 1103              	.L71:
 1104 0670 00000000 		.word	instruction
 1105 0674 00000000 		.word	distance
 1106 0678 00000000 		.word	started
 1107 067c 00000000 		.word	turnComplete
 1108 0680 00000000 		.word	checkDistance
 1109 0684 00000000 		.word	instCounter
 1110 0688 00000000 		.word	pulsesTravelled
 1111 068c 00000000 		.word	lastAdjustDirection
 1112              	.L49:
 348:main.c        ****                         // Complete a right turn, then follow line until end of encoder position
 349:main.c        ****                     } else if (currentInst == 8) {
 1113              		.loc 1 349 0
 1114 0690 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1115 0694 082B     		cmp	r3, #8
 1116 0696 05D1     		bne	.L35
 350:main.c        ****                         LED_PIN_1_Write(0);
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 27


 1117              		.loc 1 350 0
 1118 0698 0020     		movs	r0, #0
 1119 069a FFF7FEFF 		bl	LED_PIN_1_Write
 351:main.c        ****                         LED_PIN_6_Write(0);
 1120              		.loc 1 351 0
 1121 069e 0020     		movs	r0, #0
 1122 06a0 FFF7FEFF 		bl	LED_PIN_6_Write
 1123              	.L35:
 352:main.c        ****                         // Complete a 180 turn, then follow line until end of encoder position
 353:main.c        ****                     }
 354:main.c        **** 
 355:main.c        ****                     //only allow code to straighten if turn is complete
 356:main.c        ****                     if (turnComplete != 0 ) {
 1124              		.loc 1 356 0
 1125 06a4 A04B     		ldr	r3, .L73+16
 1126 06a6 1B68     		ldr	r3, [r3]
 1127 06a8 002B     		cmp	r3, #0
 1128 06aa 00F01F81 		beq	.L50
 1129              	.LBB9:
 357:main.c        ****                         if ((M_LINE_BLACK && L_LINE_BLACK)) { // if robot slightly too far right
 1130              		.loc 1 357 0
 1131 06ae D7F8F830 		ldr	r3, [r7, #248]
 1132 06b2 4A2B     		cmp	r3, #74
 1133 06b4 09DC     		bgt	.L51
 1134              		.loc 1 357 0 is_stmt 0 discriminator 1
 1135 06b6 D7F8FC30 		ldr	r3, [r7, #252]
 1136 06ba 4A2B     		cmp	r3, #74
 1137 06bc 05DC     		bgt	.L51
 358:main.c        ****                             adjustLeft();
 1138              		.loc 1 358 0 is_stmt 1
 1139 06be FFF7FEFF 		bl	adjustLeft
 359:main.c        ****                             lastAdjustDirection = 0;
 1140              		.loc 1 359 0
 1141 06c2 9A4B     		ldr	r3, .L73+20
 1142 06c4 0022     		movs	r2, #0
 1143 06c6 1A60     		str	r2, [r3]
 1144 06c8 3DE0     		b	.L52
 1145              	.L51:
 360:main.c        **** 
 361:main.c        ****                         } else if (M_LINE_BLACK && R_LINE_BLACK) { //  if robot slightly too far le
 1146              		.loc 1 361 0
 1147 06ca D7F8F830 		ldr	r3, [r7, #248]
 1148 06ce 4A2B     		cmp	r3, #74
 1149 06d0 09DC     		bgt	.L53
 1150              		.loc 1 361 0 is_stmt 0 discriminator 1
 1151 06d2 D7F8F030 		ldr	r3, [r7, #240]
 1152 06d6 4A2B     		cmp	r3, #74
 1153 06d8 05DC     		bgt	.L53
 362:main.c        ****                             adjustRight();
 1154              		.loc 1 362 0 is_stmt 1
 1155 06da FFF7FEFF 		bl	adjustRight
 363:main.c        ****                             lastAdjustDirection = 2;
 1156              		.loc 1 363 0
 1157 06de 934B     		ldr	r3, .L73+20
 1158 06e0 0222     		movs	r2, #2
 1159 06e2 1A60     		str	r2, [r3]
 1160 06e4 2FE0     		b	.L52
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 28


 1161              	.L53:
 364:main.c        **** 
 365:main.c        ****                         } else if (M_LINE_BLACK) { // if robot in the center keep moving straight
 1162              		.loc 1 365 0
 1163 06e6 D7F8F830 		ldr	r3, [r7, #248]
 1164 06ea 4A2B     		cmp	r3, #74
 1165 06ec 07DC     		bgt	.L54
 366:main.c        ****                             lastAdjustDirection = 1;
 1166              		.loc 1 366 0
 1167 06ee 8F4B     		ldr	r3, .L73+20
 1168 06f0 0122     		movs	r2, #1
 1169 06f2 1A60     		str	r2, [r3]
 367:main.c        ****                             driveForward(0, 0);
 1170              		.loc 1 367 0
 1171 06f4 0021     		movs	r1, #0
 1172 06f6 0020     		movs	r0, #0
 1173 06f8 FFF7FEFF 		bl	driveForward
 1174 06fc 23E0     		b	.L52
 1175              	.L54:
 368:main.c        **** 
 369:main.c        ****                         } else if (R_LINE_BLACK) { // if robot too far left
 1176              		.loc 1 369 0
 1177 06fe D7F8F030 		ldr	r3, [r7, #240]
 1178 0702 4A2B     		cmp	r3, #74
 1179 0704 05DC     		bgt	.L55
 370:main.c        ****                             adjustRight();
 1180              		.loc 1 370 0
 1181 0706 FFF7FEFF 		bl	adjustRight
 371:main.c        ****                             lastAdjustDirection = 2;
 1182              		.loc 1 371 0
 1183 070a 884B     		ldr	r3, .L73+20
 1184 070c 0222     		movs	r2, #2
 1185 070e 1A60     		str	r2, [r3]
 1186 0710 19E0     		b	.L52
 1187              	.L55:
 372:main.c        **** 
 373:main.c        ****                         } else if (L_LINE_BLACK) { // if robot too far right
 1188              		.loc 1 373 0
 1189 0712 D7F8FC30 		ldr	r3, [r7, #252]
 1190 0716 4A2B     		cmp	r3, #74
 1191 0718 05DC     		bgt	.L56
 374:main.c        ****                             adjustLeft();
 1192              		.loc 1 374 0
 1193 071a FFF7FEFF 		bl	adjustLeft
 375:main.c        ****                             lastAdjustDirection = 0;
 1194              		.loc 1 375 0
 1195 071e 834B     		ldr	r3, .L73+20
 1196 0720 0022     		movs	r2, #0
 1197 0722 1A60     		str	r2, [r3]
 1198 0724 0FE0     		b	.L52
 1199              	.L56:
 376:main.c        ****                         
 377:main.c        **** 
 378:main.c        ****                         } else { // completely lost find way
 379:main.c        ****                             if (lastAdjustDirection == 0) {
 1200              		.loc 1 379 0
 1201 0726 814B     		ldr	r3, .L73+20
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 29


 1202 0728 1B68     		ldr	r3, [r3]
 1203 072a 002B     		cmp	r3, #0
 1204 072c 02D1     		bne	.L57
 380:main.c        ****                                 turnLeft();
 1205              		.loc 1 380 0
 1206 072e FFF7FEFF 		bl	turnLeft
 1207 0732 08E0     		b	.L52
 1208              	.L57:
 381:main.c        ****                             } else if (lastAdjustDirection == 1) { // last movement was forward (mi
 1209              		.loc 1 381 0
 1210 0734 7D4B     		ldr	r3, .L73+20
 1211 0736 1B68     		ldr	r3, [r3]
 1212 0738 012B     		cmp	r3, #1
 1213 073a 02D1     		bne	.L58
 382:main.c        ****                                 //hardAdjustLeft();
 383:main.c        ****                                 turnRight();
 1214              		.loc 1 383 0
 1215 073c FFF7FEFF 		bl	turnRight
 1216 0740 01E0     		b	.L52
 1217              	.L58:
 384:main.c        ****                             } else {
 385:main.c        ****                                 turnRight();
 1218              		.loc 1 385 0
 1219 0742 FFF7FEFF 		bl	turnRight
 1220              	.L52:
 386:main.c        ****                             }
 387:main.c        **** 
 388:main.c        ****                         }
 389:main.c        ****                         
 390:main.c        **** 
 391:main.c        ****                         // UPDATE INSTRUCTION LOGIC GOES HERE this needs dramatic improving
 392:main.c        ****                         LED_PIN_2_Write(0);
 1221              		.loc 1 392 0
 1222 0746 0020     		movs	r0, #0
 1223 0748 FFF7FEFF 		bl	LED_PIN_2_Write
 393:main.c        ****                         LED_PIN_3_Write(0);
 1224              		.loc 1 393 0
 1225 074c 0020     		movs	r0, #0
 1226 074e FFF7FEFF 		bl	LED_PIN_3_Write
 394:main.c        ****                         LED_PIN_4_Write(0);
 1227              		.loc 1 394 0
 1228 0752 0020     		movs	r0, #0
 1229 0754 FFF7FEFF 		bl	LED_PIN_4_Write
 395:main.c        ****                         char dist[24];
 396:main.c        ****                         char pulses[24];
 397:main.c        ****                         char first[24];
 398:main.c        ****                         char second[24];
 399:main.c        ****                         //57 pulses on 1 motor = 20.42 cm
 400:main.c        ****                         char instStr[24];
 401:main.c        ****                         char cVal[24];
 402:main.c        **** 
 403:main.c        **** 
 404:main.c        ****                         //if distance has been covered and ready to switch
 405:main.c        ****                         if (turnComplete != 0 && ((distance[instCounter] * 9.13333 *1.2 <= pulsesTr
 1230              		.loc 1 405 0
 1231 0758 734B     		ldr	r3, .L73+16
 1232 075a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 30


 1233 075c 002B     		cmp	r3, #0
 1234 075e 00F0C580 		beq	.L50
 1235              		.loc 1 405 0 is_stmt 0 discriminator 1
 1236 0762 734B     		ldr	r3, .L73+24
 1237 0764 1B68     		ldr	r3, [r3]
 1238 0766 734A     		ldr	r2, .L73+28
 1239 0768 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1240 076a 1846     		mov	r0, r3
 1241 076c FFF7FEFF 		bl	__aeabi_i2d
 1242 0770 69A3     		adr	r3, .L73
 1243 0772 D3E90023 		ldrd	r2, [r3]
 1244 0776 FFF7FEFF 		bl	__aeabi_dmul
 1245 077a 0346     		mov	r3, r0
 1246 077c 0C46     		mov	r4, r1
 1247 077e 1846     		mov	r0, r3
 1248 0780 2146     		mov	r1, r4
 1249 0782 4FF03332 		mov	r2, #858993459
 1250 0786 6C4B     		ldr	r3, .L73+32
 1251 0788 FFF7FEFF 		bl	__aeabi_dmul
 1252 078c 0346     		mov	r3, r0
 1253 078e 0C46     		mov	r4, r1
 1254 0790 2546     		mov	r5, r4
 1255 0792 1C46     		mov	r4, r3
 1256 0794 694B     		ldr	r3, .L73+36
 1257 0796 1B68     		ldr	r3, [r3]
 1258 0798 1846     		mov	r0, r3
 1259 079a FFF7FEFF 		bl	__aeabi_i2d
 1260 079e 60A3     		adr	r3, .L73+8
 1261 07a0 D3E90023 		ldrd	r2, [r3]
 1262 07a4 FFF7FEFF 		bl	__aeabi_dmul
 1263 07a8 0246     		mov	r2, r0
 1264 07aa 0B46     		mov	r3, r1
 1265 07ac 1046     		mov	r0, r2
 1266 07ae 1946     		mov	r1, r3
 1267 07b0 4FF00002 		mov	r2, #0
 1268 07b4 624B     		ldr	r3, .L73+40
 1269 07b6 FFF7FEFF 		bl	__aeabi_ddiv
 1270 07ba 0246     		mov	r2, r0
 1271 07bc 0B46     		mov	r3, r1
 1272 07be 1046     		mov	r0, r2
 1273 07c0 1946     		mov	r1, r3
 1274 07c2 4FF00002 		mov	r2, #0
 1275 07c6 4FF08043 		mov	r3, #1073741824
 1276 07ca FFF7FEFF 		bl	__aeabi_ddiv
 1277 07ce 0246     		mov	r2, r0
 1278 07d0 0B46     		mov	r3, r1
 1279 07d2 2046     		mov	r0, r4
 1280 07d4 2946     		mov	r1, r5
 1281 07d6 FFF7FEFF 		bl	__aeabi_dcmple
 1282 07da 0346     		mov	r3, r0
 1283 07dc 002B     		cmp	r3, #0
 1284 07de 04D1     		bne	.L60
 1285              		.loc 1 405 0 discriminator 2
 1286 07e0 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1287 07e4 002B     		cmp	r3, #0
 1288 07e6 40F08180 		bne	.L50
 1289              	.L60:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 31


 406:main.c        ****                             if (currentInst == 0 || currentInst == 6) {
 1290              		.loc 1 406 0 is_stmt 1
 1291 07ea 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1292 07ee 002B     		cmp	r3, #0
 1293 07f0 03D0     		beq	.L61
 1294              		.loc 1 406 0 is_stmt 0 discriminator 1
 1295 07f2 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1296 07f6 062B     		cmp	r3, #6
 1297 07f8 19D1     		bne	.L62
 1298              	.L61:
 407:main.c        ****                                 LED_PIN_4_Write(1);
 1299              		.loc 1 407 0 is_stmt 1
 1300 07fa 0120     		movs	r0, #1
 1301 07fc FFF7FEFF 		bl	LED_PIN_4_Write
 408:main.c        ****                                 instCounter++;
 1302              		.loc 1 408 0
 1303 0800 4B4B     		ldr	r3, .L73+24
 1304 0802 1B68     		ldr	r3, [r3]
 1305 0804 0133     		adds	r3, r3, #1
 1306 0806 4A4A     		ldr	r2, .L73+24
 1307 0808 1360     		str	r3, [r2]
 409:main.c        ****                                 turnComplete = -1;
 1308              		.loc 1 409 0
 1309 080a 474B     		ldr	r3, .L73+16
 1310 080c 4FF0FF32 		mov	r2, #-1
 1311 0810 1A60     		str	r2, [r3]
 410:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 411:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 412:main.c        ****                                 //                            //usbPutString(instStr);
 413:main.c        ****                                 pulsesTravelled = 0;
 1312              		.loc 1 413 0
 1313 0812 4A4B     		ldr	r3, .L73+36
 1314 0814 0022     		movs	r2, #0
 1315 0816 1A60     		str	r2, [r3]
 414:main.c        ****                                 if (currentInst == 6) {
 1316              		.loc 1 414 0
 1317 0818 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1318 081c 062B     		cmp	r3, #6
 1319 081e 65D1     		bne	.L50
 415:main.c        ****                                     stop();
 1320              		.loc 1 415 0
 1321 0820 FFF7FEFF 		bl	stop
 416:main.c        ****                                     CyDelay(1000);
 1322              		.loc 1 416 0
 1323 0824 4FF47A70 		mov	r0, #1000
 1324 0828 FFF7FEFF 		bl	CyDelay
 414:main.c        ****                                 if (currentInst == 6) {
 1325              		.loc 1 414 0
 1326 082c 5EE0     		b	.L50
 1327              	.L62:
 417:main.c        ****                                 }
 418:main.c        ****                                 //
 419:main.c        ****                             } else if (R_INT_BLACK && (nextInst == 0 || nextInst == 3 || nextInst =
 1328              		.loc 1 419 0
 1329 082e D7F8EC30 		ldr	r3, [r7, #236]
 1330 0832 4A2B     		cmp	r3, #74
 1331 0834 2BDC     		bgt	.L64
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 32


 1332              		.loc 1 419 0 is_stmt 0 discriminator 1
 1333 0836 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1334 083a 002B     		cmp	r3, #0
 1335 083c 17D0     		beq	.L65
 1336              		.loc 1 419 0 discriminator 2
 1337 083e 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1338 0842 032B     		cmp	r3, #3
 1339 0844 13D0     		beq	.L65
 1340              		.loc 1 419 0 discriminator 3
 1341 0846 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1342 084a 022B     		cmp	r3, #2
 1343 084c 0FD0     		beq	.L65
 1344              		.loc 1 419 0 discriminator 4
 1345 084e 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1346 0852 042B     		cmp	r3, #4
 1347 0854 0BD0     		beq	.L65
 1348              		.loc 1 419 0 discriminator 5
 1349 0856 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1350 085a 072B     		cmp	r3, #7
 1351 085c 07D0     		beq	.L65
 1352              		.loc 1 419 0 discriminator 6
 1353 085e 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1354 0862 062B     		cmp	r3, #6
 1355 0864 03D0     		beq	.L65
 1356              		.loc 1 419 0 discriminator 7
 1357 0866 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1358 086a 082B     		cmp	r3, #8
 1359 086c 0FD1     		bne	.L64
 1360              	.L65:
 420:main.c        ****                                 //
 421:main.c        ****                                 LED_PIN_4_Write(1);
 1361              		.loc 1 421 0 is_stmt 1
 1362 086e 0120     		movs	r0, #1
 1363 0870 FFF7FEFF 		bl	LED_PIN_4_Write
 422:main.c        ****                                 instCounter++;
 1364              		.loc 1 422 0
 1365 0874 2E4B     		ldr	r3, .L73+24
 1366 0876 1B68     		ldr	r3, [r3]
 1367 0878 0133     		adds	r3, r3, #1
 1368 087a 2D4A     		ldr	r2, .L73+24
 1369 087c 1360     		str	r3, [r2]
 423:main.c        ****                                 turnComplete = -1;
 1370              		.loc 1 423 0
 1371 087e 2A4B     		ldr	r3, .L73+16
 1372 0880 4FF0FF32 		mov	r2, #-1
 1373 0884 1A60     		str	r2, [r3]
 424:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 425:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 426:main.c        ****                                 //                            //usbPutString(instStr);
 427:main.c        ****                                 pulsesTravelled = 0;
 1374              		.loc 1 427 0
 1375 0886 2D4B     		ldr	r3, .L73+36
 1376 0888 0022     		movs	r2, #0
 1377 088a 1A60     		str	r2, [r3]
 1378 088c 2EE0     		b	.L50
 1379              	.L64:
 428:main.c        ****                             } else if (L_INT_BLACK && (nextInst == 0 || nextInst == 1 || nextInst =
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 33


 1380              		.loc 1 428 0
 1381 088e D7F80031 		ldr	r3, [r7, #256]
 1382 0892 4A2B     		cmp	r3, #74
 1383 0894 2ADC     		bgt	.L50
 1384              		.loc 1 428 0 is_stmt 0 discriminator 1
 1385 0896 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1386 089a 002B     		cmp	r3, #0
 1387 089c 17D0     		beq	.L66
 1388              		.loc 1 428 0 discriminator 2
 1389 089e 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1390 08a2 012B     		cmp	r3, #1
 1391 08a4 13D0     		beq	.L66
 1392              		.loc 1 428 0 discriminator 3
 1393 08a6 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1394 08aa 022B     		cmp	r3, #2
 1395 08ac 0FD0     		beq	.L66
 1396              		.loc 1 428 0 discriminator 4
 1397 08ae 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1398 08b2 052B     		cmp	r3, #5
 1399 08b4 0BD0     		beq	.L66
 1400              		.loc 1 428 0 discriminator 5
 1401 08b6 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1402 08ba 042B     		cmp	r3, #4
 1403 08bc 07D0     		beq	.L66
 1404              		.loc 1 428 0 discriminator 6
 1405 08be 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1406 08c2 062B     		cmp	r3, #6
 1407 08c4 03D0     		beq	.L66
 1408              		.loc 1 428 0 discriminator 7
 1409 08c6 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1410 08ca 082B     		cmp	r3, #8
 1411 08cc 0ED1     		bne	.L50
 1412              	.L66:
 429:main.c        ****                                 LED_PIN_4_Write(1);
 1413              		.loc 1 429 0 is_stmt 1
 1414 08ce 0120     		movs	r0, #1
 1415 08d0 FFF7FEFF 		bl	LED_PIN_4_Write
 430:main.c        ****                                 instCounter++;
 1416              		.loc 1 430 0
 1417 08d4 164B     		ldr	r3, .L73+24
 1418 08d6 1B68     		ldr	r3, [r3]
 1419 08d8 0133     		adds	r3, r3, #1
 1420 08da 154A     		ldr	r2, .L73+24
 1421 08dc 1360     		str	r3, [r2]
 431:main.c        ****                                 turnComplete = -1;
 1422              		.loc 1 431 0
 1423 08de 124B     		ldr	r3, .L73+16
 1424 08e0 4FF0FF32 		mov	r2, #-1
 1425 08e4 1A60     		str	r2, [r3]
 432:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 433:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 434:main.c        ****                                 //                            //usbPutString(instStr);
 435:main.c        ****                                 pulsesTravelled = 0;
 1426              		.loc 1 435 0
 1427 08e6 154B     		ldr	r3, .L73+36
 1428 08e8 0022     		movs	r2, #0
 1429 08ea 1A60     		str	r2, [r3]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 34


 1430              	.L50:
 1431              	.LBE9:
 436:main.c        ****                             } else {
 437:main.c        **** 
 438:main.c        ****                             }
 439:main.c        ****                         }
 440:main.c        ****                     }
 441:main.c        **** 
 442:main.c        ****                     if (L_INT_BLACK) {
 1432              		.loc 1 442 0
 1433 08ec D7F80031 		ldr	r3, [r7, #256]
 1434 08f0 4A2B     		cmp	r3, #74
 1435 08f2 02DC     		bgt	.L67
 443:main.c        ****                         LED_PIN_2_Write(1);
 1436              		.loc 1 443 0
 1437 08f4 0120     		movs	r0, #1
 1438 08f6 FFF7FEFF 		bl	LED_PIN_2_Write
 1439              	.L67:
 444:main.c        ****                     }
 445:main.c        **** 
 446:main.c        ****                     if (R_INT_BLACK) {
 1440              		.loc 1 446 0
 1441 08fa D7F8EC30 		ldr	r3, [r7, #236]
 1442 08fe 4A2B     		cmp	r3, #74
 1443 0900 02DC     		bgt	.L8
 447:main.c        ****                         LED_PIN_3_Write(1);
 1444              		.loc 1 447 0
 1445 0902 0120     		movs	r0, #1
 1446 0904 FFF7FEFF 		bl	LED_PIN_3_Write
 1447              	.L8:
 1448              	.LBE8:
 1449              	.LBE3:
 448:main.c        ****                     }
 449:main.c        ****                 }
 450:main.c        ****             }
 451:main.c        **** 
 452:main.c        ****             flag = 0;
 1450              		.loc 1 452 0
 1451 0908 0E4B     		ldr	r3, .L73+44
 1452 090a 0022     		movs	r2, #0
 1453 090c 1A60     		str	r2, [r3]
 453:main.c        ****             ADC1_IRQ_Enable();
 1454              		.loc 1 453 0
 1455 090e FFF7FEFF 		bl	ADC1_IRQ_Enable
 454:main.c        ****         }
 455:main.c        **** 
 456:main.c        ****     }
 1456              		.loc 1 456 0
 1457 0912 FFF7C1BB 		b	.L68
 1458              	.L74:
 1459 0916 00BF     		.align	3
 1460              	.L73:
 1461 0918 C0266BD4 		.word	-731175232
 1462 091c 43442240 		.word	1075987523
 1463 0920 EC51B81E 		.word	515396076
 1464 0924 856B3440 		.word	1077177221
 1465 0928 00000000 		.word	turnComplete
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 35


 1466 092c 00000000 		.word	lastAdjustDirection
 1467 0930 00000000 		.word	instCounter
 1468 0934 00000000 		.word	distance
 1469 0938 3333F33F 		.word	1072902963
 1470 093c 00000000 		.word	pulsesTravelled
 1471 0940 00804C40 		.word	1078755328
 1472 0944 00000000 		.word	flag
 1473              		.cfi_endproc
 1474              	.LFE65:
 1475              		.size	main, .-main
 1476              		.section	.text.usbPutString,"ax",%progbits
 1477              		.align	2
 1478              		.global	usbPutString
 1479              		.thumb
 1480              		.thumb_func
 1481              		.type	usbPutString, %function
 1482              	usbPutString:
 1483              	.LFB66:
 457:main.c        **** }
 458:main.c        **** //* ========================================
 459:main.c        **** void usbPutString(char * s) {
 1484              		.loc 1 459 0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 8
 1487              		@ frame_needed = 1, uses_anonymous_args = 0
 1488 0000 80B5     		push	{r7, lr}
 1489              		.cfi_def_cfa_offset 8
 1490              		.cfi_offset 7, -8
 1491              		.cfi_offset 14, -4
 1492 0002 82B0     		sub	sp, sp, #8
 1493              		.cfi_def_cfa_offset 16
 1494 0004 00AF     		add	r7, sp, #0
 1495              		.cfi_def_cfa_register 7
 1496 0006 7860     		str	r0, [r7, #4]
 460:main.c        ****     // !! Assumes that *s is a string with allocated space >=64 chars    
 461:main.c        ****     //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 462:main.c        ****     //  length to 62 char (63rd char is a '!')
 463:main.c        **** 
 464:main.c        ****     #ifdef USE_USB
 465:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1497              		.loc 1 465 0
 1498 0008 00BF     		nop
 1499              	.L76:
 1500              		.loc 1 465 0 is_stmt 0 discriminator 1
 1501 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1502 000e 0346     		mov	r3, r0
 1503 0010 002B     		cmp	r3, #0
 1504 0012 FAD0     		beq	.L76
 466:main.c        ****     s[63] = '\0';
 1505              		.loc 1 466 0 is_stmt 1
 1506 0014 7B68     		ldr	r3, [r7, #4]
 1507 0016 3F33     		adds	r3, r3, #63
 1508 0018 0022     		movs	r2, #0
 1509 001a 1A70     		strb	r2, [r3]
 467:main.c        ****     s[62] = '!';
 1510              		.loc 1 467 0
 1511 001c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 36


 1512 001e 3E33     		adds	r3, r3, #62
 1513 0020 2122     		movs	r2, #33
 1514 0022 1A70     		strb	r2, [r3]
 468:main.c        ****     USBUART_PutData((uint8 * ) s, strlen(s));
 1515              		.loc 1 468 0
 1516 0024 7868     		ldr	r0, [r7, #4]
 1517 0026 FFF7FEFF 		bl	strlen
 1518 002a 0346     		mov	r3, r0
 1519 002c 9BB2     		uxth	r3, r3
 1520 002e 1946     		mov	r1, r3
 1521 0030 7868     		ldr	r0, [r7, #4]
 1522 0032 FFF7FEFF 		bl	USBUART_PutData
 469:main.c        ****     #endif
 470:main.c        **** }
 1523              		.loc 1 470 0
 1524 0036 00BF     		nop
 1525 0038 0837     		adds	r7, r7, #8
 1526              		.cfi_def_cfa_offset 8
 1527 003a BD46     		mov	sp, r7
 1528              		.cfi_def_cfa_register 13
 1529              		@ sp needed
 1530 003c 80BD     		pop	{r7, pc}
 1531              		.cfi_endproc
 1532              	.LFE66:
 1533              		.size	usbPutString, .-usbPutString
 1534 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1535              		.align	2
 1536              		.global	usbPutChar
 1537              		.thumb
 1538              		.thumb_func
 1539              		.type	usbPutChar, %function
 1540              	usbPutChar:
 1541              	.LFB67:
 471:main.c        **** //* ========================================
 472:main.c        **** void usbPutChar(char c) {
 1542              		.loc 1 472 0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 8
 1545              		@ frame_needed = 1, uses_anonymous_args = 0
 1546 0000 80B5     		push	{r7, lr}
 1547              		.cfi_def_cfa_offset 8
 1548              		.cfi_offset 7, -8
 1549              		.cfi_offset 14, -4
 1550 0002 82B0     		sub	sp, sp, #8
 1551              		.cfi_def_cfa_offset 16
 1552 0004 00AF     		add	r7, sp, #0
 1553              		.cfi_def_cfa_register 7
 1554 0006 0346     		mov	r3, r0
 1555 0008 FB71     		strb	r3, [r7, #7]
 473:main.c        ****     #ifdef USE_USB
 474:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1556              		.loc 1 474 0
 1557 000a 00BF     		nop
 1558              	.L78:
 1559              		.loc 1 474 0 is_stmt 0 discriminator 1
 1560 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1561 0010 0346     		mov	r3, r0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 37


 1562 0012 002B     		cmp	r3, #0
 1563 0014 FAD0     		beq	.L78
 475:main.c        ****     USBUART_PutChar(c);
 1564              		.loc 1 475 0 is_stmt 1
 1565 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1566 0018 1846     		mov	r0, r3
 1567 001a FFF7FEFF 		bl	USBUART_PutChar
 476:main.c        ****     #endif
 477:main.c        **** }...
 1568              		.loc 1 477 0
 1569 001e 00BF     		nop
 1570 0020 0837     		adds	r7, r7, #8
 1571              		.cfi_def_cfa_offset 8
 1572 0022 BD46     		mov	sp, r7
 1573              		.cfi_def_cfa_register 13
 1574              		@ sp needed
 1575 0024 80BD     		pop	{r7, pc}
 1576              		.cfi_endproc
 1577              	.LFE67:
 1578              		.size	usbPutChar, .-usbPutChar
 1579 0026 00BF     		.text
 1580              	.Letext0:
 1581              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1582              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1583              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1584              		.file 5 "vars.h"
 1585              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1586              		.section	.debug_info,"",%progbits
 1587              	.Ldebug_info0:
 1588 0000 44070000 		.4byte	0x744
 1589 0004 0400     		.2byte	0x4
 1590 0006 00000000 		.4byte	.Ldebug_abbrev0
 1591 000a 04       		.byte	0x4
 1592 000b 01       		.uleb128 0x1
 1593 000c C1000000 		.4byte	.LASF102
 1594 0010 0C       		.byte	0xc
 1595 0011 9C040000 		.4byte	.LASF103
 1596 0015 E7010000 		.4byte	.LASF104
 1597 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1598 001d 00000000 		.4byte	0
 1599 0021 00000000 		.4byte	.Ldebug_line0
 1600 0025 02       		.uleb128 0x2
 1601 0026 01       		.byte	0x1
 1602 0027 06       		.byte	0x6
 1603 0028 CD010000 		.4byte	.LASF0
 1604 002c 02       		.uleb128 0x2
 1605 002d 01       		.byte	0x1
 1606 002e 08       		.byte	0x8
 1607 002f FB020000 		.4byte	.LASF1
 1608 0033 02       		.uleb128 0x2
 1609 0034 02       		.byte	0x2
 1610 0035 05       		.byte	0x5
 1611 0036 72000000 		.4byte	.LASF2
 1612 003a 02       		.uleb128 0x2
 1613 003b 02       		.byte	0x2
 1614 003c 07       		.byte	0x7
 1615 003d DD030000 		.4byte	.LASF3
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 38


 1616 0041 03       		.uleb128 0x3
 1617 0042 45040000 		.4byte	.LASF12
 1618 0046 02       		.byte	0x2
 1619 0047 3F       		.byte	0x3f
 1620 0048 4C000000 		.4byte	0x4c
 1621 004c 02       		.uleb128 0x2
 1622 004d 04       		.byte	0x4
 1623 004e 05       		.byte	0x5
 1624 004f 8D020000 		.4byte	.LASF4
 1625 0053 02       		.uleb128 0x2
 1626 0054 04       		.byte	0x4
 1627 0055 07       		.byte	0x7
 1628 0056 A3040000 		.4byte	.LASF5
 1629 005a 02       		.uleb128 0x2
 1630 005b 08       		.byte	0x8
 1631 005c 05       		.byte	0x5
 1632 005d 4F010000 		.4byte	.LASF6
 1633 0061 02       		.uleb128 0x2
 1634 0062 08       		.byte	0x8
 1635 0063 07       		.byte	0x7
 1636 0064 88030000 		.4byte	.LASF7
 1637 0068 04       		.uleb128 0x4
 1638 0069 04       		.byte	0x4
 1639 006a 05       		.byte	0x5
 1640 006b 696E7400 		.ascii	"int\000"
 1641 006f 02       		.uleb128 0x2
 1642 0070 04       		.byte	0x4
 1643 0071 07       		.byte	0x7
 1644 0072 9F030000 		.4byte	.LASF8
 1645 0076 02       		.uleb128 0x2
 1646 0077 08       		.byte	0x8
 1647 0078 04       		.byte	0x4
 1648 0079 11030000 		.4byte	.LASF9
 1649 007d 02       		.uleb128 0x2
 1650 007e 04       		.byte	0x4
 1651 007f 07       		.byte	0x7
 1652 0080 9C000000 		.4byte	.LASF10
 1653 0084 05       		.uleb128 0x5
 1654 0085 04       		.byte	0x4
 1655 0086 8A000000 		.4byte	0x8a
 1656 008a 02       		.uleb128 0x2
 1657 008b 01       		.byte	0x1
 1658 008c 08       		.byte	0x8
 1659 008d 1F040000 		.4byte	.LASF11
 1660 0091 06       		.uleb128 0x6
 1661 0092 8A000000 		.4byte	0x8a
 1662 0096 A1000000 		.4byte	0xa1
 1663 009a 07       		.uleb128 0x7
 1664 009b 7D000000 		.4byte	0x7d
 1665 009f 17       		.byte	0x17
 1666 00a0 00       		.byte	0
 1667 00a1 03       		.uleb128 0x3
 1668 00a2 38040000 		.4byte	.LASF13
 1669 00a6 03       		.byte	0x3
 1670 00a7 2C       		.byte	0x2c
 1671 00a8 41000000 		.4byte	0x41
 1672 00ac 08       		.uleb128 0x8
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 39


 1673 00ad 8D010000 		.4byte	.LASF14
 1674 00b1 04       		.byte	0x4
 1675 00b2 E701     		.2byte	0x1e7
 1676 00b4 2C000000 		.4byte	0x2c
 1677 00b8 08       		.uleb128 0x8
 1678 00b9 7A010000 		.4byte	.LASF15
 1679 00bd 04       		.byte	0x4
 1680 00be E801     		.2byte	0x1e8
 1681 00c0 3A000000 		.4byte	0x3a
 1682 00c4 08       		.uleb128 0x8
 1683 00c5 5C020000 		.4byte	.LASF16
 1684 00c9 04       		.byte	0x4
 1685 00ca EA01     		.2byte	0x1ea
 1686 00cc 25000000 		.4byte	0x25
 1687 00d0 08       		.uleb128 0x8
 1688 00d1 87010000 		.4byte	.LASF17
 1689 00d5 04       		.byte	0x4
 1690 00d6 EB01     		.2byte	0x1eb
 1691 00d8 33000000 		.4byte	0x33
 1692 00dc 02       		.uleb128 0x2
 1693 00dd 04       		.byte	0x4
 1694 00de 04       		.byte	0x4
 1695 00df D9010000 		.4byte	.LASF18
 1696 00e3 02       		.uleb128 0x2
 1697 00e4 08       		.byte	0x8
 1698 00e5 04       		.byte	0x4
 1699 00e6 B5040000 		.4byte	.LASF19
 1700 00ea 09       		.uleb128 0x9
 1701 00eb 15040000 		.4byte	.LASF105
 1702 00ef 20       		.byte	0x20
 1703 00f0 05       		.byte	0x5
 1704 00f1 29       		.byte	0x29
 1705 00f2 C3010000 		.4byte	0x1c3
 1706 00f6 0A       		.uleb128 0xa
 1707 00f7 85050000 		.4byte	.LASF20
 1708 00fb 05       		.byte	0x5
 1709 00fc 2A       		.byte	0x2a
 1710 00fd C4000000 		.4byte	0xc4
 1711 0101 00       		.byte	0
 1712 0102 0A       		.uleb128 0xa
 1713 0103 81010000 		.4byte	.LASF21
 1714 0107 05       		.byte	0x5
 1715 0108 2B       		.byte	0x2b
 1716 0109 AC000000 		.4byte	0xac
 1717 010d 01       		.byte	0x1
 1718 010e 0A       		.uleb128 0xa
 1719 010f 2D040000 		.4byte	.LASF22
 1720 0113 05       		.byte	0x5
 1721 0114 2C       		.byte	0x2c
 1722 0115 D0000000 		.4byte	0xd0
 1723 0119 02       		.byte	0x2
 1724 011a 0A       		.uleb128 0xa
 1725 011b 4B050000 		.4byte	.LASF23
 1726 011f 05       		.byte	0x5
 1727 0120 2D       		.byte	0x2d
 1728 0121 D0000000 		.4byte	0xd0
 1729 0125 04       		.byte	0x4
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 40


 1730 0126 0A       		.uleb128 0xa
 1731 0127 8A050000 		.4byte	.LASF24
 1732 012b 05       		.byte	0x5
 1733 012c 2E       		.byte	0x2e
 1734 012d D0000000 		.4byte	0xd0
 1735 0131 06       		.byte	0x6
 1736 0132 0A       		.uleb128 0xa
 1737 0133 85020000 		.4byte	.LASF25
 1738 0137 05       		.byte	0x5
 1739 0138 2F       		.byte	0x2f
 1740 0139 D0000000 		.4byte	0xd0
 1741 013d 08       		.byte	0x8
 1742 013e 0A       		.uleb128 0xa
 1743 013f 02050000 		.4byte	.LASF26
 1744 0143 05       		.byte	0x5
 1745 0144 30       		.byte	0x30
 1746 0145 D0000000 		.4byte	0xd0
 1747 0149 0A       		.byte	0xa
 1748 014a 0A       		.uleb128 0xa
 1749 014b 45030000 		.4byte	.LASF27
 1750 014f 05       		.byte	0x5
 1751 0150 31       		.byte	0x31
 1752 0151 D0000000 		.4byte	0xd0
 1753 0155 0C       		.byte	0xc
 1754 0156 0A       		.uleb128 0xa
 1755 0157 78020000 		.4byte	.LASF28
 1756 015b 05       		.byte	0x5
 1757 015c 32       		.byte	0x32
 1758 015d D0000000 		.4byte	0xd0
 1759 0161 0E       		.byte	0xe
 1760 0162 0A       		.uleb128 0xa
 1761 0163 D5030000 		.4byte	.LASF29
 1762 0167 05       		.byte	0x5
 1763 0168 33       		.byte	0x33
 1764 0169 D0000000 		.4byte	0xd0
 1765 016d 10       		.byte	0x10
 1766 016e 0A       		.uleb128 0xa
 1767 016f 09030000 		.4byte	.LASF30
 1768 0173 05       		.byte	0x5
 1769 0174 34       		.byte	0x34
 1770 0175 D0000000 		.4byte	0xd0
 1771 0179 12       		.byte	0x12
 1772 017a 0A       		.uleb128 0xa
 1773 017b 4E030000 		.4byte	.LASF31
 1774 017f 05       		.byte	0x5
 1775 0180 35       		.byte	0x35
 1776 0181 D0000000 		.4byte	0xd0
 1777 0185 14       		.byte	0x14
 1778 0186 0A       		.uleb128 0xa
 1779 0187 93010000 		.4byte	.LASF32
 1780 018b 05       		.byte	0x5
 1781 018c 36       		.byte	0x36
 1782 018d D0000000 		.4byte	0xd0
 1783 0191 16       		.byte	0x16
 1784 0192 0A       		.uleb128 0xa
 1785 0193 6A000000 		.4byte	.LASF33
 1786 0197 05       		.byte	0x5
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 41


 1787 0198 37       		.byte	0x37
 1788 0199 D0000000 		.4byte	0xd0
 1789 019d 18       		.byte	0x18
 1790 019e 0A       		.uleb128 0xa
 1791 019f 70020000 		.4byte	.LASF34
 1792 01a3 05       		.byte	0x5
 1793 01a4 38       		.byte	0x38
 1794 01a5 D0000000 		.4byte	0xd0
 1795 01a9 1A       		.byte	0x1a
 1796 01aa 0A       		.uleb128 0xa
 1797 01ab C7030000 		.4byte	.LASF35
 1798 01af 05       		.byte	0x5
 1799 01b0 39       		.byte	0x39
 1800 01b1 D0000000 		.4byte	0xd0
 1801 01b5 1C       		.byte	0x1c
 1802 01b6 0A       		.uleb128 0xa
 1803 01b7 6D010000 		.4byte	.LASF36
 1804 01bb 05       		.byte	0x5
 1805 01bc 3A       		.byte	0x3a
 1806 01bd D0000000 		.4byte	0xd0
 1807 01c1 1E       		.byte	0x1e
 1808 01c2 00       		.byte	0
 1809 01c3 0B       		.uleb128 0xb
 1810 01c4 656F6300 		.ascii	"eoc\000"
 1811 01c8 01       		.byte	0x1
 1812 01c9 4C       		.byte	0x4c
 1813 01ca 00000000 		.4byte	.LFB64
 1814 01ce 18000000 		.4byte	.LFE64-.LFB64
 1815 01d2 01       		.uleb128 0x1
 1816 01d3 9C       		.byte	0x9c
 1817 01d4 0C       		.uleb128 0xc
 1818 01d5 B2000000 		.4byte	.LASF54
 1819 01d9 01       		.byte	0x1
 1820 01da 50       		.byte	0x50
 1821 01db 68000000 		.4byte	0x68
 1822 01df 00000000 		.4byte	.LFB65
 1823 01e3 48090000 		.4byte	.LFE65-.LFB65
 1824 01e7 01       		.uleb128 0x1
 1825 01e8 9C       		.byte	0x9c
 1826 01e9 76030000 		.4byte	0x376
 1827 01ed 0D       		.uleb128 0xd
 1828 01ee 34000000 		.4byte	.LBB2
 1829 01f2 5A000000 		.4byte	.LBE2-.LBB2
 1830 01f6 07020000 		.4byte	0x207
 1831 01fa 0E       		.uleb128 0xe
 1832 01fb 6900     		.ascii	"i\000"
 1833 01fd 01       		.byte	0x1
 1834 01fe 69       		.byte	0x69
 1835 01ff 68000000 		.4byte	0x68
 1836 0203 02       		.uleb128 0x2
 1837 0204 91       		.byte	0x91
 1838 0205 6C       		.sleb128 -20
 1839 0206 00       		.byte	0
 1840 0207 0F       		.uleb128 0xf
 1841 0208 32010000 		.4byte	.LBB3
 1842 020c D6070000 		.4byte	.LBE3-.LBB3
 1843 0210 10       		.uleb128 0x10
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 42


 1844 0211 0B000000 		.4byte	.LASF37
 1845 0215 01       		.byte	0x1
 1846 0216 84       		.byte	0x84
 1847 0217 68000000 		.4byte	0x68
 1848 021b 02       		.uleb128 0x2
 1849 021c 91       		.byte	0x91
 1850 021d 68       		.sleb128 -24
 1851 021e 10       		.uleb128 0x10
 1852 021f 8A040000 		.4byte	.LASF38
 1853 0223 01       		.byte	0x1
 1854 0224 85       		.byte	0x85
 1855 0225 68000000 		.4byte	0x68
 1856 0229 02       		.uleb128 0x2
 1857 022a 91       		.byte	0x91
 1858 022b 64       		.sleb128 -28
 1859 022c 10       		.uleb128 0x10
 1860 022d F0030000 		.4byte	.LASF39
 1861 0231 01       		.byte	0x1
 1862 0232 86       		.byte	0x86
 1863 0233 68000000 		.4byte	0x68
 1864 0237 02       		.uleb128 0x2
 1865 0238 91       		.byte	0x91
 1866 0239 60       		.sleb128 -32
 1867 023a 10       		.uleb128 0x10
 1868 023b 6A050000 		.4byte	.LASF40
 1869 023f 01       		.byte	0x1
 1870 0240 87       		.byte	0x87
 1871 0241 68000000 		.4byte	0x68
 1872 0245 02       		.uleb128 0x2
 1873 0246 91       		.byte	0x91
 1874 0247 5C       		.sleb128 -36
 1875 0248 10       		.uleb128 0x10
 1876 0249 57030000 		.4byte	.LASF41
 1877 024d 01       		.byte	0x1
 1878 024e 88       		.byte	0x88
 1879 024f 68000000 		.4byte	0x68
 1880 0253 02       		.uleb128 0x2
 1881 0254 91       		.byte	0x91
 1882 0255 58       		.sleb128 -40
 1883 0256 10       		.uleb128 0x10
 1884 0257 E0020000 		.4byte	.LASF42
 1885 025b 01       		.byte	0x1
 1886 025c 89       		.byte	0x89
 1887 025d 68000000 		.4byte	0x68
 1888 0261 02       		.uleb128 0x2
 1889 0262 91       		.byte	0x91
 1890 0263 54       		.sleb128 -44
 1891 0264 0D       		.uleb128 0xd
 1892 0265 66010000 		.4byte	.LBB4
 1893 0269 44010000 		.4byte	.LBE4-.LBB4
 1894 026d A6020000 		.4byte	0x2a6
 1895 0271 0E       		.uleb128 0xe
 1896 0272 6900     		.ascii	"i\000"
 1897 0274 01       		.byte	0x1
 1898 0275 8A       		.byte	0x8a
 1899 0276 68000000 		.4byte	0x68
 1900 027a 02       		.uleb128 0x2
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 43


 1901 027b 91       		.byte	0x91
 1902 027c 50       		.sleb128 -48
 1903 027d 0F       		.uleb128 0xf
 1904 027e 6E010000 		.4byte	.LBB5
 1905 0282 26010000 		.4byte	.LBE5-.LBB5
 1906 0286 10       		.uleb128 0x10
 1907 0287 23030000 		.4byte	.LASF43
 1908 028b 01       		.byte	0x1
 1909 028c 8C       		.byte	0x8c
 1910 028d 91000000 		.4byte	0x91
 1911 0291 03       		.uleb128 0x3
 1912 0292 91       		.byte	0x91
 1913 0293 A87F     		.sleb128 -88
 1914 0295 10       		.uleb128 0x10
 1915 0296 2B030000 		.4byte	.LASF44
 1916 029a 01       		.byte	0x1
 1917 029b 8D       		.byte	0x8d
 1918 029c 91000000 		.4byte	0x91
 1919 02a0 03       		.uleb128 0x3
 1920 02a1 91       		.byte	0x91
 1921 02a2 907F     		.sleb128 -112
 1922 02a4 00       		.byte	0
 1923 02a5 00       		.byte	0
 1924 02a6 0D       		.uleb128 0xd
 1925 02a7 B4020000 		.4byte	.LBB6
 1926 02ab 5C010000 		.4byte	.LBE6-.LBB6
 1927 02af E4020000 		.4byte	0x2e4
 1928 02b3 0E       		.uleb128 0xe
 1929 02b4 6900     		.ascii	"i\000"
 1930 02b6 01       		.byte	0x1
 1931 02b7 CE       		.byte	0xce
 1932 02b8 68000000 		.4byte	0x68
 1933 02bc 02       		.uleb128 0x2
 1934 02bd 91       		.byte	0x91
 1935 02be 4C       		.sleb128 -52
 1936 02bf 10       		.uleb128 0x10
 1937 02c0 33030000 		.4byte	.LASF45
 1938 02c4 01       		.byte	0x1
 1939 02c5 CE       		.byte	0xce
 1940 02c6 68000000 		.4byte	0x68
 1941 02ca 02       		.uleb128 0x2
 1942 02cb 91       		.byte	0x91
 1943 02cc 48       		.sleb128 -56
 1944 02cd 0F       		.uleb128 0xf
 1945 02ce E0030000 		.4byte	.LBB7
 1946 02d2 1C000000 		.4byte	.LBE7-.LBB7
 1947 02d6 0E       		.uleb128 0xe
 1948 02d7 6900     		.ascii	"i\000"
 1949 02d9 01       		.byte	0x1
 1950 02da E7       		.byte	0xe7
 1951 02db 68000000 		.4byte	0x68
 1952 02df 02       		.uleb128 0x2
 1953 02e0 91       		.byte	0x91
 1954 02e1 44       		.sleb128 -60
 1955 02e2 00       		.byte	0
 1956 02e3 00       		.byte	0
 1957 02e4 0F       		.uleb128 0xf
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 44


 1958 02e5 12040000 		.4byte	.LBB8
 1959 02e9 F6040000 		.4byte	.LBE8-.LBB8
 1960 02ed 10       		.uleb128 0x10
 1961 02ee C6020000 		.4byte	.LASF46
 1962 02f2 01       		.byte	0x1
 1963 02f3 F6       		.byte	0xf6
 1964 02f4 8A000000 		.4byte	0x8a
 1965 02f8 02       		.uleb128 0x2
 1966 02f9 91       		.byte	0x91
 1967 02fa 43       		.sleb128 -61
 1968 02fb 10       		.uleb128 0x10
 1969 02fc A2050000 		.4byte	.LASF47
 1970 0300 01       		.byte	0x1
 1971 0301 F7       		.byte	0xf7
 1972 0302 8A000000 		.4byte	0x8a
 1973 0306 02       		.uleb128 0x2
 1974 0307 91       		.byte	0x91
 1975 0308 42       		.sleb128 -62
 1976 0309 0F       		.uleb128 0xf
 1977 030a AE060000 		.4byte	.LBB9
 1978 030e 3E020000 		.4byte	.LBE9-.LBB9
 1979 0312 11       		.uleb128 0x11
 1980 0313 D0030000 		.4byte	.LASF48
 1981 0317 01       		.byte	0x1
 1982 0318 8B01     		.2byte	0x18b
 1983 031a 91000000 		.4byte	0x91
 1984 031e 03       		.uleb128 0x3
 1985 031f 91       		.byte	0x91
 1986 0320 E07E     		.sleb128 -160
 1987 0322 11       		.uleb128 0x11
 1988 0323 4F040000 		.4byte	.LASF49
 1989 0327 01       		.byte	0x1
 1990 0328 8C01     		.2byte	0x18c
 1991 032a 91000000 		.4byte	0x91
 1992 032e 03       		.uleb128 0x3
 1993 032f 91       		.byte	0x91
 1994 0330 C87E     		.sleb128 -184
 1995 0332 11       		.uleb128 0x11
 1996 0333 9C050000 		.4byte	.LASF50
 1997 0337 01       		.byte	0x1
 1998 0338 8D01     		.2byte	0x18d
 1999 033a 91000000 		.4byte	0x91
 2000 033e 03       		.uleb128 0x3
 2001 033f 91       		.byte	0x91
 2002 0340 B07E     		.sleb128 -208
 2003 0342 11       		.uleb128 0x11
 2004 0343 81030000 		.4byte	.LASF51
 2005 0347 01       		.byte	0x1
 2006 0348 8E01     		.2byte	0x18e
 2007 034a 91000000 		.4byte	0x91
 2008 034e 03       		.uleb128 0x3
 2009 034f 91       		.byte	0x91
 2010 0350 987E     		.sleb128 -232
 2011 0352 11       		.uleb128 0x11
 2012 0353 56050000 		.4byte	.LASF52
 2013 0357 01       		.byte	0x1
 2014 0358 9001     		.2byte	0x190
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 45


 2015 035a 91000000 		.4byte	0x91
 2016 035e 03       		.uleb128 0x3
 2017 035f 91       		.byte	0x91
 2018 0360 807E     		.sleb128 -256
 2019 0362 11       		.uleb128 0x11
 2020 0363 56040000 		.4byte	.LASF53
 2021 0367 01       		.byte	0x1
 2022 0368 9101     		.2byte	0x191
 2023 036a 91000000 		.4byte	0x91
 2024 036e 03       		.uleb128 0x3
 2025 036f 91       		.byte	0x91
 2026 0370 E87D     		.sleb128 -280
 2027 0372 00       		.byte	0
 2028 0373 00       		.byte	0
 2029 0374 00       		.byte	0
 2030 0375 00       		.byte	0
 2031 0376 12       		.uleb128 0x12
 2032 0377 4F020000 		.4byte	.LASF55
 2033 037b 01       		.byte	0x1
 2034 037c CB01     		.2byte	0x1cb
 2035 037e 00000000 		.4byte	.LFB66
 2036 0382 3E000000 		.4byte	.LFE66-.LFB66
 2037 0386 01       		.uleb128 0x1
 2038 0387 9C       		.byte	0x9c
 2039 0388 9A030000 		.4byte	0x39a
 2040 038c 13       		.uleb128 0x13
 2041 038d 7300     		.ascii	"s\000"
 2042 038f 01       		.byte	0x1
 2043 0390 CB01     		.2byte	0x1cb
 2044 0392 84000000 		.4byte	0x84
 2045 0396 02       		.uleb128 0x2
 2046 0397 91       		.byte	0x91
 2047 0398 74       		.sleb128 -12
 2048 0399 00       		.byte	0
 2049 039a 12       		.uleb128 0x12
 2050 039b 00000000 		.4byte	.LASF56
 2051 039f 01       		.byte	0x1
 2052 03a0 D801     		.2byte	0x1d8
 2053 03a2 00000000 		.4byte	.LFB67
 2054 03a6 26000000 		.4byte	.LFE67-.LFB67
 2055 03aa 01       		.uleb128 0x1
 2056 03ab 9C       		.byte	0x9c
 2057 03ac BE030000 		.4byte	0x3be
 2058 03b0 13       		.uleb128 0x13
 2059 03b1 6300     		.ascii	"c\000"
 2060 03b3 01       		.byte	0x1
 2061 03b4 D801     		.2byte	0x1d8
 2062 03b6 8A000000 		.4byte	0x8a
 2063 03ba 02       		.uleb128 0x2
 2064 03bb 91       		.byte	0x91
 2065 03bc 77       		.sleb128 -9
 2066 03bd 00       		.byte	0
 2067 03be 14       		.uleb128 0x14
 2068 03bf BC040000 		.4byte	.LASF57
 2069 03c3 06       		.byte	0x6
 2070 03c4 1207     		.2byte	0x712
 2071 03c6 CA030000 		.4byte	0x3ca
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 46


 2072 03ca 15       		.uleb128 0x15
 2073 03cb A1000000 		.4byte	0xa1
 2074 03cf 16       		.uleb128 0x16
 2075 03d0 747300   		.ascii	"ts\000"
 2076 03d3 05       		.byte	0x5
 2077 03d4 10       		.byte	0x10
 2078 03d5 AC000000 		.4byte	0xac
 2079 03d9 05       		.uleb128 0x5
 2080 03da 03       		.byte	0x3
 2081 03db 00000000 		.4byte	ts
 2082 03df 17       		.uleb128 0x17
 2083 03e0 1E050000 		.4byte	.LASF58
 2084 03e4 05       		.byte	0x5
 2085 03e5 11       		.byte	0x11
 2086 03e6 B8000000 		.4byte	0xb8
 2087 03ea 05       		.uleb128 0x5
 2088 03eb 03       		.byte	0x3
 2089 03ec 00000000 		.4byte	ts_enc
 2090 03f0 17       		.uleb128 0x17
 2091 03f1 25050000 		.4byte	.LASF59
 2092 03f5 05       		.byte	0x5
 2093 03f6 12       		.byte	0x12
 2094 03f7 B8000000 		.4byte	0xb8
 2095 03fb 05       		.uleb128 0x5
 2096 03fc 03       		.byte	0x3
 2097 03fd 00000000 		.4byte	ts_update
 2098 0401 17       		.uleb128 0x17
 2099 0402 15050000 		.4byte	.LASF60
 2100 0406 05       		.byte	0x5
 2101 0407 13       		.byte	0x13
 2102 0408 B8000000 		.4byte	0xb8
 2103 040c 05       		.uleb128 0x5
 2104 040d 03       		.byte	0x3
 2105 040e 00000000 		.4byte	ts_speed
 2106 0412 17       		.uleb128 0x17
 2107 0413 0A050000 		.4byte	.LASF61
 2108 0417 05       		.byte	0x5
 2109 0418 14       		.byte	0x14
 2110 0419 B8000000 		.4byte	0xb8
 2111 041d 05       		.uleb128 0x5
 2112 041e 03       		.byte	0x3
 2113 041f 00000000 		.4byte	ts_display
 2114 0423 17       		.uleb128 0x17
 2115 0424 DB040000 		.4byte	.LASF62
 2116 0428 05       		.byte	0x5
 2117 0429 16       		.byte	0x16
 2118 042a AC000000 		.4byte	0xac
 2119 042e 05       		.uleb128 0x5
 2120 042f 03       		.byte	0x3
 2121 0430 00000000 		.4byte	flag_ts_enc
 2122 0434 17       		.uleb128 0x17
 2123 0435 61020000 		.4byte	.LASF63
 2124 0439 05       		.byte	0x5
 2125 043a 17       		.byte	0x17
 2126 043b AC000000 		.4byte	0xac
 2127 043f 05       		.uleb128 0x5
 2128 0440 03       		.byte	0x3
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 47


 2129 0441 00000000 		.4byte	flag_ts_update
 2130 0445 17       		.uleb128 0x17
 2131 0446 5C000000 		.4byte	.LASF64
 2132 044a 05       		.byte	0x5
 2133 044b 18       		.byte	0x18
 2134 044c AC000000 		.4byte	0xac
 2135 0450 05       		.uleb128 0x5
 2136 0451 03       		.byte	0x3
 2137 0452 00000000 		.4byte	flag_ts_speed
 2138 0456 17       		.uleb128 0x17
 2139 0457 B6020000 		.4byte	.LASF65
 2140 045b 05       		.byte	0x5
 2141 045c 19       		.byte	0x19
 2142 045d AC000000 		.4byte	0xac
 2143 0461 05       		.uleb128 0x5
 2144 0462 03       		.byte	0x3
 2145 0463 00000000 		.4byte	flag_ts_display
 2146 0467 17       		.uleb128 0x17
 2147 0468 79030000 		.4byte	.LASF66
 2148 046c 05       		.byte	0x5
 2149 046d 1C       		.byte	0x1c
 2150 046e AC000000 		.4byte	0xac
 2151 0472 05       		.uleb128 0x5
 2152 0473 03       		.byte	0x3
 2153 0474 00000000 		.4byte	flag_rx
 2154 0478 17       		.uleb128 0x17
 2155 0479 41000000 		.4byte	.LASF67
 2156 047d 05       		.byte	0x5
 2157 047e 1D       		.byte	0x1d
 2158 047f AC000000 		.4byte	0xac
 2159 0483 05       		.uleb128 0x5
 2160 0484 03       		.byte	0x3
 2161 0485 00000000 		.4byte	flag_packet
 2162 0489 17       		.uleb128 0x17
 2163 048a AC030000 		.4byte	.LASF68
 2164 048e 05       		.byte	0x5
 2165 048f 1E       		.byte	0x1e
 2166 0490 AC000000 		.4byte	0xac
 2167 0494 05       		.uleb128 0x5
 2168 0495 03       		.byte	0x3
 2169 0496 00000000 		.4byte	flag_KB_string
 2170 049a 17       		.uleb128 0x17
 2171 049b 6A030000 		.4byte	.LASF69
 2172 049f 05       		.byte	0x5
 2173 04a0 20       		.byte	0x20
 2174 04a1 AC000000 		.4byte	0xac
 2175 04a5 05       		.uleb128 0x5
 2176 04a6 03       		.byte	0x3
 2177 04a7 00000000 		.4byte	dataready_flag
 2178 04ab 17       		.uleb128 0x17
 2179 04ac 2F050000 		.4byte	.LASF70
 2180 04b0 05       		.byte	0x5
 2181 04b1 22       		.byte	0x22
 2182 04b2 AC000000 		.4byte	0xac
 2183 04b6 05       		.uleb128 0x5
 2184 04b7 03       		.byte	0x3
 2185 04b8 00000000 		.4byte	flag_rf_transmission_active
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 48


 2186 04bc 06       		.uleb128 0x6
 2187 04bd 8A000000 		.4byte	0x8a
 2188 04c1 CC040000 		.4byte	0x4cc
 2189 04c5 07       		.uleb128 0x7
 2190 04c6 7D000000 		.4byte	0x7d
 2191 04ca 3F       		.byte	0x3f
 2192 04cb 00       		.byte	0
 2193 04cc 17       		.uleb128 0x17
 2194 04cd 72040000 		.4byte	.LASF71
 2195 04d1 05       		.byte	0x5
 2196 04d2 25       		.byte	0x25
 2197 04d3 BC040000 		.4byte	0x4bc
 2198 04d7 05       		.uleb128 0x5
 2199 04d8 03       		.byte	0x3
 2200 04d9 00000000 		.4byte	displaystring
 2201 04dd 17       		.uleb128 0x17
 2202 04de C8010000 		.4byte	.LASF72
 2203 04e2 05       		.byte	0x5
 2204 04e3 26       		.byte	0x26
 2205 04e4 BC040000 		.4byte	0x4bc
 2206 04e8 05       		.uleb128 0x5
 2207 04e9 03       		.byte	0x3
 2208 04ea 00000000 		.4byte	line
 2209 04ee 17       		.uleb128 0x17
 2210 04ef 1D030000 		.4byte	.LASF73
 2211 04f3 05       		.byte	0x5
 2212 04f4 26       		.byte	0x26
 2213 04f5 BC040000 		.4byte	0x4bc
 2214 04f9 05       		.uleb128 0x5
 2215 04fa 03       		.byte	0x3
 2216 04fb 00000000 		.4byte	entry
 2217 04ff 06       		.uleb128 0x6
 2218 0500 AC000000 		.4byte	0xac
 2219 0504 0F050000 		.4byte	0x50f
 2220 0508 07       		.uleb128 0x7
 2221 0509 7D000000 		.4byte	0x7d
 2222 050d 3F       		.byte	0x3f
 2223 050e 00       		.byte	0
 2224 050f 17       		.uleb128 0x17
 2225 0510 B7000000 		.4byte	.LASF74
 2226 0514 05       		.byte	0x5
 2227 0515 27       		.byte	0x27
 2228 0516 FF040000 		.4byte	0x4ff
 2229 051a 05       		.uleb128 0x5
 2230 051b 03       		.byte	0x3
 2231 051c 00000000 		.4byte	usbBuffer
 2232 0520 17       		.uleb128 0x17
 2233 0521 8F000000 		.4byte	.LASF75
 2234 0525 05       		.byte	0x5
 2235 0526 3C       		.byte	0x3c
 2236 0527 EA000000 		.4byte	0xea
 2237 052b 05       		.uleb128 0x5
 2238 052c 03       		.byte	0x3
 2239 052d 00000000 		.4byte	system_state
 2240 0531 17       		.uleb128 0x17
 2241 0532 BB030000 		.4byte	.LASF76
 2242 0536 01       		.byte	0x1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 49


 2243 0537 2A       		.byte	0x2a
 2244 0538 68000000 		.4byte	0x68
 2245 053c 05       		.uleb128 0x5
 2246 053d 03       		.byte	0x3
 2247 053e 00000000 		.4byte	consecStops
 2248 0542 17       		.uleb128 0x17
 2249 0543 DF010000 		.4byte	.LASF77
 2250 0547 01       		.byte	0x1
 2251 0548 2B       		.byte	0x2b
 2252 0549 68000000 		.4byte	0x68
 2253 054d 05       		.uleb128 0x5
 2254 054e 03       		.byte	0x3
 2255 054f 00000000 		.4byte	started
 2256 0553 17       		.uleb128 0x17
 2257 0554 C9040000 		.4byte	.LASF78
 2258 0558 01       		.byte	0x1
 2259 0559 2C       		.byte	0x2c
 2260 055a 68000000 		.4byte	0x68
 2261 055e 05       		.uleb128 0x5
 2262 055f 03       		.byte	0x3
 2263 0560 00000000 		.4byte	instCounter
 2264 0564 17       		.uleb128 0x17
 2265 0565 40040000 		.4byte	.LASF79
 2266 0569 01       		.byte	0x1
 2267 056a 32       		.byte	0x32
 2268 056b 75050000 		.4byte	0x575
 2269 056f 05       		.uleb128 0x5
 2270 0570 03       		.byte	0x3
 2271 0571 00000000 		.4byte	flag
 2272 0575 15       		.uleb128 0x15
 2273 0576 68000000 		.4byte	0x68
 2274 057a 06       		.uleb128 0x6
 2275 057b 75050000 		.4byte	0x575
 2276 057f 8B050000 		.4byte	0x58b
 2277 0583 18       		.uleb128 0x18
 2278 0584 7D000000 		.4byte	0x7d
 2279 0588 E703     		.2byte	0x3e7
 2280 058a 00       		.byte	0
 2281 058b 17       		.uleb128 0x17
 2282 058c 5B040000 		.4byte	.LASF80
 2283 0590 01       		.byte	0x1
 2284 0591 33       		.byte	0x33
 2285 0592 9C050000 		.4byte	0x59c
 2286 0596 05       		.uleb128 0x5
 2287 0597 03       		.byte	0x3
 2288 0598 00000000 		.4byte	valuesLeftIntersection
 2289 059c 15       		.uleb128 0x15
 2290 059d 7A050000 		.4byte	0x57a
 2291 05a1 17       		.uleb128 0x17
 2292 05a2 4D000000 		.4byte	.LASF81
 2293 05a6 01       		.byte	0x1
 2294 05a7 34       		.byte	0x34
 2295 05a8 B2050000 		.4byte	0x5b2
 2296 05ac 05       		.uleb128 0x5
 2297 05ad 03       		.byte	0x3
 2298 05ae 00000000 		.4byte	valuesLeftLine
 2299 05b2 15       		.uleb128 0x15
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 50


 2300 05b3 7A050000 		.4byte	0x57a
 2301 05b7 17       		.uleb128 0x17
 2302 05b8 04040000 		.4byte	.LASF82
 2303 05bc 01       		.byte	0x1
 2304 05bd 35       		.byte	0x35
 2305 05be C8050000 		.4byte	0x5c8
 2306 05c2 05       		.uleb128 0x5
 2307 05c3 03       		.byte	0x3
 2308 05c4 00000000 		.4byte	valuesMiddleLine
 2309 05c8 15       		.uleb128 0x15
 2310 05c9 7A050000 		.4byte	0x57a
 2311 05cd 17       		.uleb128 0x17
 2312 05ce 7C000000 		.4byte	.LASF83
 2313 05d2 01       		.byte	0x1
 2314 05d3 36       		.byte	0x36
 2315 05d4 DE050000 		.4byte	0x5de
 2316 05d8 05       		.uleb128 0x5
 2317 05d9 03       		.byte	0x3
 2318 05da 00000000 		.4byte	valuesTurnComplete
 2319 05de 15       		.uleb128 0x15
 2320 05df 7A050000 		.4byte	0x57a
 2321 05e3 17       		.uleb128 0x17
 2322 05e4 5D010000 		.4byte	.LASF84
 2323 05e8 01       		.byte	0x1
 2324 05e9 37       		.byte	0x37
 2325 05ea F4050000 		.4byte	0x5f4
 2326 05ee 05       		.uleb128 0x5
 2327 05ef 03       		.byte	0x3
 2328 05f0 00000000 		.4byte	valuesRightLine
 2329 05f4 15       		.uleb128 0x15
 2330 05f5 7A050000 		.4byte	0x57a
 2331 05f9 17       		.uleb128 0x17
 2332 05fa A0010000 		.4byte	.LASF85
 2333 05fe 01       		.byte	0x1
 2334 05ff 38       		.byte	0x38
 2335 0600 0A060000 		.4byte	0x60a
 2336 0604 05       		.uleb128 0x5
 2337 0605 03       		.byte	0x3
 2338 0606 00000000 		.4byte	valuesRightIntersection
 2339 060a 15       		.uleb128 0x15
 2340 060b 7A050000 		.4byte	0x57a
 2341 060f 17       		.uleb128 0x17
 2342 0610 D5040000 		.4byte	.LASF86
 2343 0614 01       		.byte	0x1
 2344 0615 39       		.byte	0x39
 2345 0616 75050000 		.4byte	0x575
 2346 061a 05       		.uleb128 0x5
 2347 061b 03       		.byte	0x3
 2348 061c 00000000 		.4byte	count
 2349 0620 17       		.uleb128 0x17
 2350 0621 F1040000 		.4byte	.LASF87
 2351 0625 01       		.byte	0x1
 2352 0626 3A       		.byte	0x3a
 2353 0627 75050000 		.4byte	0x575
 2354 062b 05       		.uleb128 0x5
 2355 062c 03       		.byte	0x3
 2356 062d 00000000 		.4byte	motorUpdateCount
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 51


 2357 0631 17       		.uleb128 0x17
 2358 0632 96020000 		.4byte	.LASF88
 2359 0636 01       		.byte	0x1
 2360 0637 3B       		.byte	0x3b
 2361 0638 75050000 		.4byte	0x575
 2362 063c 05       		.uleb128 0x5
 2363 063d 03       		.byte	0x3
 2364 063e 00000000 		.4byte	lastVeerDirection
 2365 0642 17       		.uleb128 0x17
 2366 0643 E7040000 		.4byte	.LASF89
 2367 0647 01       		.byte	0x1
 2368 0648 3D       		.byte	0x3d
 2369 0649 75050000 		.4byte	0x575
 2370 064d 05       		.uleb128 0x5
 2371 064e 03       		.byte	0x3
 2372 064f 00000000 		.4byte	v1M1
 2373 0653 17       		.uleb128 0x17
 2374 0654 EC040000 		.4byte	.LASF90
 2375 0658 01       		.byte	0x1
 2376 0659 3E       		.byte	0x3e
 2377 065a 75050000 		.4byte	0x575
 2378 065e 05       		.uleb128 0x5
 2379 065f 03       		.byte	0x3
 2380 0660 00000000 		.4byte	v1M2
 2381 0664 17       		.uleb128 0x17
 2382 0665 80040000 		.4byte	.LASF91
 2383 0669 01       		.byte	0x1
 2384 066a 3F       		.byte	0x3f
 2385 066b 75050000 		.4byte	0x575
 2386 066f 05       		.uleb128 0x5
 2387 0670 03       		.byte	0x3
 2388 0671 00000000 		.4byte	v2M1
 2389 0675 17       		.uleb128 0x17
 2390 0676 85040000 		.4byte	.LASF92
 2391 067a 01       		.byte	0x1
 2392 067b 40       		.byte	0x40
 2393 067c 75050000 		.4byte	0x575
 2394 0680 05       		.uleb128 0x5
 2395 0681 03       		.byte	0x3
 2396 0682 00000000 		.4byte	v2M2
 2397 0686 17       		.uleb128 0x17
 2398 0687 A5000000 		.4byte	.LASF93
 2399 068b 01       		.byte	0x1
 2400 068c 41       		.byte	0x41
 2401 068d 75050000 		.4byte	0x575
 2402 0691 05       		.uleb128 0x5
 2403 0692 03       		.byte	0x3
 2404 0693 00000000 		.4byte	turnComplete
 2405 0697 17       		.uleb128 0x17
 2406 0698 B8010000 		.4byte	.LASF94
 2407 069c 01       		.byte	0x1
 2408 069d 42       		.byte	0x42
 2409 069e 68000000 		.4byte	0x68
 2410 06a2 05       		.uleb128 0x5
 2411 06a3 03       		.byte	0x3
 2412 06a4 00000000 		.4byte	pulsesTravelled
 2413 06a8 17       		.uleb128 0x17
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 52


 2414 06a9 D2020000 		.4byte	.LASF95
 2415 06ad 01       		.byte	0x1
 2416 06ae 43       		.byte	0x43
 2417 06af 75050000 		.4byte	0x575
 2418 06b3 05       		.uleb128 0x5
 2419 06b4 03       		.byte	0x3
 2420 06b5 00000000 		.4byte	checkDistance
 2421 06b9 17       		.uleb128 0x17
 2422 06ba 80050000 		.4byte	.LASF96
 2423 06be 01       		.byte	0x1
 2424 06bf 44       		.byte	0x44
 2425 06c0 75050000 		.4byte	0x575
 2426 06c4 05       		.uleb128 0x5
 2427 06c5 03       		.byte	0x3
 2428 06c6 00000000 		.4byte	step
 2429 06ca 17       		.uleb128 0x17
 2430 06cb A8020000 		.4byte	.LASF97
 2431 06cf 01       		.byte	0x1
 2432 06d0 45       		.byte	0x45
 2433 06d1 75050000 		.4byte	0x575
 2434 06d5 05       		.uleb128 0x5
 2435 06d6 03       		.byte	0x3
 2436 06d7 00000000 		.4byte	interruptFlag
 2437 06db 17       		.uleb128 0x17
 2438 06dc 2D000000 		.4byte	.LASF98
 2439 06e0 01       		.byte	0x1
 2440 06e1 47       		.byte	0x47
 2441 06e2 68000000 		.4byte	0x68
 2442 06e6 05       		.uleb128 0x5
 2443 06e7 03       		.byte	0x3
 2444 06e8 00000000 		.4byte	lastAdjustDirection
 2445 06ec 06       		.uleb128 0x6
 2446 06ed 2C000000 		.4byte	0x2c
 2447 06f1 03070000 		.4byte	0x703
 2448 06f5 18       		.uleb128 0x18
 2449 06f6 7D000000 		.4byte	0x7d
 2450 06fa F301     		.2byte	0x1f3
 2451 06fc 07       		.uleb128 0x7
 2452 06fd 7D000000 		.4byte	0x7d
 2453 0701 01       		.byte	0x1
 2454 0702 00       		.byte	0
 2455 0703 17       		.uleb128 0x17
 2456 0704 25000000 		.4byte	.LASF99
 2457 0708 01       		.byte	0x1
 2458 0709 48       		.byte	0x48
 2459 070a EC060000 		.4byte	0x6ec
 2460 070e 05       		.uleb128 0x5
 2461 070f 03       		.byte	0x3
 2462 0710 00000000 		.4byte	squares
 2463 0714 06       		.uleb128 0x6
 2464 0715 2C000000 		.4byte	0x2c
 2465 0719 25070000 		.4byte	0x725
 2466 071d 18       		.uleb128 0x18
 2467 071e 7D000000 		.4byte	0x7d
 2468 0722 F301     		.2byte	0x1f3
 2469 0724 00       		.byte	0
 2470 0725 17       		.uleb128 0x17
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 53


 2471 0726 5E050000 		.4byte	.LASF100
 2472 072a 01       		.byte	0x1
 2473 072b 49       		.byte	0x49
 2474 072c 14070000 		.4byte	0x714
 2475 0730 05       		.uleb128 0x5
 2476 0731 03       		.byte	0x3
 2477 0732 00000000 		.4byte	instruction
 2478 0736 17       		.uleb128 0x17
 2479 0737 24040000 		.4byte	.LASF101
 2480 073b 01       		.byte	0x1
 2481 073c 4A       		.byte	0x4a
 2482 073d 14070000 		.4byte	0x714
 2483 0741 05       		.uleb128 0x5
 2484 0742 03       		.byte	0x3
 2485 0743 00000000 		.4byte	distance
 2486 0747 00       		.byte	0
 2487              		.section	.debug_abbrev,"",%progbits
 2488              	.Ldebug_abbrev0:
 2489 0000 01       		.uleb128 0x1
 2490 0001 11       		.uleb128 0x11
 2491 0002 01       		.byte	0x1
 2492 0003 25       		.uleb128 0x25
 2493 0004 0E       		.uleb128 0xe
 2494 0005 13       		.uleb128 0x13
 2495 0006 0B       		.uleb128 0xb
 2496 0007 03       		.uleb128 0x3
 2497 0008 0E       		.uleb128 0xe
 2498 0009 1B       		.uleb128 0x1b
 2499 000a 0E       		.uleb128 0xe
 2500 000b 55       		.uleb128 0x55
 2501 000c 17       		.uleb128 0x17
 2502 000d 11       		.uleb128 0x11
 2503 000e 01       		.uleb128 0x1
 2504 000f 10       		.uleb128 0x10
 2505 0010 17       		.uleb128 0x17
 2506 0011 00       		.byte	0
 2507 0012 00       		.byte	0
 2508 0013 02       		.uleb128 0x2
 2509 0014 24       		.uleb128 0x24
 2510 0015 00       		.byte	0
 2511 0016 0B       		.uleb128 0xb
 2512 0017 0B       		.uleb128 0xb
 2513 0018 3E       		.uleb128 0x3e
 2514 0019 0B       		.uleb128 0xb
 2515 001a 03       		.uleb128 0x3
 2516 001b 0E       		.uleb128 0xe
 2517 001c 00       		.byte	0
 2518 001d 00       		.byte	0
 2519 001e 03       		.uleb128 0x3
 2520 001f 16       		.uleb128 0x16
 2521 0020 00       		.byte	0
 2522 0021 03       		.uleb128 0x3
 2523 0022 0E       		.uleb128 0xe
 2524 0023 3A       		.uleb128 0x3a
 2525 0024 0B       		.uleb128 0xb
 2526 0025 3B       		.uleb128 0x3b
 2527 0026 0B       		.uleb128 0xb
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 54


 2528 0027 49       		.uleb128 0x49
 2529 0028 13       		.uleb128 0x13
 2530 0029 00       		.byte	0
 2531 002a 00       		.byte	0
 2532 002b 04       		.uleb128 0x4
 2533 002c 24       		.uleb128 0x24
 2534 002d 00       		.byte	0
 2535 002e 0B       		.uleb128 0xb
 2536 002f 0B       		.uleb128 0xb
 2537 0030 3E       		.uleb128 0x3e
 2538 0031 0B       		.uleb128 0xb
 2539 0032 03       		.uleb128 0x3
 2540 0033 08       		.uleb128 0x8
 2541 0034 00       		.byte	0
 2542 0035 00       		.byte	0
 2543 0036 05       		.uleb128 0x5
 2544 0037 0F       		.uleb128 0xf
 2545 0038 00       		.byte	0
 2546 0039 0B       		.uleb128 0xb
 2547 003a 0B       		.uleb128 0xb
 2548 003b 49       		.uleb128 0x49
 2549 003c 13       		.uleb128 0x13
 2550 003d 00       		.byte	0
 2551 003e 00       		.byte	0
 2552 003f 06       		.uleb128 0x6
 2553 0040 01       		.uleb128 0x1
 2554 0041 01       		.byte	0x1
 2555 0042 49       		.uleb128 0x49
 2556 0043 13       		.uleb128 0x13
 2557 0044 01       		.uleb128 0x1
 2558 0045 13       		.uleb128 0x13
 2559 0046 00       		.byte	0
 2560 0047 00       		.byte	0
 2561 0048 07       		.uleb128 0x7
 2562 0049 21       		.uleb128 0x21
 2563 004a 00       		.byte	0
 2564 004b 49       		.uleb128 0x49
 2565 004c 13       		.uleb128 0x13
 2566 004d 2F       		.uleb128 0x2f
 2567 004e 0B       		.uleb128 0xb
 2568 004f 00       		.byte	0
 2569 0050 00       		.byte	0
 2570 0051 08       		.uleb128 0x8
 2571 0052 16       		.uleb128 0x16
 2572 0053 00       		.byte	0
 2573 0054 03       		.uleb128 0x3
 2574 0055 0E       		.uleb128 0xe
 2575 0056 3A       		.uleb128 0x3a
 2576 0057 0B       		.uleb128 0xb
 2577 0058 3B       		.uleb128 0x3b
 2578 0059 05       		.uleb128 0x5
 2579 005a 49       		.uleb128 0x49
 2580 005b 13       		.uleb128 0x13
 2581 005c 00       		.byte	0
 2582 005d 00       		.byte	0
 2583 005e 09       		.uleb128 0x9
 2584 005f 13       		.uleb128 0x13
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 55


 2585 0060 01       		.byte	0x1
 2586 0061 03       		.uleb128 0x3
 2587 0062 0E       		.uleb128 0xe
 2588 0063 0B       		.uleb128 0xb
 2589 0064 0B       		.uleb128 0xb
 2590 0065 3A       		.uleb128 0x3a
 2591 0066 0B       		.uleb128 0xb
 2592 0067 3B       		.uleb128 0x3b
 2593 0068 0B       		.uleb128 0xb
 2594 0069 01       		.uleb128 0x1
 2595 006a 13       		.uleb128 0x13
 2596 006b 00       		.byte	0
 2597 006c 00       		.byte	0
 2598 006d 0A       		.uleb128 0xa
 2599 006e 0D       		.uleb128 0xd
 2600 006f 00       		.byte	0
 2601 0070 03       		.uleb128 0x3
 2602 0071 0E       		.uleb128 0xe
 2603 0072 3A       		.uleb128 0x3a
 2604 0073 0B       		.uleb128 0xb
 2605 0074 3B       		.uleb128 0x3b
 2606 0075 0B       		.uleb128 0xb
 2607 0076 49       		.uleb128 0x49
 2608 0077 13       		.uleb128 0x13
 2609 0078 38       		.uleb128 0x38
 2610 0079 0B       		.uleb128 0xb
 2611 007a 00       		.byte	0
 2612 007b 00       		.byte	0
 2613 007c 0B       		.uleb128 0xb
 2614 007d 2E       		.uleb128 0x2e
 2615 007e 00       		.byte	0
 2616 007f 3F       		.uleb128 0x3f
 2617 0080 19       		.uleb128 0x19
 2618 0081 03       		.uleb128 0x3
 2619 0082 08       		.uleb128 0x8
 2620 0083 3A       		.uleb128 0x3a
 2621 0084 0B       		.uleb128 0xb
 2622 0085 3B       		.uleb128 0x3b
 2623 0086 0B       		.uleb128 0xb
 2624 0087 27       		.uleb128 0x27
 2625 0088 19       		.uleb128 0x19
 2626 0089 11       		.uleb128 0x11
 2627 008a 01       		.uleb128 0x1
 2628 008b 12       		.uleb128 0x12
 2629 008c 06       		.uleb128 0x6
 2630 008d 40       		.uleb128 0x40
 2631 008e 18       		.uleb128 0x18
 2632 008f 9742     		.uleb128 0x2117
 2633 0091 19       		.uleb128 0x19
 2634 0092 00       		.byte	0
 2635 0093 00       		.byte	0
 2636 0094 0C       		.uleb128 0xc
 2637 0095 2E       		.uleb128 0x2e
 2638 0096 01       		.byte	0x1
 2639 0097 3F       		.uleb128 0x3f
 2640 0098 19       		.uleb128 0x19
 2641 0099 03       		.uleb128 0x3
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 56


 2642 009a 0E       		.uleb128 0xe
 2643 009b 3A       		.uleb128 0x3a
 2644 009c 0B       		.uleb128 0xb
 2645 009d 3B       		.uleb128 0x3b
 2646 009e 0B       		.uleb128 0xb
 2647 009f 49       		.uleb128 0x49
 2648 00a0 13       		.uleb128 0x13
 2649 00a1 11       		.uleb128 0x11
 2650 00a2 01       		.uleb128 0x1
 2651 00a3 12       		.uleb128 0x12
 2652 00a4 06       		.uleb128 0x6
 2653 00a5 40       		.uleb128 0x40
 2654 00a6 18       		.uleb128 0x18
 2655 00a7 9642     		.uleb128 0x2116
 2656 00a9 19       		.uleb128 0x19
 2657 00aa 01       		.uleb128 0x1
 2658 00ab 13       		.uleb128 0x13
 2659 00ac 00       		.byte	0
 2660 00ad 00       		.byte	0
 2661 00ae 0D       		.uleb128 0xd
 2662 00af 0B       		.uleb128 0xb
 2663 00b0 01       		.byte	0x1
 2664 00b1 11       		.uleb128 0x11
 2665 00b2 01       		.uleb128 0x1
 2666 00b3 12       		.uleb128 0x12
 2667 00b4 06       		.uleb128 0x6
 2668 00b5 01       		.uleb128 0x1
 2669 00b6 13       		.uleb128 0x13
 2670 00b7 00       		.byte	0
 2671 00b8 00       		.byte	0
 2672 00b9 0E       		.uleb128 0xe
 2673 00ba 34       		.uleb128 0x34
 2674 00bb 00       		.byte	0
 2675 00bc 03       		.uleb128 0x3
 2676 00bd 08       		.uleb128 0x8
 2677 00be 3A       		.uleb128 0x3a
 2678 00bf 0B       		.uleb128 0xb
 2679 00c0 3B       		.uleb128 0x3b
 2680 00c1 0B       		.uleb128 0xb
 2681 00c2 49       		.uleb128 0x49
 2682 00c3 13       		.uleb128 0x13
 2683 00c4 02       		.uleb128 0x2
 2684 00c5 18       		.uleb128 0x18
 2685 00c6 00       		.byte	0
 2686 00c7 00       		.byte	0
 2687 00c8 0F       		.uleb128 0xf
 2688 00c9 0B       		.uleb128 0xb
 2689 00ca 01       		.byte	0x1
 2690 00cb 11       		.uleb128 0x11
 2691 00cc 01       		.uleb128 0x1
 2692 00cd 12       		.uleb128 0x12
 2693 00ce 06       		.uleb128 0x6
 2694 00cf 00       		.byte	0
 2695 00d0 00       		.byte	0
 2696 00d1 10       		.uleb128 0x10
 2697 00d2 34       		.uleb128 0x34
 2698 00d3 00       		.byte	0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 57


 2699 00d4 03       		.uleb128 0x3
 2700 00d5 0E       		.uleb128 0xe
 2701 00d6 3A       		.uleb128 0x3a
 2702 00d7 0B       		.uleb128 0xb
 2703 00d8 3B       		.uleb128 0x3b
 2704 00d9 0B       		.uleb128 0xb
 2705 00da 49       		.uleb128 0x49
 2706 00db 13       		.uleb128 0x13
 2707 00dc 02       		.uleb128 0x2
 2708 00dd 18       		.uleb128 0x18
 2709 00de 00       		.byte	0
 2710 00df 00       		.byte	0
 2711 00e0 11       		.uleb128 0x11
 2712 00e1 34       		.uleb128 0x34
 2713 00e2 00       		.byte	0
 2714 00e3 03       		.uleb128 0x3
 2715 00e4 0E       		.uleb128 0xe
 2716 00e5 3A       		.uleb128 0x3a
 2717 00e6 0B       		.uleb128 0xb
 2718 00e7 3B       		.uleb128 0x3b
 2719 00e8 05       		.uleb128 0x5
 2720 00e9 49       		.uleb128 0x49
 2721 00ea 13       		.uleb128 0x13
 2722 00eb 02       		.uleb128 0x2
 2723 00ec 18       		.uleb128 0x18
 2724 00ed 00       		.byte	0
 2725 00ee 00       		.byte	0
 2726 00ef 12       		.uleb128 0x12
 2727 00f0 2E       		.uleb128 0x2e
 2728 00f1 01       		.byte	0x1
 2729 00f2 3F       		.uleb128 0x3f
 2730 00f3 19       		.uleb128 0x19
 2731 00f4 03       		.uleb128 0x3
 2732 00f5 0E       		.uleb128 0xe
 2733 00f6 3A       		.uleb128 0x3a
 2734 00f7 0B       		.uleb128 0xb
 2735 00f8 3B       		.uleb128 0x3b
 2736 00f9 05       		.uleb128 0x5
 2737 00fa 27       		.uleb128 0x27
 2738 00fb 19       		.uleb128 0x19
 2739 00fc 11       		.uleb128 0x11
 2740 00fd 01       		.uleb128 0x1
 2741 00fe 12       		.uleb128 0x12
 2742 00ff 06       		.uleb128 0x6
 2743 0100 40       		.uleb128 0x40
 2744 0101 18       		.uleb128 0x18
 2745 0102 9642     		.uleb128 0x2116
 2746 0104 19       		.uleb128 0x19
 2747 0105 01       		.uleb128 0x1
 2748 0106 13       		.uleb128 0x13
 2749 0107 00       		.byte	0
 2750 0108 00       		.byte	0
 2751 0109 13       		.uleb128 0x13
 2752 010a 05       		.uleb128 0x5
 2753 010b 00       		.byte	0
 2754 010c 03       		.uleb128 0x3
 2755 010d 08       		.uleb128 0x8
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 58


 2756 010e 3A       		.uleb128 0x3a
 2757 010f 0B       		.uleb128 0xb
 2758 0110 3B       		.uleb128 0x3b
 2759 0111 05       		.uleb128 0x5
 2760 0112 49       		.uleb128 0x49
 2761 0113 13       		.uleb128 0x13
 2762 0114 02       		.uleb128 0x2
 2763 0115 18       		.uleb128 0x18
 2764 0116 00       		.byte	0
 2765 0117 00       		.byte	0
 2766 0118 14       		.uleb128 0x14
 2767 0119 34       		.uleb128 0x34
 2768 011a 00       		.byte	0
 2769 011b 03       		.uleb128 0x3
 2770 011c 0E       		.uleb128 0xe
 2771 011d 3A       		.uleb128 0x3a
 2772 011e 0B       		.uleb128 0xb
 2773 011f 3B       		.uleb128 0x3b
 2774 0120 05       		.uleb128 0x5
 2775 0121 49       		.uleb128 0x49
 2776 0122 13       		.uleb128 0x13
 2777 0123 3F       		.uleb128 0x3f
 2778 0124 19       		.uleb128 0x19
 2779 0125 3C       		.uleb128 0x3c
 2780 0126 19       		.uleb128 0x19
 2781 0127 00       		.byte	0
 2782 0128 00       		.byte	0
 2783 0129 15       		.uleb128 0x15
 2784 012a 35       		.uleb128 0x35
 2785 012b 00       		.byte	0
 2786 012c 49       		.uleb128 0x49
 2787 012d 13       		.uleb128 0x13
 2788 012e 00       		.byte	0
 2789 012f 00       		.byte	0
 2790 0130 16       		.uleb128 0x16
 2791 0131 34       		.uleb128 0x34
 2792 0132 00       		.byte	0
 2793 0133 03       		.uleb128 0x3
 2794 0134 08       		.uleb128 0x8
 2795 0135 3A       		.uleb128 0x3a
 2796 0136 0B       		.uleb128 0xb
 2797 0137 3B       		.uleb128 0x3b
 2798 0138 0B       		.uleb128 0xb
 2799 0139 49       		.uleb128 0x49
 2800 013a 13       		.uleb128 0x13
 2801 013b 3F       		.uleb128 0x3f
 2802 013c 19       		.uleb128 0x19
 2803 013d 02       		.uleb128 0x2
 2804 013e 18       		.uleb128 0x18
 2805 013f 00       		.byte	0
 2806 0140 00       		.byte	0
 2807 0141 17       		.uleb128 0x17
 2808 0142 34       		.uleb128 0x34
 2809 0143 00       		.byte	0
 2810 0144 03       		.uleb128 0x3
 2811 0145 0E       		.uleb128 0xe
 2812 0146 3A       		.uleb128 0x3a
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 59


 2813 0147 0B       		.uleb128 0xb
 2814 0148 3B       		.uleb128 0x3b
 2815 0149 0B       		.uleb128 0xb
 2816 014a 49       		.uleb128 0x49
 2817 014b 13       		.uleb128 0x13
 2818 014c 3F       		.uleb128 0x3f
 2819 014d 19       		.uleb128 0x19
 2820 014e 02       		.uleb128 0x2
 2821 014f 18       		.uleb128 0x18
 2822 0150 00       		.byte	0
 2823 0151 00       		.byte	0
 2824 0152 18       		.uleb128 0x18
 2825 0153 21       		.uleb128 0x21
 2826 0154 00       		.byte	0
 2827 0155 49       		.uleb128 0x49
 2828 0156 13       		.uleb128 0x13
 2829 0157 2F       		.uleb128 0x2f
 2830 0158 05       		.uleb128 0x5
 2831 0159 00       		.byte	0
 2832 015a 00       		.byte	0
 2833 015b 00       		.byte	0
 2834              		.section	.debug_aranges,"",%progbits
 2835 0000 34000000 		.4byte	0x34
 2836 0004 0200     		.2byte	0x2
 2837 0006 00000000 		.4byte	.Ldebug_info0
 2838 000a 04       		.byte	0x4
 2839 000b 00       		.byte	0
 2840 000c 0000     		.2byte	0
 2841 000e 0000     		.2byte	0
 2842 0010 00000000 		.4byte	.LFB64
 2843 0014 18000000 		.4byte	.LFE64-.LFB64
 2844 0018 00000000 		.4byte	.LFB65
 2845 001c 48090000 		.4byte	.LFE65-.LFB65
 2846 0020 00000000 		.4byte	.LFB66
 2847 0024 3E000000 		.4byte	.LFE66-.LFB66
 2848 0028 00000000 		.4byte	.LFB67
 2849 002c 26000000 		.4byte	.LFE67-.LFB67
 2850 0030 00000000 		.4byte	0
 2851 0034 00000000 		.4byte	0
 2852              		.section	.debug_ranges,"",%progbits
 2853              	.Ldebug_ranges0:
 2854 0000 00000000 		.4byte	.LFB64
 2855 0004 18000000 		.4byte	.LFE64
 2856 0008 00000000 		.4byte	.LFB65
 2857 000c 48090000 		.4byte	.LFE65
 2858 0010 00000000 		.4byte	.LFB66
 2859 0014 3E000000 		.4byte	.LFE66
 2860 0018 00000000 		.4byte	.LFB67
 2861 001c 26000000 		.4byte	.LFE67
 2862 0020 00000000 		.4byte	0
 2863 0024 00000000 		.4byte	0
 2864              		.section	.debug_line,"",%progbits
 2865              	.Ldebug_line0:
 2866 0000 A7030000 		.section	.debug_str,"MS",%progbits,1
 2866      02005601 
 2866      00000201 
 2866      FB0E0D00 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 60


 2866      01010101 
 2867              	.LASF56:
 2868 0000 75736250 		.ascii	"usbPutChar\000"
 2868      75744368 
 2868      617200
 2869              	.LASF37:
 2870 000b 68696768 		.ascii	"highCountLeftIntersection\000"
 2870      436F756E 
 2870      744C6566 
 2870      74496E74 
 2870      65727365 
 2871              	.LASF99:
 2872 0025 73717561 		.ascii	"squares\000"
 2872      72657300 
 2873              	.LASF98:
 2874 002d 6C617374 		.ascii	"lastAdjustDirection\000"
 2874      41646A75 
 2874      73744469 
 2874      72656374 
 2874      696F6E00 
 2875              	.LASF67:
 2876 0041 666C6167 		.ascii	"flag_packet\000"
 2876      5F706163 
 2876      6B657400 
 2877              	.LASF81:
 2878 004d 76616C75 		.ascii	"valuesLeftLine\000"
 2878      65734C65 
 2878      66744C69 
 2878      6E6500
 2879              	.LASF64:
 2880 005c 666C6167 		.ascii	"flag_ts_speed\000"
 2880      5F74735F 
 2880      73706565 
 2880      6400
 2881              	.LASF33:
 2882 006a 67325F78 		.ascii	"g2_xpos\000"
 2882      706F7300 
 2883              	.LASF2:
 2884 0072 73686F72 		.ascii	"short int\000"
 2884      7420696E 
 2884      7400
 2885              	.LASF83:
 2886 007c 76616C75 		.ascii	"valuesTurnComplete\000"
 2886      65735475 
 2886      726E436F 
 2886      6D706C65 
 2886      746500
 2887              	.LASF75:
 2888 008f 73797374 		.ascii	"system_state\000"
 2888      656D5F73 
 2888      74617465 
 2888      00
 2889              	.LASF10:
 2890 009c 73697A65 		.ascii	"sizetype\000"
 2890      74797065 
 2890      00
 2891              	.LASF93:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 61


 2892 00a5 7475726E 		.ascii	"turnComplete\000"
 2892      436F6D70 
 2892      6C657465 
 2892      00
 2893              	.LASF54:
 2894 00b2 6D61696E 		.ascii	"main\000"
 2894      00
 2895              	.LASF74:
 2896 00b7 75736242 		.ascii	"usbBuffer\000"
 2896      75666665 
 2896      7200
 2897              	.LASF102:
 2898 00c1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2898      43313120 
 2898      352E342E 
 2898      31203230 
 2898      31363036 
 2899 00f4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2899      20726576 
 2899      6973696F 
 2899      6E203233 
 2899      37373135 
 2900 0127 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2900      66756E63 
 2900      74696F6E 
 2900      2D736563 
 2900      74696F6E 
 2901              	.LASF6:
 2902 014f 6C6F6E67 		.ascii	"long long int\000"
 2902      206C6F6E 
 2902      6720696E 
 2902      7400
 2903              	.LASF84:
 2904 015d 76616C75 		.ascii	"valuesRightLine\000"
 2904      65735269 
 2904      6768744C 
 2904      696E6500 
 2905              	.LASF36:
 2906 016d 67325F64 		.ascii	"g2_direction\000"
 2906      69726563 
 2906      74696F6E 
 2906      00
 2907              	.LASF15:
 2908 017a 75696E74 		.ascii	"uint16\000"
 2908      313600
 2909              	.LASF21:
 2910 0181 696E6465 		.ascii	"index\000"
 2910      7800
 2911              	.LASF17:
 2912 0187 696E7431 		.ascii	"int16\000"
 2912      3600
 2913              	.LASF14:
 2914 018d 75696E74 		.ascii	"uint8\000"
 2914      3800
 2915              	.LASF32:
 2916 0193 67315F64 		.ascii	"g1_direction\000"
 2916      69726563 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 62


 2916      74696F6E 
 2916      00
 2917              	.LASF85:
 2918 01a0 76616C75 		.ascii	"valuesRightIntersection\000"
 2918      65735269 
 2918      67687449 
 2918      6E746572 
 2918      73656374 
 2919              	.LASF94:
 2920 01b8 70756C73 		.ascii	"pulsesTravelled\000"
 2920      65735472 
 2920      6176656C 
 2920      6C656400 
 2921              	.LASF72:
 2922 01c8 6C696E65 		.ascii	"line\000"
 2922      00
 2923              	.LASF0:
 2924 01cd 7369676E 		.ascii	"signed char\000"
 2924      65642063 
 2924      68617200 
 2925              	.LASF18:
 2926 01d9 666C6F61 		.ascii	"float\000"
 2926      7400
 2927              	.LASF77:
 2928 01df 73746172 		.ascii	"started\000"
 2928      74656400 
 2929              	.LASF104:
 2930 01e7 483A5C44 		.ascii	"H:\\Documents\\301\\Post-Benchmark\\team14\\301_lab"
 2930      6F63756D 
 2930      656E7473 
 2930      5C333031 
 2930      5C506F73 
 2931 0215 5F746173 		.ascii	"_tasks\\psoc student pack\\psoc_code_base\\CS301_Cl"
 2931      6B735C70 
 2931      736F6320 
 2931      73747564 
 2931      656E7420 
 2932 0245 6173732E 		.ascii	"ass.cydsn\000"
 2932      63796473 
 2932      6E00
 2933              	.LASF55:
 2934 024f 75736250 		.ascii	"usbPutString\000"
 2934      75745374 
 2934      72696E67 
 2934      00
 2935              	.LASF16:
 2936 025c 696E7438 		.ascii	"int8\000"
 2936      00
 2937              	.LASF63:
 2938 0261 666C6167 		.ascii	"flag_ts_update\000"
 2938      5F74735F 
 2938      75706461 
 2938      746500
 2939              	.LASF34:
 2940 0270 67325F79 		.ascii	"g2_ypos\000"
 2940      706F7300 
 2941              	.LASF28:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 63


 2942 0278 67305F64 		.ascii	"g0_direction\000"
 2942      69726563 
 2942      74696F6E 
 2942      00
 2943              	.LASF25:
 2944 0285 67305F78 		.ascii	"g0_xpos\000"
 2944      706F7300 
 2945              	.LASF4:
 2946 028d 6C6F6E67 		.ascii	"long int\000"
 2946      20696E74 
 2946      00
 2947              	.LASF88:
 2948 0296 6C617374 		.ascii	"lastVeerDirection\000"
 2948      56656572 
 2948      44697265 
 2948      6374696F 
 2948      6E00
 2949              	.LASF97:
 2950 02a8 696E7465 		.ascii	"interruptFlag\000"
 2950      72727570 
 2950      74466C61 
 2950      6700
 2951              	.LASF65:
 2952 02b6 666C6167 		.ascii	"flag_ts_display\000"
 2952      5F74735F 
 2952      64697370 
 2952      6C617900 
 2953              	.LASF46:
 2954 02c6 63757272 		.ascii	"currentInst\000"
 2954      656E7449 
 2954      6E737400 
 2955              	.LASF95:
 2956 02d2 63686563 		.ascii	"checkDistance\000"
 2956      6B446973 
 2956      74616E63 
 2956      6500
 2957              	.LASF42:
 2958 02e0 68696768 		.ascii	"highCountRightIntersection\000"
 2958      436F756E 
 2958      74526967 
 2958      6874496E 
 2958      74657273 
 2959              	.LASF1:
 2960 02fb 756E7369 		.ascii	"unsigned char\000"
 2960      676E6564 
 2960      20636861 
 2960      7200
 2961              	.LASF30:
 2962 0309 67315F79 		.ascii	"g1_ypos\000"
 2962      706F7300 
 2963              	.LASF9:
 2964 0311 6C6F6E67 		.ascii	"long double\000"
 2964      20646F75 
 2964      626C6500 
 2965              	.LASF73:
 2966 031d 656E7472 		.ascii	"entry\000"
 2966      7900
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 64


 2967              	.LASF43:
 2968 0323 72657375 		.ascii	"result1\000"
 2968      6C743100 
 2969              	.LASF44:
 2970 032b 72657375 		.ascii	"result2\000"
 2970      6C743200 
 2971              	.LASF45:
 2972 0333 66697273 		.ascii	"firstNonZeroIndex\000"
 2972      744E6F6E 
 2972      5A65726F 
 2972      496E6465 
 2972      7800
 2973              	.LASF27:
 2974 0345 67305F73 		.ascii	"g0_speed\000"
 2974      70656564 
 2974      00
 2975              	.LASF31:
 2976 034e 67315F73 		.ascii	"g1_speed\000"
 2976      70656564 
 2976      00
 2977              	.LASF41:
 2978 0357 68696768 		.ascii	"highCountRightLine\000"
 2978      436F756E 
 2978      74526967 
 2978      68744C69 
 2978      6E6500
 2979              	.LASF69:
 2980 036a 64617461 		.ascii	"dataready_flag\000"
 2980      72656164 
 2980      795F666C 
 2980      616700
 2981              	.LASF66:
 2982 0379 666C6167 		.ascii	"flag_rx\000"
 2982      5F727800 
 2983              	.LASF51:
 2984 0381 7365636F 		.ascii	"second\000"
 2984      6E6400
 2985              	.LASF7:
 2986 0388 6C6F6E67 		.ascii	"long long unsigned int\000"
 2986      206C6F6E 
 2986      6720756E 
 2986      7369676E 
 2986      65642069 
 2987              	.LASF8:
 2988 039f 756E7369 		.ascii	"unsigned int\000"
 2988      676E6564 
 2988      20696E74 
 2988      00
 2989              	.LASF68:
 2990 03ac 666C6167 		.ascii	"flag_KB_string\000"
 2990      5F4B425F 
 2990      73747269 
 2990      6E6700
 2991              	.LASF76:
 2992 03bb 636F6E73 		.ascii	"consecStops\000"
 2992      65635374 
 2992      6F707300 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 65


 2993              	.LASF35:
 2994 03c7 67325F73 		.ascii	"g2_speed\000"
 2994      70656564 
 2994      00
 2995              	.LASF48:
 2996 03d0 64697374 		.ascii	"dist\000"
 2996      00
 2997              	.LASF29:
 2998 03d5 67315F78 		.ascii	"g1_xpos\000"
 2998      706F7300 
 2999              	.LASF3:
 3000 03dd 73686F72 		.ascii	"short unsigned int\000"
 3000      7420756E 
 3000      7369676E 
 3000      65642069 
 3000      6E7400
 3001              	.LASF39:
 3002 03f0 68696768 		.ascii	"highCountMiddleLine\000"
 3002      436F756E 
 3002      744D6964 
 3002      646C654C 
 3002      696E6500 
 3003              	.LASF82:
 3004 0404 76616C75 		.ascii	"valuesMiddleLine\000"
 3004      65734D69 
 3004      64646C65 
 3004      4C696E65 
 3004      00
 3005              	.LASF105:
 3006 0415 64617461 		.ascii	"data_main\000"
 3006      5F6D6169 
 3006      6E00
 3007              	.LASF11:
 3008 041f 63686172 		.ascii	"char\000"
 3008      00
 3009              	.LASF101:
 3010 0424 64697374 		.ascii	"distance\000"
 3010      616E6365 
 3010      00
 3011              	.LASF22:
 3012 042d 726F626F 		.ascii	"robot_xpos\000"
 3012      745F7870 
 3012      6F7300
 3013              	.LASF13:
 3014 0438 696E7433 		.ascii	"int32_t\000"
 3014      325F7400 
 3015              	.LASF79:
 3016 0440 666C6167 		.ascii	"flag\000"
 3016      00
 3017              	.LASF12:
 3018 0445 5F5F696E 		.ascii	"__int32_t\000"
 3018      7433325F 
 3018      7400
 3019              	.LASF49:
 3020 044f 70756C73 		.ascii	"pulses\000"
 3020      657300
 3021              	.LASF53:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 66


 3022 0456 6356616C 		.ascii	"cVal\000"
 3022      00
 3023              	.LASF80:
 3024 045b 76616C75 		.ascii	"valuesLeftIntersection\000"
 3024      65734C65 
 3024      6674496E 
 3024      74657273 
 3024      65637469 
 3025              	.LASF71:
 3026 0472 64697370 		.ascii	"displaystring\000"
 3026      6C617973 
 3026      7472696E 
 3026      6700
 3027              	.LASF91:
 3028 0480 76324D31 		.ascii	"v2M1\000"
 3028      00
 3029              	.LASF92:
 3030 0485 76324D32 		.ascii	"v2M2\000"
 3030      00
 3031              	.LASF38:
 3032 048a 68696768 		.ascii	"highCountLeftLine\000"
 3032      436F756E 
 3032      744C6566 
 3032      744C696E 
 3032      6500
 3033              	.LASF103:
 3034 049c 6D61696E 		.ascii	"main.c\000"
 3034      2E6300
 3035              	.LASF5:
 3036 04a3 6C6F6E67 		.ascii	"long unsigned int\000"
 3036      20756E73 
 3036      69676E65 
 3036      6420696E 
 3036      7400
 3037              	.LASF19:
 3038 04b5 646F7562 		.ascii	"double\000"
 3038      6C6500
 3039              	.LASF57:
 3040 04bc 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3040      52784275 
 3040      66666572 
 3040      00
 3041              	.LASF78:
 3042 04c9 696E7374 		.ascii	"instCounter\000"
 3042      436F756E 
 3042      74657200 
 3043              	.LASF86:
 3044 04d5 636F756E 		.ascii	"count\000"
 3044      7400
 3045              	.LASF62:
 3046 04db 666C6167 		.ascii	"flag_ts_enc\000"
 3046      5F74735F 
 3046      656E6300 
 3047              	.LASF89:
 3048 04e7 76314D31 		.ascii	"v1M1\000"
 3048      00
 3049              	.LASF90:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 67


 3050 04ec 76314D32 		.ascii	"v1M2\000"
 3050      00
 3051              	.LASF87:
 3052 04f1 6D6F746F 		.ascii	"motorUpdateCount\000"
 3052      72557064 
 3052      61746543 
 3052      6F756E74 
 3052      00
 3053              	.LASF26:
 3054 0502 67305F79 		.ascii	"g0_ypos\000"
 3054      706F7300 
 3055              	.LASF61:
 3056 050a 74735F64 		.ascii	"ts_display\000"
 3056      6973706C 
 3056      617900
 3057              	.LASF60:
 3058 0515 74735F73 		.ascii	"ts_speed\000"
 3058      70656564 
 3058      00
 3059              	.LASF58:
 3060 051e 74735F65 		.ascii	"ts_enc\000"
 3060      6E6300
 3061              	.LASF59:
 3062 0525 74735F75 		.ascii	"ts_update\000"
 3062      70646174 
 3062      6500
 3063              	.LASF70:
 3064 052f 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3064      5F72665F 
 3064      7472616E 
 3064      736D6973 
 3064      73696F6E 
 3065              	.LASF23:
 3066 054b 726F626F 		.ascii	"robot_ypos\000"
 3066      745F7970 
 3066      6F7300
 3067              	.LASF52:
 3068 0556 696E7374 		.ascii	"instStr\000"
 3068      53747200 
 3069              	.LASF100:
 3070 055e 696E7374 		.ascii	"instruction\000"
 3070      72756374 
 3070      696F6E00 
 3071              	.LASF40:
 3072 056a 68696768 		.ascii	"highCountTurnComplete\000"
 3072      436F756E 
 3072      74547572 
 3072      6E436F6D 
 3072      706C6574 
 3073              	.LASF96:
 3074 0580 73746570 		.ascii	"step\000"
 3074      00
 3075              	.LASF20:
 3076 0585 72737369 		.ascii	"rssi\000"
 3076      00
 3077              	.LASF24:
 3078 058a 726F626F 		.ascii	"robot_orientation\000"
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccJ9Uhwf.s 			page 68


 3078      745F6F72 
 3078      69656E74 
 3078      6174696F 
 3078      6E00
 3079              	.LASF50:
 3080 059c 66697273 		.ascii	"first\000"
 3080      7400
 3081              	.LASF47:
 3082 05a2 6E657874 		.ascii	"nextInst\000"
 3082      496E7374 
 3082      00
 3083              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
