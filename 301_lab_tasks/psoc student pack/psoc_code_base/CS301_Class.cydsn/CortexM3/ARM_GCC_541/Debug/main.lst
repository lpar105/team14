ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	TARGET_SPEED
 107              		.align	2
 108              		.type	TARGET_SPEED, %object
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 3


 109              		.size	TARGET_SPEED, 4
 110              	TARGET_SPEED:
 111 0044 00007041 		.word	1097859072
 112              		.global	restoring
 113              		.align	2
 114              		.type	restoring, %object
 115              		.size	restoring, 4
 116              	restoring:
 117 0048 1E000000 		.word	30
 118              		.global	turningDirection
 119              		.bss
 120 0012 0000     		.align	2
 121              		.type	turningDirection, %object
 122              		.size	turningDirection, 4
 123              	turningDirection:
 124 0014 00000000 		.space	4
 125              		.global	turningCount
 126              		.data
 127              		.align	2
 128              		.type	turningCount, %object
 129              		.size	turningCount, 4
 130              	turningCount:
 131 004c 1E000000 		.word	30
 132              		.global	shouldUpdate
 133              		.align	2
 134              		.type	shouldUpdate, %object
 135              		.size	shouldUpdate, 4
 136              	shouldUpdate:
 137 0050 01000000 		.word	1
 138              		.global	dotsTravelled
 139              		.bss
 140              		.align	2
 141              		.type	dotsTravelled, %object
 142              		.size	dotsTravelled, 4
 143              	dotsTravelled:
 144 0018 00000000 		.space	4
 145              		.global	flag
 146              		.align	2
 147              		.type	flag, %object
 148              		.size	flag, 4
 149              	flag:
 150 001c 00000000 		.space	4
 151              		.comm	valuesLeftIntersection,4000,4
 152              		.comm	valuesLeftLine,4000,4
 153              		.comm	valuesMiddleLine,4000,4
 154              		.comm	valuesTurnComplete,4000,4
 155              		.comm	valuesRightLine,4000,4
 156              		.comm	valuesRightIntersection,4000,4
 157              		.global	count
 158              		.align	2
 159              		.type	count, %object
 160              		.size	count, 4
 161              	count:
 162 0020 00000000 		.space	4
 163              		.global	turningLeft
 164              		.align	2
 165              		.type	turningLeft, %object
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 4


 166              		.size	turningLeft, 4
 167              	turningLeft:
 168 0024 00000000 		.space	4
 169              		.global	turningRight
 170              		.align	2
 171              		.type	turningRight, %object
 172              		.size	turningRight, 4
 173              	turningRight:
 174 0028 00000000 		.space	4
 175              		.global	lastVeerDirection
 176              		.align	2
 177              		.type	lastVeerDirection, %object
 178              		.size	lastVeerDirection, 4
 179              	lastVeerDirection:
 180 002c 00000000 		.space	4
 181              		.global	motorFlag
 182              		.align	2
 183              		.type	motorFlag, %object
 184              		.size	motorFlag, 4
 185              	motorFlag:
 186 0030 00000000 		.space	4
 187              		.global	step
 188              		.align	2
 189              		.type	step, %object
 190              		.size	step, 4
 191              	step:
 192 0034 00000000 		.space	4
 193              		.comm	v1L,4,4
 194              		.comm	v2L,4,4
 195              		.comm	v1R,4,4
 196              		.comm	v2R,4,4
 197              		.comm	numRotationsL,4,4
 198              		.comm	numRotationsR,4,4
 199              		.comm	turnCount,4,4
 200              		.global	distanceTravelled
 201              		.align	2
 202              		.type	distanceTravelled, %object
 203              		.size	distanceTravelled, 4
 204              	distanceTravelled:
 205 0038 00000000 		.space	4
 206              		.global	distancePerSecondL
 207              		.align	2
 208              		.type	distancePerSecondL, %object
 209              		.size	distancePerSecondL, 4
 210              	distancePerSecondL:
 211 003c 00000000 		.space	4
 212              		.global	distancePerSecondR
 213              		.align	2
 214              		.type	distancePerSecondR, %object
 215              		.size	distancePerSecondR, 4
 216              	distancePerSecondR:
 217 0040 00000000 		.space	4
 218              		.global	distancePerSecondAvg
 219              		.align	2
 220              		.type	distancePerSecondAvg, %object
 221              		.size	distancePerSecondAvg, 4
 222              	distancePerSecondAvg:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 5


 223 0044 00000000 		.space	4
 224              		.global	prevTurnState
 225              		.align	2
 226              		.type	prevTurnState, %object
 227              		.size	prevTurnState, 4
 228              	prevTurnState:
 229 0048 00000000 		.space	4
 230              		.global	turnState
 231              		.align	2
 232              		.type	turnState, %object
 233              		.size	turnState, 4
 234              	turnState:
 235 004c 00000000 		.space	4
 236              		.global	turnEnable
 237              		.align	2
 238              		.type	turnEnable, %object
 239              		.size	turnEnable, 4
 240              	turnEnable:
 241 0050 00000000 		.space	4
 242              		.global	turnTimer
 243              		.align	2
 244              		.type	turnTimer, %object
 245              		.size	turnTimer, 4
 246              	turnTimer:
 247 0054 00000000 		.space	4
 248              		.global	lastAdjustDirection
 249              		.align	2
 250              		.type	lastAdjustDirection, %object
 251              		.size	lastAdjustDirection, 4
 252              	lastAdjustDirection:
 253 0058 00000000 		.space	4
 254              		.comm	startCountingL,4,4
 255              		.comm	totalNumRotationsL,4,4
 256              		.global	distanceToOne
 257              		.align	2
 258              		.type	distanceToOne, %object
 259              		.size	distanceToOne, 4
 260              	distanceToOne:
 261 005c 00000000 		.space	4
 262              		.global	distanceToTwo
 263              		.align	2
 264              		.type	distanceToTwo, %object
 265              		.size	distanceToTwo, 4
 266              	distanceToTwo:
 267 0060 00000000 		.space	4
 268              		.global	distanceToThree
 269              		.align	2
 270              		.type	distanceToThree, %object
 271              		.size	distanceToThree, 4
 272              	distanceToThree:
 273 0064 00000000 		.space	4
 274              		.global	distanceToFour
 275              		.align	2
 276              		.type	distanceToFour, %object
 277              		.size	distanceToFour, 4
 278              	distanceToFour:
 279 0068 00000000 		.space	4
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 6


 280              		.global	distanceToFive
 281              		.align	2
 282              		.type	distanceToFive, %object
 283              		.size	distanceToFive, 4
 284              	distanceToFive:
 285 006c 00000000 		.space	4
 286              		.global	stopCheckingArray
 287              		.align	2
 288              		.type	stopCheckingArray, %object
 289              		.size	stopCheckingArray, 4
 290              	stopCheckingArray:
 291 0070 00000000 		.space	4
 292              		.global	i
 293              		.align	2
 294              		.type	i, %object
 295              		.size	i, 4
 296              	i:
 297 0074 00000000 		.space	4
 298              		.global	hitFood
 299              		.align	2
 300              		.type	hitFood, %object
 301              		.size	hitFood, 4
 302              	hitFood:
 303 0078 00000000 		.space	4
 304              		.global	hitWall
 305              		.align	2
 306              		.type	hitWall, %object
 307              		.size	hitWall, 4
 308              	hitWall:
 309 007c 00000000 		.space	4
 310              		.global	turnComplete
 311              		.align	2
 312              		.type	turnComplete, %object
 313              		.size	turnComplete, 4
 314              	turnComplete:
 315 0080 00000000 		.space	4
 316              		.comm	currentInstruction,1,1
 317              		.section	.text.eoc,"ax",%progbits
 318              		.align	2
 319              		.global	eoc
 320              		.thumb
 321              		.thumb_func
 322              		.type	eoc, %function
 323              	eoc:
 324              	.LFB64:
 325              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 7


  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** 
  30:main.c        **** #include "pathfind.h"
  31:main.c        **** 
  32:main.c        **** #include "vars.h"
  33:main.c        **** 
  34:main.c        **** #define ADC_COUNT 1000
  35:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 150
  36:main.c        **** #define R_INT_BLACK highCountRightIntersection < 150
  37:main.c        **** #define L_LINE_BLACK highCountLeftLine < 150
  38:main.c        **** #define R_LINE_BLACK highCountRightLine < 150
  39:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 150
  40:main.c        **** #define TC_BLACK highCountTurnComplete < 150
  41:main.c        **** float TARGET_SPEED = 15; //speed in cm^-1
  42:main.c        **** int restoring = 30;
  43:main.c        **** int turningDirection = 0;
  44:main.c        **** int turningCount = 30;
  45:main.c        **** volatile int shouldUpdate = 1;
  46:main.c        **** #define MOVE_DISTANCE 9999999 //cm
  47:main.c        **** volatile int dotsTravelled = 0;
  48:main.c        **** //* ========================================
  49:main.c        **** void usbPutString(char * s);
  50:main.c        **** void usbPutChar(char c);
  51:main.c        **** void printSensorDebug(int highCountLeftIntersection, int highCountLeftLine, int highCountMiddleLine
  52:main.c        **** //* ========================================
  53:main.c        **** 
  54:main.c        **** volatile int flag = 0;
  55:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  56:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  57:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  58:main.c        **** volatile int valuesTurnComplete[ADC_COUNT];
  59:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  60:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  61:main.c        **** volatile int count = 0;
  62:main.c        **** volatile int turningLeft = 0;
  63:main.c        **** volatile int turningRight = 0;
  64:main.c        **** volatile int lastVeerDirection = 0;
  65:main.c        **** 
  66:main.c        **** volatile int motorFlag = 0;
  67:main.c        **** volatile int step = 0; // are we on first measuring step or second step?
  68:main.c        **** volatile int v1L; // allocating storage for measure number of holes (ahead) - LEFT WHEEL
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 8


  69:main.c        **** volatile int v2L; // allocating storage for measure number of holes (behind) - LEFT WHEEL
  70:main.c        **** volatile int v1R; // allocating storage for measure number of holes (ahead) - RIGHT WHEEL
  71:main.c        **** volatile int v2R; // allocating storage for measure number of holes (behind) - RIGHT WHEEL
  72:main.c        **** volatile int numRotationsL; //
  73:main.c        **** volatile int numRotationsR; //
  74:main.c        **** volatile int turnCount;
  75:main.c        **** volatile int distanceTravelled = 0;
  76:main.c        **** volatile int distancePerSecondL = 0;
  77:main.c        **** volatile int distancePerSecondR = 0;
  78:main.c        **** volatile int distancePerSecondAvg = 0;
  79:main.c        **** volatile int prevTurnState = 0;
  80:main.c        **** volatile int turnState = 0;
  81:main.c        **** volatile int turnEnable = 0;
  82:main.c        **** volatile int turnTimer = 0;
  83:main.c        **** int lastAdjustDirection = 0;
  84:main.c        **** 
  85:main.c        **** volatile int v1L; // allocating storage for measure number of holes (ahead) - LEFT WHEEL
  86:main.c        **** volatile int v2L; // allocating storage for measure number of holes (behind) - LEFT WHEEL
  87:main.c        **** volatile int v1R; // allocating storage for measure number of holes (ahead) - RIGHT WHEEL
  88:main.c        **** volatile int v2R; // allocating storage for measure number of holes (behind) - RIGHT WHEEL
  89:main.c        **** volatile int startCountingL; //start counting for the 180 degree turn
  90:main.c        **** volatile int totalNumRotationsL; //used for calculating when the 180 degree turn is finished
  91:main.c        **** volatile int numRotationsL; //
  92:main.c        **** volatile int numRotationsR; //
  93:main.c        **** 
  94:main.c        **** volatile int distanceToOne = 0;
  95:main.c        **** volatile int distanceToTwo = 0;
  96:main.c        **** volatile int distanceToThree = 0;
  97:main.c        **** volatile int distanceToFour = 0;
  98:main.c        **** volatile int distanceToFive = 0;
  99:main.c        **** 
 100:main.c        **** volatile int stopCheckingArray = 0;
 101:main.c        **** 
 102:main.c        **** volatile int i = 0;
 103:main.c        **** volatile int hitFood = 0;
 104:main.c        **** volatile int hitWall = 0;
 105:main.c        **** volatile int turnComplete = 0;
 106:main.c        **** unsigned char currentInstruction;
 107:main.c        **** 
 108:main.c        **** CY_ISR(eoc) {
 326              		.loc 1 108 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 331 0000 80B4     		push	{r7}
 332              		.cfi_def_cfa_offset 4
 333              		.cfi_offset 7, -4
 334 0002 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 109:main.c        ****   flag = 1;
 336              		.loc 1 109 0
 337 0004 034B     		ldr	r3, .L2
 338 0006 0122     		movs	r2, #1
 339 0008 1A60     		str	r2, [r3]
 110:main.c        **** }
 340              		.loc 1 110 0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 9


 341 000a 00BF     		nop
 342 000c BD46     		mov	sp, r7
 343              		.cfi_def_cfa_register 13
 344              		@ sp needed
 345 000e 80BC     		pop	{r7}
 346              		.cfi_restore 7
 347              		.cfi_def_cfa_offset 0
 348 0010 7047     		bx	lr
 349              	.L3:
 350 0012 00BF     		.align	2
 351              	.L2:
 352 0014 00000000 		.word	flag
 353              		.cfi_endproc
 354              	.LFE64:
 355              		.size	eoc, .-eoc
 356              		.section	.text.MyISR,"ax",%progbits
 357              		.align	2
 358              		.global	MyISR
 359              		.thumb
 360              		.thumb_func
 361              		.type	MyISR, %function
 362              	MyISR:
 363              	.LFB65:
 111:main.c        **** 
 112:main.c        **** CY_ISR(MyISR) {
 364              		.loc 1 112 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369 0000 80B4     		push	{r7}
 370              		.cfi_def_cfa_offset 4
 371              		.cfi_offset 7, -4
 372 0002 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
 113:main.c        ****   motorFlag = 1;
 374              		.loc 1 113 0
 375 0004 034B     		ldr	r3, .L5
 376 0006 0122     		movs	r2, #1
 377 0008 1A60     		str	r2, [r3]
 114:main.c        **** }
 378              		.loc 1 114 0
 379 000a 00BF     		nop
 380 000c BD46     		mov	sp, r7
 381              		.cfi_def_cfa_register 13
 382              		@ sp needed
 383 000e 80BC     		pop	{r7}
 384              		.cfi_restore 7
 385              		.cfi_def_cfa_offset 0
 386 0010 7047     		bx	lr
 387              	.L6:
 388 0012 00BF     		.align	2
 389              	.L5:
 390 0014 00000000 		.word	motorFlag
 391              		.cfi_endproc
 392              	.LFE65:
 393              		.size	MyISR, .-MyISR
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 10


 394              		.section	.rodata
 395              		.align	2
 396              	.LC0:
 397 0000 53746172 		.ascii	"Starting Pathfind\015\012\000"
 397      74696E67 
 397      20506174 
 397      6866696E 
 397      640D0A00 
 398              		.align	2
 399              	.LC1:
 400 0014 53515541 		.ascii	"SQUARES\015\012\000"
 400      5245530D 
 400      0A00
 401 001e 0000     		.align	2
 402              	.LC2:
 403 0020 25752025 		.ascii	"%u %u \015\012\000"
 403      75200D0A 
 403      00
 404 0029 000000   		.align	2
 405              	.LC3:
 406 002c 496E6465 		.ascii	"Index of the first non-zero element: \000"
 406      78206F66 
 406      20746865 
 406      20666972 
 406      7374206E 
 407 0052 0000     		.align	2
 408              	.LC4:
 409 0054 25640D0A 		.ascii	"%d\015\012\000"
 409      00
 410 0059 000000   		.align	2
 411              	.LC5:
 412 005c 494E5354 		.ascii	"INSTRUCTIONS\015\012\000"
 412      52554354 
 412      494F4E53 
 412      0D0A00
 413 006b 00       		.align	2
 414              	.LC6:
 415 006c 2575200D 		.ascii	"%u \015\012\000"
 415      0A00
 416 0072 0000     		.align	2
 417              	.LC7:
 418 0074 44495354 		.ascii	"DISTANCES\015\012\000"
 418      414E4345 
 418      530D0A00 
 419              		.align	2
 420              	.LC8:
 421 0080 257500   		.ascii	"%u\000"
 422 0083 00       		.align	2
 423              	.LC9:
 424 0084 0D0A00   		.ascii	"\015\012\000"
 425              		.global	__aeabi_i2f
 426              		.global	__aeabi_fmul
 427              		.global	__aeabi_f2iz
 428              		.section	.text.main,"ax",%progbits
 429              		.align	2
 430              		.global	main
 431              		.thumb
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 11


 432              		.thumb_func
 433              		.type	main, %function
 434              	main:
 435              	.LFB66:
 115:main.c        **** 
 116:main.c        **** int main() {
 436              		.loc 1 116 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 2112
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440 0000 90B5     		push	{r4, r7, lr}
 441              		.cfi_def_cfa_offset 12
 442              		.cfi_offset 4, -12
 443              		.cfi_offset 7, -8
 444              		.cfi_offset 14, -4
 445 0002 ADF64C0D 		subw	sp, sp, #2124
 446              		.cfi_def_cfa_offset 2136
 447 0006 02AF     		add	r7, sp, #8
 448              		.cfi_def_cfa 7, 2128
 117:main.c        **** 
 118:main.c        ****   // --------------------------------    
 119:main.c        ****   // ----- INITIALIZATIONS ----------
 120:main.c        ****   CYGlobalIntEnable;
 449              		.loc 1 120 0
 450              		.syntax unified
 451              	@ 120 "main.c" 1
 452 0008 62B6     		CPSIE   i
 453              	@ 0 "" 2
 121:main.c        **** 
 122:main.c        ****   // ------USB SETUP ----------------    
 123:main.c        **** 
 124:main.c        ****   USBUART_Start(0, USBUART_5V_OPERATION);
 454              		.loc 1 124 0
 455              		.thumb
 456              		.syntax unified
 457 000a 0121     		movs	r1, #1
 458 000c 0020     		movs	r0, #0
 459 000e FFF7FEFF 		bl	USBUART_Start
 125:main.c        ****   UART_Start();
 460              		.loc 1 125 0
 461 0012 FFF7FEFF 		bl	UART_Start
 126:main.c        **** 
 127:main.c        ****   QuadDec_M1_Start();
 462              		.loc 1 127 0
 463 0016 FFF7FEFF 		bl	QuadDec_M1_Start
 128:main.c        ****   QuadDec_M2_Start();
 464              		.loc 1 128 0
 465 001a FFF7FEFF 		bl	QuadDec_M2_Start
 129:main.c        **** 
 130:main.c        ****   isr_TS_StartEx(MyISR);
 466              		.loc 1 130 0
 467 001e 9648     		ldr	r0, .L72
 468 0020 FFF7FEFF 		bl	isr_TS_StartEx
 131:main.c        **** 
 132:main.c        ****   RF_BT_SELECT_Write(1);
 469              		.loc 1 132 0
 470 0024 0120     		movs	r0, #1
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 12


 471 0026 FFF7FEFF 		bl	RF_BT_SELECT_Write
 133:main.c        **** 
 134:main.c        ****   ADC_Start();
 472              		.loc 1 134 0
 473 002a FFF7FEFF 		bl	ADC_Start
 135:main.c        ****   ADC_StartConvert();
 474              		.loc 1 135 0
 475 002e FFF7FEFF 		bl	ADC_StartConvert
 136:main.c        ****   eoc_StartEx(eoc);
 476              		.loc 1 136 0
 477 0032 9248     		ldr	r0, .L72+4
 478 0034 FFF7FEFF 		bl	eoc_StartEx
 137:main.c        **** 
 138:main.c        ****   initMotors();
 479              		.loc 1 138 0
 480 0038 FFF7FEFF 		bl	initMotors
 139:main.c        **** 
 140:main.c        ****   stop();
 481              		.loc 1 140 0
 482 003c FFF7FEFF 		bl	stop
 141:main.c        **** 
 142:main.c        ****   isr_TS_StartEx(MyISR);
 483              		.loc 1 142 0
 484 0040 8D48     		ldr	r0, .L72
 485 0042 FFF7FEFF 		bl	isr_TS_StartEx
 143:main.c        ****   Timer_TS_Start();
 486              		.loc 1 143 0
 487 0046 FFF7FEFF 		bl	Timer_TS_Start
 144:main.c        **** 
 145:main.c        ****   unsigned char squares[500][2];
 146:main.c        ****   unsigned char instruction[500];
 147:main.c        ****   unsigned char distance[500];
 148:main.c        **** 
 149:main.c        ****   CyDelay(4000);
 488              		.loc 1 149 0
 489 004a 4FF47A60 		mov	r0, #4000
 490 004e FFF7FEFF 		bl	CyDelay
 150:main.c        ****   usbPutString("Starting Pathfind\r\n");
 491              		.loc 1 150 0
 492 0052 8B48     		ldr	r0, .L72+8
 493 0054 FFF7FEFF 		bl	usbPutString
 151:main.c        ****   pathfind(instruction, distance, squares);
 494              		.loc 1 151 0
 495 0058 07F58362 		add	r2, r7, #1048
 496 005c 07F13001 		add	r1, r7, #48
 497 0060 07F50973 		add	r3, r7, #548
 498 0064 1846     		mov	r0, r3
 499 0066 FFF7FEFF 		bl	pathfind
 152:main.c        **** 
 153:main.c        ****   usbPutString("SQUARES\r\n");
 500              		.loc 1 153 0
 501 006a 8648     		ldr	r0, .L72+12
 502 006c FFF7FEFF 		bl	usbPutString
 503              	.LBB2:
 154:main.c        ****   for (int i = 0; i < 500; i++) {
 504              		.loc 1 154 0
 505 0070 0023     		movs	r3, #0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 13


 506 0072 C7F83C38 		str	r3, [r7, #2108]
 507 0076 1FE0     		b	.L8
 508              	.L9:
 509              	.LBB3:
 155:main.c        ****     char squareStr[10];
 156:main.c        ****     snprintf(squareStr, sizeof(squareStr), "%u %u \r\n", (unsigned char) squares[i][0], (unsigned c
 510              		.loc 1 156 0 discriminator 3
 511 0078 07F58363 		add	r3, r7, #1048
 512 007c D7F83C28 		ldr	r2, [r7, #2108]
 513 0080 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 514 0084 1946     		mov	r1, r3
 515 0086 07F58362 		add	r2, r7, #1048
 516 008a D7F83C38 		ldr	r3, [r7, #2108]
 517 008e 5B00     		lsls	r3, r3, #1
 518 0090 1344     		add	r3, r3, r2
 519 0092 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 520 0094 07F11800 		add	r0, r7, #24
 521 0098 0093     		str	r3, [sp]
 522 009a 0B46     		mov	r3, r1
 523 009c 7A4A     		ldr	r2, .L72+16
 524 009e 0A21     		movs	r1, #10
 525 00a0 FFF7FEFF 		bl	snprintf
 157:main.c        ****     usbPutString(squareStr);
 526              		.loc 1 157 0 discriminator 3
 527 00a4 07F11803 		add	r3, r7, #24
 528 00a8 1846     		mov	r0, r3
 529 00aa FFF7FEFF 		bl	usbPutString
 530              	.LBE3:
 154:main.c        ****   for (int i = 0; i < 500; i++) {
 531              		.loc 1 154 0 discriminator 3
 532 00ae D7F83C38 		ldr	r3, [r7, #2108]
 533 00b2 0133     		adds	r3, r3, #1
 534 00b4 C7F83C38 		str	r3, [r7, #2108]
 535              	.L8:
 154:main.c        ****   for (int i = 0; i < 500; i++) {
 536              		.loc 1 154 0 is_stmt 0 discriminator 1
 537 00b8 D7F83C38 		ldr	r3, [r7, #2108]
 538 00bc B3F5FA7F 		cmp	r3, #500
 539 00c0 DADB     		blt	.L9
 540              	.LBE2:
 158:main.c        ****   }
 159:main.c        **** 
 160:main.c        ****     int index = 0;
 541              		.loc 1 160 0 is_stmt 1
 542 00c2 0023     		movs	r3, #0
 543 00c4 C7F83838 		str	r3, [r7, #2104]
 161:main.c        ****     while (instruction[index] == '0') {
 544              		.loc 1 161 0
 545 00c8 04E0     		b	.L10
 546              	.L11:
 162:main.c        ****         index++;
 547              		.loc 1 162 0
 548 00ca D7F83838 		ldr	r3, [r7, #2104]
 549 00ce 0133     		adds	r3, r3, #1
 550 00d0 C7F83838 		str	r3, [r7, #2104]
 551              	.L10:
 161:main.c        ****     while (instruction[index] == '0') {
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 14


 552              		.loc 1 161 0
 553 00d4 07F50972 		add	r2, r7, #548
 554 00d8 D7F83838 		ldr	r3, [r7, #2104]
 555 00dc 1344     		add	r3, r3, r2
 556 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 557 00e0 302B     		cmp	r3, #48
 558 00e2 F2D0     		beq	.L11
 163:main.c        ****     }
 164:main.c        **** 
 165:main.c        ****     // Now 'index' holds the index of the first element in 'instruction' that is not '0'
 166:main.c        ****     usbPutString("Index of the first non-zero element: ");
 559              		.loc 1 166 0
 560 00e4 6948     		ldr	r0, .L72+20
 561 00e6 FFF7FEFF 		bl	usbPutString
 167:main.c        ****     char indexChar[10];
 168:main.c        ****     snprintf(indexChar, sizeof(indexChar), "%d\r\n", index);
 562              		.loc 1 168 0
 563 00ea 07F12400 		add	r0, r7, #36
 564 00ee D7F83838 		ldr	r3, [r7, #2104]
 565 00f2 674A     		ldr	r2, .L72+24
 566 00f4 0A21     		movs	r1, #10
 567 00f6 FFF7FEFF 		bl	snprintf
 169:main.c        ****     usbPutString(indexChar);
 568              		.loc 1 169 0
 569 00fa 07F12403 		add	r3, r7, #36
 570 00fe 1846     		mov	r0, r3
 571 0100 FFF7FEFF 		bl	usbPutString
 170:main.c        ****     
 171:main.c        ****   usbPutString("INSTRUCTIONS\r\n");
 572              		.loc 1 171 0
 573 0104 6348     		ldr	r0, .L72+28
 574 0106 FFF7FEFF 		bl	usbPutString
 575              	.LBB4:
 172:main.c        ****   // Print all instructions
 173:main.c        ****   for (int i = 0; i < 500; i++) {
 576              		.loc 1 173 0
 577 010a 0023     		movs	r3, #0
 578 010c C7F83438 		str	r3, [r7, #2100]
 579 0110 15E0     		b	.L12
 580              	.L13:
 581              	.LBB5:
 174:main.c        ****     char instStr[10];
 175:main.c        ****     snprintf(instStr, sizeof(instStr), "%u \r\n", (unsigned char) instruction[i]);
 582              		.loc 1 175 0 discriminator 3
 583 0112 07F50972 		add	r2, r7, #548
 584 0116 D7F83438 		ldr	r3, [r7, #2100]
 585 011a 1344     		add	r3, r3, r2
 586 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 587 011e 07F10C00 		add	r0, r7, #12
 588 0122 5D4A     		ldr	r2, .L72+32
 589 0124 0A21     		movs	r1, #10
 590 0126 FFF7FEFF 		bl	snprintf
 176:main.c        ****     usbPutString(instStr);
 591              		.loc 1 176 0 discriminator 3
 592 012a 07F10C03 		add	r3, r7, #12
 593 012e 1846     		mov	r0, r3
 594 0130 FFF7FEFF 		bl	usbPutString
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 15


 595              	.LBE5:
 173:main.c        ****     char instStr[10];
 596              		.loc 1 173 0 discriminator 3
 597 0134 D7F83438 		ldr	r3, [r7, #2100]
 598 0138 0133     		adds	r3, r3, #1
 599 013a C7F83438 		str	r3, [r7, #2100]
 600              	.L12:
 173:main.c        ****     char instStr[10];
 601              		.loc 1 173 0 is_stmt 0 discriminator 1
 602 013e D7F83438 		ldr	r3, [r7, #2100]
 603 0142 B3F5FA7F 		cmp	r3, #500
 604 0146 E4DB     		blt	.L13
 605              	.LBE4:
 177:main.c        ****   }
 178:main.c        **** 
 179:main.c        ****   usbPutString("DISTANCES\r\n");
 606              		.loc 1 179 0 is_stmt 1
 607 0148 5448     		ldr	r0, .L72+36
 608 014a FFF7FEFF 		bl	usbPutString
 609              	.LBB6:
 180:main.c        ****   // Print all distances
 181:main.c        ****   for (int i = 0; i < 500; i++) {
 610              		.loc 1 181 0
 611 014e 0023     		movs	r3, #0
 612 0150 C7F83038 		str	r3, [r7, #2096]
 613 0154 16E0     		b	.L14
 614              	.L15:
 615              	.LBB7:
 182:main.c        ****     char distanceStr[10]; // Assuming distances are integers and can fit in 10 characters
 183:main.c        ****     snprintf(distanceStr, sizeof(distanceStr), "%u", (unsigned int) distance[i]);
 616              		.loc 1 183 0 discriminator 3
 617 0156 07F13002 		add	r2, r7, #48
 618 015a D7F83038 		ldr	r3, [r7, #2096]
 619 015e 1344     		add	r3, r3, r2
 620 0160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 621 0162 3846     		mov	r0, r7
 622 0164 4E4A     		ldr	r2, .L72+40
 623 0166 0A21     		movs	r1, #10
 624 0168 FFF7FEFF 		bl	snprintf
 184:main.c        ****     usbPutString(distanceStr);
 625              		.loc 1 184 0 discriminator 3
 626 016c 3B46     		mov	r3, r7
 627 016e 1846     		mov	r0, r3
 628 0170 FFF7FEFF 		bl	usbPutString
 185:main.c        ****     usbPutString("\r\n");
 629              		.loc 1 185 0 discriminator 3
 630 0174 4B48     		ldr	r0, .L72+44
 631 0176 FFF7FEFF 		bl	usbPutString
 632              	.LBE7:
 181:main.c        ****     char distanceStr[10]; // Assuming distances are integers and can fit in 10 characters
 633              		.loc 1 181 0 discriminator 3
 634 017a D7F83038 		ldr	r3, [r7, #2096]
 635 017e 0133     		adds	r3, r3, #1
 636 0180 C7F83038 		str	r3, [r7, #2096]
 637              	.L14:
 181:main.c        ****     char distanceStr[10]; // Assuming distances are integers and can fit in 10 characters
 638              		.loc 1 181 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 16


 639 0184 D7F83038 		ldr	r3, [r7, #2096]
 640 0188 B3F5FA7F 		cmp	r3, #500
 641 018c E3DB     		blt	.L15
 642              	.L71:
 643              	.LBE6:
 186:main.c        ****   }
 187:main.c        **** 
 188:main.c        ****   for (;;) {
 189:main.c        **** 
 190:main.c        ****     if (motorFlag == 1) { // timer has counted 0.1s 
 644              		.loc 1 190 0 is_stmt 1
 645 018e 464B     		ldr	r3, .L72+48
 646 0190 1B68     		ldr	r3, [r3]
 647 0192 012B     		cmp	r3, #1
 648 0194 68D1     		bne	.L16
 191:main.c        **** 
 192:main.c        ****       isr_TS_Disable(); // disabling the interrupts
 649              		.loc 1 192 0
 650 0196 FFF7FEFF 		bl	isr_TS_Disable
 193:main.c        ****       if (step == 0) { //takes the first measurement, sets steps to 2, the next time the timer goes
 651              		.loc 1 193 0
 652 019a 444B     		ldr	r3, .L72+52
 653 019c 1B68     		ldr	r3, [r3]
 654 019e 002B     		cmp	r3, #0
 655 01a0 11D1     		bne	.L17
 194:main.c        ****         v1L = QuadDec_M1_GetCounter(); // first measurement taken - LEFT
 656              		.loc 1 194 0
 657 01a2 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 658 01a6 0346     		mov	r3, r0
 659 01a8 1A46     		mov	r2, r3
 660 01aa 414B     		ldr	r3, .L72+56
 661 01ac 1A60     		str	r2, [r3]
 195:main.c        ****         v1R = QuadDec_M2_GetCounter(); // first measurement taken - RIGHT
 662              		.loc 1 195 0
 663 01ae FFF7FEFF 		bl	QuadDec_M2_GetCounter
 664 01b2 0346     		mov	r3, r0
 665 01b4 1A46     		mov	r2, r3
 666 01b6 3F4B     		ldr	r3, .L72+60
 667 01b8 1A60     		str	r2, [r3]
 196:main.c        ****         step++;
 668              		.loc 1 196 0
 669 01ba 3C4B     		ldr	r3, .L72+52
 670 01bc 1B68     		ldr	r3, [r3]
 671 01be 0133     		adds	r3, r3, #1
 672 01c0 3A4A     		ldr	r2, .L72+52
 673 01c2 1360     		str	r3, [r2]
 674 01c4 4BE0     		b	.L18
 675              	.L17:
 676              	.LBB8:
 197:main.c        ****       } else { // second measure
 198:main.c        ****         step = 0;
 677              		.loc 1 198 0
 678 01c6 394B     		ldr	r3, .L72+52
 679 01c8 0022     		movs	r2, #0
 680 01ca 1A60     		str	r2, [r3]
 199:main.c        **** 
 200:main.c        ****         v2L = QuadDec_M1_GetCounter(); // second measurement taken - LEFT
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 17


 681              		.loc 1 200 0
 682 01cc FFF7FEFF 		bl	QuadDec_M1_GetCounter
 683 01d0 0346     		mov	r3, r0
 684 01d2 1A46     		mov	r2, r3
 685 01d4 384B     		ldr	r3, .L72+64
 686 01d6 1A60     		str	r2, [r3]
 201:main.c        ****         v2R = QuadDec_M2_GetCounter(); // second measurement taken - RIGHT
 687              		.loc 1 201 0
 688 01d8 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 689 01dc 0346     		mov	r3, r0
 690 01de 1A46     		mov	r2, r3
 691 01e0 364B     		ldr	r3, .L72+68
 692 01e2 1A60     		str	r2, [r3]
 202:main.c        **** 
 203:main.c        ****         numRotationsL = (v2L - v1L);
 693              		.loc 1 203 0
 694 01e4 344B     		ldr	r3, .L72+64
 695 01e6 1A68     		ldr	r2, [r3]
 696 01e8 314B     		ldr	r3, .L72+56
 697 01ea 1B68     		ldr	r3, [r3]
 698 01ec D31A     		subs	r3, r2, r3
 699 01ee 344A     		ldr	r2, .L72+72
 700 01f0 1360     		str	r3, [r2]
 204:main.c        ****         numRotationsR = (v2R - v1R);
 701              		.loc 1 204 0
 702 01f2 324B     		ldr	r3, .L72+68
 703 01f4 1A68     		ldr	r2, [r3]
 704 01f6 2F4B     		ldr	r3, .L72+60
 705 01f8 1B68     		ldr	r3, [r3]
 706 01fa D31A     		subs	r3, r2, r3
 707 01fc 314A     		ldr	r2, .L72+76
 708 01fe 1360     		str	r3, [r2]
 205:main.c        **** 
 206:main.c        ****         int changeInDots = (((abs(numRotationsR) + abs(numRotationsL))) / 2);
 709              		.loc 1 206 0
 710 0200 304B     		ldr	r3, .L72+76
 711 0202 1B68     		ldr	r3, [r3]
 712 0204 83EAE372 		eor	r2, r3, r3, asr #31
 713 0208 A2EBE372 		sub	r2, r2, r3, asr #31
 714 020c 2C4B     		ldr	r3, .L72+72
 715 020e 1B68     		ldr	r3, [r3]
 716 0210 002B     		cmp	r3, #0
 717 0212 B8BF     		it	lt
 718 0214 5B42     		rsblt	r3, r3, #0
 719 0216 1344     		add	r3, r3, r2
 720 0218 DA0F     		lsrs	r2, r3, #31
 721 021a 1344     		add	r3, r3, r2
 722 021c 5B10     		asrs	r3, r3, #1
 723 021e C7F81038 		str	r3, [r7, #2064]
 207:main.c        ****         dotsTravelled = changeInDots + dotsTravelled;
 724              		.loc 1 207 0
 725 0222 294B     		ldr	r3, .L72+80
 726 0224 1A68     		ldr	r2, [r3]
 727 0226 D7F81038 		ldr	r3, [r7, #2064]
 728 022a 1344     		add	r3, r3, r2
 729 022c 264A     		ldr	r2, .L72+80
 730 022e 1360     		str	r3, [r2]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 18


 208:main.c        ****         distanceTravelled = (dotsTravelled * (float)(1.217375 / 6.105)); //increase 6.1 to go furth
 731              		.loc 1 208 0
 732 0230 254B     		ldr	r3, .L72+80
 733 0232 1B68     		ldr	r3, [r3]
 734 0234 1846     		mov	r0, r3
 735 0236 FFF7FEFF 		bl	__aeabi_i2f
 736 023a 0346     		mov	r3, r0
 737 023c 2349     		ldr	r1, .L72+84
 738 023e 1846     		mov	r0, r3
 739 0240 FFF7FEFF 		bl	__aeabi_fmul
 740 0244 0346     		mov	r3, r0
 741 0246 1846     		mov	r0, r3
 742 0248 FFF7FEFF 		bl	__aeabi_f2iz
 743 024c 0246     		mov	r2, r0
 744 024e 204B     		ldr	r3, .L72+88
 745 0250 1A60     		str	r2, [r3]
 209:main.c        ****         //6.2 for low, 6.1 for normal, 6 for full
 210:main.c        **** 
 211:main.c        ****         QuadDec_M1_SetCounter(0); // set quad counter to 0 to avoid overflow
 746              		.loc 1 211 0
 747 0252 0020     		movs	r0, #0
 748 0254 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 212:main.c        ****         QuadDec_M2_SetCounter(0); // set quad counter to 0 to avoid overflow 
 749              		.loc 1 212 0
 750 0258 0020     		movs	r0, #0
 751 025a FFF7FEFF 		bl	QuadDec_M2_SetCounter
 752              	.L18:
 753              	.LBE8:
 213:main.c        **** 
 214:main.c        ****       }
 215:main.c        ****       motorFlag = 0; // interrupt flag is back to 0
 754              		.loc 1 215 0
 755 025e 124B     		ldr	r3, .L72+48
 756 0260 0022     		movs	r2, #0
 757 0262 1A60     		str	r2, [r3]
 216:main.c        ****       isr_TS_Enable(); // interrupt enabled
 758              		.loc 1 216 0
 759 0264 FFF7FEFF 		bl	isr_TS_Enable
 760              	.L16:
 217:main.c        **** 
 218:main.c        ****     }
 219:main.c        **** 
 220:main.c        ****     if (distanceTravelled > MOVE_DISTANCE) {
 761              		.loc 1 220 0
 762 0268 194B     		ldr	r3, .L72+88
 763 026a 1B68     		ldr	r3, [r3]
 764 026c 194A     		ldr	r2, .L72+92
 765 026e 9342     		cmp	r3, r2
 766 0270 32DD     		ble	.L19
 221:main.c        ****       stop();
 767              		.loc 1 221 0
 768 0272 FFF7FEFF 		bl	stop
 769 0276 8AE7     		b	.L71
 770              	.L73:
 771              		.align	2
 772              	.L72:
 773 0278 00000000 		.word	MyISR
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 19


 774 027c 00000000 		.word	eoc
 775 0280 00000000 		.word	.LC0
 776 0284 14000000 		.word	.LC1
 777 0288 20000000 		.word	.LC2
 778 028c 2C000000 		.word	.LC3
 779 0290 54000000 		.word	.LC4
 780 0294 5C000000 		.word	.LC5
 781 0298 6C000000 		.word	.LC6
 782 029c 74000000 		.word	.LC7
 783 02a0 80000000 		.word	.LC8
 784 02a4 84000000 		.word	.LC9
 785 02a8 00000000 		.word	motorFlag
 786 02ac 00000000 		.word	step
 787 02b0 00000000 		.word	v1L
 788 02b4 00000000 		.word	v1R
 789 02b8 00000000 		.word	v2L
 790 02bc 00000000 		.word	v2R
 791 02c0 00000000 		.word	numRotationsL
 792 02c4 00000000 		.word	numRotationsR
 793 02c8 00000000 		.word	dotsTravelled
 794 02cc 25314C3E 		.word	1045180709
 795 02d0 00000000 		.word	distanceTravelled
 796 02d4 7F969800 		.word	9999999
 797              	.L19:
 222:main.c        **** 
 223:main.c        ****     } else {
 224:main.c        **** 
 225:main.c        ****       LED_PIN_4_Write(0);
 798              		.loc 1 225 0
 799 02d8 0020     		movs	r0, #0
 800 02da FFF7FEFF 		bl	LED_PIN_4_Write
 226:main.c        ****       if (flag == 1) {
 801              		.loc 1 226 0
 802 02de B64B     		ldr	r3, .L74
 803 02e0 1B68     		ldr	r3, [r3]
 804 02e2 012B     		cmp	r3, #1
 805 02e4 7FF453AF 		bne	.L71
 227:main.c        **** 
 228:main.c        ****         ADC_IRQ_Disable();
 806              		.loc 1 228 0
 807 02e8 FFF7FEFF 		bl	ADC_IRQ_Disable
 229:main.c        ****         valuesLeftIntersection[count] = ADC_GetResult16(0);
 808              		.loc 1 229 0
 809 02ec B34B     		ldr	r3, .L74+4
 810 02ee 1C68     		ldr	r4, [r3]
 811 02f0 0020     		movs	r0, #0
 812 02f2 FFF7FEFF 		bl	ADC_GetResult16
 813 02f6 0346     		mov	r3, r0
 814 02f8 1A46     		mov	r2, r3
 815 02fa B14B     		ldr	r3, .L74+8
 816 02fc 43F82420 		str	r2, [r3, r4, lsl #2]
 230:main.c        ****         valuesLeftLine[count] = ADC_GetResult16(1);
 817              		.loc 1 230 0
 818 0300 AE4B     		ldr	r3, .L74+4
 819 0302 1C68     		ldr	r4, [r3]
 820 0304 0120     		movs	r0, #1
 821 0306 FFF7FEFF 		bl	ADC_GetResult16
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 20


 822 030a 0346     		mov	r3, r0
 823 030c 1A46     		mov	r2, r3
 824 030e AD4B     		ldr	r3, .L74+12
 825 0310 43F82420 		str	r2, [r3, r4, lsl #2]
 231:main.c        ****         valuesMiddleLine[count] = ADC_GetResult16(2);
 826              		.loc 1 231 0
 827 0314 A94B     		ldr	r3, .L74+4
 828 0316 1C68     		ldr	r4, [r3]
 829 0318 0220     		movs	r0, #2
 830 031a FFF7FEFF 		bl	ADC_GetResult16
 831 031e 0346     		mov	r3, r0
 832 0320 1A46     		mov	r2, r3
 833 0322 A94B     		ldr	r3, .L74+16
 834 0324 43F82420 		str	r2, [r3, r4, lsl #2]
 232:main.c        ****         valuesTurnComplete[count] = ADC_GetResult16(3);
 835              		.loc 1 232 0
 836 0328 A44B     		ldr	r3, .L74+4
 837 032a 1C68     		ldr	r4, [r3]
 838 032c 0320     		movs	r0, #3
 839 032e FFF7FEFF 		bl	ADC_GetResult16
 840 0332 0346     		mov	r3, r0
 841 0334 1A46     		mov	r2, r3
 842 0336 A54B     		ldr	r3, .L74+20
 843 0338 43F82420 		str	r2, [r3, r4, lsl #2]
 233:main.c        ****         valuesRightLine[count] = ADC_GetResult16(4);
 844              		.loc 1 233 0
 845 033c 9F4B     		ldr	r3, .L74+4
 846 033e 1C68     		ldr	r4, [r3]
 847 0340 0420     		movs	r0, #4
 848 0342 FFF7FEFF 		bl	ADC_GetResult16
 849 0346 0346     		mov	r3, r0
 850 0348 1A46     		mov	r2, r3
 851 034a A14B     		ldr	r3, .L74+24
 852 034c 43F82420 		str	r2, [r3, r4, lsl #2]
 234:main.c        ****         valuesRightIntersection[count] = ADC_GetResult16(5);
 853              		.loc 1 234 0
 854 0350 9A4B     		ldr	r3, .L74+4
 855 0352 1C68     		ldr	r4, [r3]
 856 0354 0520     		movs	r0, #5
 857 0356 FFF7FEFF 		bl	ADC_GetResult16
 858 035a 0346     		mov	r3, r0
 859 035c 1A46     		mov	r2, r3
 860 035e 9D4B     		ldr	r3, .L74+28
 861 0360 43F82420 		str	r2, [r3, r4, lsl #2]
 235:main.c        **** 
 236:main.c        ****         count++;
 862              		.loc 1 236 0
 863 0364 954B     		ldr	r3, .L74+4
 864 0366 1B68     		ldr	r3, [r3]
 865 0368 0133     		adds	r3, r3, #1
 866 036a 944A     		ldr	r2, .L74+4
 867 036c 1360     		str	r3, [r2]
 237:main.c        **** 
 238:main.c        ****         if (count == ADC_COUNT) {
 868              		.loc 1 238 0
 869 036e 934B     		ldr	r3, .L74+4
 870 0370 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 21


 871 0372 B3F57A7F 		cmp	r3, #1000
 872 0376 7FF40AAF 		bne	.L71
 873              	.LBB9:
 239:main.c        ****           LED_PIN_4_Write(1);
 874              		.loc 1 239 0
 875 037a 0120     		movs	r0, #1
 876 037c FFF7FEFF 		bl	LED_PIN_4_Write
 240:main.c        ****           count = 0;
 877              		.loc 1 240 0
 878 0380 8E4B     		ldr	r3, .L74+4
 879 0382 0022     		movs	r2, #0
 880 0384 1A60     		str	r2, [r3]
 241:main.c        ****           int highCountLeftIntersection = 0;
 881              		.loc 1 241 0
 882 0386 0023     		movs	r3, #0
 883 0388 C7F82C38 		str	r3, [r7, #2092]
 242:main.c        ****           int highCountLeftLine = 0;
 884              		.loc 1 242 0
 885 038c 0023     		movs	r3, #0
 886 038e C7F82838 		str	r3, [r7, #2088]
 243:main.c        ****           int highCountMiddleLine = 0;
 887              		.loc 1 243 0
 888 0392 0023     		movs	r3, #0
 889 0394 C7F82438 		str	r3, [r7, #2084]
 244:main.c        ****           int highCountTurnComplete = 0;
 890              		.loc 1 244 0
 891 0398 0023     		movs	r3, #0
 892 039a C7F82038 		str	r3, [r7, #2080]
 245:main.c        ****           int highCountRightLine = 0;
 893              		.loc 1 245 0
 894 039e 0023     		movs	r3, #0
 895 03a0 C7F81C38 		str	r3, [r7, #2076]
 246:main.c        ****           int highCountRightIntersection = 0;
 896              		.loc 1 246 0
 897 03a4 0023     		movs	r3, #0
 898 03a6 C7F81838 		str	r3, [r7, #2072]
 899              	.LBB10:
 247:main.c        ****           for (int i = 0; i < ADC_COUNT; i++) {
 900              		.loc 1 247 0
 901 03aa 0023     		movs	r3, #0
 902 03ac C7F81438 		str	r3, [r7, #2068]
 903 03b0 58E0     		b	.L21
 904              	.L28:
 248:main.c        **** 
 249:main.c        ****             if (valuesLeftIntersection[i] > 3000) {
 905              		.loc 1 249 0
 906 03b2 834A     		ldr	r2, .L74+8
 907 03b4 D7F81438 		ldr	r3, [r7, #2068]
 908 03b8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 909 03bc 40F6B832 		movw	r2, #3000
 910 03c0 9342     		cmp	r3, r2
 911 03c2 04DD     		ble	.L22
 250:main.c        ****               highCountLeftIntersection++;
 912              		.loc 1 250 0
 913 03c4 D7F82C38 		ldr	r3, [r7, #2092]
 914 03c8 0133     		adds	r3, r3, #1
 915 03ca C7F82C38 		str	r3, [r7, #2092]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 22


 916              	.L22:
 251:main.c        **** 
 252:main.c        ****             }
 253:main.c        **** 
 254:main.c        ****             if (valuesLeftLine[i] > 3000) {
 917              		.loc 1 254 0
 918 03ce 7D4A     		ldr	r2, .L74+12
 919 03d0 D7F81438 		ldr	r3, [r7, #2068]
 920 03d4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 921 03d8 40F6B832 		movw	r2, #3000
 922 03dc 9342     		cmp	r3, r2
 923 03de 04DD     		ble	.L23
 255:main.c        ****               highCountLeftLine++;
 924              		.loc 1 255 0
 925 03e0 D7F82838 		ldr	r3, [r7, #2088]
 926 03e4 0133     		adds	r3, r3, #1
 927 03e6 C7F82838 		str	r3, [r7, #2088]
 928              	.L23:
 256:main.c        **** 
 257:main.c        ****             }
 258:main.c        **** 
 259:main.c        ****             if (valuesMiddleLine[i] > 3000) {
 929              		.loc 1 259 0
 930 03ea 774A     		ldr	r2, .L74+16
 931 03ec D7F81438 		ldr	r3, [r7, #2068]
 932 03f0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 933 03f4 40F6B832 		movw	r2, #3000
 934 03f8 9342     		cmp	r3, r2
 935 03fa 04DD     		ble	.L24
 260:main.c        ****               highCountMiddleLine++;
 936              		.loc 1 260 0
 937 03fc D7F82438 		ldr	r3, [r7, #2084]
 938 0400 0133     		adds	r3, r3, #1
 939 0402 C7F82438 		str	r3, [r7, #2084]
 940              	.L24:
 261:main.c        **** 
 262:main.c        ****             }
 263:main.c        **** 
 264:main.c        ****             if (valuesTurnComplete[i] > 3000) {
 941              		.loc 1 264 0
 942 0406 714A     		ldr	r2, .L74+20
 943 0408 D7F81438 		ldr	r3, [r7, #2068]
 944 040c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 945 0410 40F6B832 		movw	r2, #3000
 946 0414 9342     		cmp	r3, r2
 947 0416 04DD     		ble	.L25
 265:main.c        ****               highCountTurnComplete++;
 948              		.loc 1 265 0
 949 0418 D7F82038 		ldr	r3, [r7, #2080]
 950 041c 0133     		adds	r3, r3, #1
 951 041e C7F82038 		str	r3, [r7, #2080]
 952              	.L25:
 266:main.c        **** 
 267:main.c        ****             }
 268:main.c        **** 
 269:main.c        ****             if (valuesRightLine[i] > 3000) {
 953              		.loc 1 269 0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 23


 954 0422 6B4A     		ldr	r2, .L74+24
 955 0424 D7F81438 		ldr	r3, [r7, #2068]
 956 0428 52F82330 		ldr	r3, [r2, r3, lsl #2]
 957 042c 40F6B832 		movw	r2, #3000
 958 0430 9342     		cmp	r3, r2
 959 0432 04DD     		ble	.L26
 270:main.c        ****               highCountRightLine++;
 960              		.loc 1 270 0
 961 0434 D7F81C38 		ldr	r3, [r7, #2076]
 962 0438 0133     		adds	r3, r3, #1
 963 043a C7F81C38 		str	r3, [r7, #2076]
 964              	.L26:
 271:main.c        **** 
 272:main.c        ****             }
 273:main.c        **** 
 274:main.c        ****             if (valuesRightIntersection[i] > 3000) {
 965              		.loc 1 274 0
 966 043e 654A     		ldr	r2, .L74+28
 967 0440 D7F81438 		ldr	r3, [r7, #2068]
 968 0444 52F82330 		ldr	r3, [r2, r3, lsl #2]
 969 0448 40F6B832 		movw	r2, #3000
 970 044c 9342     		cmp	r3, r2
 971 044e 04DD     		ble	.L27
 275:main.c        ****               highCountRightIntersection++;
 972              		.loc 1 275 0
 973 0450 D7F81838 		ldr	r3, [r7, #2072]
 974 0454 0133     		adds	r3, r3, #1
 975 0456 C7F81838 		str	r3, [r7, #2072]
 976              	.L27:
 247:main.c        **** 
 977              		.loc 1 247 0 discriminator 2
 978 045a D7F81438 		ldr	r3, [r7, #2068]
 979 045e 0133     		adds	r3, r3, #1
 980 0460 C7F81438 		str	r3, [r7, #2068]
 981              	.L21:
 247:main.c        **** 
 982              		.loc 1 247 0 is_stmt 0 discriminator 1
 983 0464 D7F81438 		ldr	r3, [r7, #2068]
 984 0468 B3F57A7F 		cmp	r3, #1000
 985 046c A1DB     		blt	.L28
 986              	.LBE10:
 276:main.c        **** 
 277:main.c        ****             }
 278:main.c        **** 
 279:main.c        ****           }
 280:main.c        ****           flag = 0;
 987              		.loc 1 280 0 is_stmt 1
 988 046e 524B     		ldr	r3, .L74
 989 0470 0022     		movs	r2, #0
 990 0472 1A60     		str	r2, [r3]
 281:main.c        ****           ADC_IRQ_Enable();
 991              		.loc 1 281 0
 992 0474 FFF7FEFF 		bl	ADC_IRQ_Enable
 282:main.c        **** 
 283:main.c        ****           //start code functions here
 284:main.c        **** 
 285:main.c        ****           if (distanceTravelled > MOVE_DISTANCE) {
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 24


 993              		.loc 1 285 0
 994 0478 574B     		ldr	r3, .L74+32
 995 047a 1B68     		ldr	r3, [r3]
 996 047c 574A     		ldr	r2, .L74+36
 997 047e 9342     		cmp	r3, r2
 998 0480 02DD     		ble	.L29
 286:main.c        ****             stop();
 999              		.loc 1 286 0
 1000 0482 FFF7FEFF 		bl	stop
 1001 0486 82E6     		b	.L71
 1002              	.L29:
 287:main.c        ****           } else {
 288:main.c        ****             if (currentInstruction == '0') { //stop
 1003              		.loc 1 288 0
 1004 0488 554B     		ldr	r3, .L74+40
 1005 048a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1006 048c 302B     		cmp	r3, #48
 1007 048e 02D1     		bne	.L30
 289:main.c        ****               stop();
 1008              		.loc 1 289 0
 1009 0490 FFF7FEFF 		bl	stop
 1010 0494 7BE6     		b	.L71
 1011              	.L30:
 290:main.c        ****             } else if (currentInstruction == '1' && turnComplete == 0) { //leftTurn and then go for
 1012              		.loc 1 290 0
 1013 0496 524B     		ldr	r3, .L74+40
 1014 0498 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1015 049a 312B     		cmp	r3, #49
 1016 049c 33D1     		bne	.L31
 1017              		.loc 1 290 0 is_stmt 0 discriminator 1
 1018 049e 514B     		ldr	r3, .L74+44
 1019 04a0 1B68     		ldr	r3, [r3]
 1020 04a2 002B     		cmp	r3, #0
 1021 04a4 2FD1     		bne	.L31
 291:main.c        ****               if (R_INT_BLACK) { //code that senses when the turn is done, can be optimised
 1022              		.loc 1 291 0 is_stmt 1
 1023 04a6 D7F81838 		ldr	r3, [r7, #2072]
 1024 04aa 952B     		cmp	r3, #149
 1025 04ac 03DC     		bgt	.L32
 292:main.c        ****                 turnComplete = 1;
 1026              		.loc 1 292 0
 1027 04ae 4D4B     		ldr	r3, .L74+44
 1028 04b0 0122     		movs	r2, #1
 1029 04b2 1A60     		str	r2, [r3]
 1030 04b4 01E0     		b	.L33
 1031              	.L32:
 293:main.c        ****               } else {
 294:main.c        ****                 turnLeft();
 1032              		.loc 1 294 0
 1033 04b6 FFF7FEFF 		bl	turnLeft
 1034              	.L33:
 295:main.c        ****               }
 296:main.c        **** 
 297:main.c        ****               if (turnComplete == 1) {
 1035              		.loc 1 297 0
 1036 04ba 4A4B     		ldr	r3, .L74+44
 1037 04bc 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 25


 1038 04be 012B     		cmp	r3, #1
 1039 04c0 40F0D581 		bne	.L20
 298:main.c        ****                 if ((highCountRightIntersection > 150 || highCountLeftIntersection > 150) && turnCo
 1040              		.loc 1 298 0
 1041 04c4 D7F81838 		ldr	r3, [r7, #2072]
 1042 04c8 962B     		cmp	r3, #150
 1043 04ca 03DC     		bgt	.L35
 1044              		.loc 1 298 0 is_stmt 0 discriminator 2
 1045 04cc D7F82C38 		ldr	r3, [r7, #2092]
 1046 04d0 962B     		cmp	r3, #150
 1047 04d2 0ADD     		ble	.L36
 1048              	.L35:
 1049              		.loc 1 298 0 discriminator 3
 1050 04d4 434B     		ldr	r3, .L74+44
 1051 04d6 1B68     		ldr	r3, [r3]
 1052 04d8 012B     		cmp	r3, #1
 1053 04da 06D1     		bne	.L36
 299:main.c        ****                   driveForward(distanceTravelled, 0);
 1054              		.loc 1 299 0 is_stmt 1
 1055 04dc 3E4B     		ldr	r3, .L74+32
 1056 04de 1B68     		ldr	r3, [r3]
 1057 04e0 0021     		movs	r1, #0
 1058 04e2 1846     		mov	r0, r3
 1059 04e4 FFF7FEFF 		bl	driveForward
 297:main.c        ****                 if ((highCountRightIntersection > 150 || highCountLeftIntersection > 150) && turnCo
 1060              		.loc 1 297 0
 1061 04e8 C1E1     		b	.L20
 1062              	.L36:
 300:main.c        ****                 } else {
 301:main.c        ****                   stop();
 1063              		.loc 1 301 0
 1064 04ea FFF7FEFF 		bl	stop
 302:main.c        ****                   currentInstruction = instruction[i + 1];
 1065              		.loc 1 302 0
 1066 04ee 3E4B     		ldr	r3, .L74+48
 1067 04f0 1B68     		ldr	r3, [r3]
 1068 04f2 0133     		adds	r3, r3, #1
 1069 04f4 07F50972 		add	r2, r7, #548
 1070 04f8 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1071 04fa 394B     		ldr	r3, .L74+40
 1072 04fc 1A70     		strb	r2, [r3]
 303:main.c        ****                   turnComplete = 0;
 1073              		.loc 1 303 0
 1074 04fe 394B     		ldr	r3, .L74+44
 1075 0500 0022     		movs	r2, #0
 1076 0502 1A60     		str	r2, [r3]
 297:main.c        ****                 if ((highCountRightIntersection > 150 || highCountLeftIntersection > 150) && turnCo
 1077              		.loc 1 297 0
 1078 0504 B3E1     		b	.L20
 1079              	.L31:
 304:main.c        ****                 }
 305:main.c        ****               }
 306:main.c        ****             } else if (currentInstruction == '2') { //go straight
 1080              		.loc 1 306 0
 1081 0506 364B     		ldr	r3, .L74+40
 1082 0508 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1083 050a 322B     		cmp	r3, #50
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 26


 1084 050c 1BD1     		bne	.L37
 307:main.c        ****               if ((highCountRightIntersection > 150 || highCountLeftIntersection > 150) && turnComp
 1085              		.loc 1 307 0
 1086 050e D7F81838 		ldr	r3, [r7, #2072]
 1087 0512 962B     		cmp	r3, #150
 1088 0514 03DC     		bgt	.L38
 1089              		.loc 1 307 0 is_stmt 0 discriminator 2
 1090 0516 D7F82C38 		ldr	r3, [r7, #2092]
 1091 051a 962B     		cmp	r3, #150
 1092 051c 0ADD     		ble	.L39
 1093              	.L38:
 1094              		.loc 1 307 0 discriminator 3
 1095 051e 314B     		ldr	r3, .L74+44
 1096 0520 1B68     		ldr	r3, [r3]
 1097 0522 012B     		cmp	r3, #1
 1098 0524 06D1     		bne	.L39
 308:main.c        ****                 driveForward(distanceTravelled, 0);
 1099              		.loc 1 308 0 is_stmt 1
 1100 0526 2C4B     		ldr	r3, .L74+32
 1101 0528 1B68     		ldr	r3, [r3]
 1102 052a 0021     		movs	r1, #0
 1103 052c 1846     		mov	r0, r3
 1104 052e FFF7FEFF 		bl	driveForward
 1105 0532 9CE1     		b	.L20
 1106              	.L39:
 309:main.c        ****               } else {
 310:main.c        ****                 currentInstruction = instruction[i + 1];
 1107              		.loc 1 310 0
 1108 0534 2C4B     		ldr	r3, .L74+48
 1109 0536 1B68     		ldr	r3, [r3]
 1110 0538 0133     		adds	r3, r3, #1
 1111 053a 07F50972 		add	r2, r7, #548
 1112 053e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1113 0540 274B     		ldr	r3, .L74+40
 1114 0542 1A70     		strb	r2, [r3]
 1115 0544 23E6     		b	.L71
 1116              	.L37:
 311:main.c        ****               }
 312:main.c        ****             } else if (currentInstruction == '3' && turnComplete == 0) { //rightTurn and then go fo
 1117              		.loc 1 312 0
 1118 0546 264B     		ldr	r3, .L74+40
 1119 0548 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1120 054a 332B     		cmp	r3, #51
 1121 054c 4ED1     		bne	.L41
 1122              		.loc 1 312 0 is_stmt 0 discriminator 1
 1123 054e 254B     		ldr	r3, .L74+44
 1124 0550 1B68     		ldr	r3, [r3]
 1125 0552 002B     		cmp	r3, #0
 1126 0554 4AD1     		bne	.L41
 313:main.c        ****               if (L_INT_BLACK) { //code that senses when the turn is done, can be optimised
 1127              		.loc 1 313 0 is_stmt 1
 1128 0556 D7F82C38 		ldr	r3, [r7, #2092]
 1129 055a 952B     		cmp	r3, #149
 1130 055c 03DC     		bgt	.L42
 314:main.c        ****                 turnComplete = 1;
 1131              		.loc 1 314 0
 1132 055e 214B     		ldr	r3, .L74+44
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 27


 1133 0560 0122     		movs	r2, #1
 1134 0562 1A60     		str	r2, [r3]
 1135 0564 01E0     		b	.L43
 1136              	.L42:
 315:main.c        ****               } else {
 316:main.c        ****                 turnRight();
 1137              		.loc 1 316 0
 1138 0566 FFF7FEFF 		bl	turnRight
 1139              	.L43:
 317:main.c        ****               }
 318:main.c        **** 
 319:main.c        ****               if (turnComplete == 1) {
 1140              		.loc 1 319 0
 1141 056a 1E4B     		ldr	r3, .L74+44
 1142 056c 1B68     		ldr	r3, [r3]
 1143 056e 012B     		cmp	r3, #1
 1144 0570 40F07D81 		bne	.L20
 320:main.c        ****                 if ((highCountRightIntersection > 150 || highCountLeftIntersection > 150) && turnCo
 1145              		.loc 1 320 0
 1146 0574 D7F81838 		ldr	r3, [r7, #2072]
 1147 0578 962B     		cmp	r3, #150
 1148 057a 03DC     		bgt	.L45
 1149              		.loc 1 320 0 is_stmt 0 discriminator 2
 1150 057c D7F82C38 		ldr	r3, [r7, #2092]
 1151 0580 962B     		cmp	r3, #150
 1152 0582 0ADD     		ble	.L46
 1153              	.L45:
 1154              		.loc 1 320 0 discriminator 3
 1155 0584 174B     		ldr	r3, .L74+44
 1156 0586 1B68     		ldr	r3, [r3]
 1157 0588 012B     		cmp	r3, #1
 1158 058a 06D1     		bne	.L46
 321:main.c        ****                   driveForward(distanceTravelled, 0);
 1159              		.loc 1 321 0 is_stmt 1
 1160 058c 124B     		ldr	r3, .L74+32
 1161 058e 1B68     		ldr	r3, [r3]
 1162 0590 0021     		movs	r1, #0
 1163 0592 1846     		mov	r0, r3
 1164 0594 FFF7FEFF 		bl	driveForward
 319:main.c        ****                 if ((highCountRightIntersection > 150 || highCountLeftIntersection > 150) && turnCo
 1165              		.loc 1 319 0
 1166 0598 69E1     		b	.L20
 1167              	.L46:
 322:main.c        ****                 } else {
 323:main.c        ****                   stop();
 1168              		.loc 1 323 0
 1169 059a FFF7FEFF 		bl	stop
 324:main.c        ****                   currentInstruction = instruction[i + 1];
 1170              		.loc 1 324 0
 1171 059e 124B     		ldr	r3, .L74+48
 1172 05a0 1B68     		ldr	r3, [r3]
 1173 05a2 0133     		adds	r3, r3, #1
 1174 05a4 07F50972 		add	r2, r7, #548
 1175 05a8 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1176 05aa 0D4B     		ldr	r3, .L74+40
 1177 05ac 1A70     		strb	r2, [r3]
 325:main.c        ****                   turnComplete = 0;
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 28


 1178              		.loc 1 325 0
 1179 05ae 0D4B     		ldr	r3, .L74+44
 1180 05b0 0022     		movs	r2, #0
 1181 05b2 1A60     		str	r2, [r3]
 319:main.c        ****                 if ((highCountRightIntersection > 150 || highCountLeftIntersection > 150) && turnCo
 1182              		.loc 1 319 0
 1183 05b4 5BE1     		b	.L20
 1184              	.L75:
 1185 05b6 00BF     		.align	2
 1186              	.L74:
 1187 05b8 00000000 		.word	flag
 1188 05bc 00000000 		.word	count
 1189 05c0 00000000 		.word	valuesLeftIntersection
 1190 05c4 00000000 		.word	valuesLeftLine
 1191 05c8 00000000 		.word	valuesMiddleLine
 1192 05cc 00000000 		.word	valuesTurnComplete
 1193 05d0 00000000 		.word	valuesRightLine
 1194 05d4 00000000 		.word	valuesRightIntersection
 1195 05d8 00000000 		.word	distanceTravelled
 1196 05dc 7F969800 		.word	9999999
 1197 05e0 00000000 		.word	currentInstruction
 1198 05e4 00000000 		.word	turnComplete
 1199 05e8 00000000 		.word	i
 1200              	.L41:
 326:main.c        ****                 }
 327:main.c        ****               }
 328:main.c        ****             } else if (currentInstruction == '4' && turnComplete == 0) { //turn 180 degrees
 1201              		.loc 1 328 0
 1202 05ec A04B     		ldr	r3, .L76
 1203 05ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1204 05f0 342B     		cmp	r3, #52
 1205 05f2 4FD1     		bne	.L47
 1206              		.loc 1 328 0 is_stmt 0 discriminator 1
 1207 05f4 9F4B     		ldr	r3, .L76+4
 1208 05f6 1B68     		ldr	r3, [r3]
 1209 05f8 002B     		cmp	r3, #0
 1210 05fa 4BD1     		bne	.L47
 329:main.c        ****               if (startCountingL == 1) {
 1211              		.loc 1 329 0 is_stmt 1
 1212 05fc 9E4B     		ldr	r3, .L76+8
 1213 05fe 1B68     		ldr	r3, [r3]
 1214 0600 012B     		cmp	r3, #1
 1215 0602 05D1     		bne	.L48
 330:main.c        ****                 totalNumRotationsL = 0;
 1216              		.loc 1 330 0
 1217 0604 9D4B     		ldr	r3, .L76+12
 1218 0606 0022     		movs	r2, #0
 1219 0608 1A60     		str	r2, [r3]
 331:main.c        ****                 startCountingL = 0;
 1220              		.loc 1 331 0
 1221 060a 9B4B     		ldr	r3, .L76+8
 1222 060c 0022     		movs	r2, #0
 1223 060e 1A60     		str	r2, [r3]
 1224              	.L48:
 332:main.c        ****               }
 333:main.c        **** 
 334:main.c        ****               if (totalNumRotationsL > 1500) { //test this to get it exact for the 180 degree turn
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 29


 1225              		.loc 1 334 0
 1226 0610 9A4B     		ldr	r3, .L76+12
 1227 0612 1B68     		ldr	r3, [r3]
 1228 0614 40F2DC52 		movw	r2, #1500
 1229 0618 9342     		cmp	r3, r2
 1230 061a 13DD     		ble	.L49
 335:main.c        ****                 stop();
 1231              		.loc 1 335 0
 1232 061c FFF7FEFF 		bl	stop
 336:main.c        ****                 currentInstruction = instruction[i + 1];
 1233              		.loc 1 336 0
 1234 0620 974B     		ldr	r3, .L76+16
 1235 0622 1B68     		ldr	r3, [r3]
 1236 0624 0133     		adds	r3, r3, #1
 1237 0626 07F50972 		add	r2, r7, #548
 1238 062a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1239 062c 904B     		ldr	r3, .L76
 1240 062e 1A70     		strb	r2, [r3]
 337:main.c        ****                 totalNumRotationsL = 0; //reset turn count counter
 1241              		.loc 1 337 0
 1242 0630 924B     		ldr	r3, .L76+12
 1243 0632 0022     		movs	r2, #0
 1244 0634 1A60     		str	r2, [r3]
 338:main.c        ****                 startCountingL = 1;
 1245              		.loc 1 338 0
 1246 0636 904B     		ldr	r3, .L76+8
 1247 0638 0122     		movs	r2, #1
 1248 063a 1A60     		str	r2, [r3]
 339:main.c        ****                 turnComplete = 1;
 1249              		.loc 1 339 0
 1250 063c 8D4B     		ldr	r3, .L76+4
 1251 063e 0122     		movs	r2, #1
 1252 0640 1A60     		str	r2, [r3]
 1253 0642 01E0     		b	.L50
 1254              	.L49:
 340:main.c        ****               } else {
 341:main.c        ****                 turnRight(); //turn left or right shouldn't matter
 1255              		.loc 1 341 0
 1256 0644 FFF7FEFF 		bl	turnRight
 1257              	.L50:
 342:main.c        ****               }
 343:main.c        **** 
 344:main.c        ****               if (turnComplete == 1) { //travel forward until i reach an intersection
 1258              		.loc 1 344 0
 1259 0648 8A4B     		ldr	r3, .L76+4
 1260 064a 1B68     		ldr	r3, [r3]
 1261 064c 012B     		cmp	r3, #1
 1262 064e 40F00E81 		bne	.L20
 345:main.c        ****                 if ((highCountRightIntersection > 150 || highCountLeftIntersection > 150) && turnCo
 1263              		.loc 1 345 0
 1264 0652 D7F81838 		ldr	r3, [r7, #2072]
 1265 0656 962B     		cmp	r3, #150
 1266 0658 03DC     		bgt	.L52
 1267              		.loc 1 345 0 is_stmt 0 discriminator 2
 1268 065a D7F82C38 		ldr	r3, [r7, #2092]
 1269 065e 962B     		cmp	r3, #150
 1270 0660 0ADD     		ble	.L53
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 30


 1271              	.L52:
 1272              		.loc 1 345 0 discriminator 3
 1273 0662 844B     		ldr	r3, .L76+4
 1274 0664 1B68     		ldr	r3, [r3]
 1275 0666 012B     		cmp	r3, #1
 1276 0668 06D1     		bne	.L53
 346:main.c        ****                   driveForward(distanceTravelled, 0);
 1277              		.loc 1 346 0 is_stmt 1
 1278 066a 864B     		ldr	r3, .L76+20
 1279 066c 1B68     		ldr	r3, [r3]
 1280 066e 0021     		movs	r1, #0
 1281 0670 1846     		mov	r0, r3
 1282 0672 FFF7FEFF 		bl	driveForward
 344:main.c        ****                 if ((highCountRightIntersection > 150 || highCountLeftIntersection > 150) && turnCo
 1283              		.loc 1 344 0
 1284 0676 FAE0     		b	.L20
 1285              	.L53:
 347:main.c        ****                 } else {
 348:main.c        ****                   stop();
 1286              		.loc 1 348 0
 1287 0678 FFF7FEFF 		bl	stop
 349:main.c        ****                   currentInstruction = instruction[i + 1];
 1288              		.loc 1 349 0
 1289 067c 804B     		ldr	r3, .L76+16
 1290 067e 1B68     		ldr	r3, [r3]
 1291 0680 0133     		adds	r3, r3, #1
 1292 0682 07F50972 		add	r2, r7, #548
 1293 0686 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1294 0688 794B     		ldr	r3, .L76
 1295 068a 1A70     		strb	r2, [r3]
 350:main.c        ****                   turnComplete = 0;
 1296              		.loc 1 350 0
 1297 068c 794B     		ldr	r3, .L76+4
 1298 068e 0022     		movs	r2, #0
 1299 0690 1A60     		str	r2, [r3]
 344:main.c        ****                 if ((highCountRightIntersection > 150 || highCountLeftIntersection > 150) && turnCo
 1300              		.loc 1 344 0
 1301 0692 ECE0     		b	.L20
 1302              	.L47:
 351:main.c        ****                 }
 352:main.c        ****               }
 353:main.c        **** 
 354:main.c        ****             } else if (currentInstruction == '5' && turnComplete == 0) { //leftTurn and then go for
 1303              		.loc 1 354 0
 1304 0694 764B     		ldr	r3, .L76
 1305 0696 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1306 0698 352B     		cmp	r3, #53
 1307 069a 37D1     		bne	.L54
 1308              		.loc 1 354 0 is_stmt 0 discriminator 1
 1309 069c 754B     		ldr	r3, .L76+4
 1310 069e 1B68     		ldr	r3, [r3]
 1311 06a0 002B     		cmp	r3, #0
 1312 06a2 33D1     		bne	.L54
 355:main.c        ****               if (R_INT_BLACK) { //code that senses when the turn is done, can be optimised
 1313              		.loc 1 355 0 is_stmt 1
 1314 06a4 D7F81838 		ldr	r3, [r7, #2072]
 1315 06a8 952B     		cmp	r3, #149
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 31


 1316 06aa 06DC     		bgt	.L55
 356:main.c        ****                 turnComplete = 1;
 1317              		.loc 1 356 0
 1318 06ac 714B     		ldr	r3, .L76+4
 1319 06ae 0122     		movs	r2, #1
 1320 06b0 1A60     		str	r2, [r3]
 357:main.c        ****                 distanceTravelled = 0; //reset distance counter
 1321              		.loc 1 357 0
 1322 06b2 744B     		ldr	r3, .L76+20
 1323 06b4 0022     		movs	r2, #0
 1324 06b6 1A60     		str	r2, [r3]
 1325 06b8 01E0     		b	.L56
 1326              	.L55:
 358:main.c        ****               } else {
 359:main.c        ****                 turnLeft();
 1327              		.loc 1 359 0
 1328 06ba FFF7FEFF 		bl	turnLeft
 1329              	.L56:
 360:main.c        ****               }
 361:main.c        **** 
 362:main.c        ****               if (turnComplete == 1) {
 1330              		.loc 1 362 0
 1331 06be 6D4B     		ldr	r3, .L76+4
 1332 06c0 1B68     		ldr	r3, [r3]
 1333 06c2 012B     		cmp	r3, #1
 1334 06c4 40F0D380 		bne	.L20
 1335              	.LBB11:
 363:main.c        ****                 int targetDistance = 50;
 1336              		.loc 1 363 0
 1337 06c8 3223     		movs	r3, #50
 1338 06ca C7F80C38 		str	r3, [r7, #2060]
 364:main.c        ****                 if ((distanceTravelled < targetDistance) && turnComplete == 1) { //if robot travels
 1339              		.loc 1 364 0
 1340 06ce 6D4B     		ldr	r3, .L76+20
 1341 06d0 1A68     		ldr	r2, [r3]
 1342 06d2 D7F80C38 		ldr	r3, [r7, #2060]
 1343 06d6 9A42     		cmp	r2, r3
 1344 06d8 0ADA     		bge	.L58
 1345              		.loc 1 364 0 is_stmt 0 discriminator 1
 1346 06da 664B     		ldr	r3, .L76+4
 1347 06dc 1B68     		ldr	r3, [r3]
 1348 06de 012B     		cmp	r3, #1
 1349 06e0 06D1     		bne	.L58
 365:main.c        ****                   driveForward(distanceTravelled, 0);
 1350              		.loc 1 365 0 is_stmt 1
 1351 06e2 684B     		ldr	r3, .L76+20
 1352 06e4 1B68     		ldr	r3, [r3]
 1353 06e6 0021     		movs	r1, #0
 1354 06e8 1846     		mov	r0, r3
 1355 06ea FFF7FEFF 		bl	driveForward
 1356              	.LBE11:
 362:main.c        ****                 int targetDistance = 50;
 1357              		.loc 1 362 0
 1358 06ee BEE0     		b	.L20
 1359              	.L58:
 1360              	.LBB12:
 366:main.c        ****                 } else {
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 32


 367:main.c        ****                   stop();
 1361              		.loc 1 367 0
 1362 06f0 FFF7FEFF 		bl	stop
 368:main.c        ****                   currentInstruction = instruction[i + 1];
 1363              		.loc 1 368 0
 1364 06f4 624B     		ldr	r3, .L76+16
 1365 06f6 1B68     		ldr	r3, [r3]
 1366 06f8 0133     		adds	r3, r3, #1
 1367 06fa 07F50972 		add	r2, r7, #548
 1368 06fe D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1369 0700 5B4B     		ldr	r3, .L76
 1370 0702 1A70     		strb	r2, [r3]
 369:main.c        ****                   turnComplete = 0;
 1371              		.loc 1 369 0
 1372 0704 5B4B     		ldr	r3, .L76+4
 1373 0706 0022     		movs	r2, #0
 1374 0708 1A60     		str	r2, [r3]
 1375              	.LBE12:
 362:main.c        ****                 int targetDistance = 50;
 1376              		.loc 1 362 0
 1377 070a B0E0     		b	.L20
 1378              	.L54:
 370:main.c        ****                 }
 371:main.c        ****               }
 372:main.c        ****             } else if (currentInstruction == '6' && turnComplete == 0) { //go forward until distanc
 1379              		.loc 1 372 0
 1380 070c 584B     		ldr	r3, .L76
 1381 070e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1382 0710 362B     		cmp	r3, #54
 1383 0712 25D1     		bne	.L59
 1384              		.loc 1 372 0 is_stmt 0 discriminator 1
 1385 0714 574B     		ldr	r3, .L76+4
 1386 0716 1B68     		ldr	r3, [r3]
 1387 0718 002B     		cmp	r3, #0
 1388 071a 21D1     		bne	.L59
 1389              	.LBB13:
 373:main.c        ****               int targetDistance = 50;
 1390              		.loc 1 373 0 is_stmt 1
 1391 071c 3223     		movs	r3, #50
 1392 071e C7F80838 		str	r3, [r7, #2056]
 374:main.c        ****               if ((distanceTravelled < targetDistance) && turnComplete == 1) { //if robot travels f
 1393              		.loc 1 374 0
 1394 0722 584B     		ldr	r3, .L76+20
 1395 0724 1A68     		ldr	r2, [r3]
 1396 0726 D7F80838 		ldr	r3, [r7, #2056]
 1397 072a 9A42     		cmp	r2, r3
 1398 072c 0ADA     		bge	.L60
 1399              		.loc 1 374 0 is_stmt 0 discriminator 1
 1400 072e 514B     		ldr	r3, .L76+4
 1401 0730 1B68     		ldr	r3, [r3]
 1402 0732 012B     		cmp	r3, #1
 1403 0734 06D1     		bne	.L60
 375:main.c        ****                 driveForward(distanceTravelled, 0);
 1404              		.loc 1 375 0 is_stmt 1
 1405 0736 534B     		ldr	r3, .L76+20
 1406 0738 1B68     		ldr	r3, [r3]
 1407 073a 0021     		movs	r1, #0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 33


 1408 073c 1846     		mov	r0, r3
 1409 073e FFF7FEFF 		bl	driveForward
 1410              	.LBE13:
 372:main.c        ****               int targetDistance = 50;
 1411              		.loc 1 372 0
 1412 0742 94E0     		b	.L20
 1413              	.L60:
 1414              	.LBB14:
 376:main.c        ****               } else {
 377:main.c        ****                 stop();
 1415              		.loc 1 377 0
 1416 0744 FFF7FEFF 		bl	stop
 378:main.c        ****                 currentInstruction = instruction[i + 1];
 1417              		.loc 1 378 0
 1418 0748 4D4B     		ldr	r3, .L76+16
 1419 074a 1B68     		ldr	r3, [r3]
 1420 074c 0133     		adds	r3, r3, #1
 1421 074e 07F50972 		add	r2, r7, #548
 1422 0752 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1423 0754 464B     		ldr	r3, .L76
 1424 0756 1A70     		strb	r2, [r3]
 379:main.c        ****                 turnComplete = 0;
 1425              		.loc 1 379 0
 1426 0758 464B     		ldr	r3, .L76+4
 1427 075a 0022     		movs	r2, #0
 1428 075c 1A60     		str	r2, [r3]
 1429              	.LBE14:
 372:main.c        ****               int targetDistance = 50;
 1430              		.loc 1 372 0
 1431 075e 86E0     		b	.L20
 1432              	.L59:
 380:main.c        ****               }
 381:main.c        ****             } else if (currentInstruction == '7' && turnComplete == 0) { //leftTurn and then go for
 1433              		.loc 1 381 0
 1434 0760 434B     		ldr	r3, .L76
 1435 0762 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1436 0764 372B     		cmp	r3, #55
 1437 0766 36D1     		bne	.L62
 1438              		.loc 1 381 0 is_stmt 0 discriminator 1
 1439 0768 424B     		ldr	r3, .L76+4
 1440 076a 1B68     		ldr	r3, [r3]
 1441 076c 002B     		cmp	r3, #0
 1442 076e 32D1     		bne	.L62
 382:main.c        ****               if (R_INT_BLACK) { //code that senses when the turn is done, can be optimised
 1443              		.loc 1 382 0 is_stmt 1
 1444 0770 D7F81838 		ldr	r3, [r7, #2072]
 1445 0774 952B     		cmp	r3, #149
 1446 0776 06DC     		bgt	.L63
 383:main.c        ****                 turnComplete = 1;
 1447              		.loc 1 383 0
 1448 0778 3E4B     		ldr	r3, .L76+4
 1449 077a 0122     		movs	r2, #1
 1450 077c 1A60     		str	r2, [r3]
 384:main.c        ****                 distanceTravelled = 0; //reset distance counter
 1451              		.loc 1 384 0
 1452 077e 414B     		ldr	r3, .L76+20
 1453 0780 0022     		movs	r2, #0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 34


 1454 0782 1A60     		str	r2, [r3]
 1455 0784 01E0     		b	.L64
 1456              	.L63:
 385:main.c        ****               } else {
 386:main.c        ****                 turnLeft();
 1457              		.loc 1 386 0
 1458 0786 FFF7FEFF 		bl	turnLeft
 1459              	.L64:
 387:main.c        ****               }
 388:main.c        **** 
 389:main.c        ****               if (turnComplete == 1) {
 1460              		.loc 1 389 0
 1461 078a 3A4B     		ldr	r3, .L76+4
 1462 078c 1B68     		ldr	r3, [r3]
 1463 078e 012B     		cmp	r3, #1
 1464 0790 6DD1     		bne	.L20
 1465              	.LBB15:
 390:main.c        ****                 int targetDistance = 50;
 1466              		.loc 1 390 0
 1467 0792 3223     		movs	r3, #50
 1468 0794 C7F80438 		str	r3, [r7, #2052]
 391:main.c        ****                 if ((distanceTravelled < targetDistance) && turnComplete == 1) { //if robot travels
 1469              		.loc 1 391 0
 1470 0798 3A4B     		ldr	r3, .L76+20
 1471 079a 1A68     		ldr	r2, [r3]
 1472 079c D7F80438 		ldr	r3, [r7, #2052]
 1473 07a0 9A42     		cmp	r2, r3
 1474 07a2 0ADA     		bge	.L66
 1475              		.loc 1 391 0 is_stmt 0 discriminator 1
 1476 07a4 334B     		ldr	r3, .L76+4
 1477 07a6 1B68     		ldr	r3, [r3]
 1478 07a8 012B     		cmp	r3, #1
 1479 07aa 06D1     		bne	.L66
 392:main.c        ****                   driveForward(distanceTravelled, 0);
 1480              		.loc 1 392 0 is_stmt 1
 1481 07ac 354B     		ldr	r3, .L76+20
 1482 07ae 1B68     		ldr	r3, [r3]
 1483 07b0 0021     		movs	r1, #0
 1484 07b2 1846     		mov	r0, r3
 1485 07b4 FFF7FEFF 		bl	driveForward
 1486              	.LBE15:
 389:main.c        ****                 int targetDistance = 50;
 1487              		.loc 1 389 0
 1488 07b8 59E0     		b	.L20
 1489              	.L66:
 1490              	.LBB16:
 393:main.c        ****                 } else {
 394:main.c        ****                   stop();
 1491              		.loc 1 394 0
 1492 07ba FFF7FEFF 		bl	stop
 395:main.c        ****                   currentInstruction = instruction[i + 1];
 1493              		.loc 1 395 0
 1494 07be 304B     		ldr	r3, .L76+16
 1495 07c0 1B68     		ldr	r3, [r3]
 1496 07c2 0133     		adds	r3, r3, #1
 1497 07c4 07F50972 		add	r2, r7, #548
 1498 07c8 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 35


 1499 07ca 294B     		ldr	r3, .L76
 1500 07cc 1A70     		strb	r2, [r3]
 396:main.c        ****                   turnComplete = 0;
 1501              		.loc 1 396 0
 1502 07ce 294B     		ldr	r3, .L76+4
 1503 07d0 0022     		movs	r2, #0
 1504 07d2 1A60     		str	r2, [r3]
 1505              	.LBE16:
 389:main.c        ****                 int targetDistance = 50;
 1506              		.loc 1 389 0
 1507 07d4 4BE0     		b	.L20
 1508              	.L62:
 397:main.c        ****                 }
 398:main.c        ****               }
 399:main.c        ****             } else { //turn 180 degrees and travel a distance
 400:main.c        ****               if (startCountingL == 1) {
 1509              		.loc 1 400 0
 1510 07d6 284B     		ldr	r3, .L76+8
 1511 07d8 1B68     		ldr	r3, [r3]
 1512 07da 012B     		cmp	r3, #1
 1513 07dc 05D1     		bne	.L67
 401:main.c        ****                 totalNumRotationsL = 0;
 1514              		.loc 1 401 0
 1515 07de 274B     		ldr	r3, .L76+12
 1516 07e0 0022     		movs	r2, #0
 1517 07e2 1A60     		str	r2, [r3]
 402:main.c        ****                 startCountingL = 0;
 1518              		.loc 1 402 0
 1519 07e4 244B     		ldr	r3, .L76+8
 1520 07e6 0022     		movs	r2, #0
 1521 07e8 1A60     		str	r2, [r3]
 1522              	.L67:
 403:main.c        ****               }
 404:main.c        **** 
 405:main.c        ****               if (totalNumRotationsL > 1500) { //test this to get it exact for the 180 degree turn
 1523              		.loc 1 405 0
 1524 07ea 244B     		ldr	r3, .L76+12
 1525 07ec 1B68     		ldr	r3, [r3]
 1526 07ee 40F2DC52 		movw	r2, #1500
 1527 07f2 9342     		cmp	r3, r2
 1528 07f4 13DD     		ble	.L68
 406:main.c        ****                 stop();
 1529              		.loc 1 406 0
 1530 07f6 FFF7FEFF 		bl	stop
 407:main.c        ****                 currentInstruction = instruction[i + 1];
 1531              		.loc 1 407 0
 1532 07fa 214B     		ldr	r3, .L76+16
 1533 07fc 1B68     		ldr	r3, [r3]
 1534 07fe 0133     		adds	r3, r3, #1
 1535 0800 07F50972 		add	r2, r7, #548
 1536 0804 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1537 0806 1A4B     		ldr	r3, .L76
 1538 0808 1A70     		strb	r2, [r3]
 408:main.c        ****                 totalNumRotationsL = 0; //reset turn count counter
 1539              		.loc 1 408 0
 1540 080a 1C4B     		ldr	r3, .L76+12
 1541 080c 0022     		movs	r2, #0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 36


 1542 080e 1A60     		str	r2, [r3]
 409:main.c        ****                 startCountingL = 1;
 1543              		.loc 1 409 0
 1544 0810 194B     		ldr	r3, .L76+8
 1545 0812 0122     		movs	r2, #1
 1546 0814 1A60     		str	r2, [r3]
 410:main.c        ****                 turnComplete = 1;
 1547              		.loc 1 410 0
 1548 0816 174B     		ldr	r3, .L76+4
 1549 0818 0122     		movs	r2, #1
 1550 081a 1A60     		str	r2, [r3]
 1551 081c 01E0     		b	.L69
 1552              	.L68:
 411:main.c        ****               } else {
 412:main.c        ****                 turnRight(); //turn left or right shouldn't matter
 1553              		.loc 1 412 0
 1554 081e FFF7FEFF 		bl	turnRight
 1555              	.L69:
 413:main.c        ****               }
 414:main.c        **** 
 415:main.c        ****               if (turnComplete == 1) {
 1556              		.loc 1 415 0
 1557 0822 144B     		ldr	r3, .L76+4
 1558 0824 1B68     		ldr	r3, [r3]
 1559 0826 012B     		cmp	r3, #1
 1560 0828 7FF4B1AC 		bne	.L71
 1561              	.LBB17:
 416:main.c        ****                 int targetDistance = 50;
 1562              		.loc 1 416 0
 1563 082c 3223     		movs	r3, #50
 1564 082e C7F80038 		str	r3, [r7, #2048]
 417:main.c        ****                 if ((distanceTravelled < targetDistance) && turnComplete == 1) { //if robot travels
 1565              		.loc 1 417 0
 1566 0832 144B     		ldr	r3, .L76+20
 1567 0834 1A68     		ldr	r2, [r3]
 1568 0836 D7F80038 		ldr	r3, [r7, #2048]
 1569 083a 9A42     		cmp	r2, r3
 1570 083c 0ADA     		bge	.L70
 1571              		.loc 1 417 0 is_stmt 0 discriminator 1
 1572 083e 0D4B     		ldr	r3, .L76+4
 1573 0840 1B68     		ldr	r3, [r3]
 1574 0842 012B     		cmp	r3, #1
 1575 0844 06D1     		bne	.L70
 418:main.c        ****                   driveForward(distanceTravelled, 0);
 1576              		.loc 1 418 0 is_stmt 1
 1577 0846 0F4B     		ldr	r3, .L76+20
 1578 0848 1B68     		ldr	r3, [r3]
 1579 084a 0021     		movs	r1, #0
 1580 084c 1846     		mov	r0, r3
 1581 084e FFF7FEFF 		bl	driveForward
 1582 0852 0CE0     		b	.L20
 1583              	.L70:
 419:main.c        ****                 } else {
 420:main.c        ****                   stop();
 1584              		.loc 1 420 0
 1585 0854 FFF7FEFF 		bl	stop
 421:main.c        ****                   currentInstruction = instruction[i + 1];
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 37


 1586              		.loc 1 421 0
 1587 0858 094B     		ldr	r3, .L76+16
 1588 085a 1B68     		ldr	r3, [r3]
 1589 085c 0133     		adds	r3, r3, #1
 1590 085e 07F50972 		add	r2, r7, #548
 1591 0862 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1592 0864 024B     		ldr	r3, .L76
 1593 0866 1A70     		strb	r2, [r3]
 422:main.c        ****                   turnComplete = 0;
 1594              		.loc 1 422 0
 1595 0868 024B     		ldr	r3, .L76+4
 1596 086a 0022     		movs	r2, #0
 1597 086c 1A60     		str	r2, [r3]
 1598              	.L20:
 1599              	.LBE17:
 1600              	.LBE9:
 423:main.c        ****                 }
 424:main.c        ****               }
 425:main.c        ****             }
 426:main.c        ****           }
 427:main.c        ****         }
 428:main.c        ****       }
 429:main.c        ****     }
 430:main.c        ****   }
 1601              		.loc 1 430 0 discriminator 1
 1602 086e 8EE4     		b	.L71
 1603              	.L77:
 1604              		.align	2
 1605              	.L76:
 1606 0870 00000000 		.word	currentInstruction
 1607 0874 00000000 		.word	turnComplete
 1608 0878 00000000 		.word	startCountingL
 1609 087c 00000000 		.word	totalNumRotationsL
 1610 0880 00000000 		.word	i
 1611 0884 00000000 		.word	distanceTravelled
 1612              		.cfi_endproc
 1613              	.LFE66:
 1614              		.size	main, .-main
 1615              		.section	.text.usbPutString,"ax",%progbits
 1616              		.align	2
 1617              		.global	usbPutString
 1618              		.thumb
 1619              		.thumb_func
 1620              		.type	usbPutString, %function
 1621              	usbPutString:
 1622              	.LFB67:
 431:main.c        **** }
 432:main.c        **** 
 433:main.c        **** void usbPutString(char * s) {
 1623              		.loc 1 433 0
 1624              		.cfi_startproc
 1625              		@ args = 0, pretend = 0, frame = 8
 1626              		@ frame_needed = 1, uses_anonymous_args = 0
 1627 0000 80B5     		push	{r7, lr}
 1628              		.cfi_def_cfa_offset 8
 1629              		.cfi_offset 7, -8
 1630              		.cfi_offset 14, -4
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 38


 1631 0002 82B0     		sub	sp, sp, #8
 1632              		.cfi_def_cfa_offset 16
 1633 0004 00AF     		add	r7, sp, #0
 1634              		.cfi_def_cfa_register 7
 1635 0006 7860     		str	r0, [r7, #4]
 434:main.c        ****   // !! Assumes that *s is a string with allocated space >=64 chars     
 435:main.c        ****   //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 436:main.c        ****   //  length to 62 char (63rd char is a '!')
 437:main.c        **** 
 438:main.c        ****   #ifdef USE_USB
 439:main.c        ****   while (USBUART_CDCIsReady() == 0);
 1636              		.loc 1 439 0
 1637 0008 00BF     		nop
 1638              	.L79:
 1639              		.loc 1 439 0 is_stmt 0 discriminator 1
 1640 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1641 000e 0346     		mov	r3, r0
 1642 0010 002B     		cmp	r3, #0
 1643 0012 FAD0     		beq	.L79
 440:main.c        ****   s[63] = '\0';
 1644              		.loc 1 440 0 is_stmt 1
 1645 0014 7B68     		ldr	r3, [r7, #4]
 1646 0016 3F33     		adds	r3, r3, #63
 1647 0018 0022     		movs	r2, #0
 1648 001a 1A70     		strb	r2, [r3]
 441:main.c        ****   s[62] = '!';
 1649              		.loc 1 441 0
 1650 001c 7B68     		ldr	r3, [r7, #4]
 1651 001e 3E33     		adds	r3, r3, #62
 1652 0020 2122     		movs	r2, #33
 1653 0022 1A70     		strb	r2, [r3]
 442:main.c        ****   USBUART_PutData((uint8 * ) s, strlen(s));
 1654              		.loc 1 442 0
 1655 0024 7868     		ldr	r0, [r7, #4]
 1656 0026 FFF7FEFF 		bl	strlen
 1657 002a 0346     		mov	r3, r0
 1658 002c 9BB2     		uxth	r3, r3
 1659 002e 1946     		mov	r1, r3
 1660 0030 7868     		ldr	r0, [r7, #4]
 1661 0032 FFF7FEFF 		bl	USBUART_PutData
 443:main.c        ****   #endif
 444:main.c        **** }
 1662              		.loc 1 444 0
 1663 0036 00BF     		nop
 1664 0038 0837     		adds	r7, r7, #8
 1665              		.cfi_def_cfa_offset 8
 1666 003a BD46     		mov	sp, r7
 1667              		.cfi_def_cfa_register 13
 1668              		@ sp needed
 1669 003c 80BD     		pop	{r7, pc}
 1670              		.cfi_endproc
 1671              	.LFE67:
 1672              		.size	usbPutString, .-usbPutString
 1673 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1674              		.align	2
 1675              		.global	usbPutChar
 1676              		.thumb
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 39


 1677              		.thumb_func
 1678              		.type	usbPutChar, %function
 1679              	usbPutChar:
 1680              	.LFB68:
 445:main.c        **** //* ========================================
 446:main.c        **** void usbPutChar(char c) {
 1681              		.loc 1 446 0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 8
 1684              		@ frame_needed = 1, uses_anonymous_args = 0
 1685 0000 80B5     		push	{r7, lr}
 1686              		.cfi_def_cfa_offset 8
 1687              		.cfi_offset 7, -8
 1688              		.cfi_offset 14, -4
 1689 0002 82B0     		sub	sp, sp, #8
 1690              		.cfi_def_cfa_offset 16
 1691 0004 00AF     		add	r7, sp, #0
 1692              		.cfi_def_cfa_register 7
 1693 0006 0346     		mov	r3, r0
 1694 0008 FB71     		strb	r3, [r7, #7]
 447:main.c        ****   #ifdef USE_USB
 448:main.c        ****   while (USBUART_CDCIsReady() == 0);
 1695              		.loc 1 448 0
 1696 000a 00BF     		nop
 1697              	.L81:
 1698              		.loc 1 448 0 is_stmt 0 discriminator 1
 1699 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1700 0010 0346     		mov	r3, r0
 1701 0012 002B     		cmp	r3, #0
 1702 0014 FAD0     		beq	.L81
 449:main.c        ****   USBUART_PutChar(c);
 1703              		.loc 1 449 0 is_stmt 1
 1704 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1705 0018 1846     		mov	r0, r3
 1706 001a FFF7FEFF 		bl	USBUART_PutChar
 450:main.c        ****   #endif
 451:main.c        **** }...
 1707              		.loc 1 451 0
 1708 001e 00BF     		nop
 1709 0020 0837     		adds	r7, r7, #8
 1710              		.cfi_def_cfa_offset 8
 1711 0022 BD46     		mov	sp, r7
 1712              		.cfi_def_cfa_register 13
 1713              		@ sp needed
 1714 0024 80BD     		pop	{r7, pc}
 1715              		.cfi_endproc
 1716              	.LFE68:
 1717              		.size	usbPutChar, .-usbPutChar
 1718 0026 00BF     		.text
 1719              	.Letext0:
 1720              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1721              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1722              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1723              		.file 5 "vars.h"
 1724              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1725              		.section	.debug_info,"",%progbits
 1726              	.Ldebug_info0:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 40


 1727 0000 20090000 		.4byte	0x920
 1728 0004 0400     		.2byte	0x4
 1729 0006 00000000 		.4byte	.Ldebug_abbrev0
 1730 000a 04       		.byte	0x4
 1731 000b 01       		.uleb128 0x1
 1732 000c 83000000 		.4byte	.LASF118
 1733 0010 0C       		.byte	0xc
 1734 0011 16000000 		.4byte	.LASF119
 1735 0015 2C050000 		.4byte	.LASF120
 1736 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 1737 001d 00000000 		.4byte	0
 1738 0021 00000000 		.4byte	.Ldebug_line0
 1739 0025 02       		.uleb128 0x2
 1740 0026 01       		.byte	0x1
 1741 0027 06       		.byte	0x6
 1742 0028 14060000 		.4byte	.LASF0
 1743 002c 02       		.uleb128 0x2
 1744 002d 01       		.byte	0x1
 1745 002e 08       		.byte	0x8
 1746 002f 19050000 		.4byte	.LASF1
 1747 0033 02       		.uleb128 0x2
 1748 0034 02       		.byte	0x2
 1749 0035 05       		.byte	0x5
 1750 0036 0F040000 		.4byte	.LASF2
 1751 003a 02       		.uleb128 0x2
 1752 003b 02       		.byte	0x2
 1753 003c 07       		.byte	0x7
 1754 003d 20060000 		.4byte	.LASF3
 1755 0041 03       		.uleb128 0x3
 1756 0042 66000000 		.4byte	.LASF12
 1757 0046 02       		.byte	0x2
 1758 0047 3F       		.byte	0x3f
 1759 0048 4C000000 		.4byte	0x4c
 1760 004c 02       		.uleb128 0x2
 1761 004d 04       		.byte	0x4
 1762 004e 05       		.byte	0x5
 1763 004f 25040000 		.4byte	.LASF4
 1764 0053 02       		.uleb128 0x2
 1765 0054 04       		.byte	0x4
 1766 0055 07       		.byte	0x7
 1767 0056 D4040000 		.4byte	.LASF5
 1768 005a 02       		.uleb128 0x2
 1769 005b 08       		.byte	0x8
 1770 005c 05       		.byte	0x5
 1771 005d 34030000 		.4byte	.LASF6
 1772 0061 02       		.uleb128 0x2
 1773 0062 08       		.byte	0x8
 1774 0063 07       		.byte	0x7
 1775 0064 FE010000 		.4byte	.LASF7
 1776 0068 04       		.uleb128 0x4
 1777 0069 04       		.byte	0x4
 1778 006a 05       		.byte	0x5
 1779 006b 696E7400 		.ascii	"int\000"
 1780 006f 02       		.uleb128 0x2
 1781 0070 04       		.byte	0x4
 1782 0071 07       		.byte	0x7
 1783 0072 4D000000 		.4byte	.LASF8
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 41


 1784 0076 02       		.uleb128 0x2
 1785 0077 08       		.byte	0x8
 1786 0078 04       		.byte	0x4
 1787 0079 CB030000 		.4byte	.LASF9
 1788 007d 02       		.uleb128 0x2
 1789 007e 04       		.byte	0x4
 1790 007f 07       		.byte	0x7
 1791 0080 CB040000 		.4byte	.LASF10
 1792 0084 05       		.uleb128 0x5
 1793 0085 04       		.byte	0x4
 1794 0086 8A000000 		.4byte	0x8a
 1795 008a 02       		.uleb128 0x2
 1796 008b 01       		.byte	0x1
 1797 008c 08       		.byte	0x8
 1798 008d E1020000 		.4byte	.LASF11
 1799 0091 03       		.uleb128 0x3
 1800 0092 E6040000 		.4byte	.LASF13
 1801 0096 03       		.byte	0x3
 1802 0097 2C       		.byte	0x2c
 1803 0098 41000000 		.4byte	0x41
 1804 009c 06       		.uleb128 0x6
 1805 009d 8E060000 		.4byte	.LASF14
 1806 00a1 04       		.byte	0x4
 1807 00a2 E701     		.2byte	0x1e7
 1808 00a4 2C000000 		.4byte	0x2c
 1809 00a8 06       		.uleb128 0x6
 1810 00a9 06030000 		.4byte	.LASF15
 1811 00ad 04       		.byte	0x4
 1812 00ae E801     		.2byte	0x1e8
 1813 00b0 3A000000 		.4byte	0x3a
 1814 00b4 06       		.uleb128 0x6
 1815 00b5 0D030000 		.4byte	.LASF16
 1816 00b9 04       		.byte	0x4
 1817 00ba EA01     		.2byte	0x1ea
 1818 00bc 25000000 		.4byte	0x25
 1819 00c0 06       		.uleb128 0x6
 1820 00c1 70000000 		.4byte	.LASF17
 1821 00c5 04       		.byte	0x4
 1822 00c6 EB01     		.2byte	0x1eb
 1823 00c8 33000000 		.4byte	0x33
 1824 00cc 02       		.uleb128 0x2
 1825 00cd 04       		.byte	0x4
 1826 00ce 04       		.byte	0x4
 1827 00cf C3010000 		.4byte	.LASF18
 1828 00d3 02       		.uleb128 0x2
 1829 00d4 08       		.byte	0x8
 1830 00d5 04       		.byte	0x4
 1831 00d6 94060000 		.4byte	.LASF19
 1832 00da 07       		.uleb128 0x7
 1833 00db AF030000 		.4byte	.LASF121
 1834 00df 20       		.byte	0x20
 1835 00e0 05       		.byte	0x5
 1836 00e1 29       		.byte	0x29
 1837 00e2 B3010000 		.4byte	0x1b3
 1838 00e6 08       		.uleb128 0x8
 1839 00e7 B9030000 		.4byte	.LASF20
 1840 00eb 05       		.byte	0x5
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 42


 1841 00ec 2A       		.byte	0x2a
 1842 00ed B4000000 		.4byte	0xb4
 1843 00f1 00       		.byte	0
 1844 00f2 08       		.uleb128 0x8
 1845 00f3 EE010000 		.4byte	.LASF21
 1846 00f7 05       		.byte	0x5
 1847 00f8 2B       		.byte	0x2b
 1848 00f9 9C000000 		.4byte	0x9c
 1849 00fd 01       		.byte	0x1
 1850 00fe 08       		.uleb128 0x8
 1851 00ff EE040000 		.4byte	.LASF22
 1852 0103 05       		.byte	0x5
 1853 0104 2C       		.byte	0x2c
 1854 0105 C0000000 		.4byte	0xc0
 1855 0109 02       		.byte	0x2
 1856 010a 08       		.uleb128 0x8
 1857 010b A1020000 		.4byte	.LASF23
 1858 010f 05       		.byte	0x5
 1859 0110 2D       		.byte	0x2d
 1860 0111 C0000000 		.4byte	0xc0
 1861 0115 04       		.byte	0x4
 1862 0116 08       		.uleb128 0x8
 1863 0117 33060000 		.4byte	.LASF24
 1864 011b 05       		.byte	0x5
 1865 011c 2E       		.byte	0x2e
 1866 011d C0000000 		.4byte	0xc0
 1867 0121 06       		.byte	0x6
 1868 0122 08       		.uleb128 0x8
 1869 0123 9B060000 		.4byte	.LASF25
 1870 0127 05       		.byte	0x5
 1871 0128 2F       		.byte	0x2f
 1872 0129 C0000000 		.4byte	0xc0
 1873 012d 08       		.byte	0x8
 1874 012e 08       		.uleb128 0x8
 1875 012f 8D030000 		.4byte	.LASF26
 1876 0133 05       		.byte	0x5
 1877 0134 30       		.byte	0x30
 1878 0135 C0000000 		.4byte	0xc0
 1879 0139 0A       		.byte	0xa
 1880 013a 08       		.uleb128 0x8
 1881 013b F3020000 		.4byte	.LASF27
 1882 013f 05       		.byte	0x5
 1883 0140 31       		.byte	0x31
 1884 0141 C0000000 		.4byte	0xc0
 1885 0145 0C       		.byte	0xc
 1886 0146 08       		.uleb128 0x8
 1887 0147 BE030000 		.4byte	.LASF28
 1888 014b 05       		.byte	0x5
 1889 014c 32       		.byte	0x32
 1890 014d C0000000 		.4byte	0xc0
 1891 0151 0E       		.byte	0xe
 1892 0152 08       		.uleb128 0x8
 1893 0153 42030000 		.4byte	.LASF29
 1894 0157 05       		.byte	0x5
 1895 0158 33       		.byte	0x33
 1896 0159 C0000000 		.4byte	0xc0
 1897 015d 10       		.byte	0x10
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 43


 1898 015e 08       		.uleb128 0x8
 1899 015f B6040000 		.4byte	.LASF30
 1900 0163 05       		.byte	0x5
 1901 0164 34       		.byte	0x34
 1902 0165 C0000000 		.4byte	0xc0
 1903 0169 12       		.byte	0x12
 1904 016a 08       		.uleb128 0x8
 1905 016b C5060000 		.4byte	.LASF31
 1906 016f 05       		.byte	0x5
 1907 0170 35       		.byte	0x35
 1908 0171 C0000000 		.4byte	0xc0
 1909 0175 14       		.byte	0x14
 1910 0176 08       		.uleb128 0x8
 1911 0177 12030000 		.4byte	.LASF32
 1912 017b 05       		.byte	0x5
 1913 017c 36       		.byte	0x36
 1914 017d C0000000 		.4byte	0xc0
 1915 0181 16       		.byte	0x16
 1916 0182 08       		.uleb128 0x8
 1917 0183 39010000 		.4byte	.LASF33
 1918 0187 05       		.byte	0x5
 1919 0188 37       		.byte	0x37
 1920 0189 C0000000 		.4byte	0xc0
 1921 018d 18       		.byte	0x18
 1922 018e 08       		.uleb128 0x8
 1923 018f 97040000 		.4byte	.LASF34
 1924 0193 05       		.byte	0x5
 1925 0194 38       		.byte	0x38
 1926 0195 C0000000 		.4byte	0xc0
 1927 0199 1A       		.byte	0x1a
 1928 019a 08       		.uleb128 0x8
 1929 019b 84030000 		.4byte	.LASF35
 1930 019f 05       		.byte	0x5
 1931 01a0 39       		.byte	0x39
 1932 01a1 C0000000 		.4byte	0xc0
 1933 01a5 1C       		.byte	0x1c
 1934 01a6 08       		.uleb128 0x8
 1935 01a7 A5010000 		.4byte	.LASF36
 1936 01ab 05       		.byte	0x5
 1937 01ac 3A       		.byte	0x3a
 1938 01ad C0000000 		.4byte	0xc0
 1939 01b1 1E       		.byte	0x1e
 1940 01b2 00       		.byte	0
 1941 01b3 09       		.uleb128 0x9
 1942 01b4 656F6300 		.ascii	"eoc\000"
 1943 01b8 01       		.byte	0x1
 1944 01b9 6C       		.byte	0x6c
 1945 01ba 00000000 		.4byte	.LFB64
 1946 01be 18000000 		.4byte	.LFE64-.LFB64
 1947 01c2 01       		.uleb128 0x1
 1948 01c3 9C       		.byte	0x9c
 1949 01c4 0A       		.uleb128 0xa
 1950 01c5 CF020000 		.4byte	.LASF37
 1951 01c9 01       		.byte	0x1
 1952 01ca 70       		.byte	0x70
 1953 01cb 00000000 		.4byte	.LFB65
 1954 01cf 18000000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 44


 1955 01d3 01       		.uleb128 0x1
 1956 01d4 9C       		.byte	0x9c
 1957 01d5 0B       		.uleb128 0xb
 1958 01d6 62060000 		.4byte	.LASF53
 1959 01da 01       		.byte	0x1
 1960 01db 74       		.byte	0x74
 1961 01dc 68000000 		.4byte	0x68
 1962 01e0 00000000 		.4byte	.LFB66
 1963 01e4 88080000 		.4byte	.LFE66-.LFB66
 1964 01e8 01       		.uleb128 0x1
 1965 01e9 9C       		.byte	0x9c
 1966 01ea CE030000 		.4byte	0x3ce
 1967 01ee 0C       		.uleb128 0xc
 1968 01ef 11010000 		.4byte	.LASF38
 1969 01f3 01       		.byte	0x1
 1970 01f4 91       		.byte	0x91
 1971 01f5 CE030000 		.4byte	0x3ce
 1972 01f9 03       		.uleb128 0x3
 1973 01fa 91       		.byte	0x91
 1974 01fb C877     		.sleb128 -1080
 1975 01fd 0C       		.uleb128 0xc
 1976 01fe 19040000 		.4byte	.LASF39
 1977 0202 01       		.byte	0x1
 1978 0203 92       		.byte	0x92
 1979 0204 E5030000 		.4byte	0x3e5
 1980 0208 03       		.uleb128 0x3
 1981 0209 91       		.byte	0x91
 1982 020a D473     		.sleb128 -1580
 1983 020c 0C       		.uleb128 0xc
 1984 020d 65040000 		.4byte	.LASF40
 1985 0211 01       		.byte	0x1
 1986 0212 93       		.byte	0x93
 1987 0213 E5030000 		.4byte	0x3e5
 1988 0217 03       		.uleb128 0x3
 1989 0218 91       		.byte	0x91
 1990 0219 E06F     		.sleb128 -2080
 1991 021b 0C       		.uleb128 0xc
 1992 021c EE010000 		.4byte	.LASF21
 1993 0220 01       		.byte	0x1
 1994 0221 A0       		.byte	0xa0
 1995 0222 68000000 		.4byte	0x68
 1996 0226 02       		.uleb128 0x2
 1997 0227 91       		.byte	0x91
 1998 0228 68       		.sleb128 -24
 1999 0229 0C       		.uleb128 0xc
 2000 022a 52030000 		.4byte	.LASF41
 2001 022e 01       		.byte	0x1
 2002 022f A7       		.byte	0xa7
 2003 0230 F6030000 		.4byte	0x3f6
 2004 0234 03       		.uleb128 0x3
 2005 0235 91       		.byte	0x91
 2006 0236 D46F     		.sleb128 -2092
 2007 0238 0D       		.uleb128 0xd
 2008 0239 70000000 		.4byte	.LBB2
 2009 023d 52000000 		.4byte	.LBE2-.LBB2
 2010 0241 6B020000 		.4byte	0x26b
 2011 0245 0E       		.uleb128 0xe
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 45


 2012 0246 6900     		.ascii	"i\000"
 2013 0248 01       		.byte	0x1
 2014 0249 9A       		.byte	0x9a
 2015 024a 68000000 		.4byte	0x68
 2016 024e 02       		.uleb128 0x2
 2017 024f 91       		.byte	0x91
 2018 0250 6C       		.sleb128 -20
 2019 0251 0F       		.uleb128 0xf
 2020 0252 78000000 		.4byte	.LBB3
 2021 0256 36000000 		.4byte	.LBE3-.LBB3
 2022 025a 0C       		.uleb128 0xc
 2023 025b 4B010000 		.4byte	.LASF42
 2024 025f 01       		.byte	0x1
 2025 0260 9B       		.byte	0x9b
 2026 0261 F6030000 		.4byte	0x3f6
 2027 0265 03       		.uleb128 0x3
 2028 0266 91       		.byte	0x91
 2029 0267 C86F     		.sleb128 -2104
 2030 0269 00       		.byte	0
 2031 026a 00       		.byte	0
 2032 026b 0D       		.uleb128 0xd
 2033 026c 0A010000 		.4byte	.LBB4
 2034 0270 3E000000 		.4byte	.LBE4-.LBB4
 2035 0274 9E020000 		.4byte	0x29e
 2036 0278 0E       		.uleb128 0xe
 2037 0279 6900     		.ascii	"i\000"
 2038 027b 01       		.byte	0x1
 2039 027c AD       		.byte	0xad
 2040 027d 68000000 		.4byte	0x68
 2041 0281 02       		.uleb128 0x2
 2042 0282 91       		.byte	0x91
 2043 0283 64       		.sleb128 -28
 2044 0284 0F       		.uleb128 0xf
 2045 0285 12010000 		.4byte	.LBB5
 2046 0289 22000000 		.4byte	.LBE5-.LBB5
 2047 028d 0C       		.uleb128 0xc
 2048 028e 8F040000 		.4byte	.LASF43
 2049 0292 01       		.byte	0x1
 2050 0293 AE       		.byte	0xae
 2051 0294 F6030000 		.4byte	0x3f6
 2052 0298 03       		.uleb128 0x3
 2053 0299 91       		.byte	0x91
 2054 029a BC6F     		.sleb128 -2116
 2055 029c 00       		.byte	0
 2056 029d 00       		.byte	0
 2057 029e 0D       		.uleb128 0xd
 2058 029f 4E010000 		.4byte	.LBB6
 2059 02a3 40000000 		.4byte	.LBE6-.LBB6
 2060 02a7 D1020000 		.4byte	0x2d1
 2061 02ab 0E       		.uleb128 0xe
 2062 02ac 6900     		.ascii	"i\000"
 2063 02ae 01       		.byte	0x1
 2064 02af B5       		.byte	0xb5
 2065 02b0 68000000 		.4byte	0x68
 2066 02b4 02       		.uleb128 0x2
 2067 02b5 91       		.byte	0x91
 2068 02b6 60       		.sleb128 -32
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 46


 2069 02b7 0F       		.uleb128 0xf
 2070 02b8 56010000 		.4byte	.LBB7
 2071 02bc 24000000 		.4byte	.LBE7-.LBB7
 2072 02c0 0C       		.uleb128 0xc
 2073 02c1 9A030000 		.4byte	.LASF44
 2074 02c5 01       		.byte	0x1
 2075 02c6 B6       		.byte	0xb6
 2076 02c7 F6030000 		.4byte	0x3f6
 2077 02cb 03       		.uleb128 0x3
 2078 02cc 91       		.byte	0x91
 2079 02cd B06F     		.sleb128 -2128
 2080 02cf 00       		.byte	0
 2081 02d0 00       		.byte	0
 2082 02d1 0D       		.uleb128 0xd
 2083 02d2 C6010000 		.4byte	.LBB8
 2084 02d6 98000000 		.4byte	.LBE8-.LBB8
 2085 02da ED020000 		.4byte	0x2ed
 2086 02de 0C       		.uleb128 0xc
 2087 02df 40000000 		.4byte	.LASF45
 2088 02e3 01       		.byte	0x1
 2089 02e4 CE       		.byte	0xce
 2090 02e5 68000000 		.4byte	0x68
 2091 02e9 02       		.uleb128 0x2
 2092 02ea 91       		.byte	0x91
 2093 02eb 40       		.sleb128 -64
 2094 02ec 00       		.byte	0
 2095 02ed 0F       		.uleb128 0xf
 2096 02ee 7A030000 		.4byte	.LBB9
 2097 02f2 F4040000 		.4byte	.LBE9-.LBB9
 2098 02f6 0C       		.uleb128 0xc
 2099 02f7 C8050000 		.4byte	.LASF46
 2100 02fb 01       		.byte	0x1
 2101 02fc F1       		.byte	0xf1
 2102 02fd 68000000 		.4byte	0x68
 2103 0301 02       		.uleb128 0x2
 2104 0302 91       		.byte	0x91
 2105 0303 5C       		.sleb128 -36
 2106 0304 0C       		.uleb128 0xc
 2107 0305 27010000 		.4byte	.LASF47
 2108 0309 01       		.byte	0x1
 2109 030a F2       		.byte	0xf2
 2110 030b 68000000 		.4byte	0x68
 2111 030f 02       		.uleb128 0x2
 2112 0310 91       		.byte	0x91
 2113 0311 58       		.sleb128 -40
 2114 0312 0C       		.uleb128 0xc
 2115 0313 7A060000 		.4byte	.LASF48
 2116 0317 01       		.byte	0x1
 2117 0318 F3       		.byte	0xf3
 2118 0319 68000000 		.4byte	0x68
 2119 031d 02       		.uleb128 0x2
 2120 031e 91       		.byte	0x91
 2121 031f 54       		.sleb128 -44
 2122 0320 0C       		.uleb128 0xc
 2123 0321 00000000 		.4byte	.LASF49
 2124 0325 01       		.byte	0x1
 2125 0326 F4       		.byte	0xf4
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 47


 2126 0327 68000000 		.4byte	0x68
 2127 032b 02       		.uleb128 0x2
 2128 032c 91       		.byte	0x91
 2129 032d 50       		.sleb128 -48
 2130 032e 0C       		.uleb128 0xc
 2131 032f F4030000 		.4byte	.LASF50
 2132 0333 01       		.byte	0x1
 2133 0334 F5       		.byte	0xf5
 2134 0335 68000000 		.4byte	0x68
 2135 0339 02       		.uleb128 0x2
 2136 033a 91       		.byte	0x91
 2137 033b 4C       		.sleb128 -52
 2138 033c 0C       		.uleb128 0xc
 2139 033d 87050000 		.4byte	.LASF51
 2140 0341 01       		.byte	0x1
 2141 0342 F6       		.byte	0xf6
 2142 0343 68000000 		.4byte	0x68
 2143 0347 02       		.uleb128 0x2
 2144 0348 91       		.byte	0x91
 2145 0349 48       		.sleb128 -56
 2146 034a 0D       		.uleb128 0xd
 2147 034b AA030000 		.4byte	.LBB10
 2148 034f C4000000 		.4byte	.LBE10-.LBB10
 2149 0353 64030000 		.4byte	0x364
 2150 0357 0E       		.uleb128 0xe
 2151 0358 6900     		.ascii	"i\000"
 2152 035a 01       		.byte	0x1
 2153 035b F7       		.byte	0xf7
 2154 035c 68000000 		.4byte	0x68
 2155 0360 02       		.uleb128 0x2
 2156 0361 91       		.byte	0x91
 2157 0362 44       		.sleb128 -60
 2158 0363 00       		.byte	0
 2159 0364 10       		.uleb128 0x10
 2160 0365 00000000 		.4byte	.Ldebug_ranges0+0
 2161 0369 7E030000 		.4byte	0x37e
 2162 036d 11       		.uleb128 0x11
 2163 036e 15020000 		.4byte	.LASF52
 2164 0372 01       		.byte	0x1
 2165 0373 6B01     		.2byte	0x16b
 2166 0375 68000000 		.4byte	0x68
 2167 0379 03       		.uleb128 0x3
 2168 037a 91       		.byte	0x91
 2169 037b BC7F     		.sleb128 -68
 2170 037d 00       		.byte	0
 2171 037e 10       		.uleb128 0x10
 2172 037f 18000000 		.4byte	.Ldebug_ranges0+0x18
 2173 0383 98030000 		.4byte	0x398
 2174 0387 11       		.uleb128 0x11
 2175 0388 15020000 		.4byte	.LASF52
 2176 038c 01       		.byte	0x1
 2177 038d 7501     		.2byte	0x175
 2178 038f 68000000 		.4byte	0x68
 2179 0393 03       		.uleb128 0x3
 2180 0394 91       		.byte	0x91
 2181 0395 B87F     		.sleb128 -72
 2182 0397 00       		.byte	0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 48


 2183 0398 10       		.uleb128 0x10
 2184 0399 30000000 		.4byte	.Ldebug_ranges0+0x30
 2185 039d B2030000 		.4byte	0x3b2
 2186 03a1 11       		.uleb128 0x11
 2187 03a2 15020000 		.4byte	.LASF52
 2188 03a6 01       		.byte	0x1
 2189 03a7 8601     		.2byte	0x186
 2190 03a9 68000000 		.4byte	0x68
 2191 03ad 03       		.uleb128 0x3
 2192 03ae 91       		.byte	0x91
 2193 03af B47F     		.sleb128 -76
 2194 03b1 00       		.byte	0
 2195 03b2 0F       		.uleb128 0xf
 2196 03b3 2C080000 		.4byte	.LBB17
 2197 03b7 42000000 		.4byte	.LBE17-.LBB17
 2198 03bb 11       		.uleb128 0x11
 2199 03bc 15020000 		.4byte	.LASF52
 2200 03c0 01       		.byte	0x1
 2201 03c1 A001     		.2byte	0x1a0
 2202 03c3 68000000 		.4byte	0x68
 2203 03c7 03       		.uleb128 0x3
 2204 03c8 91       		.byte	0x91
 2205 03c9 B07F     		.sleb128 -80
 2206 03cb 00       		.byte	0
 2207 03cc 00       		.byte	0
 2208 03cd 00       		.byte	0
 2209 03ce 12       		.uleb128 0x12
 2210 03cf 2C000000 		.4byte	0x2c
 2211 03d3 E5030000 		.4byte	0x3e5
 2212 03d7 13       		.uleb128 0x13
 2213 03d8 7D000000 		.4byte	0x7d
 2214 03dc F301     		.2byte	0x1f3
 2215 03de 14       		.uleb128 0x14
 2216 03df 7D000000 		.4byte	0x7d
 2217 03e3 01       		.byte	0x1
 2218 03e4 00       		.byte	0
 2219 03e5 12       		.uleb128 0x12
 2220 03e6 2C000000 		.4byte	0x2c
 2221 03ea F6030000 		.4byte	0x3f6
 2222 03ee 13       		.uleb128 0x13
 2223 03ef 7D000000 		.4byte	0x7d
 2224 03f3 F301     		.2byte	0x1f3
 2225 03f5 00       		.byte	0
 2226 03f6 12       		.uleb128 0x12
 2227 03f7 8A000000 		.4byte	0x8a
 2228 03fb 06040000 		.4byte	0x406
 2229 03ff 14       		.uleb128 0x14
 2230 0400 7D000000 		.4byte	0x7d
 2231 0404 09       		.byte	0x9
 2232 0405 00       		.byte	0
 2233 0406 15       		.uleb128 0x15
 2234 0407 84010000 		.4byte	.LASF54
 2235 040b 01       		.byte	0x1
 2236 040c B101     		.2byte	0x1b1
 2237 040e 00000000 		.4byte	.LFB67
 2238 0412 3E000000 		.4byte	.LFE67-.LFB67
 2239 0416 01       		.uleb128 0x1
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 49


 2240 0417 9C       		.byte	0x9c
 2241 0418 2A040000 		.4byte	0x42a
 2242 041c 16       		.uleb128 0x16
 2243 041d 7300     		.ascii	"s\000"
 2244 041f 01       		.byte	0x1
 2245 0420 B101     		.2byte	0x1b1
 2246 0422 84000000 		.4byte	0x84
 2247 0426 02       		.uleb128 0x2
 2248 0427 91       		.byte	0x91
 2249 0428 74       		.sleb128 -12
 2250 0429 00       		.byte	0
 2251 042a 15       		.uleb128 0x15
 2252 042b 09060000 		.4byte	.LASF55
 2253 042f 01       		.byte	0x1
 2254 0430 BE01     		.2byte	0x1be
 2255 0432 00000000 		.4byte	.LFB68
 2256 0436 26000000 		.4byte	.LFE68-.LFB68
 2257 043a 01       		.uleb128 0x1
 2258 043b 9C       		.byte	0x9c
 2259 043c 4E040000 		.4byte	0x44e
 2260 0440 16       		.uleb128 0x16
 2261 0441 6300     		.ascii	"c\000"
 2262 0443 01       		.byte	0x1
 2263 0444 BE01     		.2byte	0x1be
 2264 0446 8A000000 		.4byte	0x8a
 2265 044a 02       		.uleb128 0x2
 2266 044b 91       		.byte	0x91
 2267 044c 77       		.sleb128 -9
 2268 044d 00       		.byte	0
 2269 044e 17       		.uleb128 0x17
 2270 044f 2E040000 		.4byte	.LASF56
 2271 0453 06       		.byte	0x6
 2272 0454 1207     		.2byte	0x712
 2273 0456 5A040000 		.4byte	0x45a
 2274 045a 18       		.uleb128 0x18
 2275 045b 91000000 		.4byte	0x91
 2276 045f 19       		.uleb128 0x19
 2277 0460 747300   		.ascii	"ts\000"
 2278 0463 05       		.byte	0x5
 2279 0464 10       		.byte	0x10
 2280 0465 9C000000 		.4byte	0x9c
 2281 0469 05       		.uleb128 0x5
 2282 046a 03       		.byte	0x3
 2283 046b 00000000 		.4byte	ts
 2284 046f 1A       		.uleb128 0x1a
 2285 0470 B1050000 		.4byte	.LASF57
 2286 0474 05       		.byte	0x5
 2287 0475 11       		.byte	0x11
 2288 0476 A8000000 		.4byte	0xa8
 2289 047a 05       		.uleb128 0x5
 2290 047b 03       		.byte	0x3
 2291 047c 00000000 		.4byte	ts_enc
 2292 0480 1A       		.uleb128 0x1a
 2293 0481 3B040000 		.4byte	.LASF58
 2294 0485 05       		.byte	0x5
 2295 0486 12       		.byte	0x12
 2296 0487 A8000000 		.4byte	0xa8
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 50


 2297 048b 05       		.uleb128 0x5
 2298 048c 03       		.byte	0x3
 2299 048d 00000000 		.4byte	ts_update
 2300 0491 1A       		.uleb128 0x1a
 2301 0492 A6030000 		.4byte	.LASF59
 2302 0496 05       		.byte	0x5
 2303 0497 13       		.byte	0x13
 2304 0498 A8000000 		.4byte	0xa8
 2305 049c 05       		.uleb128 0x5
 2306 049d 03       		.byte	0x3
 2307 049e 00000000 		.4byte	ts_speed
 2308 04a2 1A       		.uleb128 0x1a
 2309 04a3 C4020000 		.4byte	.LASF60
 2310 04a7 05       		.byte	0x5
 2311 04a8 14       		.byte	0x14
 2312 04a9 A8000000 		.4byte	0xa8
 2313 04ad 05       		.uleb128 0x5
 2314 04ae 03       		.byte	0x3
 2315 04af 00000000 		.4byte	ts_display
 2316 04b3 1A       		.uleb128 0x1a
 2317 04b4 58020000 		.4byte	.LASF61
 2318 04b8 05       		.byte	0x5
 2319 04b9 16       		.byte	0x16
 2320 04ba 9C000000 		.4byte	0x9c
 2321 04be 05       		.uleb128 0x5
 2322 04bf 03       		.byte	0x3
 2323 04c0 00000000 		.4byte	flag_ts_enc
 2324 04c4 1A       		.uleb128 0x1a
 2325 04c5 49020000 		.4byte	.LASF62
 2326 04c9 05       		.byte	0x5
 2327 04ca 17       		.byte	0x17
 2328 04cb 9C000000 		.4byte	0x9c
 2329 04cf 05       		.uleb128 0x5
 2330 04d0 03       		.byte	0x3
 2331 04d1 00000000 		.4byte	flag_ts_update
 2332 04d5 1A       		.uleb128 0x1a
 2333 04d6 D7030000 		.4byte	.LASF63
 2334 04da 05       		.byte	0x5
 2335 04db 18       		.byte	0x18
 2336 04dc 9C000000 		.4byte	0x9c
 2337 04e0 05       		.uleb128 0x5
 2338 04e1 03       		.byte	0x3
 2339 04e2 00000000 		.4byte	flag_ts_speed
 2340 04e6 1A       		.uleb128 0x1a
 2341 04e7 B8050000 		.4byte	.LASF64
 2342 04eb 05       		.byte	0x5
 2343 04ec 19       		.byte	0x19
 2344 04ed 9C000000 		.4byte	0x9c
 2345 04f1 05       		.uleb128 0x5
 2346 04f2 03       		.byte	0x3
 2347 04f3 00000000 		.4byte	flag_ts_display
 2348 04f7 1A       		.uleb128 0x1a
 2349 04f8 07040000 		.4byte	.LASF65
 2350 04fc 05       		.byte	0x5
 2351 04fd 1C       		.byte	0x1c
 2352 04fe 9C000000 		.4byte	0x9c
 2353 0502 05       		.uleb128 0x5
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 51


 2354 0503 03       		.byte	0x3
 2355 0504 00000000 		.4byte	flag_rx
 2356 0508 1A       		.uleb128 0x1a
 2357 0509 D5020000 		.4byte	.LASF66
 2358 050d 05       		.byte	0x5
 2359 050e 1D       		.byte	0x1d
 2360 050f 9C000000 		.4byte	0x9c
 2361 0513 05       		.uleb128 0x5
 2362 0514 03       		.byte	0x3
 2363 0515 00000000 		.4byte	flag_packet
 2364 0519 1A       		.uleb128 0x1a
 2365 051a B6060000 		.4byte	.LASF67
 2366 051e 05       		.byte	0x5
 2367 051f 1E       		.byte	0x1e
 2368 0520 9C000000 		.4byte	0x9c
 2369 0524 05       		.uleb128 0x5
 2370 0525 03       		.byte	0x3
 2371 0526 00000000 		.4byte	flag_KB_string
 2372 052a 1A       		.uleb128 0x1a
 2373 052b E5030000 		.4byte	.LASF68
 2374 052f 05       		.byte	0x5
 2375 0530 20       		.byte	0x20
 2376 0531 9C000000 		.4byte	0x9c
 2377 0535 05       		.uleb128 0x5
 2378 0536 03       		.byte	0x3
 2379 0537 00000000 		.4byte	dataready_flag
 2380 053b 1A       		.uleb128 0x1a
 2381 053c 68010000 		.4byte	.LASF69
 2382 0540 05       		.byte	0x5
 2383 0541 22       		.byte	0x22
 2384 0542 9C000000 		.4byte	0x9c
 2385 0546 05       		.uleb128 0x5
 2386 0547 03       		.byte	0x3
 2387 0548 00000000 		.4byte	flag_rf_transmission_active
 2388 054c 12       		.uleb128 0x12
 2389 054d 8A000000 		.4byte	0x8a
 2390 0551 5C050000 		.4byte	0x55c
 2391 0555 14       		.uleb128 0x14
 2392 0556 7D000000 		.4byte	0x7d
 2393 055a 3F       		.byte	0x3f
 2394 055b 00       		.byte	0
 2395 055c 1A       		.uleb128 0x1a
 2396 055d E2050000 		.4byte	.LASF70
 2397 0561 05       		.byte	0x5
 2398 0562 25       		.byte	0x25
 2399 0563 4C050000 		.4byte	0x54c
 2400 0567 05       		.uleb128 0x5
 2401 0568 03       		.byte	0x3
 2402 0569 00000000 		.4byte	displaystring
 2403 056d 1A       		.uleb128 0x1a
 2404 056e 27050000 		.4byte	.LASF71
 2405 0572 05       		.byte	0x5
 2406 0573 26       		.byte	0x26
 2407 0574 4C050000 		.4byte	0x54c
 2408 0578 05       		.uleb128 0x5
 2409 0579 03       		.byte	0x3
 2410 057a 00000000 		.4byte	line
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 52


 2411 057e 1A       		.uleb128 0x1a
 2412 057f 09050000 		.4byte	.LASF72
 2413 0583 05       		.byte	0x5
 2414 0584 26       		.byte	0x26
 2415 0585 4C050000 		.4byte	0x54c
 2416 0589 05       		.uleb128 0x5
 2417 058a 03       		.byte	0x3
 2418 058b 00000000 		.4byte	entry
 2419 058f 12       		.uleb128 0x12
 2420 0590 9C000000 		.4byte	0x9c
 2421 0594 9F050000 		.4byte	0x59f
 2422 0598 14       		.uleb128 0x14
 2423 0599 7D000000 		.4byte	0x7d
 2424 059d 3F       		.byte	0x3f
 2425 059e 00       		.byte	0
 2426 059f 1A       		.uleb128 0x1a
 2427 05a0 C9010000 		.4byte	.LASF73
 2428 05a4 05       		.byte	0x5
 2429 05a5 27       		.byte	0x27
 2430 05a6 8F050000 		.4byte	0x58f
 2431 05aa 05       		.uleb128 0x5
 2432 05ab 03       		.byte	0x3
 2433 05ac 00000000 		.4byte	usbBuffer
 2434 05b0 1A       		.uleb128 0x1a
 2435 05b1 76000000 		.4byte	.LASF74
 2436 05b5 05       		.byte	0x5
 2437 05b6 3C       		.byte	0x3c
 2438 05b7 DA000000 		.4byte	0xda
 2439 05bb 05       		.uleb128 0x5
 2440 05bc 03       		.byte	0x3
 2441 05bd 00000000 		.4byte	system_state
 2442 05c1 1A       		.uleb128 0x1a
 2443 05c2 55060000 		.4byte	.LASF75
 2444 05c6 01       		.byte	0x1
 2445 05c7 29       		.byte	0x29
 2446 05c8 CC000000 		.4byte	0xcc
 2447 05cc 05       		.uleb128 0x5
 2448 05cd 03       		.byte	0x3
 2449 05ce 00000000 		.4byte	TARGET_SPEED
 2450 05d2 1A       		.uleb128 0x1a
 2451 05d3 0F050000 		.4byte	.LASF76
 2452 05d7 01       		.byte	0x1
 2453 05d8 2A       		.byte	0x2a
 2454 05d9 68000000 		.4byte	0x68
 2455 05dd 05       		.uleb128 0x5
 2456 05de 03       		.byte	0x3
 2457 05df 00000000 		.4byte	restoring
 2458 05e3 1A       		.uleb128 0x1a
 2459 05e4 B2010000 		.4byte	.LASF77
 2460 05e8 01       		.byte	0x1
 2461 05e9 2B       		.byte	0x2b
 2462 05ea 68000000 		.4byte	0x68
 2463 05ee 05       		.uleb128 0x5
 2464 05ef 03       		.byte	0x3
 2465 05f0 00000000 		.4byte	turningDirection
 2466 05f4 1A       		.uleb128 0x1a
 2467 05f5 E6020000 		.4byte	.LASF78
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 53


 2468 05f9 01       		.byte	0x1
 2469 05fa 2C       		.byte	0x2c
 2470 05fb 68000000 		.4byte	0x68
 2471 05ff 05       		.uleb128 0x5
 2472 0600 03       		.byte	0x3
 2473 0601 00000000 		.4byte	turningCount
 2474 0605 1A       		.uleb128 0x1a
 2475 0606 45040000 		.4byte	.LASF79
 2476 060a 01       		.byte	0x1
 2477 060b 2D       		.byte	0x2d
 2478 060c 16060000 		.4byte	0x616
 2479 0610 05       		.uleb128 0x5
 2480 0611 03       		.byte	0x3
 2481 0612 00000000 		.4byte	shouldUpdate
 2482 0616 18       		.uleb128 0x18
 2483 0617 68000000 		.4byte	0x68
 2484 061b 1A       		.uleb128 0x1a
 2485 061c 76030000 		.4byte	.LASF80
 2486 0620 01       		.byte	0x1
 2487 0621 2F       		.byte	0x2f
 2488 0622 16060000 		.4byte	0x616
 2489 0626 05       		.uleb128 0x5
 2490 0627 03       		.byte	0x3
 2491 0628 00000000 		.4byte	dotsTravelled
 2492 062c 1A       		.uleb128 0x1a
 2493 062d 9F040000 		.4byte	.LASF81
 2494 0631 01       		.byte	0x1
 2495 0632 36       		.byte	0x36
 2496 0633 16060000 		.4byte	0x616
 2497 0637 05       		.uleb128 0x5
 2498 0638 03       		.byte	0x3
 2499 0639 00000000 		.4byte	flag
 2500 063d 12       		.uleb128 0x12
 2501 063e 16060000 		.4byte	0x616
 2502 0642 4E060000 		.4byte	0x64e
 2503 0646 13       		.uleb128 0x13
 2504 0647 7D000000 		.4byte	0x7d
 2505 064b E703     		.2byte	0x3e7
 2506 064d 00       		.byte	0
 2507 064e 1A       		.uleb128 0x1a
 2508 064f 32020000 		.4byte	.LASF82
 2509 0653 01       		.byte	0x1
 2510 0654 37       		.byte	0x37
 2511 0655 5F060000 		.4byte	0x65f
 2512 0659 05       		.uleb128 0x5
 2513 065a 03       		.byte	0x3
 2514 065b 00000000 		.4byte	valuesLeftIntersection
 2515 065f 18       		.uleb128 0x18
 2516 0660 3D060000 		.4byte	0x63d
 2517 0664 1A       		.uleb128 0x1a
 2518 0665 FA050000 		.4byte	.LASF83
 2519 0669 01       		.byte	0x1
 2520 066a 38       		.byte	0x38
 2521 066b 75060000 		.4byte	0x675
 2522 066f 05       		.uleb128 0x5
 2523 0670 03       		.byte	0x3
 2524 0671 00000000 		.4byte	valuesLeftLine
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 54


 2525 0675 18       		.uleb128 0x18
 2526 0676 3D060000 		.4byte	0x63d
 2527 067a 1A       		.uleb128 0x1a
 2528 067b 1D000000 		.4byte	.LASF84
 2529 067f 01       		.byte	0x1
 2530 0680 39       		.byte	0x39
 2531 0681 8B060000 		.4byte	0x68b
 2532 0685 05       		.uleb128 0x5
 2533 0686 03       		.byte	0x3
 2534 0687 00000000 		.4byte	valuesMiddleLine
 2535 068b 18       		.uleb128 0x18
 2536 068c 3D060000 		.4byte	0x63d
 2537 0690 1A       		.uleb128 0x1a
 2538 0691 A3060000 		.4byte	.LASF85
 2539 0695 01       		.byte	0x1
 2540 0696 3A       		.byte	0x3a
 2541 0697 A1060000 		.4byte	0x6a1
 2542 069b 05       		.uleb128 0x5
 2543 069c 03       		.byte	0x3
 2544 069d 00000000 		.4byte	valuesTurnComplete
 2545 06a1 18       		.uleb128 0x18
 2546 06a2 3D060000 		.4byte	0x63d
 2547 06a6 1A       		.uleb128 0x1a
 2548 06a7 45060000 		.4byte	.LASF86
 2549 06ab 01       		.byte	0x1
 2550 06ac 3B       		.byte	0x3b
 2551 06ad B7060000 		.4byte	0x6b7
 2552 06b1 05       		.uleb128 0x5
 2553 06b2 03       		.byte	0x3
 2554 06b3 00000000 		.4byte	valuesRightLine
 2555 06b7 18       		.uleb128 0x18
 2556 06b8 3D060000 		.4byte	0x63d
 2557 06bc 1A       		.uleb128 0x1a
 2558 06bd AC020000 		.4byte	.LASF87
 2559 06c1 01       		.byte	0x1
 2560 06c2 3C       		.byte	0x3c
 2561 06c3 CD060000 		.4byte	0x6cd
 2562 06c7 05       		.uleb128 0x5
 2563 06c8 03       		.byte	0x3
 2564 06c9 00000000 		.4byte	valuesRightIntersection
 2565 06cd 18       		.uleb128 0x18
 2566 06ce 3D060000 		.4byte	0x63d
 2567 06d2 1A       		.uleb128 0x1a
 2568 06d3 E8010000 		.4byte	.LASF88
 2569 06d7 01       		.byte	0x1
 2570 06d8 3D       		.byte	0x3d
 2571 06d9 16060000 		.4byte	0x616
 2572 06dd 05       		.uleb128 0x5
 2573 06de 03       		.byte	0x3
 2574 06df 00000000 		.4byte	count
 2575 06e3 1A       		.uleb128 0x1a
 2576 06e4 5A000000 		.4byte	.LASF89
 2577 06e8 01       		.byte	0x1
 2578 06e9 3E       		.byte	0x3e
 2579 06ea 16060000 		.4byte	0x616
 2580 06ee 05       		.uleb128 0x5
 2581 06ef 03       		.byte	0x3
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 55


 2582 06f0 00000000 		.4byte	turningLeft
 2583 06f4 1A       		.uleb128 0x1a
 2584 06f5 BE040000 		.4byte	.LASF90
 2585 06f9 01       		.byte	0x1
 2586 06fa 3F       		.byte	0x3f
 2587 06fb 16060000 		.4byte	0x616
 2588 06ff 05       		.uleb128 0x5
 2589 0700 03       		.byte	0x3
 2590 0701 00000000 		.4byte	turningRight
 2591 0705 1A       		.uleb128 0x1a
 2592 0706 73020000 		.4byte	.LASF91
 2593 070a 01       		.byte	0x1
 2594 070b 40       		.byte	0x40
 2595 070c 16060000 		.4byte	0x616
 2596 0710 05       		.uleb128 0x5
 2597 0711 03       		.byte	0x3
 2598 0712 00000000 		.4byte	lastVeerDirection
 2599 0716 1A       		.uleb128 0x1a
 2600 0717 FC020000 		.4byte	.LASF92
 2601 071b 01       		.byte	0x1
 2602 071c 42       		.byte	0x42
 2603 071d 16060000 		.4byte	0x616
 2604 0721 05       		.uleb128 0x5
 2605 0722 03       		.byte	0x3
 2606 0723 00000000 		.4byte	motorFlag
 2607 0727 1A       		.uleb128 0x1a
 2608 0728 95030000 		.4byte	.LASF93
 2609 072c 01       		.byte	0x1
 2610 072d 43       		.byte	0x43
 2611 072e 16060000 		.4byte	0x616
 2612 0732 05       		.uleb128 0x5
 2613 0733 03       		.byte	0x3
 2614 0734 00000000 		.4byte	step
 2615 0738 19       		.uleb128 0x19
 2616 0739 76314C00 		.ascii	"v1L\000"
 2617 073d 01       		.byte	0x1
 2618 073e 55       		.byte	0x55
 2619 073f 16060000 		.4byte	0x616
 2620 0743 05       		.uleb128 0x5
 2621 0744 03       		.byte	0x3
 2622 0745 00000000 		.4byte	v1L
 2623 0749 19       		.uleb128 0x19
 2624 074a 76324C00 		.ascii	"v2L\000"
 2625 074e 01       		.byte	0x1
 2626 074f 56       		.byte	0x56
 2627 0750 16060000 		.4byte	0x616
 2628 0754 05       		.uleb128 0x5
 2629 0755 03       		.byte	0x3
 2630 0756 00000000 		.4byte	v2L
 2631 075a 19       		.uleb128 0x19
 2632 075b 76315200 		.ascii	"v1R\000"
 2633 075f 01       		.byte	0x1
 2634 0760 57       		.byte	0x57
 2635 0761 16060000 		.4byte	0x616
 2636 0765 05       		.uleb128 0x5
 2637 0766 03       		.byte	0x3
 2638 0767 00000000 		.4byte	v1R
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 56


 2639 076b 19       		.uleb128 0x19
 2640 076c 76325200 		.ascii	"v2R\000"
 2641 0770 01       		.byte	0x1
 2642 0771 58       		.byte	0x58
 2643 0772 16060000 		.4byte	0x616
 2644 0776 05       		.uleb128 0x5
 2645 0777 03       		.byte	0x3
 2646 0778 00000000 		.4byte	v2R
 2647 077c 1A       		.uleb128 0x1a
 2648 077d 85020000 		.4byte	.LASF94
 2649 0781 01       		.byte	0x1
 2650 0782 5B       		.byte	0x5b
 2651 0783 16060000 		.4byte	0x616
 2652 0787 05       		.uleb128 0x5
 2653 0788 03       		.byte	0x3
 2654 0789 00000000 		.4byte	numRotationsL
 2655 078d 1A       		.uleb128 0x1a
 2656 078e 93020000 		.4byte	.LASF95
 2657 0792 01       		.byte	0x1
 2658 0793 5C       		.byte	0x5c
 2659 0794 16060000 		.4byte	0x616
 2660 0798 05       		.uleb128 0x5
 2661 0799 03       		.byte	0x3
 2662 079a 00000000 		.4byte	numRotationsR
 2663 079e 1A       		.uleb128 0x1a
 2664 079f F0050000 		.4byte	.LASF96
 2665 07a3 01       		.byte	0x1
 2666 07a4 4A       		.byte	0x4a
 2667 07a5 16060000 		.4byte	0x616
 2668 07a9 05       		.uleb128 0x5
 2669 07aa 03       		.byte	0x3
 2670 07ab 00000000 		.4byte	turnCount
 2671 07af 1A       		.uleb128 0x1a
 2672 07b0 2E000000 		.4byte	.LASF97
 2673 07b4 01       		.byte	0x1
 2674 07b5 4B       		.byte	0x4b
 2675 07b6 16060000 		.4byte	0x616
 2676 07ba 05       		.uleb128 0x5
 2677 07bb 03       		.byte	0x3
 2678 07bc 00000000 		.4byte	distanceTravelled
 2679 07c0 1A       		.uleb128 0x1a
 2680 07c1 52040000 		.4byte	.LASF98
 2681 07c5 01       		.byte	0x1
 2682 07c6 4C       		.byte	0x4c
 2683 07c7 16060000 		.4byte	0x616
 2684 07cb 05       		.uleb128 0x5
 2685 07cc 03       		.byte	0x3
 2686 07cd 00000000 		.4byte	distancePerSecondL
 2687 07d1 1A       		.uleb128 0x1a
 2688 07d2 6E040000 		.4byte	.LASF99
 2689 07d6 01       		.byte	0x1
 2690 07d7 4D       		.byte	0x4d
 2691 07d8 16060000 		.4byte	0x616
 2692 07dc 05       		.uleb128 0x5
 2693 07dd 03       		.byte	0x3
 2694 07de 00000000 		.4byte	distancePerSecondR
 2695 07e2 1A       		.uleb128 0x1a
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 57


 2696 07e3 D3010000 		.4byte	.LASF100
 2697 07e7 01       		.byte	0x1
 2698 07e8 4E       		.byte	0x4e
 2699 07e9 16060000 		.4byte	0x616
 2700 07ed 05       		.uleb128 0x5
 2701 07ee 03       		.byte	0x3
 2702 07ef 00000000 		.4byte	distancePerSecondAvg
 2703 07f3 1A       		.uleb128 0x1a
 2704 07f4 19010000 		.4byte	.LASF101
 2705 07f8 01       		.byte	0x1
 2706 07f9 4F       		.byte	0x4f
 2707 07fa 16060000 		.4byte	0x616
 2708 07fe 05       		.uleb128 0x5
 2709 07ff 03       		.byte	0x3
 2710 0800 00000000 		.4byte	prevTurnState
 2711 0804 1A       		.uleb128 0x1a
 2712 0805 41010000 		.4byte	.LASF102
 2713 0809 01       		.byte	0x1
 2714 080a 50       		.byte	0x50
 2715 080b 16060000 		.4byte	0x616
 2716 080f 05       		.uleb128 0x5
 2717 0810 03       		.byte	0x3
 2718 0811 00000000 		.4byte	turnState
 2719 0815 1A       		.uleb128 0x1a
 2720 0816 5C030000 		.4byte	.LASF103
 2721 081a 01       		.byte	0x1
 2722 081b 51       		.byte	0x51
 2723 081c 16060000 		.4byte	0x616
 2724 0820 05       		.uleb128 0x5
 2725 0821 03       		.byte	0x3
 2726 0822 00000000 		.4byte	turnEnable
 2727 0826 1A       		.uleb128 0x1a
 2728 0827 F4010000 		.4byte	.LASF104
 2729 082b 01       		.byte	0x1
 2730 082c 52       		.byte	0x52
 2731 082d 16060000 		.4byte	0x616
 2732 0831 05       		.uleb128 0x5
 2733 0832 03       		.byte	0x3
 2734 0833 00000000 		.4byte	turnTimer
 2735 0837 1A       		.uleb128 0x1a
 2736 0838 91010000 		.4byte	.LASF105
 2737 083c 01       		.byte	0x1
 2738 083d 53       		.byte	0x53
 2739 083e 68000000 		.4byte	0x68
 2740 0842 05       		.uleb128 0x5
 2741 0843 03       		.byte	0x3
 2742 0844 00000000 		.4byte	lastAdjustDirection
 2743 0848 1A       		.uleb128 0x1a
 2744 0849 64020000 		.4byte	.LASF106
 2745 084d 01       		.byte	0x1
 2746 084e 59       		.byte	0x59
 2747 084f 16060000 		.4byte	0x616
 2748 0853 05       		.uleb128 0x5
 2749 0854 03       		.byte	0x3
 2750 0855 00000000 		.4byte	startCountingL
 2751 0859 1A       		.uleb128 0x1a
 2752 085a 55010000 		.4byte	.LASF107
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 58


 2753 085e 01       		.byte	0x1
 2754 085f 5A       		.byte	0x5a
 2755 0860 16060000 		.4byte	0x616
 2756 0864 05       		.uleb128 0x5
 2757 0865 03       		.byte	0x3
 2758 0866 00000000 		.4byte	totalNumRotationsL
 2759 086a 1A       		.uleb128 0x1a
 2760 086b 81040000 		.4byte	.LASF108
 2761 086f 01       		.byte	0x1
 2762 0870 5E       		.byte	0x5e
 2763 0871 16060000 		.4byte	0x616
 2764 0875 05       		.uleb128 0x5
 2765 0876 03       		.byte	0x3
 2766 0877 00000000 		.4byte	distanceToOne
 2767 087b 1A       		.uleb128 0x1a
 2768 087c 24020000 		.4byte	.LASF109
 2769 0880 01       		.byte	0x1
 2770 0881 5F       		.byte	0x5f
 2771 0882 16060000 		.4byte	0x616
 2772 0886 05       		.uleb128 0x5
 2773 0887 03       		.byte	0x3
 2774 0888 00000000 		.4byte	distanceToTwo
 2775 088c 1A       		.uleb128 0x1a
 2776 088d F9040000 		.4byte	.LASF110
 2777 0891 01       		.byte	0x1
 2778 0892 60       		.byte	0x60
 2779 0893 16060000 		.4byte	0x616
 2780 0897 05       		.uleb128 0x5
 2781 0898 03       		.byte	0x3
 2782 0899 00000000 		.4byte	distanceToThree
 2783 089d 1A       		.uleb128 0x1a
 2784 089e A2050000 		.4byte	.LASF111
 2785 08a2 01       		.byte	0x1
 2786 08a3 61       		.byte	0x61
 2787 08a4 16060000 		.4byte	0x616
 2788 08a8 05       		.uleb128 0x5
 2789 08a9 03       		.byte	0x3
 2790 08aa 00000000 		.4byte	distanceToFour
 2791 08ae 1A       		.uleb128 0x1a
 2792 08af 67030000 		.4byte	.LASF112
 2793 08b3 01       		.byte	0x1
 2794 08b4 62       		.byte	0x62
 2795 08b5 16060000 		.4byte	0x616
 2796 08b9 05       		.uleb128 0x5
 2797 08ba 03       		.byte	0x3
 2798 08bb 00000000 		.4byte	distanceToFive
 2799 08bf 1A       		.uleb128 0x1a
 2800 08c0 A4040000 		.4byte	.LASF113
 2801 08c4 01       		.byte	0x1
 2802 08c5 64       		.byte	0x64
 2803 08c6 16060000 		.4byte	0x616
 2804 08ca 05       		.uleb128 0x5
 2805 08cb 03       		.byte	0x3
 2806 08cc 00000000 		.4byte	stopCheckingArray
 2807 08d0 19       		.uleb128 0x19
 2808 08d1 6900     		.ascii	"i\000"
 2809 08d3 01       		.byte	0x1
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 59


 2810 08d4 66       		.byte	0x66
 2811 08d5 16060000 		.4byte	0x616
 2812 08d9 05       		.uleb128 0x5
 2813 08da 03       		.byte	0x3
 2814 08db 00000000 		.4byte	i
 2815 08df 1A       		.uleb128 0x1a
 2816 08e0 1F030000 		.4byte	.LASF114
 2817 08e4 01       		.byte	0x1
 2818 08e5 67       		.byte	0x67
 2819 08e6 16060000 		.4byte	0x616
 2820 08ea 05       		.uleb128 0x5
 2821 08eb 03       		.byte	0x3
 2822 08ec 00000000 		.4byte	hitFood
 2823 08f0 1A       		.uleb128 0x1a
 2824 08f1 4A030000 		.4byte	.LASF115
 2825 08f5 01       		.byte	0x1
 2826 08f6 68       		.byte	0x68
 2827 08f7 16060000 		.4byte	0x616
 2828 08fb 05       		.uleb128 0x5
 2829 08fc 03       		.byte	0x3
 2830 08fd 00000000 		.4byte	hitWall
 2831 0901 1A       		.uleb128 0x1a
 2832 0902 27030000 		.4byte	.LASF116
 2833 0906 01       		.byte	0x1
 2834 0907 69       		.byte	0x69
 2835 0908 16060000 		.4byte	0x616
 2836 090c 05       		.uleb128 0x5
 2837 090d 03       		.byte	0x3
 2838 090e 00000000 		.4byte	turnComplete
 2839 0912 1A       		.uleb128 0x1a
 2840 0913 67060000 		.4byte	.LASF117
 2841 0917 01       		.byte	0x1
 2842 0918 6A       		.byte	0x6a
 2843 0919 2C000000 		.4byte	0x2c
 2844 091d 05       		.uleb128 0x5
 2845 091e 03       		.byte	0x3
 2846 091f 00000000 		.4byte	currentInstruction
 2847 0923 00       		.byte	0
 2848              		.section	.debug_abbrev,"",%progbits
 2849              	.Ldebug_abbrev0:
 2850 0000 01       		.uleb128 0x1
 2851 0001 11       		.uleb128 0x11
 2852 0002 01       		.byte	0x1
 2853 0003 25       		.uleb128 0x25
 2854 0004 0E       		.uleb128 0xe
 2855 0005 13       		.uleb128 0x13
 2856 0006 0B       		.uleb128 0xb
 2857 0007 03       		.uleb128 0x3
 2858 0008 0E       		.uleb128 0xe
 2859 0009 1B       		.uleb128 0x1b
 2860 000a 0E       		.uleb128 0xe
 2861 000b 55       		.uleb128 0x55
 2862 000c 17       		.uleb128 0x17
 2863 000d 11       		.uleb128 0x11
 2864 000e 01       		.uleb128 0x1
 2865 000f 10       		.uleb128 0x10
 2866 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 60


 2867 0011 00       		.byte	0
 2868 0012 00       		.byte	0
 2869 0013 02       		.uleb128 0x2
 2870 0014 24       		.uleb128 0x24
 2871 0015 00       		.byte	0
 2872 0016 0B       		.uleb128 0xb
 2873 0017 0B       		.uleb128 0xb
 2874 0018 3E       		.uleb128 0x3e
 2875 0019 0B       		.uleb128 0xb
 2876 001a 03       		.uleb128 0x3
 2877 001b 0E       		.uleb128 0xe
 2878 001c 00       		.byte	0
 2879 001d 00       		.byte	0
 2880 001e 03       		.uleb128 0x3
 2881 001f 16       		.uleb128 0x16
 2882 0020 00       		.byte	0
 2883 0021 03       		.uleb128 0x3
 2884 0022 0E       		.uleb128 0xe
 2885 0023 3A       		.uleb128 0x3a
 2886 0024 0B       		.uleb128 0xb
 2887 0025 3B       		.uleb128 0x3b
 2888 0026 0B       		.uleb128 0xb
 2889 0027 49       		.uleb128 0x49
 2890 0028 13       		.uleb128 0x13
 2891 0029 00       		.byte	0
 2892 002a 00       		.byte	0
 2893 002b 04       		.uleb128 0x4
 2894 002c 24       		.uleb128 0x24
 2895 002d 00       		.byte	0
 2896 002e 0B       		.uleb128 0xb
 2897 002f 0B       		.uleb128 0xb
 2898 0030 3E       		.uleb128 0x3e
 2899 0031 0B       		.uleb128 0xb
 2900 0032 03       		.uleb128 0x3
 2901 0033 08       		.uleb128 0x8
 2902 0034 00       		.byte	0
 2903 0035 00       		.byte	0
 2904 0036 05       		.uleb128 0x5
 2905 0037 0F       		.uleb128 0xf
 2906 0038 00       		.byte	0
 2907 0039 0B       		.uleb128 0xb
 2908 003a 0B       		.uleb128 0xb
 2909 003b 49       		.uleb128 0x49
 2910 003c 13       		.uleb128 0x13
 2911 003d 00       		.byte	0
 2912 003e 00       		.byte	0
 2913 003f 06       		.uleb128 0x6
 2914 0040 16       		.uleb128 0x16
 2915 0041 00       		.byte	0
 2916 0042 03       		.uleb128 0x3
 2917 0043 0E       		.uleb128 0xe
 2918 0044 3A       		.uleb128 0x3a
 2919 0045 0B       		.uleb128 0xb
 2920 0046 3B       		.uleb128 0x3b
 2921 0047 05       		.uleb128 0x5
 2922 0048 49       		.uleb128 0x49
 2923 0049 13       		.uleb128 0x13
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 61


 2924 004a 00       		.byte	0
 2925 004b 00       		.byte	0
 2926 004c 07       		.uleb128 0x7
 2927 004d 13       		.uleb128 0x13
 2928 004e 01       		.byte	0x1
 2929 004f 03       		.uleb128 0x3
 2930 0050 0E       		.uleb128 0xe
 2931 0051 0B       		.uleb128 0xb
 2932 0052 0B       		.uleb128 0xb
 2933 0053 3A       		.uleb128 0x3a
 2934 0054 0B       		.uleb128 0xb
 2935 0055 3B       		.uleb128 0x3b
 2936 0056 0B       		.uleb128 0xb
 2937 0057 01       		.uleb128 0x1
 2938 0058 13       		.uleb128 0x13
 2939 0059 00       		.byte	0
 2940 005a 00       		.byte	0
 2941 005b 08       		.uleb128 0x8
 2942 005c 0D       		.uleb128 0xd
 2943 005d 00       		.byte	0
 2944 005e 03       		.uleb128 0x3
 2945 005f 0E       		.uleb128 0xe
 2946 0060 3A       		.uleb128 0x3a
 2947 0061 0B       		.uleb128 0xb
 2948 0062 3B       		.uleb128 0x3b
 2949 0063 0B       		.uleb128 0xb
 2950 0064 49       		.uleb128 0x49
 2951 0065 13       		.uleb128 0x13
 2952 0066 38       		.uleb128 0x38
 2953 0067 0B       		.uleb128 0xb
 2954 0068 00       		.byte	0
 2955 0069 00       		.byte	0
 2956 006a 09       		.uleb128 0x9
 2957 006b 2E       		.uleb128 0x2e
 2958 006c 00       		.byte	0
 2959 006d 3F       		.uleb128 0x3f
 2960 006e 19       		.uleb128 0x19
 2961 006f 03       		.uleb128 0x3
 2962 0070 08       		.uleb128 0x8
 2963 0071 3A       		.uleb128 0x3a
 2964 0072 0B       		.uleb128 0xb
 2965 0073 3B       		.uleb128 0x3b
 2966 0074 0B       		.uleb128 0xb
 2967 0075 27       		.uleb128 0x27
 2968 0076 19       		.uleb128 0x19
 2969 0077 11       		.uleb128 0x11
 2970 0078 01       		.uleb128 0x1
 2971 0079 12       		.uleb128 0x12
 2972 007a 06       		.uleb128 0x6
 2973 007b 40       		.uleb128 0x40
 2974 007c 18       		.uleb128 0x18
 2975 007d 9742     		.uleb128 0x2117
 2976 007f 19       		.uleb128 0x19
 2977 0080 00       		.byte	0
 2978 0081 00       		.byte	0
 2979 0082 0A       		.uleb128 0xa
 2980 0083 2E       		.uleb128 0x2e
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 62


 2981 0084 00       		.byte	0
 2982 0085 3F       		.uleb128 0x3f
 2983 0086 19       		.uleb128 0x19
 2984 0087 03       		.uleb128 0x3
 2985 0088 0E       		.uleb128 0xe
 2986 0089 3A       		.uleb128 0x3a
 2987 008a 0B       		.uleb128 0xb
 2988 008b 3B       		.uleb128 0x3b
 2989 008c 0B       		.uleb128 0xb
 2990 008d 27       		.uleb128 0x27
 2991 008e 19       		.uleb128 0x19
 2992 008f 11       		.uleb128 0x11
 2993 0090 01       		.uleb128 0x1
 2994 0091 12       		.uleb128 0x12
 2995 0092 06       		.uleb128 0x6
 2996 0093 40       		.uleb128 0x40
 2997 0094 18       		.uleb128 0x18
 2998 0095 9742     		.uleb128 0x2117
 2999 0097 19       		.uleb128 0x19
 3000 0098 00       		.byte	0
 3001 0099 00       		.byte	0
 3002 009a 0B       		.uleb128 0xb
 3003 009b 2E       		.uleb128 0x2e
 3004 009c 01       		.byte	0x1
 3005 009d 3F       		.uleb128 0x3f
 3006 009e 19       		.uleb128 0x19
 3007 009f 03       		.uleb128 0x3
 3008 00a0 0E       		.uleb128 0xe
 3009 00a1 3A       		.uleb128 0x3a
 3010 00a2 0B       		.uleb128 0xb
 3011 00a3 3B       		.uleb128 0x3b
 3012 00a4 0B       		.uleb128 0xb
 3013 00a5 49       		.uleb128 0x49
 3014 00a6 13       		.uleb128 0x13
 3015 00a7 11       		.uleb128 0x11
 3016 00a8 01       		.uleb128 0x1
 3017 00a9 12       		.uleb128 0x12
 3018 00aa 06       		.uleb128 0x6
 3019 00ab 40       		.uleb128 0x40
 3020 00ac 18       		.uleb128 0x18
 3021 00ad 9642     		.uleb128 0x2116
 3022 00af 19       		.uleb128 0x19
 3023 00b0 01       		.uleb128 0x1
 3024 00b1 13       		.uleb128 0x13
 3025 00b2 00       		.byte	0
 3026 00b3 00       		.byte	0
 3027 00b4 0C       		.uleb128 0xc
 3028 00b5 34       		.uleb128 0x34
 3029 00b6 00       		.byte	0
 3030 00b7 03       		.uleb128 0x3
 3031 00b8 0E       		.uleb128 0xe
 3032 00b9 3A       		.uleb128 0x3a
 3033 00ba 0B       		.uleb128 0xb
 3034 00bb 3B       		.uleb128 0x3b
 3035 00bc 0B       		.uleb128 0xb
 3036 00bd 49       		.uleb128 0x49
 3037 00be 13       		.uleb128 0x13
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 63


 3038 00bf 02       		.uleb128 0x2
 3039 00c0 18       		.uleb128 0x18
 3040 00c1 00       		.byte	0
 3041 00c2 00       		.byte	0
 3042 00c3 0D       		.uleb128 0xd
 3043 00c4 0B       		.uleb128 0xb
 3044 00c5 01       		.byte	0x1
 3045 00c6 11       		.uleb128 0x11
 3046 00c7 01       		.uleb128 0x1
 3047 00c8 12       		.uleb128 0x12
 3048 00c9 06       		.uleb128 0x6
 3049 00ca 01       		.uleb128 0x1
 3050 00cb 13       		.uleb128 0x13
 3051 00cc 00       		.byte	0
 3052 00cd 00       		.byte	0
 3053 00ce 0E       		.uleb128 0xe
 3054 00cf 34       		.uleb128 0x34
 3055 00d0 00       		.byte	0
 3056 00d1 03       		.uleb128 0x3
 3057 00d2 08       		.uleb128 0x8
 3058 00d3 3A       		.uleb128 0x3a
 3059 00d4 0B       		.uleb128 0xb
 3060 00d5 3B       		.uleb128 0x3b
 3061 00d6 0B       		.uleb128 0xb
 3062 00d7 49       		.uleb128 0x49
 3063 00d8 13       		.uleb128 0x13
 3064 00d9 02       		.uleb128 0x2
 3065 00da 18       		.uleb128 0x18
 3066 00db 00       		.byte	0
 3067 00dc 00       		.byte	0
 3068 00dd 0F       		.uleb128 0xf
 3069 00de 0B       		.uleb128 0xb
 3070 00df 01       		.byte	0x1
 3071 00e0 11       		.uleb128 0x11
 3072 00e1 01       		.uleb128 0x1
 3073 00e2 12       		.uleb128 0x12
 3074 00e3 06       		.uleb128 0x6
 3075 00e4 00       		.byte	0
 3076 00e5 00       		.byte	0
 3077 00e6 10       		.uleb128 0x10
 3078 00e7 0B       		.uleb128 0xb
 3079 00e8 01       		.byte	0x1
 3080 00e9 55       		.uleb128 0x55
 3081 00ea 17       		.uleb128 0x17
 3082 00eb 01       		.uleb128 0x1
 3083 00ec 13       		.uleb128 0x13
 3084 00ed 00       		.byte	0
 3085 00ee 00       		.byte	0
 3086 00ef 11       		.uleb128 0x11
 3087 00f0 34       		.uleb128 0x34
 3088 00f1 00       		.byte	0
 3089 00f2 03       		.uleb128 0x3
 3090 00f3 0E       		.uleb128 0xe
 3091 00f4 3A       		.uleb128 0x3a
 3092 00f5 0B       		.uleb128 0xb
 3093 00f6 3B       		.uleb128 0x3b
 3094 00f7 05       		.uleb128 0x5
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 64


 3095 00f8 49       		.uleb128 0x49
 3096 00f9 13       		.uleb128 0x13
 3097 00fa 02       		.uleb128 0x2
 3098 00fb 18       		.uleb128 0x18
 3099 00fc 00       		.byte	0
 3100 00fd 00       		.byte	0
 3101 00fe 12       		.uleb128 0x12
 3102 00ff 01       		.uleb128 0x1
 3103 0100 01       		.byte	0x1
 3104 0101 49       		.uleb128 0x49
 3105 0102 13       		.uleb128 0x13
 3106 0103 01       		.uleb128 0x1
 3107 0104 13       		.uleb128 0x13
 3108 0105 00       		.byte	0
 3109 0106 00       		.byte	0
 3110 0107 13       		.uleb128 0x13
 3111 0108 21       		.uleb128 0x21
 3112 0109 00       		.byte	0
 3113 010a 49       		.uleb128 0x49
 3114 010b 13       		.uleb128 0x13
 3115 010c 2F       		.uleb128 0x2f
 3116 010d 05       		.uleb128 0x5
 3117 010e 00       		.byte	0
 3118 010f 00       		.byte	0
 3119 0110 14       		.uleb128 0x14
 3120 0111 21       		.uleb128 0x21
 3121 0112 00       		.byte	0
 3122 0113 49       		.uleb128 0x49
 3123 0114 13       		.uleb128 0x13
 3124 0115 2F       		.uleb128 0x2f
 3125 0116 0B       		.uleb128 0xb
 3126 0117 00       		.byte	0
 3127 0118 00       		.byte	0
 3128 0119 15       		.uleb128 0x15
 3129 011a 2E       		.uleb128 0x2e
 3130 011b 01       		.byte	0x1
 3131 011c 3F       		.uleb128 0x3f
 3132 011d 19       		.uleb128 0x19
 3133 011e 03       		.uleb128 0x3
 3134 011f 0E       		.uleb128 0xe
 3135 0120 3A       		.uleb128 0x3a
 3136 0121 0B       		.uleb128 0xb
 3137 0122 3B       		.uleb128 0x3b
 3138 0123 05       		.uleb128 0x5
 3139 0124 27       		.uleb128 0x27
 3140 0125 19       		.uleb128 0x19
 3141 0126 11       		.uleb128 0x11
 3142 0127 01       		.uleb128 0x1
 3143 0128 12       		.uleb128 0x12
 3144 0129 06       		.uleb128 0x6
 3145 012a 40       		.uleb128 0x40
 3146 012b 18       		.uleb128 0x18
 3147 012c 9642     		.uleb128 0x2116
 3148 012e 19       		.uleb128 0x19
 3149 012f 01       		.uleb128 0x1
 3150 0130 13       		.uleb128 0x13
 3151 0131 00       		.byte	0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 65


 3152 0132 00       		.byte	0
 3153 0133 16       		.uleb128 0x16
 3154 0134 05       		.uleb128 0x5
 3155 0135 00       		.byte	0
 3156 0136 03       		.uleb128 0x3
 3157 0137 08       		.uleb128 0x8
 3158 0138 3A       		.uleb128 0x3a
 3159 0139 0B       		.uleb128 0xb
 3160 013a 3B       		.uleb128 0x3b
 3161 013b 05       		.uleb128 0x5
 3162 013c 49       		.uleb128 0x49
 3163 013d 13       		.uleb128 0x13
 3164 013e 02       		.uleb128 0x2
 3165 013f 18       		.uleb128 0x18
 3166 0140 00       		.byte	0
 3167 0141 00       		.byte	0
 3168 0142 17       		.uleb128 0x17
 3169 0143 34       		.uleb128 0x34
 3170 0144 00       		.byte	0
 3171 0145 03       		.uleb128 0x3
 3172 0146 0E       		.uleb128 0xe
 3173 0147 3A       		.uleb128 0x3a
 3174 0148 0B       		.uleb128 0xb
 3175 0149 3B       		.uleb128 0x3b
 3176 014a 05       		.uleb128 0x5
 3177 014b 49       		.uleb128 0x49
 3178 014c 13       		.uleb128 0x13
 3179 014d 3F       		.uleb128 0x3f
 3180 014e 19       		.uleb128 0x19
 3181 014f 3C       		.uleb128 0x3c
 3182 0150 19       		.uleb128 0x19
 3183 0151 00       		.byte	0
 3184 0152 00       		.byte	0
 3185 0153 18       		.uleb128 0x18
 3186 0154 35       		.uleb128 0x35
 3187 0155 00       		.byte	0
 3188 0156 49       		.uleb128 0x49
 3189 0157 13       		.uleb128 0x13
 3190 0158 00       		.byte	0
 3191 0159 00       		.byte	0
 3192 015a 19       		.uleb128 0x19
 3193 015b 34       		.uleb128 0x34
 3194 015c 00       		.byte	0
 3195 015d 03       		.uleb128 0x3
 3196 015e 08       		.uleb128 0x8
 3197 015f 3A       		.uleb128 0x3a
 3198 0160 0B       		.uleb128 0xb
 3199 0161 3B       		.uleb128 0x3b
 3200 0162 0B       		.uleb128 0xb
 3201 0163 49       		.uleb128 0x49
 3202 0164 13       		.uleb128 0x13
 3203 0165 3F       		.uleb128 0x3f
 3204 0166 19       		.uleb128 0x19
 3205 0167 02       		.uleb128 0x2
 3206 0168 18       		.uleb128 0x18
 3207 0169 00       		.byte	0
 3208 016a 00       		.byte	0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 66


 3209 016b 1A       		.uleb128 0x1a
 3210 016c 34       		.uleb128 0x34
 3211 016d 00       		.byte	0
 3212 016e 03       		.uleb128 0x3
 3213 016f 0E       		.uleb128 0xe
 3214 0170 3A       		.uleb128 0x3a
 3215 0171 0B       		.uleb128 0xb
 3216 0172 3B       		.uleb128 0x3b
 3217 0173 0B       		.uleb128 0xb
 3218 0174 49       		.uleb128 0x49
 3219 0175 13       		.uleb128 0x13
 3220 0176 3F       		.uleb128 0x3f
 3221 0177 19       		.uleb128 0x19
 3222 0178 02       		.uleb128 0x2
 3223 0179 18       		.uleb128 0x18
 3224 017a 00       		.byte	0
 3225 017b 00       		.byte	0
 3226 017c 00       		.byte	0
 3227              		.section	.debug_aranges,"",%progbits
 3228 0000 3C000000 		.4byte	0x3c
 3229 0004 0200     		.2byte	0x2
 3230 0006 00000000 		.4byte	.Ldebug_info0
 3231 000a 04       		.byte	0x4
 3232 000b 00       		.byte	0
 3233 000c 0000     		.2byte	0
 3234 000e 0000     		.2byte	0
 3235 0010 00000000 		.4byte	.LFB64
 3236 0014 18000000 		.4byte	.LFE64-.LFB64
 3237 0018 00000000 		.4byte	.LFB65
 3238 001c 18000000 		.4byte	.LFE65-.LFB65
 3239 0020 00000000 		.4byte	.LFB66
 3240 0024 88080000 		.4byte	.LFE66-.LFB66
 3241 0028 00000000 		.4byte	.LFB67
 3242 002c 3E000000 		.4byte	.LFE67-.LFB67
 3243 0030 00000000 		.4byte	.LFB68
 3244 0034 26000000 		.4byte	.LFE68-.LFB68
 3245 0038 00000000 		.4byte	0
 3246 003c 00000000 		.4byte	0
 3247              		.section	.debug_ranges,"",%progbits
 3248              	.Ldebug_ranges0:
 3249 0000 C8060000 		.4byte	.LBB11
 3250 0004 EE060000 		.4byte	.LBE11
 3251 0008 F0060000 		.4byte	.LBB12
 3252 000c 0A070000 		.4byte	.LBE12
 3253 0010 00000000 		.4byte	0
 3254 0014 00000000 		.4byte	0
 3255 0018 1C070000 		.4byte	.LBB13
 3256 001c 42070000 		.4byte	.LBE13
 3257 0020 44070000 		.4byte	.LBB14
 3258 0024 5E070000 		.4byte	.LBE14
 3259 0028 00000000 		.4byte	0
 3260 002c 00000000 		.4byte	0
 3261 0030 92070000 		.4byte	.LBB15
 3262 0034 B8070000 		.4byte	.LBE15
 3263 0038 BA070000 		.4byte	.LBB16
 3264 003c D4070000 		.4byte	.LBE16
 3265 0040 00000000 		.4byte	0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 67


 3266 0044 00000000 		.4byte	0
 3267 0048 00000000 		.4byte	.LFB64
 3268 004c 18000000 		.4byte	.LFE64
 3269 0050 00000000 		.4byte	.LFB65
 3270 0054 18000000 		.4byte	.LFE65
 3271 0058 00000000 		.4byte	.LFB66
 3272 005c 88080000 		.4byte	.LFE66
 3273 0060 00000000 		.4byte	.LFB67
 3274 0064 3E000000 		.4byte	.LFE67
 3275 0068 00000000 		.4byte	.LFB68
 3276 006c 26000000 		.4byte	.LFE68
 3277 0070 00000000 		.4byte	0
 3278 0074 00000000 		.4byte	0
 3279              		.section	.debug_line,"",%progbits
 3280              	.Ldebug_line0:
 3281 0000 75030000 		.section	.debug_str,"MS",%progbits,1
 3281      02005601 
 3281      00000201 
 3281      FB0E0D00 
 3281      01010101 
 3282              	.LASF49:
 3283 0000 68696768 		.ascii	"highCountTurnComplete\000"
 3283      436F756E 
 3283      74547572 
 3283      6E436F6D 
 3283      706C6574 
 3284              	.LASF119:
 3285 0016 6D61696E 		.ascii	"main.c\000"
 3285      2E6300
 3286              	.LASF84:
 3287 001d 76616C75 		.ascii	"valuesMiddleLine\000"
 3287      65734D69 
 3287      64646C65 
 3287      4C696E65 
 3287      00
 3288              	.LASF97:
 3289 002e 64697374 		.ascii	"distanceTravelled\000"
 3289      616E6365 
 3289      54726176 
 3289      656C6C65 
 3289      6400
 3290              	.LASF45:
 3291 0040 6368616E 		.ascii	"changeInDots\000"
 3291      6765496E 
 3291      446F7473 
 3291      00
 3292              	.LASF8:
 3293 004d 756E7369 		.ascii	"unsigned int\000"
 3293      676E6564 
 3293      20696E74 
 3293      00
 3294              	.LASF89:
 3295 005a 7475726E 		.ascii	"turningLeft\000"
 3295      696E674C 
 3295      65667400 
 3296              	.LASF12:
 3297 0066 5F5F696E 		.ascii	"__int32_t\000"
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 68


 3297      7433325F 
 3297      7400
 3298              	.LASF17:
 3299 0070 696E7431 		.ascii	"int16\000"
 3299      3600
 3300              	.LASF74:
 3301 0076 73797374 		.ascii	"system_state\000"
 3301      656D5F73 
 3301      74617465 
 3301      00
 3302              	.LASF118:
 3303 0083 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3303      43313120 
 3303      352E342E 
 3303      31203230 
 3303      31363036 
 3304 00b6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3304      20726576 
 3304      6973696F 
 3304      6E203233 
 3304      37373135 
 3305 00e9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3305      66756E63 
 3305      74696F6E 
 3305      2D736563 
 3305      74696F6E 
 3306              	.LASF38:
 3307 0111 73717561 		.ascii	"squares\000"
 3307      72657300 
 3308              	.LASF101:
 3309 0119 70726576 		.ascii	"prevTurnState\000"
 3309      5475726E 
 3309      53746174 
 3309      6500
 3310              	.LASF47:
 3311 0127 68696768 		.ascii	"highCountLeftLine\000"
 3311      436F756E 
 3311      744C6566 
 3311      744C696E 
 3311      6500
 3312              	.LASF33:
 3313 0139 67325F78 		.ascii	"g2_xpos\000"
 3313      706F7300 
 3314              	.LASF102:
 3315 0141 7475726E 		.ascii	"turnState\000"
 3315      53746174 
 3315      6500
 3316              	.LASF42:
 3317 014b 73717561 		.ascii	"squareStr\000"
 3317      72655374 
 3317      7200
 3318              	.LASF107:
 3319 0155 746F7461 		.ascii	"totalNumRotationsL\000"
 3319      6C4E756D 
 3319      526F7461 
 3319      74696F6E 
 3319      734C00
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 69


 3320              	.LASF69:
 3321 0168 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3321      5F72665F 
 3321      7472616E 
 3321      736D6973 
 3321      73696F6E 
 3322              	.LASF54:
 3323 0184 75736250 		.ascii	"usbPutString\000"
 3323      75745374 
 3323      72696E67 
 3323      00
 3324              	.LASF105:
 3325 0191 6C617374 		.ascii	"lastAdjustDirection\000"
 3325      41646A75 
 3325      73744469 
 3325      72656374 
 3325      696F6E00 
 3326              	.LASF36:
 3327 01a5 67325F64 		.ascii	"g2_direction\000"
 3327      69726563 
 3327      74696F6E 
 3327      00
 3328              	.LASF77:
 3329 01b2 7475726E 		.ascii	"turningDirection\000"
 3329      696E6744 
 3329      69726563 
 3329      74696F6E 
 3329      00
 3330              	.LASF18:
 3331 01c3 666C6F61 		.ascii	"float\000"
 3331      7400
 3332              	.LASF73:
 3333 01c9 75736242 		.ascii	"usbBuffer\000"
 3333      75666665 
 3333      7200
 3334              	.LASF100:
 3335 01d3 64697374 		.ascii	"distancePerSecondAvg\000"
 3335      616E6365 
 3335      50657253 
 3335      65636F6E 
 3335      64417667 
 3336              	.LASF88:
 3337 01e8 636F756E 		.ascii	"count\000"
 3337      7400
 3338              	.LASF21:
 3339 01ee 696E6465 		.ascii	"index\000"
 3339      7800
 3340              	.LASF104:
 3341 01f4 7475726E 		.ascii	"turnTimer\000"
 3341      54696D65 
 3341      7200
 3342              	.LASF7:
 3343 01fe 6C6F6E67 		.ascii	"long long unsigned int\000"
 3343      206C6F6E 
 3343      6720756E 
 3343      7369676E 
 3343      65642069 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 70


 3344              	.LASF52:
 3345 0215 74617267 		.ascii	"targetDistance\000"
 3345      65744469 
 3345      7374616E 
 3345      636500
 3346              	.LASF109:
 3347 0224 64697374 		.ascii	"distanceToTwo\000"
 3347      616E6365 
 3347      546F5477 
 3347      6F00
 3348              	.LASF82:
 3349 0232 76616C75 		.ascii	"valuesLeftIntersection\000"
 3349      65734C65 
 3349      6674496E 
 3349      74657273 
 3349      65637469 
 3350              	.LASF62:
 3351 0249 666C6167 		.ascii	"flag_ts_update\000"
 3351      5F74735F 
 3351      75706461 
 3351      746500
 3352              	.LASF61:
 3353 0258 666C6167 		.ascii	"flag_ts_enc\000"
 3353      5F74735F 
 3353      656E6300 
 3354              	.LASF106:
 3355 0264 73746172 		.ascii	"startCountingL\000"
 3355      74436F75 
 3355      6E74696E 
 3355      674C00
 3356              	.LASF91:
 3357 0273 6C617374 		.ascii	"lastVeerDirection\000"
 3357      56656572 
 3357      44697265 
 3357      6374696F 
 3357      6E00
 3358              	.LASF94:
 3359 0285 6E756D52 		.ascii	"numRotationsL\000"
 3359      6F746174 
 3359      696F6E73 
 3359      4C00
 3360              	.LASF95:
 3361 0293 6E756D52 		.ascii	"numRotationsR\000"
 3361      6F746174 
 3361      696F6E73 
 3361      5200
 3362              	.LASF23:
 3363 02a1 726F626F 		.ascii	"robot_ypos\000"
 3363      745F7970 
 3363      6F7300
 3364              	.LASF87:
 3365 02ac 76616C75 		.ascii	"valuesRightIntersection\000"
 3365      65735269 
 3365      67687449 
 3365      6E746572 
 3365      73656374 
 3366              	.LASF60:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 71


 3367 02c4 74735F64 		.ascii	"ts_display\000"
 3367      6973706C 
 3367      617900
 3368              	.LASF37:
 3369 02cf 4D794953 		.ascii	"MyISR\000"
 3369      5200
 3370              	.LASF66:
 3371 02d5 666C6167 		.ascii	"flag_packet\000"
 3371      5F706163 
 3371      6B657400 
 3372              	.LASF11:
 3373 02e1 63686172 		.ascii	"char\000"
 3373      00
 3374              	.LASF78:
 3375 02e6 7475726E 		.ascii	"turningCount\000"
 3375      696E6743 
 3375      6F756E74 
 3375      00
 3376              	.LASF27:
 3377 02f3 67305F73 		.ascii	"g0_speed\000"
 3377      70656564 
 3377      00
 3378              	.LASF92:
 3379 02fc 6D6F746F 		.ascii	"motorFlag\000"
 3379      72466C61 
 3379      6700
 3380              	.LASF15:
 3381 0306 75696E74 		.ascii	"uint16\000"
 3381      313600
 3382              	.LASF16:
 3383 030d 696E7438 		.ascii	"int8\000"
 3383      00
 3384              	.LASF32:
 3385 0312 67315F64 		.ascii	"g1_direction\000"
 3385      69726563 
 3385      74696F6E 
 3385      00
 3386              	.LASF114:
 3387 031f 68697446 		.ascii	"hitFood\000"
 3387      6F6F6400 
 3388              	.LASF116:
 3389 0327 7475726E 		.ascii	"turnComplete\000"
 3389      436F6D70 
 3389      6C657465 
 3389      00
 3390              	.LASF6:
 3391 0334 6C6F6E67 		.ascii	"long long int\000"
 3391      206C6F6E 
 3391      6720696E 
 3391      7400
 3392              	.LASF29:
 3393 0342 67315F78 		.ascii	"g1_xpos\000"
 3393      706F7300 
 3394              	.LASF115:
 3395 034a 68697457 		.ascii	"hitWall\000"
 3395      616C6C00 
 3396              	.LASF41:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 72


 3397 0352 696E6465 		.ascii	"indexChar\000"
 3397      78436861 
 3397      7200
 3398              	.LASF103:
 3399 035c 7475726E 		.ascii	"turnEnable\000"
 3399      456E6162 
 3399      6C6500
 3400              	.LASF112:
 3401 0367 64697374 		.ascii	"distanceToFive\000"
 3401      616E6365 
 3401      546F4669 
 3401      766500
 3402              	.LASF80:
 3403 0376 646F7473 		.ascii	"dotsTravelled\000"
 3403      54726176 
 3403      656C6C65 
 3403      6400
 3404              	.LASF35:
 3405 0384 67325F73 		.ascii	"g2_speed\000"
 3405      70656564 
 3405      00
 3406              	.LASF26:
 3407 038d 67305F79 		.ascii	"g0_ypos\000"
 3407      706F7300 
 3408              	.LASF93:
 3409 0395 73746570 		.ascii	"step\000"
 3409      00
 3410              	.LASF44:
 3411 039a 64697374 		.ascii	"distanceStr\000"
 3411      616E6365 
 3411      53747200 
 3412              	.LASF59:
 3413 03a6 74735F73 		.ascii	"ts_speed\000"
 3413      70656564 
 3413      00
 3414              	.LASF121:
 3415 03af 64617461 		.ascii	"data_main\000"
 3415      5F6D6169 
 3415      6E00
 3416              	.LASF20:
 3417 03b9 72737369 		.ascii	"rssi\000"
 3417      00
 3418              	.LASF28:
 3419 03be 67305F64 		.ascii	"g0_direction\000"
 3419      69726563 
 3419      74696F6E 
 3419      00
 3420              	.LASF9:
 3421 03cb 6C6F6E67 		.ascii	"long double\000"
 3421      20646F75 
 3421      626C6500 
 3422              	.LASF63:
 3423 03d7 666C6167 		.ascii	"flag_ts_speed\000"
 3423      5F74735F 
 3423      73706565 
 3423      6400
 3424              	.LASF68:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 73


 3425 03e5 64617461 		.ascii	"dataready_flag\000"
 3425      72656164 
 3425      795F666C 
 3425      616700
 3426              	.LASF50:
 3427 03f4 68696768 		.ascii	"highCountRightLine\000"
 3427      436F756E 
 3427      74526967 
 3427      68744C69 
 3427      6E6500
 3428              	.LASF65:
 3429 0407 666C6167 		.ascii	"flag_rx\000"
 3429      5F727800 
 3430              	.LASF2:
 3431 040f 73686F72 		.ascii	"short int\000"
 3431      7420696E 
 3431      7400
 3432              	.LASF39:
 3433 0419 696E7374 		.ascii	"instruction\000"
 3433      72756374 
 3433      696F6E00 
 3434              	.LASF4:
 3435 0425 6C6F6E67 		.ascii	"long int\000"
 3435      20696E74 
 3435      00
 3436              	.LASF56:
 3437 042e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3437      52784275 
 3437      66666572 
 3437      00
 3438              	.LASF58:
 3439 043b 74735F75 		.ascii	"ts_update\000"
 3439      70646174 
 3439      6500
 3440              	.LASF79:
 3441 0445 73686F75 		.ascii	"shouldUpdate\000"
 3441      6C645570 
 3441      64617465 
 3441      00
 3442              	.LASF98:
 3443 0452 64697374 		.ascii	"distancePerSecondL\000"
 3443      616E6365 
 3443      50657253 
 3443      65636F6E 
 3443      644C00
 3444              	.LASF40:
 3445 0465 64697374 		.ascii	"distance\000"
 3445      616E6365 
 3445      00
 3446              	.LASF99:
 3447 046e 64697374 		.ascii	"distancePerSecondR\000"
 3447      616E6365 
 3447      50657253 
 3447      65636F6E 
 3447      645200
 3448              	.LASF108:
 3449 0481 64697374 		.ascii	"distanceToOne\000"
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 74


 3449      616E6365 
 3449      546F4F6E 
 3449      6500
 3450              	.LASF43:
 3451 048f 696E7374 		.ascii	"instStr\000"
 3451      53747200 
 3452              	.LASF34:
 3453 0497 67325F79 		.ascii	"g2_ypos\000"
 3453      706F7300 
 3454              	.LASF81:
 3455 049f 666C6167 		.ascii	"flag\000"
 3455      00
 3456              	.LASF113:
 3457 04a4 73746F70 		.ascii	"stopCheckingArray\000"
 3457      43686563 
 3457      6B696E67 
 3457      41727261 
 3457      7900
 3458              	.LASF30:
 3459 04b6 67315F79 		.ascii	"g1_ypos\000"
 3459      706F7300 
 3460              	.LASF90:
 3461 04be 7475726E 		.ascii	"turningRight\000"
 3461      696E6752 
 3461      69676874 
 3461      00
 3462              	.LASF10:
 3463 04cb 73697A65 		.ascii	"sizetype\000"
 3463      74797065 
 3463      00
 3464              	.LASF5:
 3465 04d4 6C6F6E67 		.ascii	"long unsigned int\000"
 3465      20756E73 
 3465      69676E65 
 3465      6420696E 
 3465      7400
 3466              	.LASF13:
 3467 04e6 696E7433 		.ascii	"int32_t\000"
 3467      325F7400 
 3468              	.LASF22:
 3469 04ee 726F626F 		.ascii	"robot_xpos\000"
 3469      745F7870 
 3469      6F7300
 3470              	.LASF110:
 3471 04f9 64697374 		.ascii	"distanceToThree\000"
 3471      616E6365 
 3471      546F5468 
 3471      72656500 
 3472              	.LASF72:
 3473 0509 656E7472 		.ascii	"entry\000"
 3473      7900
 3474              	.LASF76:
 3475 050f 72657374 		.ascii	"restoring\000"
 3475      6F72696E 
 3475      6700
 3476              	.LASF1:
 3477 0519 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 75


 3477      676E6564 
 3477      20636861 
 3477      7200
 3478              	.LASF71:
 3479 0527 6C696E65 		.ascii	"line\000"
 3479      00
 3480              	.LASF120:
 3481 052c 483A5C44 		.ascii	"H:\\Desktop\\Team 14\\team14\\301_lab_tasks\\psoc s"
 3481      65736B74 
 3481      6F705C54 
 3481      65616D20 
 3481      31345C74 
 3482 055a 74756465 		.ascii	"tudent pack\\psoc_code_base\\CS301_Class.cydsn\000"
 3482      6E742070 
 3482      61636B5C 
 3482      70736F63 
 3482      5F636F64 
 3483              	.LASF51:
 3484 0587 68696768 		.ascii	"highCountRightIntersection\000"
 3484      436F756E 
 3484      74526967 
 3484      6874496E 
 3484      74657273 
 3485              	.LASF111:
 3486 05a2 64697374 		.ascii	"distanceToFour\000"
 3486      616E6365 
 3486      546F466F 
 3486      757200
 3487              	.LASF57:
 3488 05b1 74735F65 		.ascii	"ts_enc\000"
 3488      6E6300
 3489              	.LASF64:
 3490 05b8 666C6167 		.ascii	"flag_ts_display\000"
 3490      5F74735F 
 3490      64697370 
 3490      6C617900 
 3491              	.LASF46:
 3492 05c8 68696768 		.ascii	"highCountLeftIntersection\000"
 3492      436F756E 
 3492      744C6566 
 3492      74496E74 
 3492      65727365 
 3493              	.LASF70:
 3494 05e2 64697370 		.ascii	"displaystring\000"
 3494      6C617973 
 3494      7472696E 
 3494      6700
 3495              	.LASF96:
 3496 05f0 7475726E 		.ascii	"turnCount\000"
 3496      436F756E 
 3496      7400
 3497              	.LASF83:
 3498 05fa 76616C75 		.ascii	"valuesLeftLine\000"
 3498      65734C65 
 3498      66744C69 
 3498      6E6500
 3499              	.LASF55:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 76


 3500 0609 75736250 		.ascii	"usbPutChar\000"
 3500      75744368 
 3500      617200
 3501              	.LASF0:
 3502 0614 7369676E 		.ascii	"signed char\000"
 3502      65642063 
 3502      68617200 
 3503              	.LASF3:
 3504 0620 73686F72 		.ascii	"short unsigned int\000"
 3504      7420756E 
 3504      7369676E 
 3504      65642069 
 3504      6E7400
 3505              	.LASF24:
 3506 0633 726F626F 		.ascii	"robot_orientation\000"
 3506      745F6F72 
 3506      69656E74 
 3506      6174696F 
 3506      6E00
 3507              	.LASF86:
 3508 0645 76616C75 		.ascii	"valuesRightLine\000"
 3508      65735269 
 3508      6768744C 
 3508      696E6500 
 3509              	.LASF75:
 3510 0655 54415247 		.ascii	"TARGET_SPEED\000"
 3510      45545F53 
 3510      50454544 
 3510      00
 3511              	.LASF53:
 3512 0662 6D61696E 		.ascii	"main\000"
 3512      00
 3513              	.LASF117:
 3514 0667 63757272 		.ascii	"currentInstruction\000"
 3514      656E7449 
 3514      6E737472 
 3514      75637469 
 3514      6F6E00
 3515              	.LASF48:
 3516 067a 68696768 		.ascii	"highCountMiddleLine\000"
 3516      436F756E 
 3516      744D6964 
 3516      646C654C 
 3516      696E6500 
 3517              	.LASF14:
 3518 068e 75696E74 		.ascii	"uint8\000"
 3518      3800
 3519              	.LASF19:
 3520 0694 646F7562 		.ascii	"double\000"
 3520      6C6500
 3521              	.LASF25:
 3522 069b 67305F78 		.ascii	"g0_xpos\000"
 3522      706F7300 
 3523              	.LASF85:
 3524 06a3 76616C75 		.ascii	"valuesTurnComplete\000"
 3524      65735475 
 3524      726E436F 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\ccsbbAgC.s 			page 77


 3524      6D706C65 
 3524      746500
 3525              	.LASF67:
 3526 06b6 666C6167 		.ascii	"flag_KB_string\000"
 3526      5F4B425F 
 3526      73747269 
 3526      6E6700
 3527              	.LASF31:
 3528 06c5 67315F73 		.ascii	"g1_speed\000"
 3528      70656564 
 3528      00
 3529              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
