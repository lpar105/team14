ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	consecStops
 107              		.bss
 108 0012 0000     		.align	2
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 3


 109              		.type	consecStops, %object
 110              		.size	consecStops, 4
 111              	consecStops:
 112 0014 00000000 		.space	4
 113              		.global	started
 114              		.align	2
 115              		.type	started, %object
 116              		.size	started, 4
 117              	started:
 118 0018 00000000 		.space	4
 119              		.global	instCounter
 120              		.align	2
 121              		.type	instCounter, %object
 122              		.size	instCounter, 4
 123              	instCounter:
 124 001c 00000000 		.space	4
 125              		.global	flag
 126              		.align	2
 127              		.type	flag, %object
 128              		.size	flag, 4
 129              	flag:
 130 0020 00000000 		.space	4
 131              		.comm	valuesLeftIntersection,2000,4
 132              		.comm	valuesLeftLine,2000,4
 133              		.comm	valuesMiddleLine,2000,4
 134              		.comm	valuesRightLine,2000,4
 135              		.comm	valuesRightIntersection,2000,4
 136              		.global	count
 137              		.align	2
 138              		.type	count, %object
 139              		.size	count, 4
 140              	count:
 141 0024 00000000 		.space	4
 142              		.global	motorUpdateCount
 143              		.align	2
 144              		.type	motorUpdateCount, %object
 145              		.size	motorUpdateCount, 4
 146              	motorUpdateCount:
 147 0028 00000000 		.space	4
 148              		.global	lastVeerDirection
 149              		.align	2
 150              		.type	lastVeerDirection, %object
 151              		.size	lastVeerDirection, 4
 152              	lastVeerDirection:
 153 002c 00000000 		.space	4
 154              		.comm	v1M1,4,4
 155              		.comm	v1M2,4,4
 156              		.comm	v2M1,4,4
 157              		.comm	v2M2,4,4
 158              		.global	turnComplete
 159              		.data
 160              		.align	2
 161              		.type	turnComplete, %object
 162              		.size	turnComplete, 4
 163              	turnComplete:
 164 0044 FFFFFFFF 		.word	-1
 165              		.global	pulsesTravelled
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 4


 166              		.bss
 167              		.align	2
 168              		.type	pulsesTravelled, %object
 169              		.size	pulsesTravelled, 4
 170              	pulsesTravelled:
 171 0030 00000000 		.space	4
 172              		.global	checkDistance
 173              		.align	2
 174              		.type	checkDistance, %object
 175              		.size	checkDistance, 4
 176              	checkDistance:
 177 0034 00000000 		.space	4
 178              		.global	step
 179              		.align	2
 180              		.type	step, %object
 181              		.size	step, 4
 182              	step:
 183 0038 00000000 		.space	4
 184              		.global	interruptFlag
 185              		.align	2
 186              		.type	interruptFlag, %object
 187              		.size	interruptFlag, 4
 188              	interruptFlag:
 189 003c 00000000 		.space	4
 190              		.global	lastAdjustDirection
 191              		.align	2
 192              		.type	lastAdjustDirection, %object
 193              		.size	lastAdjustDirection, 4
 194              	lastAdjustDirection:
 195 0040 00000000 		.space	4
 196              		.comm	squares,1000,4
 197              		.comm	instruction,500,4
 198              		.comm	distance,500,4
 199              		.section	.text.eoc,"ax",%progbits
 200              		.align	2
 201              		.global	eoc
 202              		.thumb
 203              		.thumb_func
 204              		.type	eoc, %function
 205              	eoc:
 206              	.LFB64:
 207              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 5


  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** 
  30:main.c        **** #include "pathfind.h"
  31:main.c        **** 
  32:main.c        **** #include "vars.h"
  33:main.c        **** 
  34:main.c        **** #define ADC_COUNT 500
  35:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 75
  36:main.c        **** #define R_INT_BLACK highCountRightIntersection < 75
  37:main.c        **** #define L_LINE_BLACK highCountLeftLine < 75
  38:main.c        **** #define R_LINE_BLACK highCountRightLine < 75
  39:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 75
  40:main.c        **** #define TC_BLACK highCountTurnComplete < 75
  41:main.c        **** 
  42:main.c        **** int consecStops = 0;
  43:main.c        **** int started = 0;
  44:main.c        **** int instCounter = 0;
  45:main.c        **** //* ========================================
  46:main.c        **** void usbPutString(char * s);
  47:main.c        **** void usbPutChar(char c);
  48:main.c        **** //* ========================================
  49:main.c        **** 
  50:main.c        **** volatile int flag = 0;
  51:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  52:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  53:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  54:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  55:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  56:main.c        **** volatile int count = 0;
  57:main.c        **** volatile int motorUpdateCount = 0;
  58:main.c        **** volatile int lastVeerDirection = 0;
  59:main.c        **** 
  60:main.c        **** volatile int v1M1;
  61:main.c        **** volatile int v1M2;
  62:main.c        **** volatile int v2M1;
  63:main.c        **** volatile int v2M2;
  64:main.c        **** volatile int turnComplete = -1;
  65:main.c        **** int pulsesTravelled = 0;
  66:main.c        **** volatile int checkDistance = 0;
  67:main.c        **** volatile int step = 0;
  68:main.c        **** volatile int interruptFlag = 0;
  69:main.c        **** 
  70:main.c        **** int lastAdjustDirection = 0;
  71:main.c        **** unsigned char squares[500][2];
  72:main.c        **** unsigned char instruction[500];
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 6


  73:main.c        **** unsigned char distance[500];
  74:main.c        **** 
  75:main.c        **** CY_ISR(eoc) {
 208              		.loc 1 75 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213 0000 80B4     		push	{r7}
 214              		.cfi_def_cfa_offset 4
 215              		.cfi_offset 7, -4
 216 0002 00AF     		add	r7, sp, #0
 217              		.cfi_def_cfa_register 7
  76:main.c        ****     flag = 1;
 218              		.loc 1 76 0
 219 0004 034B     		ldr	r3, .L2
 220 0006 0122     		movs	r2, #1
 221 0008 1A60     		str	r2, [r3]
  77:main.c        **** }
 222              		.loc 1 77 0
 223 000a 00BF     		nop
 224 000c BD46     		mov	sp, r7
 225              		.cfi_def_cfa_register 13
 226              		@ sp needed
 227 000e 80BC     		pop	{r7}
 228              		.cfi_restore 7
 229              		.cfi_def_cfa_offset 0
 230 0010 7047     		bx	lr
 231              	.L3:
 232 0012 00BF     		.align	2
 233              	.L2:
 234 0014 00000000 		.word	flag
 235              		.cfi_endproc
 236              	.LFE64:
 237              		.size	eoc, .-eoc
 238              		.global	__aeabi_i2d
 239              		.global	__aeabi_dmul
 240              		.global	__aeabi_dcmpgt
 241              		.section	.rodata
 242              		.align	2
 243              	.LC0:
 244 0000 00000000 		.word	0
 245 0004 3E000000 		.word	62
 246 0008 7B000000 		.word	123
 247 000c 96000000 		.word	150
 248 0010 3A020000 		.word	570
 249 0014 BC020000 		.word	700
 250 0018 3A020000 		.word	570
 251 001c 3A020000 		.word	570
 252 0020 3A020000 		.word	570
 253              		.section	.text.main,"ax",%progbits
 254              		.align	2
 255              		.global	main
 256              		.thumb
 257              		.thumb_func
 258              		.type	main, %function
 259              	main:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 7


 260              	.LFB65:
  78:main.c        **** 
  79:main.c        **** int main() {
 261              		.loc 1 79 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 328
 264              		@ frame_needed = 1, uses_anonymous_args = 0
 265 0000 B0B5     		push	{r4, r5, r7, lr}
 266              		.cfi_def_cfa_offset 16
 267              		.cfi_offset 4, -16
 268              		.cfi_offset 5, -12
 269              		.cfi_offset 7, -8
 270              		.cfi_offset 14, -4
 271 0002 D2B0     		sub	sp, sp, #328
 272              		.cfi_def_cfa_offset 344
 273 0004 00AF     		add	r7, sp, #0
 274              		.cfi_def_cfa_register 7
  80:main.c        ****     LED_PIN_1_Write(1);
 275              		.loc 1 80 0
 276 0006 0120     		movs	r0, #1
 277 0008 FFF7FEFF 		bl	LED_PIN_1_Write
  81:main.c        ****     LED_PIN_2_Write(1);
 278              		.loc 1 81 0
 279 000c 0120     		movs	r0, #1
 280 000e FFF7FEFF 		bl	LED_PIN_2_Write
  82:main.c        ****     LED_PIN_3_Write(1);
 281              		.loc 1 82 0
 282 0012 0120     		movs	r0, #1
 283 0014 FFF7FEFF 		bl	LED_PIN_3_Write
  83:main.c        ****     LED_PIN_4_Write(1);
 284              		.loc 1 83 0
 285 0018 0120     		movs	r0, #1
 286 001a FFF7FEFF 		bl	LED_PIN_4_Write
  84:main.c        ****     LED_PIN_6_Write(1);
 287              		.loc 1 84 0
 288 001e 0120     		movs	r0, #1
 289 0020 FFF7FEFF 		bl	LED_PIN_6_Write
  85:main.c        ****     CYGlobalIntEnable;
 290              		.loc 1 85 0
 291              		.syntax unified
 292              	@ 85 "main.c" 1
 293 0024 62B6     		CPSIE   i
 294              	@ 0 "" 2
  86:main.c        ****     USBUART_Start(0, USBUART_5V_OPERATION);
 295              		.loc 1 86 0
 296              		.thumb
 297              		.syntax unified
 298 0026 0121     		movs	r1, #1
 299 0028 0020     		movs	r0, #0
 300 002a FFF7FEFF 		bl	USBUART_Start
  87:main.c        ****     //UART_Start();
  88:main.c        **** 
  89:main.c        ****     QuadDec_M1_Start();
 301              		.loc 1 89 0
 302 002e FFF7FEFF 		bl	QuadDec_M1_Start
  90:main.c        ****     QuadDec_M2_Start();
 303              		.loc 1 90 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 8


 304 0032 FFF7FEFF 		bl	QuadDec_M2_Start
  91:main.c        **** 
  92:main.c        ****     //isr_TS_StartEx(MyISR);
  93:main.c        **** 
  94:main.c        ****     RF_BT_SELECT_Write(1);
 305              		.loc 1 94 0
 306 0036 0120     		movs	r0, #1
 307 0038 FFF7FEFF 		bl	RF_BT_SELECT_Write
  95:main.c        ****     //ADC1_IRQ_Enable();
  96:main.c        ****     ADC1_Start();
 308              		.loc 1 96 0
 309 003c FFF7FEFF 		bl	ADC1_Start
  97:main.c        **** 
  98:main.c        ****     ADC1_StartConvert();
 310              		.loc 1 98 0
 311 0040 FFF7FEFF 		bl	ADC1_StartConvert
  99:main.c        **** 
 100:main.c        ****     eoc_StartEx(eoc);
 312              		.loc 1 100 0
 313 0044 B248     		ldr	r0, .L67
 314 0046 FFF7FEFF 		bl	eoc_StartEx
 101:main.c        **** 
 102:main.c        ****     initMotors();
 315              		.loc 1 102 0
 316 004a FFF7FEFF 		bl	initMotors
 103:main.c        **** 
 104:main.c        ****     stop();
 317              		.loc 1 104 0
 318 004e FFF7FEFF 		bl	stop
 319              	.LBB2:
 105:main.c        ****     //isr_TS_StartEx(MyISR);
 106:main.c        ****     //Timer_TS_Start();
 107:main.c        **** 
 108:main.c        ****     // Loop through the arrays and set each element to 55 or 0
 109:main.c        ****     for (int i = 0; i < 500; i++) {
 320              		.loc 1 109 0
 321 0052 0023     		movs	r3, #0
 322 0054 C7F84431 		str	r3, [r7, #324]
 323 0058 23E0     		b	.L5
 324              	.L6:
 110:main.c        ****         squares[i][0] = 55;
 325              		.loc 1 110 0 discriminator 3
 326 005a AE4A     		ldr	r2, .L67+4
 327 005c D7F84431 		ldr	r3, [r7, #324]
 328 0060 3721     		movs	r1, #55
 329 0062 02F81310 		strb	r1, [r2, r3, lsl #1]
 111:main.c        ****         squares[i][1] = 55;
 330              		.loc 1 111 0 discriminator 3
 331 0066 AB4A     		ldr	r2, .L67+4
 332 0068 D7F84431 		ldr	r3, [r7, #324]
 333 006c 5B00     		lsls	r3, r3, #1
 334 006e 1344     		add	r3, r3, r2
 335 0070 3722     		movs	r2, #55
 336 0072 5A70     		strb	r2, [r3, #1]
 112:main.c        ****         instruction[i] = 0;
 337              		.loc 1 112 0 discriminator 3
 338 0074 A84A     		ldr	r2, .L67+8
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 9


 339 0076 D7F84431 		ldr	r3, [r7, #324]
 340 007a 1344     		add	r3, r3, r2
 341 007c 0022     		movs	r2, #0
 342 007e 1A70     		strb	r2, [r3]
 113:main.c        ****         distance[i] = 0;
 343              		.loc 1 113 0 discriminator 3
 344 0080 A64A     		ldr	r2, .L67+12
 345 0082 D7F84431 		ldr	r3, [r7, #324]
 346 0086 1344     		add	r3, r3, r2
 347 0088 0022     		movs	r2, #0
 348 008a 1A70     		strb	r2, [r3]
 114:main.c        ****         distance[i] = 55;
 349              		.loc 1 114 0 discriminator 3
 350 008c A34A     		ldr	r2, .L67+12
 351 008e D7F84431 		ldr	r3, [r7, #324]
 352 0092 1344     		add	r3, r3, r2
 353 0094 3722     		movs	r2, #55
 354 0096 1A70     		strb	r2, [r3]
 109:main.c        ****         squares[i][0] = 55;
 355              		.loc 1 109 0 discriminator 3
 356 0098 D7F84431 		ldr	r3, [r7, #324]
 357 009c 0133     		adds	r3, r3, #1
 358 009e C7F84431 		str	r3, [r7, #324]
 359              	.L5:
 109:main.c        ****         squares[i][0] = 55;
 360              		.loc 1 109 0 is_stmt 0 discriminator 1
 361 00a2 D7F84431 		ldr	r3, [r7, #324]
 362 00a6 B3F5FA7F 		cmp	r3, #500
 363 00aa D6DB     		blt	.L6
 364              	.LBE2:
 115:main.c        ****     }
 116:main.c        ****     pathfind(instruction, distance, squares);
 365              		.loc 1 116 0 is_stmt 1
 366 00ac 994A     		ldr	r2, .L67+4
 367 00ae 9B49     		ldr	r1, .L67+12
 368 00b0 9948     		ldr	r0, .L67+8
 369 00b2 FFF7FEFF 		bl	pathfind
 370              	.LBB3:
 117:main.c        ****     for (int i = 0; i < 500; i++) {
 371              		.loc 1 117 0
 372 00b6 0023     		movs	r3, #0
 373 00b8 C7F84031 		str	r3, [r7, #320]
 374 00bc 04E0     		b	.L7
 375              	.L8:
 376              		.loc 1 117 0 is_stmt 0 discriminator 3
 377 00be D7F84031 		ldr	r3, [r7, #320]
 378 00c2 0133     		adds	r3, r3, #1
 379 00c4 C7F84031 		str	r3, [r7, #320]
 380              	.L7:
 381              		.loc 1 117 0 discriminator 1
 382 00c8 D7F84031 		ldr	r3, [r7, #320]
 383 00cc B3F5FA7F 		cmp	r3, #500
 384 00d0 F5DB     		blt	.L8
 385              	.L66:
 386              	.LBE3:
 118:main.c        **** 
 119:main.c        ****                         char instStr[24];
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 10


 120:main.c        **** 
 121:main.c        ****                         //snprintf(instStr, sizeof(instStr), "%u %u \r\n", (unsigned char) instruct
 122:main.c        **** 
 123:main.c        ****                         //usbPutString(instStr);
 124:main.c        ****                     }
 125:main.c        **** 
 126:main.c        ****     //CyDelay(2000);
 127:main.c        ****     for (;;) {
 128:main.c        **** 
 129:main.c        ****         if (flag == 1) {
 387              		.loc 1 129 0 is_stmt 1
 388 00d2 934B     		ldr	r3, .L67+16
 389 00d4 1B68     		ldr	r3, [r3]
 390 00d6 012B     		cmp	r3, #1
 391 00d8 FBD1     		bne	.L66
 130:main.c        **** 
 131:main.c        ****             ADC1_IRQ_Disable();
 392              		.loc 1 131 0
 393 00da FFF7FEFF 		bl	ADC1_IRQ_Disable
 132:main.c        ****             valuesLeftIntersection[count] = ADC1_GetResult16(0);
 394              		.loc 1 132 0
 395 00de 914B     		ldr	r3, .L67+20
 396 00e0 1C68     		ldr	r4, [r3]
 397 00e2 0020     		movs	r0, #0
 398 00e4 FFF7FEFF 		bl	ADC1_GetResult16
 399 00e8 0346     		mov	r3, r0
 400 00ea 1A46     		mov	r2, r3
 401 00ec 8E4B     		ldr	r3, .L67+24
 402 00ee 43F82420 		str	r2, [r3, r4, lsl #2]
 133:main.c        ****             valuesLeftLine[count] = ADC1_GetResult16(1);
 403              		.loc 1 133 0
 404 00f2 8C4B     		ldr	r3, .L67+20
 405 00f4 1C68     		ldr	r4, [r3]
 406 00f6 0120     		movs	r0, #1
 407 00f8 FFF7FEFF 		bl	ADC1_GetResult16
 408 00fc 0346     		mov	r3, r0
 409 00fe 1A46     		mov	r2, r3
 410 0100 8A4B     		ldr	r3, .L67+28
 411 0102 43F82420 		str	r2, [r3, r4, lsl #2]
 134:main.c        ****             valuesMiddleLine[count] = ADC1_GetResult16(2);
 412              		.loc 1 134 0
 413 0106 874B     		ldr	r3, .L67+20
 414 0108 1C68     		ldr	r4, [r3]
 415 010a 0220     		movs	r0, #2
 416 010c FFF7FEFF 		bl	ADC1_GetResult16
 417 0110 0346     		mov	r3, r0
 418 0112 1A46     		mov	r2, r3
 419 0114 864B     		ldr	r3, .L67+32
 420 0116 43F82420 		str	r2, [r3, r4, lsl #2]
 135:main.c        ****             valuesRightLine[count] = ADC1_GetResult16(3);
 421              		.loc 1 135 0
 422 011a 824B     		ldr	r3, .L67+20
 423 011c 1C68     		ldr	r4, [r3]
 424 011e 0320     		movs	r0, #3
 425 0120 FFF7FEFF 		bl	ADC1_GetResult16
 426 0124 0346     		mov	r3, r0
 427 0126 1A46     		mov	r2, r3
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 11


 428 0128 824B     		ldr	r3, .L67+36
 429 012a 43F82420 		str	r2, [r3, r4, lsl #2]
 136:main.c        ****             valuesRightIntersection[count] = ADC1_GetResult16(4);
 430              		.loc 1 136 0
 431 012e 7D4B     		ldr	r3, .L67+20
 432 0130 1C68     		ldr	r4, [r3]
 433 0132 0420     		movs	r0, #4
 434 0134 FFF7FEFF 		bl	ADC1_GetResult16
 435 0138 0346     		mov	r3, r0
 436 013a 1A46     		mov	r2, r3
 437 013c 7E4B     		ldr	r3, .L67+40
 438 013e 43F82420 		str	r2, [r3, r4, lsl #2]
 137:main.c        **** 
 138:main.c        ****             count++;
 439              		.loc 1 138 0
 440 0142 784B     		ldr	r3, .L67+20
 441 0144 1B68     		ldr	r3, [r3]
 442 0146 0133     		adds	r3, r3, #1
 443 0148 764A     		ldr	r2, .L67+20
 444 014a 1360     		str	r3, [r2]
 139:main.c        ****             if (count == ADC_COUNT) {
 445              		.loc 1 139 0
 446 014c 754B     		ldr	r3, .L67+20
 447 014e 1B68     		ldr	r3, [r3]
 448 0150 B3F5FA7F 		cmp	r3, #500
 449 0154 40F05983 		bne	.L10
 450              	.LBB4:
 140:main.c        **** 
 141:main.c        ****                 count = 0;
 451              		.loc 1 141 0
 452 0158 724B     		ldr	r3, .L67+20
 453 015a 0022     		movs	r2, #0
 454 015c 1A60     		str	r2, [r3]
 142:main.c        ****                 motorUpdateCount++;
 455              		.loc 1 142 0
 456 015e 774B     		ldr	r3, .L67+44
 457 0160 1B68     		ldr	r3, [r3]
 458 0162 0133     		adds	r3, r3, #1
 459 0164 754A     		ldr	r2, .L67+44
 460 0166 1360     		str	r3, [r2]
 143:main.c        ****                 int highCountLeftIntersection = 0;
 461              		.loc 1 143 0
 462 0168 0023     		movs	r3, #0
 463 016a C7F83C31 		str	r3, [r7, #316]
 144:main.c        ****                 int highCountLeftLine = 0;
 464              		.loc 1 144 0
 465 016e 0023     		movs	r3, #0
 466 0170 C7F83831 		str	r3, [r7, #312]
 145:main.c        ****                 int highCountMiddleLine = 0;
 467              		.loc 1 145 0
 468 0174 0023     		movs	r3, #0
 469 0176 C7F83431 		str	r3, [r7, #308]
 146:main.c        ****                 int highCountTurnComplete = 0;
 470              		.loc 1 146 0
 471 017a 0023     		movs	r3, #0
 472 017c C7F81831 		str	r3, [r7, #280]
 147:main.c        ****                 int highCountRightLine = 0;
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 12


 473              		.loc 1 147 0
 474 0180 0023     		movs	r3, #0
 475 0182 C7F83031 		str	r3, [r7, #304]
 148:main.c        ****                 int highCountRightIntersection = 0;
 476              		.loc 1 148 0
 477 0186 0023     		movs	r3, #0
 478 0188 C7F82C31 		str	r3, [r7, #300]
 479              	.LBB5:
 149:main.c        ****                 for (int i = 0; i < ADC_COUNT; i++) {
 480              		.loc 1 149 0
 481 018c 0023     		movs	r3, #0
 482 018e C7F82831 		str	r3, [r7, #296]
 483 0192 8AE0     		b	.L11
 484              	.L20:
 485              	.LBB6:
 150:main.c        ****                     step = 0;
 486              		.loc 1 150 0
 487 0194 6A4B     		ldr	r3, .L67+48
 488 0196 0022     		movs	r2, #0
 489 0198 1A60     		str	r2, [r3]
 151:main.c        ****                     char result1[24];
 152:main.c        ****                     char result2[24];
 153:main.c        ****                     if (motorUpdateCount == 1) {
 490              		.loc 1 153 0
 491 019a 684B     		ldr	r3, .L67+44
 492 019c 1B68     		ldr	r3, [r3]
 493 019e 012B     		cmp	r3, #1
 494 01a0 3DD1     		bne	.L12
 154:main.c        ****                         if (turnComplete == -1 || turnComplete == 1) {
 495              		.loc 1 154 0
 496 01a2 684B     		ldr	r3, .L67+52
 497 01a4 1B68     		ldr	r3, [r3]
 498 01a6 B3F1FF3F 		cmp	r3, #-1
 499 01aa 03D0     		beq	.L13
 500              		.loc 1 154 0 is_stmt 0 discriminator 1
 501 01ac 654B     		ldr	r3, .L67+52
 502 01ae 1B68     		ldr	r3, [r3]
 503 01b0 012B     		cmp	r3, #1
 504 01b2 2BD1     		bne	.L14
 505              	.L13:
 155:main.c        ****                             v2M1 = QuadDec_M1_GetCounter() * -1;
 506              		.loc 1 155 0 is_stmt 1
 507 01b4 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 508 01b8 0346     		mov	r3, r0
 509 01ba 5B42     		negs	r3, r3
 510 01bc 624A     		ldr	r2, .L67+56
 511 01be 1360     		str	r3, [r2]
 156:main.c        ****                             v2M2 = QuadDec_M2_GetCounter() * -1;
 512              		.loc 1 156 0
 513 01c0 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 514 01c4 0346     		mov	r3, r0
 515 01c6 5B42     		negs	r3, r3
 516 01c8 604A     		ldr	r2, .L67+60
 517 01ca 1360     		str	r3, [r2]
 157:main.c        ****                             pulsesTravelled = pulsesTravelled + v2M1 + v2M2;
 518              		.loc 1 157 0
 519 01cc 604B     		ldr	r3, .L67+64
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 13


 520 01ce 1A68     		ldr	r2, [r3]
 521 01d0 5D4B     		ldr	r3, .L67+56
 522 01d2 1B68     		ldr	r3, [r3]
 523 01d4 1A44     		add	r2, r2, r3
 524 01d6 5D4B     		ldr	r3, .L67+60
 525 01d8 1B68     		ldr	r3, [r3]
 526 01da 1344     		add	r3, r3, r2
 527 01dc 5C4A     		ldr	r2, .L67+64
 528 01de 1360     		str	r3, [r2]
 158:main.c        ****                             itoa((v2M1 - v1M1), result1, 10);
 529              		.loc 1 158 0
 530 01e0 594B     		ldr	r3, .L67+56
 531 01e2 1A68     		ldr	r2, [r3]
 532 01e4 5B4B     		ldr	r3, .L67+68
 533 01e6 1B68     		ldr	r3, [r3]
 534 01e8 D31A     		subs	r3, r2, r3
 535 01ea 07F1E401 		add	r1, r7, #228
 536 01ee 0A22     		movs	r2, #10
 537 01f0 1846     		mov	r0, r3
 538 01f2 FFF7FEFF 		bl	itoa
 159:main.c        ****                             itoa((v2M2 - v1M2), result2, 10);
 539              		.loc 1 159 0
 540 01f6 554B     		ldr	r3, .L67+60
 541 01f8 1A68     		ldr	r2, [r3]
 542 01fa 574B     		ldr	r3, .L67+72
 543 01fc 1B68     		ldr	r3, [r3]
 544 01fe D31A     		subs	r3, r2, r3
 545 0200 07F1CC01 		add	r1, r7, #204
 546 0204 0A22     		movs	r2, #10
 547 0206 1846     		mov	r0, r3
 548 0208 FFF7FEFF 		bl	itoa
 549              	.L14:
 160:main.c        ****                         }
 161:main.c        ****                         QuadDec_M1_SetCounter(0);
 550              		.loc 1 161 0
 551 020c 0020     		movs	r0, #0
 552 020e FFF7FEFF 		bl	QuadDec_M1_SetCounter
 162:main.c        ****                         QuadDec_M2_SetCounter(0);
 553              		.loc 1 162 0
 554 0212 0020     		movs	r0, #0
 555 0214 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 163:main.c        ****                         motorUpdateCount = 0;
 556              		.loc 1 163 0
 557 0218 484B     		ldr	r3, .L67+44
 558 021a 0022     		movs	r2, #0
 559 021c 1A60     		str	r2, [r3]
 560              	.L12:
 164:main.c        ****                     }
 165:main.c        ****                     if (valuesLeftIntersection[i] > 2000) {
 561              		.loc 1 165 0
 562 021e 424A     		ldr	r2, .L67+24
 563 0220 D7F82831 		ldr	r3, [r7, #296]
 564 0224 52F82330 		ldr	r3, [r2, r3, lsl #2]
 565 0228 B3F5FA6F 		cmp	r3, #2000
 566 022c 04DD     		ble	.L15
 166:main.c        ****                         highCountLeftIntersection++;
 567              		.loc 1 166 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 14


 568 022e D7F83C31 		ldr	r3, [r7, #316]
 569 0232 0133     		adds	r3, r3, #1
 570 0234 C7F83C31 		str	r3, [r7, #316]
 571              	.L15:
 167:main.c        **** 
 168:main.c        ****                     }
 169:main.c        **** 
 170:main.c        ****                     if (valuesLeftLine[i] > 2000) {
 572              		.loc 1 170 0
 573 0238 3C4A     		ldr	r2, .L67+28
 574 023a D7F82831 		ldr	r3, [r7, #296]
 575 023e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 576 0242 B3F5FA6F 		cmp	r3, #2000
 577 0246 04DD     		ble	.L16
 171:main.c        ****                         highCountLeftLine++;
 578              		.loc 1 171 0
 579 0248 D7F83831 		ldr	r3, [r7, #312]
 580 024c 0133     		adds	r3, r3, #1
 581 024e C7F83831 		str	r3, [r7, #312]
 582              	.L16:
 172:main.c        **** 
 173:main.c        ****                     }
 174:main.c        **** 
 175:main.c        ****                     if (valuesMiddleLine[i] > 2000) {
 583              		.loc 1 175 0
 584 0252 374A     		ldr	r2, .L67+32
 585 0254 D7F82831 		ldr	r3, [r7, #296]
 586 0258 52F82330 		ldr	r3, [r2, r3, lsl #2]
 587 025c B3F5FA6F 		cmp	r3, #2000
 588 0260 04DD     		ble	.L17
 176:main.c        ****                         highCountMiddleLine++;
 589              		.loc 1 176 0
 590 0262 D7F83431 		ldr	r3, [r7, #308]
 591 0266 0133     		adds	r3, r3, #1
 592 0268 C7F83431 		str	r3, [r7, #308]
 593              	.L17:
 177:main.c        **** 
 178:main.c        ****                     }
 179:main.c        **** 
 180:main.c        ****                     if (valuesRightLine[i] > 2000) {
 594              		.loc 1 180 0
 595 026c 314A     		ldr	r2, .L67+36
 596 026e D7F82831 		ldr	r3, [r7, #296]
 597 0272 52F82330 		ldr	r3, [r2, r3, lsl #2]
 598 0276 B3F5FA6F 		cmp	r3, #2000
 599 027a 04DD     		ble	.L18
 181:main.c        ****                         highCountRightLine++;
 600              		.loc 1 181 0
 601 027c D7F83031 		ldr	r3, [r7, #304]
 602 0280 0133     		adds	r3, r3, #1
 603 0282 C7F83031 		str	r3, [r7, #304]
 604              	.L18:
 182:main.c        **** 
 183:main.c        ****                     }
 184:main.c        **** 
 185:main.c        ****                     if (valuesRightIntersection[i] > 2000) {
 605              		.loc 1 185 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 15


 606 0286 2C4A     		ldr	r2, .L67+40
 607 0288 D7F82831 		ldr	r3, [r7, #296]
 608 028c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 609 0290 B3F5FA6F 		cmp	r3, #2000
 610 0294 04DD     		ble	.L19
 186:main.c        ****                         highCountRightIntersection++;
 611              		.loc 1 186 0
 612 0296 D7F82C31 		ldr	r3, [r7, #300]
 613 029a 0133     		adds	r3, r3, #1
 614 029c C7F82C31 		str	r3, [r7, #300]
 615              	.L19:
 616              	.LBE6:
 149:main.c        ****                     step = 0;
 617              		.loc 1 149 0 discriminator 2
 618 02a0 D7F82831 		ldr	r3, [r7, #296]
 619 02a4 0133     		adds	r3, r3, #1
 620 02a6 C7F82831 		str	r3, [r7, #296]
 621              	.L11:
 149:main.c        ****                     step = 0;
 622              		.loc 1 149 0 is_stmt 0 discriminator 1
 623 02aa D7F82831 		ldr	r3, [r7, #296]
 624 02ae B3F5FA7F 		cmp	r3, #500
 625 02b2 FFF66FAF 		blt	.L20
 626              	.LBE5:
 187:main.c        **** 
 188:main.c        ****                     }
 189:main.c        **** 
 190:main.c        ****                 }
 191:main.c        **** 
 192:main.c        ****                 if (started == 0) {
 627              		.loc 1 192 0 is_stmt 1
 628 02b6 294B     		ldr	r3, .L67+76
 629 02b8 1B68     		ldr	r3, [r3]
 630 02ba 002B     		cmp	r3, #0
 631 02bc 40F0AD80 		bne	.L21
 632              	.LBB7:
 193:main.c        ****                    
 194:main.c        ****                     int i, firstNonZeroIndex = -1;
 633              		.loc 1 194 0
 634 02c0 4FF0FF33 		mov	r3, #-1
 635 02c4 C7F82031 		str	r3, [r7, #288]
 195:main.c        ****                     for (i = 0; i < 500; i++) {
 636              		.loc 1 195 0
 637 02c8 0023     		movs	r3, #0
 638 02ca C7F82431 		str	r3, [r7, #292]
 639 02ce 10E0     		b	.L22
 640              	.L25:
 196:main.c        ****                         if (instruction[i] != 0) {
 641              		.loc 1 196 0
 642 02d0 114A     		ldr	r2, .L67+8
 643 02d2 D7F82431 		ldr	r3, [r7, #292]
 644 02d6 1344     		add	r3, r3, r2
 645 02d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 646 02da 002B     		cmp	r3, #0
 647 02dc 04D0     		beq	.L23
 197:main.c        ****                             firstNonZeroIndex = i;
 648              		.loc 1 197 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 16


 649 02de D7F82431 		ldr	r3, [r7, #292]
 650 02e2 C7F82031 		str	r3, [r7, #288]
 198:main.c        ****                             break;
 651              		.loc 1 198 0
 652 02e6 09E0     		b	.L24
 653              	.L23:
 195:main.c        ****                         if (instruction[i] != 0) {
 654              		.loc 1 195 0 discriminator 2
 655 02e8 D7F82431 		ldr	r3, [r7, #292]
 656 02ec 0133     		adds	r3, r3, #1
 657 02ee C7F82431 		str	r3, [r7, #292]
 658              	.L22:
 195:main.c        ****                         if (instruction[i] != 0) {
 659              		.loc 1 195 0 is_stmt 0 discriminator 1
 660 02f2 D7F82431 		ldr	r3, [r7, #292]
 661 02f6 B3F5FA7F 		cmp	r3, #500
 662 02fa E9DB     		blt	.L25
 663              	.L24:
 199:main.c        ****                         }
 200:main.c        ****                     }
 201:main.c        **** 
 202:main.c        ****                     if (firstNonZeroIndex != -1) {
 664              		.loc 1 202 0 is_stmt 1
 665 02fc D7F82031 		ldr	r3, [r7, #288]
 666 0300 B3F1FF3F 		cmp	r3, #-1
 667 0304 70D0     		beq	.L26
 203:main.c        ****                         // Shift the array to start with the first non-zero element
 204:main.c        ****                         for (i = 0; i < 500 - firstNonZeroIndex; i++) {
 668              		.loc 1 204 0
 669 0306 0023     		movs	r3, #0
 670 0308 C7F82431 		str	r3, [r7, #292]
 671 030c 47E0     		b	.L27
 672              	.L68:
 673 030e 00BF     		.align	2
 674              	.L67:
 675 0310 00000000 		.word	eoc
 676 0314 00000000 		.word	squares
 677 0318 00000000 		.word	instruction
 678 031c 00000000 		.word	distance
 679 0320 00000000 		.word	flag
 680 0324 00000000 		.word	count
 681 0328 00000000 		.word	valuesLeftIntersection
 682 032c 00000000 		.word	valuesLeftLine
 683 0330 00000000 		.word	valuesMiddleLine
 684 0334 00000000 		.word	valuesRightLine
 685 0338 00000000 		.word	valuesRightIntersection
 686 033c 00000000 		.word	motorUpdateCount
 687 0340 00000000 		.word	step
 688 0344 00000000 		.word	turnComplete
 689 0348 00000000 		.word	v2M1
 690 034c 00000000 		.word	v2M2
 691 0350 00000000 		.word	pulsesTravelled
 692 0354 00000000 		.word	v1M1
 693 0358 00000000 		.word	v1M2
 694 035c 00000000 		.word	started
 695              	.L28:
 205:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 17


 696              		.loc 1 205 0 discriminator 3
 697 0360 D7F82421 		ldr	r2, [r7, #292]
 698 0364 D7F82031 		ldr	r3, [r7, #288]
 699 0368 1344     		add	r3, r3, r2
 700 036a BD4A     		ldr	r2, .L69
 701 036c D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 702 036e BC4A     		ldr	r2, .L69
 703 0370 D7F82431 		ldr	r3, [r7, #292]
 704 0374 1344     		add	r3, r3, r2
 705 0376 0A46     		mov	r2, r1
 706 0378 1A70     		strb	r2, [r3]
 206:main.c        ****                             distance[i] = distance[i + firstNonZeroIndex];
 707              		.loc 1 206 0 discriminator 3
 708 037a D7F82421 		ldr	r2, [r7, #292]
 709 037e D7F82031 		ldr	r3, [r7, #288]
 710 0382 1344     		add	r3, r3, r2
 711 0384 B74A     		ldr	r2, .L69+4
 712 0386 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 713 0388 B64A     		ldr	r2, .L69+4
 714 038a D7F82431 		ldr	r3, [r7, #292]
 715 038e 1344     		add	r3, r3, r2
 716 0390 0A46     		mov	r2, r1
 717 0392 1A70     		strb	r2, [r3]
 204:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 718              		.loc 1 204 0 discriminator 3
 719 0394 D7F82431 		ldr	r3, [r7, #292]
 720 0398 0133     		adds	r3, r3, #1
 721 039a C7F82431 		str	r3, [r7, #292]
 722              	.L27:
 204:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 723              		.loc 1 204 0 is_stmt 0 discriminator 1
 724 039e D7F82031 		ldr	r3, [r7, #288]
 725 03a2 C3F5FA72 		rsb	r2, r3, #500
 726 03a6 D7F82431 		ldr	r3, [r7, #292]
 727 03aa 9A42     		cmp	r2, r3
 728 03ac D8DC     		bgt	.L28
 207:main.c        ****                         }
 208:main.c        **** 
 209:main.c        ****                         // Zero out the remaining elements
 210:main.c        ****                         for (i = 500 - firstNonZeroIndex; i < 500; i++) {
 729              		.loc 1 210 0 is_stmt 1
 730 03ae D7F82031 		ldr	r3, [r7, #288]
 731 03b2 C3F5FA73 		rsb	r3, r3, #500
 732 03b6 C7F82431 		str	r3, [r7, #292]
 733 03ba 10E0     		b	.L29
 734              	.L30:
 211:main.c        ****                             instruction[i] = 0;
 735              		.loc 1 211 0 discriminator 3
 736 03bc A84A     		ldr	r2, .L69
 737 03be D7F82431 		ldr	r3, [r7, #292]
 738 03c2 1344     		add	r3, r3, r2
 739 03c4 0022     		movs	r2, #0
 740 03c6 1A70     		strb	r2, [r3]
 212:main.c        ****                             distance[i] = 0;
 741              		.loc 1 212 0 discriminator 3
 742 03c8 A64A     		ldr	r2, .L69+4
 743 03ca D7F82431 		ldr	r3, [r7, #292]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 18


 744 03ce 1344     		add	r3, r3, r2
 745 03d0 0022     		movs	r2, #0
 746 03d2 1A70     		strb	r2, [r3]
 210:main.c        ****                             instruction[i] = 0;
 747              		.loc 1 210 0 discriminator 3
 748 03d4 D7F82431 		ldr	r3, [r7, #292]
 749 03d8 0133     		adds	r3, r3, #1
 750 03da C7F82431 		str	r3, [r7, #292]
 751              	.L29:
 210:main.c        ****                             instruction[i] = 0;
 752              		.loc 1 210 0 is_stmt 0 discriminator 1
 753 03de D7F82431 		ldr	r3, [r7, #292]
 754 03e2 B3F5FA7F 		cmp	r3, #500
 755 03e6 E9DB     		blt	.L30
 756              	.L26:
 757              	.LBB8:
 213:main.c        ****                         }
 214:main.c        **** 
 215:main.c        ****                     } else {
 216:main.c        ****                         // The array contains all zeros
 217:main.c        **** 
 218:main.c        ****                     }
 219:main.c        ****                     
 220:main.c        ****                     for (int i = 0; i < 500; i++) {
 758              		.loc 1 220 0 is_stmt 1
 759 03e8 0023     		movs	r3, #0
 760 03ea C7F81C31 		str	r3, [r7, #284]
 761 03ee 04E0     		b	.L31
 762              	.L32:
 763              		.loc 1 220 0 is_stmt 0 discriminator 3
 764 03f0 D7F81C31 		ldr	r3, [r7, #284]
 765 03f4 0133     		adds	r3, r3, #1
 766 03f6 C7F81C31 		str	r3, [r7, #284]
 767              	.L31:
 768              		.loc 1 220 0 discriminator 1
 769 03fa D7F81C31 		ldr	r3, [r7, #284]
 770 03fe B3F5FA7F 		cmp	r3, #500
 771 0402 F5DB     		blt	.L32
 772              	.LBE8:
 221:main.c        **** 
 222:main.c        ****                         char instStr[24];
 223:main.c        **** 
 224:main.c        ****                       //  snprintf(instStr, sizeof(instStr), "%u - %u \r\n", (unsigned char) instru
 225:main.c        **** 
 226:main.c        ****                        // usbPutString(instStr);
 227:main.c        ****                     }
 228:main.c        ****                     started = 1;
 773              		.loc 1 228 0 is_stmt 1
 774 0404 984B     		ldr	r3, .L69+8
 775 0406 0122     		movs	r2, #1
 776 0408 1A60     		str	r2, [r3]
 229:main.c        ****                     turnComplete = -1; //let the robot travel forward first
 777              		.loc 1 229 0
 778 040a 984B     		ldr	r3, .L69+12
 779 040c 4FF0FF32 		mov	r2, #-1
 780 0410 1A60     		str	r2, [r3]
 230:main.c        ****                     checkDistance = 0; //robot checks/stops distance when this is on
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 19


 781              		.loc 1 230 0
 782 0412 974B     		ldr	r3, .L69+16
 783 0414 0022     		movs	r2, #0
 784 0416 1A60     		str	r2, [r3]
 785              	.LBE7:
 786 0418 F7E1     		b	.L10
 787              	.L21:
 788              	.LBB9:
 231:main.c        ****                     
 232:main.c        ****                 } else {
 233:main.c        ****                     //LED_PIN_1_Write(!LED_PIN_1_Read());
 234:main.c        ****                     started = 1;
 789              		.loc 1 234 0
 790 041a 934B     		ldr	r3, .L69+8
 791 041c 0122     		movs	r2, #1
 792 041e 1A60     		str	r2, [r3]
 235:main.c        **** 
 236:main.c        ****                     char currentInst = instruction[instCounter];
 793              		.loc 1 236 0
 794 0420 944B     		ldr	r3, .L69+20
 795 0422 1B68     		ldr	r3, [r3]
 796 0424 8E4A     		ldr	r2, .L69
 797 0426 D35C     		ldrb	r3, [r2, r3]
 798 0428 87F81731 		strb	r3, [r7, #279]
 237:main.c        ****                     char nextInst = instruction[instCounter + 1];
 799              		.loc 1 237 0
 800 042c 914B     		ldr	r3, .L69+20
 801 042e 1B68     		ldr	r3, [r3]
 802 0430 0133     		adds	r3, r3, #1
 803 0432 8B4A     		ldr	r2, .L69
 804 0434 D35C     		ldrb	r3, [r2, r3]
 805 0436 87F81631 		strb	r3, [r7, #278]
 238:main.c        ****                     if (currentInst == 0) {
 806              		.loc 1 238 0
 807 043a 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 808 043e 002B     		cmp	r3, #0
 809 0440 14D1     		bne	.L33
 239:main.c        ****                         //LED_PIN_1_Write(0);
 240:main.c        ****                         //LED_PIN_6_Write(0);
 241:main.c        ****                         stop();
 810              		.loc 1 241 0
 811 0442 FFF7FEFF 		bl	stop
 242:main.c        ****                         // Stop
 243:main.c        ****                         CyDelay(1000);
 812              		.loc 1 243 0
 813 0446 4FF47A70 		mov	r0, #1000
 814 044a FFF7FEFF 		bl	CyDelay
 244:main.c        ****                         if (nextInst == 1 || nextInst == 5) {
 815              		.loc 1 244 0
 816 044e 97F81631 		ldrb	r3, [r7, #278]	@ zero_extendqisi2
 817 0452 012B     		cmp	r3, #1
 818 0454 04D0     		beq	.L34
 819              		.loc 1 244 0 is_stmt 0 discriminator 1
 820 0456 97F81631 		ldrb	r3, [r7, #278]	@ zero_extendqisi2
 821 045a 052B     		cmp	r3, #5
 822 045c 40F0DE80 		bne	.L36
 823              	.L34:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 20


 245:main.c        ****                             turnLeft();
 824              		.loc 1 245 0 is_stmt 1
 825 0460 FFF7FEFF 		bl	turnLeft
 246:main.c        ****                             CyDelay(50);
 826              		.loc 1 246 0
 827 0464 3220     		movs	r0, #50
 828 0466 FFF7FEFF 		bl	CyDelay
 829 046a D7E0     		b	.L36
 830              	.L33:
 247:main.c        ****                         }
 248:main.c        ****                     } else if ((currentInst == 1 || currentInst == 5)&& turnComplete == -1) {
 831              		.loc 1 248 0
 832 046c 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 833 0470 012B     		cmp	r3, #1
 834 0472 03D0     		beq	.L37
 835              		.loc 1 248 0 is_stmt 0 discriminator 2
 836 0474 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 837 0478 052B     		cmp	r3, #5
 838 047a 11D1     		bne	.L38
 839              	.L37:
 840              		.loc 1 248 0 discriminator 3
 841 047c 7B4B     		ldr	r3, .L69+12
 842 047e 1B68     		ldr	r3, [r3]
 843 0480 B3F1FF3F 		cmp	r3, #-1
 844 0484 0CD1     		bne	.L38
 249:main.c        ****                         //LED_PIN_1_Write(1);
 250:main.c        ****                         //LED_PIN_6_Write(0);
 251:main.c        ****                         turnComplete = 0;
 845              		.loc 1 251 0 is_stmt 1
 846 0486 794B     		ldr	r3, .L69+12
 847 0488 0022     		movs	r2, #0
 848 048a 1A60     		str	r2, [r3]
 252:main.c        ****                         turnLeft();
 849              		.loc 1 252 0
 850 048c FFF7FEFF 		bl	turnLeft
 253:main.c        ****                         //LED_PIN_4_Write(0);
 254:main.c        ****                         CyDelay(300);
 851              		.loc 1 254 0
 852 0490 4FF49670 		mov	r0, #300
 853 0494 FFF7FEFF 		bl	CyDelay
 255:main.c        ****                         pulsesTravelled = 0;
 854              		.loc 1 255 0
 855 0498 774B     		ldr	r3, .L69+24
 856 049a 0022     		movs	r2, #0
 857 049c 1A60     		str	r2, [r3]
 858 049e BDE0     		b	.L36
 859              	.L38:
 256:main.c        ****                         // Complete a left turn, then follow line
 257:main.c        **** 
 258:main.c        ****                     } else if ((currentInst == 1 || currentInst == 5) && turnComplete == 0) {
 860              		.loc 1 258 0
 861 04a0 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 862 04a4 012B     		cmp	r3, #1
 863 04a6 03D0     		beq	.L39
 864              		.loc 1 258 0 is_stmt 0 discriminator 2
 865 04a8 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 866 04ac 052B     		cmp	r3, #5
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 21


 867 04ae 20D1     		bne	.L40
 868              	.L39:
 869              		.loc 1 258 0 discriminator 3
 870 04b0 6E4B     		ldr	r3, .L69+12
 871 04b2 1B68     		ldr	r3, [r3]
 872 04b4 002B     		cmp	r3, #0
 873 04b6 1CD1     		bne	.L40
 259:main.c        ****                         lastAdjustDirection = 0;
 874              		.loc 1 259 0 is_stmt 1
 875 04b8 704B     		ldr	r3, .L69+28
 876 04ba 0022     		movs	r2, #0
 877 04bc 1A60     		str	r2, [r3]
 260:main.c        ****                         if (R_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 878              		.loc 1 260 0
 879 04be D7F83031 		ldr	r3, [r7, #304]
 880 04c2 4A2B     		cmp	r3, #74
 881 04c4 11DC     		bgt	.L41
 261:main.c        ****                             turnComplete = 1;
 882              		.loc 1 261 0
 883 04c6 694B     		ldr	r3, .L69+12
 884 04c8 0122     		movs	r2, #1
 885 04ca 1A60     		str	r2, [r3]
 262:main.c        ****                             stop();
 886              		.loc 1 262 0
 887 04cc FFF7FEFF 		bl	stop
 263:main.c        ****                             CyDelay(200);
 888              		.loc 1 263 0
 889 04d0 C820     		movs	r0, #200
 890 04d2 FFF7FEFF 		bl	CyDelay
 264:main.c        ****                             
 265:main.c        ****                             adjustRight();
 891              		.loc 1 265 0
 892 04d6 FFF7FEFF 		bl	adjustRight
 266:main.c        ****                             CyDelay(225);
 893              		.loc 1 266 0
 894 04da E120     		movs	r0, #225
 895 04dc FFF7FEFF 		bl	CyDelay
 267:main.c        ****                             
 268:main.c        ****                             stop();
 896              		.loc 1 268 0
 897 04e0 FFF7FEFF 		bl	stop
 269:main.c        ****                             CyDelay(200);
 898              		.loc 1 269 0
 899 04e4 C820     		movs	r0, #200
 900 04e6 FFF7FEFF 		bl	CyDelay
 901              	.L41:
 270:main.c        ****                         }
 271:main.c        ****                         pulsesTravelled = 0;
 902              		.loc 1 271 0
 903 04ea 634B     		ldr	r3, .L69+24
 904 04ec 0022     		movs	r2, #0
 905 04ee 1A60     		str	r2, [r3]
 906 04f0 94E0     		b	.L36
 907              	.L40:
 272:main.c        ****                     } else if (currentInst == 2 || currentInst == 6) {
 908              		.loc 1 272 0
 909 04f2 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 22


 910 04f6 022B     		cmp	r3, #2
 911 04f8 00F09080 		beq	.L36
 912              		.loc 1 272 0 is_stmt 0 discriminator 1
 913 04fc 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 914 0500 062B     		cmp	r3, #6
 915 0502 00F08B80 		beq	.L36
 273:main.c        ****                         //LED_PIN_1_Write(1);
 274:main.c        ****                         //LED_PIN_6_Write(1);
 275:main.c        ****                         // Drive straight
 276:main.c        ****                         
 277:main.c        ****                         
 278:main.c        ****                     } else if ((currentInst == 3||currentInst == 7) && turnComplete == -1) {
 916              		.loc 1 278 0 is_stmt 1
 917 0506 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 918 050a 032B     		cmp	r3, #3
 919 050c 03D0     		beq	.L42
 920              		.loc 1 278 0 is_stmt 0 discriminator 2
 921 050e 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 922 0512 072B     		cmp	r3, #7
 923 0514 11D1     		bne	.L43
 924              	.L42:
 925              		.loc 1 278 0 discriminator 3
 926 0516 554B     		ldr	r3, .L69+12
 927 0518 1B68     		ldr	r3, [r3]
 928 051a B3F1FF3F 		cmp	r3, #-1
 929 051e 0CD1     		bne	.L43
 279:main.c        ****                         //LED_PIN_1_Write(0);
 280:main.c        ****                         //LED_PIN_6_Write(1);
 281:main.c        ****                         turnComplete = 0;
 930              		.loc 1 281 0 is_stmt 1
 931 0520 524B     		ldr	r3, .L69+12
 932 0522 0022     		movs	r2, #0
 933 0524 1A60     		str	r2, [r3]
 282:main.c        ****                         turnRight();
 934              		.loc 1 282 0
 935 0526 FFF7FEFF 		bl	turnRight
 283:main.c        ****                         //LED_PIN_4_Write(0);
 284:main.c        ****                         CyDelay(300);
 936              		.loc 1 284 0
 937 052a 4FF49670 		mov	r0, #300
 938 052e FFF7FEFF 		bl	CyDelay
 285:main.c        ****                         pulsesTravelled = 0;
 939              		.loc 1 285 0
 940 0532 514B     		ldr	r3, .L69+24
 941 0534 0022     		movs	r2, #0
 942 0536 1A60     		str	r2, [r3]
 943 0538 70E0     		b	.L36
 944              	.L43:
 286:main.c        **** 
 287:main.c        ****                     } else if ((currentInst == 3||currentInst == 7) && turnComplete == 0) {
 945              		.loc 1 287 0
 946 053a 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 947 053e 032B     		cmp	r3, #3
 948 0540 03D0     		beq	.L44
 949              		.loc 1 287 0 is_stmt 0 discriminator 2
 950 0542 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 951 0546 072B     		cmp	r3, #7
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 23


 952 0548 29D1     		bne	.L45
 953              	.L44:
 954              		.loc 1 287 0 discriminator 3
 955 054a 484B     		ldr	r3, .L69+12
 956 054c 1B68     		ldr	r3, [r3]
 957 054e 002B     		cmp	r3, #0
 958 0550 25D1     		bne	.L45
 288:main.c        ****                         lastAdjustDirection = 2;
 959              		.loc 1 288 0 is_stmt 1
 960 0552 4A4B     		ldr	r3, .L69+28
 961 0554 0222     		movs	r2, #2
 962 0556 1A60     		str	r2, [r3]
 289:main.c        ****                         if (L_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 963              		.loc 1 289 0
 964 0558 D7F83831 		ldr	r3, [r7, #312]
 965 055c 4A2B     		cmp	r3, #74
 966 055e 1ADC     		bgt	.L46
 290:main.c        ****                             turnComplete = 1;
 967              		.loc 1 290 0
 968 0560 424B     		ldr	r3, .L69+12
 969 0562 0122     		movs	r2, #1
 970 0564 1A60     		str	r2, [r3]
 291:main.c        ****                             stop();
 971              		.loc 1 291 0
 972 0566 FFF7FEFF 		bl	stop
 292:main.c        ****                             CyDelay(200);
 973              		.loc 1 292 0
 974 056a C820     		movs	r0, #200
 975 056c FFF7FEFF 		bl	CyDelay
 293:main.c        ****                             pulsesTravelled = 0;
 976              		.loc 1 293 0
 977 0570 414B     		ldr	r3, .L69+24
 978 0572 0022     		movs	r2, #0
 979 0574 1A60     		str	r2, [r3]
 294:main.c        ****                             
 295:main.c        ****                             adjustLeft();
 980              		.loc 1 295 0
 981 0576 FFF7FEFF 		bl	adjustLeft
 296:main.c        ****                             CyDelay(225);
 982              		.loc 1 296 0
 983 057a E120     		movs	r0, #225
 984 057c FFF7FEFF 		bl	CyDelay
 297:main.c        ****                             pulsesTravelled = 0;
 985              		.loc 1 297 0
 986 0580 3D4B     		ldr	r3, .L69+24
 987 0582 0022     		movs	r2, #0
 988 0584 1A60     		str	r2, [r3]
 298:main.c        ****                             
 299:main.c        ****                             stop();
 989              		.loc 1 299 0
 990 0586 FFF7FEFF 		bl	stop
 300:main.c        ****                             CyDelay(200);
 991              		.loc 1 300 0
 992 058a C820     		movs	r0, #200
 993 058c FFF7FEFF 		bl	CyDelay
 301:main.c        ****                             pulsesTravelled = 0;
 994              		.loc 1 301 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 24


 995 0590 394B     		ldr	r3, .L69+24
 996 0592 0022     		movs	r2, #0
 997 0594 1A60     		str	r2, [r3]
 998              	.L46:
 302:main.c        ****                         }
 303:main.c        ****                         pulsesTravelled = 0;
 999              		.loc 1 303 0
 1000 0596 384B     		ldr	r3, .L69+24
 1001 0598 0022     		movs	r2, #0
 1002 059a 1A60     		str	r2, [r3]
 1003 059c 3EE0     		b	.L36
 1004              	.L45:
 304:main.c        ****                     } else if ((currentInst == 4||currentInst == 8) && turnComplete == -1) {
 1005              		.loc 1 304 0
 1006 059e 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1007 05a2 042B     		cmp	r3, #4
 1008 05a4 03D0     		beq	.L47
 1009              		.loc 1 304 0 is_stmt 0 discriminator 2
 1010 05a6 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1011 05aa 082B     		cmp	r3, #8
 1012 05ac 11D1     		bne	.L48
 1013              	.L47:
 1014              		.loc 1 304 0 discriminator 3
 1015 05ae 2F4B     		ldr	r3, .L69+12
 1016 05b0 1B68     		ldr	r3, [r3]
 1017 05b2 B3F1FF3F 		cmp	r3, #-1
 1018 05b6 0CD1     		bne	.L48
 305:main.c        ****                         //LED_PIN_1_Write(0);
 306:main.c        ****                         //LED_PIN_6_Write(0);
 307:main.c        ****                         turnComplete = 0;
 1019              		.loc 1 307 0 is_stmt 1
 1020 05b8 2C4B     		ldr	r3, .L69+12
 1021 05ba 0022     		movs	r2, #0
 1022 05bc 1A60     		str	r2, [r3]
 308:main.c        ****                         turnRight();
 1023              		.loc 1 308 0
 1024 05be FFF7FEFF 		bl	turnRight
 309:main.c        ****                         //LED_PIN_4_Write(0);
 310:main.c        ****                         CyDelay(500);
 1025              		.loc 1 310 0
 1026 05c2 4FF4FA70 		mov	r0, #500
 1027 05c6 FFF7FEFF 		bl	CyDelay
 311:main.c        ****                         pulsesTravelled = 0;
 1028              		.loc 1 311 0
 1029 05ca 2B4B     		ldr	r3, .L69+24
 1030 05cc 0022     		movs	r2, #0
 1031 05ce 1A60     		str	r2, [r3]
 1032 05d0 24E0     		b	.L36
 1033              	.L48:
 312:main.c        **** 
 313:main.c        ****                     } else if ((currentInst == 4||currentInst == 8) && turnComplete == 0) {
 1034              		.loc 1 313 0
 1035 05d2 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1036 05d6 042B     		cmp	r3, #4
 1037 05d8 03D0     		beq	.L49
 1038              		.loc 1 313 0 is_stmt 0 discriminator 2
 1039 05da 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 25


 1040 05de 082B     		cmp	r3, #8
 1041 05e0 1CD1     		bne	.L36
 1042              	.L49:
 1043              		.loc 1 313 0 discriminator 3
 1044 05e2 224B     		ldr	r3, .L69+12
 1045 05e4 1B68     		ldr	r3, [r3]
 1046 05e6 002B     		cmp	r3, #0
 1047 05e8 18D1     		bne	.L36
 314:main.c        ****                         //LED_PIN_1_Write(0);
 315:main.c        ****                         //LED_PIN_6_Write(0);
 316:main.c        ****                         // Do a 180, then follow line
 317:main.c        ****                         if (R_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 1048              		.loc 1 317 0 is_stmt 1
 1049 05ea D7F83031 		ldr	r3, [r7, #304]
 1050 05ee 4A2B     		cmp	r3, #74
 1051 05f0 11DC     		bgt	.L50
 318:main.c        ****                             turnComplete = 1;
 1052              		.loc 1 318 0
 1053 05f2 1E4B     		ldr	r3, .L69+12
 1054 05f4 0122     		movs	r2, #1
 1055 05f6 1A60     		str	r2, [r3]
 319:main.c        ****                             stop();
 1056              		.loc 1 319 0
 1057 05f8 FFF7FEFF 		bl	stop
 320:main.c        ****                             CyDelay(200);
 1058              		.loc 1 320 0
 1059 05fc C820     		movs	r0, #200
 1060 05fe FFF7FEFF 		bl	CyDelay
 321:main.c        ****                             
 322:main.c        ****                             adjustLeft();
 1061              		.loc 1 322 0
 1062 0602 FFF7FEFF 		bl	adjustLeft
 323:main.c        ****                             CyDelay(225);
 1063              		.loc 1 323 0
 1064 0606 E120     		movs	r0, #225
 1065 0608 FFF7FEFF 		bl	CyDelay
 324:main.c        ****                             
 325:main.c        ****                             stop();
 1066              		.loc 1 325 0
 1067 060c FFF7FEFF 		bl	stop
 326:main.c        ****                             CyDelay(200);
 1068              		.loc 1 326 0
 1069 0610 C820     		movs	r0, #200
 1070 0612 FFF7FEFF 		bl	CyDelay
 1071              	.L50:
 327:main.c        ****                         }
 328:main.c        ****                         pulsesTravelled = 0;
 1072              		.loc 1 328 0
 1073 0616 184B     		ldr	r3, .L69+24
 1074 0618 0022     		movs	r2, #0
 1075 061a 1A60     		str	r2, [r3]
 1076              	.L36:
 329:main.c        ****                    
 330:main.c        ****                     }
 331:main.c        **** 
 332:main.c        ****                     //only allow code to straighten if turn is complete
 333:main.c        ****                     if (turnComplete != 0 ) {
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 26


 1077              		.loc 1 333 0
 1078 061c 134B     		ldr	r3, .L69+12
 1079 061e 1B68     		ldr	r3, [r3]
 1080 0620 002B     		cmp	r3, #0
 1081 0622 00F0F280 		beq	.L10
 1082              	.LBB10:
 334:main.c        ****                         if ((M_LINE_BLACK && L_LINE_BLACK)) { // if robot slightly too far right
 1083              		.loc 1 334 0
 1084 0626 D7F83431 		ldr	r3, [r7, #308]
 1085 062a 4A2B     		cmp	r3, #74
 1086 062c 09DC     		bgt	.L52
 1087              		.loc 1 334 0 is_stmt 0 discriminator 1
 1088 062e D7F83831 		ldr	r3, [r7, #312]
 1089 0632 4A2B     		cmp	r3, #74
 1090 0634 05DC     		bgt	.L52
 335:main.c        ****                             adjustLeft();
 1091              		.loc 1 335 0 is_stmt 1
 1092 0636 FFF7FEFF 		bl	adjustLeft
 336:main.c        ****                             lastAdjustDirection = 0;
 1093              		.loc 1 336 0
 1094 063a 104B     		ldr	r3, .L69+28
 1095 063c 0022     		movs	r2, #0
 1096 063e 1A60     		str	r2, [r3]
 1097 0640 4EE0     		b	.L53
 1098              	.L52:
 337:main.c        **** 
 338:main.c        ****                         } else if (M_LINE_BLACK && R_LINE_BLACK) { //  if robot slightly too far le
 1099              		.loc 1 338 0
 1100 0642 D7F83431 		ldr	r3, [r7, #308]
 1101 0646 4A2B     		cmp	r3, #74
 1102 0648 1ADC     		bgt	.L54
 1103              		.loc 1 338 0 is_stmt 0 discriminator 1
 1104 064a D7F83031 		ldr	r3, [r7, #304]
 1105 064e 4A2B     		cmp	r3, #74
 1106 0650 16DC     		bgt	.L54
 339:main.c        ****                             adjustRight();
 1107              		.loc 1 339 0 is_stmt 1
 1108 0652 FFF7FEFF 		bl	adjustRight
 340:main.c        ****                             lastAdjustDirection = 2;
 1109              		.loc 1 340 0
 1110 0656 094B     		ldr	r3, .L69+28
 1111 0658 0222     		movs	r2, #2
 1112 065a 1A60     		str	r2, [r3]
 1113 065c 40E0     		b	.L53
 1114              	.L70:
 1115 065e 00BF     		.align	2
 1116              	.L69:
 1117 0660 00000000 		.word	instruction
 1118 0664 00000000 		.word	distance
 1119 0668 00000000 		.word	started
 1120 066c 00000000 		.word	turnComplete
 1121 0670 00000000 		.word	checkDistance
 1122 0674 00000000 		.word	instCounter
 1123 0678 00000000 		.word	pulsesTravelled
 1124 067c 00000000 		.word	lastAdjustDirection
 1125              	.L54:
 341:main.c        **** 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 27


 342:main.c        ****                         } else if (M_LINE_BLACK) { // if robot in the center keep moving straight
 1126              		.loc 1 342 0
 1127 0680 D7F83431 		ldr	r3, [r7, #308]
 1128 0684 4A2B     		cmp	r3, #74
 1129 0686 07DC     		bgt	.L55
 343:main.c        ****                             lastAdjustDirection = 1;
 1130              		.loc 1 343 0
 1131 0688 654B     		ldr	r3, .L71+8
 1132 068a 0122     		movs	r2, #1
 1133 068c 1A60     		str	r2, [r3]
 344:main.c        ****                             driveForward(0, 0);
 1134              		.loc 1 344 0
 1135 068e 0021     		movs	r1, #0
 1136 0690 0020     		movs	r0, #0
 1137 0692 FFF7FEFF 		bl	driveForward
 1138 0696 23E0     		b	.L53
 1139              	.L55:
 345:main.c        **** 
 346:main.c        ****                         } else if (R_LINE_BLACK) { // if robot too far left
 1140              		.loc 1 346 0
 1141 0698 D7F83031 		ldr	r3, [r7, #304]
 1142 069c 4A2B     		cmp	r3, #74
 1143 069e 05DC     		bgt	.L56
 347:main.c        ****                             adjustRight();
 1144              		.loc 1 347 0
 1145 06a0 FFF7FEFF 		bl	adjustRight
 348:main.c        ****                             lastAdjustDirection = 2;
 1146              		.loc 1 348 0
 1147 06a4 5E4B     		ldr	r3, .L71+8
 1148 06a6 0222     		movs	r2, #2
 1149 06a8 1A60     		str	r2, [r3]
 1150 06aa 19E0     		b	.L53
 1151              	.L56:
 349:main.c        **** 
 350:main.c        ****                         } else if (L_LINE_BLACK) { // if robot too far right
 1152              		.loc 1 350 0
 1153 06ac D7F83831 		ldr	r3, [r7, #312]
 1154 06b0 4A2B     		cmp	r3, #74
 1155 06b2 05DC     		bgt	.L57
 351:main.c        ****                             adjustLeft();
 1156              		.loc 1 351 0
 1157 06b4 FFF7FEFF 		bl	adjustLeft
 352:main.c        ****                             lastAdjustDirection = 0;
 1158              		.loc 1 352 0
 1159 06b8 594B     		ldr	r3, .L71+8
 1160 06ba 0022     		movs	r2, #0
 1161 06bc 1A60     		str	r2, [r3]
 1162 06be 0FE0     		b	.L53
 1163              	.L57:
 353:main.c        ****                         
 354:main.c        **** 
 355:main.c        ****                         } else { // completely lost find way
 356:main.c        ****                             if (lastAdjustDirection == 0) {
 1164              		.loc 1 356 0
 1165 06c0 574B     		ldr	r3, .L71+8
 1166 06c2 1B68     		ldr	r3, [r3]
 1167 06c4 002B     		cmp	r3, #0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 28


 1168 06c6 02D1     		bne	.L58
 357:main.c        ****                                 adjustLeft();
 1169              		.loc 1 357 0
 1170 06c8 FFF7FEFF 		bl	adjustLeft
 1171 06cc 08E0     		b	.L53
 1172              	.L58:
 358:main.c        ****                             } else if (lastAdjustDirection == 1) { // last movement was forward (mi
 1173              		.loc 1 358 0
 1174 06ce 544B     		ldr	r3, .L71+8
 1175 06d0 1B68     		ldr	r3, [r3]
 1176 06d2 012B     		cmp	r3, #1
 1177 06d4 02D1     		bne	.L59
 359:main.c        ****                                 //hardAdjustLeft();
 360:main.c        ****                                 adjustRight();
 1178              		.loc 1 360 0
 1179 06d6 FFF7FEFF 		bl	adjustRight
 1180 06da 01E0     		b	.L53
 1181              	.L59:
 361:main.c        ****                             } else {
 362:main.c        ****                                 adjustRight();
 1182              		.loc 1 362 0
 1183 06dc FFF7FEFF 		bl	adjustRight
 1184              	.L53:
 363:main.c        ****                             }
 364:main.c        **** 
 365:main.c        ****                         }
 366:main.c        ****                         
 367:main.c        **** 
 368:main.c        ****                         // UPDATE INSTRUCTION LOGIC GOES HERE
 369:main.c        ****                         //LED_PIN_2_Write(0);
 370:main.c        ****                         //LED_PIN_3_Write(0);
 371:main.c        ****                         //LED_PIN_4_Write(0);
 372:main.c        ****                         char dist[24];
 373:main.c        ****                         char pulses[24];
 374:main.c        ****                         char first[24];
 375:main.c        ****                         char second[24];
 376:main.c        ****                         //57 pulses on 1 motor = 20.42 cm
 377:main.c        ****                         char instStr[24];
 378:main.c        ****                         char cVal[24];
 379:main.c        **** 
 380:main.c        **** 
 381:main.c        ****                         //if distance has been covered and ready to switch
 382:main.c        ****                         // if stop instruction or not turning and distance has been travelled
 383:main.c        ****                         int pulsesToTravel[] = {0, 62, 123, 150, 570, 700, 570, 570, 570}; //
 1185              		.loc 1 383 0
 1186 06e0 3B46     		mov	r3, r7
 1187 06e2 504A     		ldr	r2, .L71+12
 1188 06e4 1C46     		mov	r4, r3
 1189 06e6 1546     		mov	r5, r2
 1190 06e8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1191 06ea 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1192 06ec 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1193 06ee 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1194 06f0 2B68     		ldr	r3, [r5]
 1195 06f2 2360     		str	r3, [r4]
 384:main.c        ****                         //                                   g    g        
 385:main.c        ****                         if (turnComplete != 0 && (pulsesTravelled * 0.7 > pulsesToTravel[distance[i
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 29


 1196              		.loc 1 385 0
 1197 06f4 4C4B     		ldr	r3, .L71+16
 1198 06f6 1B68     		ldr	r3, [r3]
 1199 06f8 002B     		cmp	r3, #0
 1200 06fa 00F08680 		beq	.L10
 1201              		.loc 1 385 0 is_stmt 0 discriminator 1
 1202 06fe 4B4B     		ldr	r3, .L71+20
 1203 0700 1B68     		ldr	r3, [r3]
 1204 0702 1846     		mov	r0, r3
 1205 0704 FFF7FEFF 		bl	__aeabi_i2d
 1206 0708 43A3     		adr	r3, .L71
 1207 070a D3E90023 		ldrd	r2, [r3]
 1208 070e FFF7FEFF 		bl	__aeabi_dmul
 1209 0712 0346     		mov	r3, r0
 1210 0714 0C46     		mov	r4, r1
 1211 0716 2546     		mov	r5, r4
 1212 0718 1C46     		mov	r4, r3
 1213 071a 454B     		ldr	r3, .L71+24
 1214 071c 1B68     		ldr	r3, [r3]
 1215 071e 454A     		ldr	r2, .L71+28
 1216 0720 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1217 0722 1A46     		mov	r2, r3
 1218 0724 3B46     		mov	r3, r7
 1219 0726 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1220 072a 1846     		mov	r0, r3
 1221 072c FFF7FEFF 		bl	__aeabi_i2d
 1222 0730 0246     		mov	r2, r0
 1223 0732 0B46     		mov	r3, r1
 1224 0734 2046     		mov	r0, r4
 1225 0736 2946     		mov	r1, r5
 1226 0738 FFF7FEFF 		bl	__aeabi_dcmpgt
 1227 073c 0346     		mov	r3, r0
 1228 073e 002B     		cmp	r3, #0
 1229 0740 03D1     		bne	.L61
 1230              		.loc 1 385 0 discriminator 2
 1231 0742 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1232 0746 002B     		cmp	r3, #0
 1233 0748 5FD1     		bne	.L10
 1234              	.L61:
 386:main.c        ****                             // if distance reached then stop
 387:main.c        ****                             if (currentInst == 0 || currentInst == 6 || currentInst == 7 || current
 1235              		.loc 1 387 0 is_stmt 1
 1236 074a 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1237 074e 002B     		cmp	r3, #0
 1238 0750 0FD0     		beq	.L62
 1239              		.loc 1 387 0 is_stmt 0 discriminator 1
 1240 0752 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1241 0756 062B     		cmp	r3, #6
 1242 0758 0BD0     		beq	.L62
 1243              		.loc 1 387 0 discriminator 2
 1244 075a 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1245 075e 072B     		cmp	r3, #7
 1246 0760 07D0     		beq	.L62
 1247              		.loc 1 387 0 discriminator 3
 1248 0762 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1249 0766 082B     		cmp	r3, #8
 1250 0768 03D0     		beq	.L62
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 30


 1251              		.loc 1 387 0 discriminator 4
 1252 076a 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1253 076e 052B     		cmp	r3, #5
 1254 0770 1AD1     		bne	.L63
 1255              	.L62:
 388:main.c        ****                                 //LED_PIN_4_Write(1);
 389:main.c        ****                                 instCounter++;
 1256              		.loc 1 389 0 is_stmt 1
 1257 0772 2F4B     		ldr	r3, .L71+24
 1258 0774 1B68     		ldr	r3, [r3]
 1259 0776 0133     		adds	r3, r3, #1
 1260 0778 2D4A     		ldr	r2, .L71+24
 1261 077a 1360     		str	r3, [r2]
 390:main.c        ****                                 turnComplete = -1;
 1262              		.loc 1 390 0
 1263 077c 2A4B     		ldr	r3, .L71+16
 1264 077e 4FF0FF32 		mov	r2, #-1
 1265 0782 1A60     		str	r2, [r3]
 391:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 392:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 393:main.c        ****                                 //                            //usbPutString(instStr);
 394:main.c        ****                                 pulsesTravelled = 0;
 1266              		.loc 1 394 0
 1267 0784 294B     		ldr	r3, .L71+20
 1268 0786 0022     		movs	r2, #0
 1269 0788 1A60     		str	r2, [r3]
 395:main.c        ****                                 if (currentInst != 0) {
 1270              		.loc 1 395 0
 1271 078a 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1272 078e 002B     		cmp	r3, #0
 1273 0790 3BD0     		beq	.L10
 396:main.c        ****                                     CyDelay(500);
 1274              		.loc 1 396 0
 1275 0792 4FF4FA70 		mov	r0, #500
 1276 0796 FFF7FEFF 		bl	CyDelay
 397:main.c        ****                                     stop();
 1277              		.loc 1 397 0
 1278 079a FFF7FEFF 		bl	stop
 398:main.c        ****                                     CyDelay(1000);
 1279              		.loc 1 398 0
 1280 079e 4FF47A70 		mov	r0, #1000
 1281 07a2 FFF7FEFF 		bl	CyDelay
 395:main.c        ****                                     CyDelay(500);
 1282              		.loc 1 395 0
 1283 07a6 30E0     		b	.L10
 1284              	.L63:
 399:main.c        ****                                 }
 400:main.c        ****                                 //
 401:main.c        ****                             } 
 402:main.c        ****                             // ignoring if right sensor sensed when the next instruction doesnt mak
 403:main.c        ****                             else if (R_INT_BLACK && (nextInst != 1 && nextInst != 5)) { //reached a
 1285              		.loc 1 403 0
 1286 07a8 D7F82C31 		ldr	r3, [r7, #300]
 1287 07ac 4A2B     		cmp	r3, #74
 1288 07ae 14DC     		bgt	.L65
 1289              		.loc 1 403 0 is_stmt 0 discriminator 1
 1290 07b0 97F81631 		ldrb	r3, [r7, #278]	@ zero_extendqisi2
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 31


 1291 07b4 012B     		cmp	r3, #1
 1292 07b6 10D0     		beq	.L65
 1293              		.loc 1 403 0 discriminator 2
 1294 07b8 97F81631 		ldrb	r3, [r7, #278]	@ zero_extendqisi2
 1295 07bc 052B     		cmp	r3, #5
 1296 07be 0CD0     		beq	.L65
 404:main.c        ****                                 //
 405:main.c        ****                                 //LED_PIN_4_Write(1);
 406:main.c        ****                                 instCounter++;
 1297              		.loc 1 406 0 is_stmt 1
 1298 07c0 1B4B     		ldr	r3, .L71+24
 1299 07c2 1B68     		ldr	r3, [r3]
 1300 07c4 0133     		adds	r3, r3, #1
 1301 07c6 1A4A     		ldr	r2, .L71+24
 1302 07c8 1360     		str	r3, [r2]
 407:main.c        ****                                 turnComplete = -1;
 1303              		.loc 1 407 0
 1304 07ca 174B     		ldr	r3, .L71+16
 1305 07cc 4FF0FF32 		mov	r2, #-1
 1306 07d0 1A60     		str	r2, [r3]
 408:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 409:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 410:main.c        ****                                 //                            //usbPutString(instStr);
 411:main.c        ****                                 pulsesTravelled = 0;
 1307              		.loc 1 411 0
 1308 07d2 164B     		ldr	r3, .L71+20
 1309 07d4 0022     		movs	r2, #0
 1310 07d6 1A60     		str	r2, [r3]
 1311 07d8 17E0     		b	.L10
 1312              	.L65:
 412:main.c        ****                             }
 413:main.c        ****                             // ignoring if left sensor sensed when the next instruction doesnt make
 414:main.c        ****                             else if (L_INT_BLACK && (nextInst != 3 && nextInst != 5)) { //reached a
 1313              		.loc 1 414 0
 1314 07da D7F83C31 		ldr	r3, [r7, #316]
 1315 07de 4A2B     		cmp	r3, #74
 1316 07e0 13DC     		bgt	.L10
 1317              		.loc 1 414 0 is_stmt 0 discriminator 1
 1318 07e2 97F81631 		ldrb	r3, [r7, #278]	@ zero_extendqisi2
 1319 07e6 032B     		cmp	r3, #3
 1320 07e8 0FD0     		beq	.L10
 1321              		.loc 1 414 0 discriminator 2
 1322 07ea 97F81631 		ldrb	r3, [r7, #278]	@ zero_extendqisi2
 1323 07ee 052B     		cmp	r3, #5
 1324 07f0 0BD0     		beq	.L10
 415:main.c        ****                                 //LED_PIN_4_Write(1);
 416:main.c        ****                                 instCounter++;
 1325              		.loc 1 416 0 is_stmt 1
 1326 07f2 0F4B     		ldr	r3, .L71+24
 1327 07f4 1B68     		ldr	r3, [r3]
 1328 07f6 0133     		adds	r3, r3, #1
 1329 07f8 0D4A     		ldr	r2, .L71+24
 1330 07fa 1360     		str	r3, [r2]
 417:main.c        ****                                 turnComplete = -1;
 1331              		.loc 1 417 0
 1332 07fc 0A4B     		ldr	r3, .L71+16
 1333 07fe 4FF0FF32 		mov	r2, #-1
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 32


 1334 0802 1A60     		str	r2, [r3]
 418:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 419:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 420:main.c        ****                                 //                            //usbPutString(instStr);
 421:main.c        ****                                 pulsesTravelled = 0;
 1335              		.loc 1 421 0
 1336 0804 094B     		ldr	r3, .L71+20
 1337 0806 0022     		movs	r2, #0
 1338 0808 1A60     		str	r2, [r3]
 1339              	.L10:
 1340              	.LBE10:
 1341              	.LBE9:
 1342              	.LBE4:
 422:main.c        ****                             } else {
 423:main.c        **** 
 424:main.c        ****                             }
 425:main.c        ****                         }
 426:main.c        ****                     }
 427:main.c        **** 
 428:main.c        ****                     if (L_INT_BLACK) {
 429:main.c        ****                         //LED_PIN_2_Write(1);
 430:main.c        ****                     }
 431:main.c        **** 
 432:main.c        ****                     if (R_INT_BLACK) {
 433:main.c        ****                         //LED_PIN_3_Write(1);
 434:main.c        ****                     }
 435:main.c        ****                 }
 436:main.c        ****             }
 437:main.c        **** 
 438:main.c        ****             flag = 0;
 1343              		.loc 1 438 0
 1344 080a 0B4B     		ldr	r3, .L71+32
 1345 080c 0022     		movs	r2, #0
 1346 080e 1A60     		str	r2, [r3]
 439:main.c        ****             ADC1_IRQ_Enable();
 1347              		.loc 1 439 0
 1348 0810 FFF7FEFF 		bl	ADC1_IRQ_Enable
 440:main.c        ****         }
 441:main.c        **** 
 442:main.c        ****     }
 1349              		.loc 1 442 0
 1350 0814 5DE4     		b	.L66
 1351              	.L72:
 1352 0816 00BF     		.align	3
 1353              	.L71:
 1354 0818 66666666 		.word	1717986918
 1355 081c 6666E63F 		.word	1072064102
 1356 0820 00000000 		.word	lastAdjustDirection
 1357 0824 00000000 		.word	.LC0
 1358 0828 00000000 		.word	turnComplete
 1359 082c 00000000 		.word	pulsesTravelled
 1360 0830 00000000 		.word	instCounter
 1361 0834 00000000 		.word	distance
 1362 0838 00000000 		.word	flag
 1363              		.cfi_endproc
 1364              	.LFE65:
 1365              		.size	main, .-main
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 33


 1366              		.section	.text.usbPutString,"ax",%progbits
 1367              		.align	2
 1368              		.global	usbPutString
 1369              		.thumb
 1370              		.thumb_func
 1371              		.type	usbPutString, %function
 1372              	usbPutString:
 1373              	.LFB66:
 443:main.c        **** }
 444:main.c        **** //* ========================================
 445:main.c        **** void usbPutString(char * s) {
 1374              		.loc 1 445 0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 8
 1377              		@ frame_needed = 1, uses_anonymous_args = 0
 1378 0000 80B5     		push	{r7, lr}
 1379              		.cfi_def_cfa_offset 8
 1380              		.cfi_offset 7, -8
 1381              		.cfi_offset 14, -4
 1382 0002 82B0     		sub	sp, sp, #8
 1383              		.cfi_def_cfa_offset 16
 1384 0004 00AF     		add	r7, sp, #0
 1385              		.cfi_def_cfa_register 7
 1386 0006 7860     		str	r0, [r7, #4]
 446:main.c        ****     // !! Assumes that *s is a string with allocated space >=64 chars    
 447:main.c        ****     //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 448:main.c        ****     //  length to 62 char (63rd char is a '!')
 449:main.c        **** 
 450:main.c        ****     #ifdef USE_USB
 451:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1387              		.loc 1 451 0
 1388 0008 00BF     		nop
 1389              	.L74:
 1390              		.loc 1 451 0 is_stmt 0 discriminator 1
 1391 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1392 000e 0346     		mov	r3, r0
 1393 0010 002B     		cmp	r3, #0
 1394 0012 FAD0     		beq	.L74
 452:main.c        ****     s[63] = '\0';
 1395              		.loc 1 452 0 is_stmt 1
 1396 0014 7B68     		ldr	r3, [r7, #4]
 1397 0016 3F33     		adds	r3, r3, #63
 1398 0018 0022     		movs	r2, #0
 1399 001a 1A70     		strb	r2, [r3]
 453:main.c        ****     s[62] = '!';
 1400              		.loc 1 453 0
 1401 001c 7B68     		ldr	r3, [r7, #4]
 1402 001e 3E33     		adds	r3, r3, #62
 1403 0020 2122     		movs	r2, #33
 1404 0022 1A70     		strb	r2, [r3]
 454:main.c        ****     USBUART_PutData((uint8 * ) s, strlen(s));
 1405              		.loc 1 454 0
 1406 0024 7868     		ldr	r0, [r7, #4]
 1407 0026 FFF7FEFF 		bl	strlen
 1408 002a 0346     		mov	r3, r0
 1409 002c 9BB2     		uxth	r3, r3
 1410 002e 1946     		mov	r1, r3
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 34


 1411 0030 7868     		ldr	r0, [r7, #4]
 1412 0032 FFF7FEFF 		bl	USBUART_PutData
 455:main.c        ****     #endif
 456:main.c        **** }
 1413              		.loc 1 456 0
 1414 0036 00BF     		nop
 1415 0038 0837     		adds	r7, r7, #8
 1416              		.cfi_def_cfa_offset 8
 1417 003a BD46     		mov	sp, r7
 1418              		.cfi_def_cfa_register 13
 1419              		@ sp needed
 1420 003c 80BD     		pop	{r7, pc}
 1421              		.cfi_endproc
 1422              	.LFE66:
 1423              		.size	usbPutString, .-usbPutString
 1424 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1425              		.align	2
 1426              		.global	usbPutChar
 1427              		.thumb
 1428              		.thumb_func
 1429              		.type	usbPutChar, %function
 1430              	usbPutChar:
 1431              	.LFB67:
 457:main.c        **** //* ========================================
 458:main.c        **** void usbPutChar(char c) {
 1432              		.loc 1 458 0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 8
 1435              		@ frame_needed = 1, uses_anonymous_args = 0
 1436 0000 80B5     		push	{r7, lr}
 1437              		.cfi_def_cfa_offset 8
 1438              		.cfi_offset 7, -8
 1439              		.cfi_offset 14, -4
 1440 0002 82B0     		sub	sp, sp, #8
 1441              		.cfi_def_cfa_offset 16
 1442 0004 00AF     		add	r7, sp, #0
 1443              		.cfi_def_cfa_register 7
 1444 0006 0346     		mov	r3, r0
 1445 0008 FB71     		strb	r3, [r7, #7]
 459:main.c        ****     #ifdef USE_USB
 460:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1446              		.loc 1 460 0
 1447 000a 00BF     		nop
 1448              	.L76:
 1449              		.loc 1 460 0 is_stmt 0 discriminator 1
 1450 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1451 0010 0346     		mov	r3, r0
 1452 0012 002B     		cmp	r3, #0
 1453 0014 FAD0     		beq	.L76
 461:main.c        ****     USBUART_PutChar(c);
 1454              		.loc 1 461 0 is_stmt 1
 1455 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1456 0018 1846     		mov	r0, r3
 1457 001a FFF7FEFF 		bl	USBUART_PutChar
 462:main.c        ****     #endif
 463:main.c        **** }...
 1458              		.loc 1 463 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 35


 1459 001e 00BF     		nop
 1460 0020 0837     		adds	r7, r7, #8
 1461              		.cfi_def_cfa_offset 8
 1462 0022 BD46     		mov	sp, r7
 1463              		.cfi_def_cfa_register 13
 1464              		@ sp needed
 1465 0024 80BD     		pop	{r7, pc}
 1466              		.cfi_endproc
 1467              	.LFE67:
 1468              		.size	usbPutChar, .-usbPutChar
 1469 0026 00BF     		.text
 1470              	.Letext0:
 1471              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1472              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1473              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1474              		.file 5 "vars.h"
 1475              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1476              		.section	.debug_info,"",%progbits
 1477              	.Ldebug_info0:
 1478 0000 6A070000 		.4byte	0x76a
 1479 0004 0400     		.2byte	0x4
 1480 0006 00000000 		.4byte	.Ldebug_abbrev0
 1481 000a 04       		.byte	0x4
 1482 000b 01       		.uleb128 0x1
 1483 000c A9000000 		.4byte	.LASF102
 1484 0010 0C       		.byte	0xc
 1485 0011 8C040000 		.4byte	.LASF103
 1486 0015 3C010000 		.4byte	.LASF104
 1487 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1488 001d 00000000 		.4byte	0
 1489 0021 00000000 		.4byte	.Ldebug_line0
 1490 0025 02       		.uleb128 0x2
 1491 0026 01       		.byte	0x1
 1492 0027 06       		.byte	0x6
 1493 0028 08020000 		.4byte	.LASF0
 1494 002c 02       		.uleb128 0x2
 1495 002d 01       		.byte	0x1
 1496 002e 08       		.byte	0x8
 1497 002f DC020000 		.4byte	.LASF1
 1498 0033 02       		.uleb128 0x2
 1499 0034 02       		.byte	0x2
 1500 0035 05       		.byte	0x5
 1501 0036 72000000 		.4byte	.LASF2
 1502 003a 02       		.uleb128 0x2
 1503 003b 02       		.byte	0x2
 1504 003c 07       		.byte	0x7
 1505 003d BE030000 		.4byte	.LASF3
 1506 0041 03       		.uleb128 0x3
 1507 0042 35040000 		.4byte	.LASF12
 1508 0046 02       		.byte	0x2
 1509 0047 3F       		.byte	0x3f
 1510 0048 4C000000 		.4byte	0x4c
 1511 004c 02       		.uleb128 0x2
 1512 004d 04       		.byte	0x4
 1513 004e 05       		.byte	0x5
 1514 004f 6E020000 		.4byte	.LASF4
 1515 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 36


 1516 0054 04       		.byte	0x4
 1517 0055 07       		.byte	0x7
 1518 0056 93040000 		.4byte	.LASF5
 1519 005a 02       		.uleb128 0x2
 1520 005b 08       		.byte	0x8
 1521 005c 05       		.byte	0x5
 1522 005d 22020000 		.4byte	.LASF6
 1523 0061 02       		.uleb128 0x2
 1524 0062 08       		.byte	0x8
 1525 0063 07       		.byte	0x7
 1526 0064 69030000 		.4byte	.LASF7
 1527 0068 04       		.uleb128 0x4
 1528 0069 04       		.byte	0x4
 1529 006a 05       		.byte	0x5
 1530 006b 696E7400 		.ascii	"int\000"
 1531 006f 02       		.uleb128 0x2
 1532 0070 04       		.byte	0x4
 1533 0071 07       		.byte	0x7
 1534 0072 80030000 		.4byte	.LASF8
 1535 0076 02       		.uleb128 0x2
 1536 0077 08       		.byte	0x8
 1537 0078 04       		.byte	0x4
 1538 0079 F2020000 		.4byte	.LASF9
 1539 007d 02       		.uleb128 0x2
 1540 007e 04       		.byte	0x4
 1541 007f 07       		.byte	0x7
 1542 0080 89000000 		.4byte	.LASF10
 1543 0084 05       		.uleb128 0x5
 1544 0085 04       		.byte	0x4
 1545 0086 8A000000 		.4byte	0x8a
 1546 008a 02       		.uleb128 0x2
 1547 008b 01       		.byte	0x1
 1548 008c 08       		.byte	0x8
 1549 008d 00040000 		.4byte	.LASF11
 1550 0091 06       		.uleb128 0x6
 1551 0092 8A000000 		.4byte	0x8a
 1552 0096 A1000000 		.4byte	0xa1
 1553 009a 07       		.uleb128 0x7
 1554 009b 7D000000 		.4byte	0x7d
 1555 009f 17       		.byte	0x17
 1556 00a0 00       		.byte	0
 1557 00a1 03       		.uleb128 0x3
 1558 00a2 28040000 		.4byte	.LASF13
 1559 00a6 03       		.byte	0x3
 1560 00a7 2C       		.byte	0x2c
 1561 00a8 41000000 		.4byte	0x41
 1562 00ac 08       		.uleb128 0x8
 1563 00ad C8010000 		.4byte	.LASF14
 1564 00b1 04       		.byte	0x4
 1565 00b2 E701     		.2byte	0x1e7
 1566 00b4 2C000000 		.4byte	0x2c
 1567 00b8 08       		.uleb128 0x8
 1568 00b9 B5010000 		.4byte	.LASF15
 1569 00bd 04       		.byte	0x4
 1570 00be E801     		.2byte	0x1e8
 1571 00c0 3A000000 		.4byte	0x3a
 1572 00c4 08       		.uleb128 0x8
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 37


 1573 00c5 3D020000 		.4byte	.LASF16
 1574 00c9 04       		.byte	0x4
 1575 00ca EA01     		.2byte	0x1ea
 1576 00cc 25000000 		.4byte	0x25
 1577 00d0 08       		.uleb128 0x8
 1578 00d1 C2010000 		.4byte	.LASF17
 1579 00d5 04       		.byte	0x4
 1580 00d6 EB01     		.2byte	0x1eb
 1581 00d8 33000000 		.4byte	0x33
 1582 00dc 02       		.uleb128 0x2
 1583 00dd 04       		.byte	0x4
 1584 00de 04       		.byte	0x4
 1585 00df 14020000 		.4byte	.LASF18
 1586 00e3 02       		.uleb128 0x2
 1587 00e4 08       		.byte	0x8
 1588 00e5 04       		.byte	0x4
 1589 00e6 A5040000 		.4byte	.LASF19
 1590 00ea 09       		.uleb128 0x9
 1591 00eb F6030000 		.4byte	.LASF105
 1592 00ef 20       		.byte	0x20
 1593 00f0 05       		.byte	0x5
 1594 00f1 29       		.byte	0x29
 1595 00f2 C3010000 		.4byte	0x1c3
 1596 00f6 0A       		.uleb128 0xa
 1597 00f7 75050000 		.4byte	.LASF20
 1598 00fb 05       		.byte	0x5
 1599 00fc 2A       		.byte	0x2a
 1600 00fd C4000000 		.4byte	0xc4
 1601 0101 00       		.byte	0
 1602 0102 0A       		.uleb128 0xa
 1603 0103 BC010000 		.4byte	.LASF21
 1604 0107 05       		.byte	0x5
 1605 0108 2B       		.byte	0x2b
 1606 0109 AC000000 		.4byte	0xac
 1607 010d 01       		.byte	0x1
 1608 010e 0A       		.uleb128 0xa
 1609 010f 1D040000 		.4byte	.LASF22
 1610 0113 05       		.byte	0x5
 1611 0114 2C       		.byte	0x2c
 1612 0115 D0000000 		.4byte	0xd0
 1613 0119 02       		.byte	0x2
 1614 011a 0A       		.uleb128 0xa
 1615 011b 3B050000 		.4byte	.LASF23
 1616 011f 05       		.byte	0x5
 1617 0120 2D       		.byte	0x2d
 1618 0121 D0000000 		.4byte	0xd0
 1619 0125 04       		.byte	0x4
 1620 0126 0A       		.uleb128 0xa
 1621 0127 7A050000 		.4byte	.LASF24
 1622 012b 05       		.byte	0x5
 1623 012c 2E       		.byte	0x2e
 1624 012d D0000000 		.4byte	0xd0
 1625 0131 06       		.byte	0x6
 1626 0132 0A       		.uleb128 0xa
 1627 0133 66020000 		.4byte	.LASF25
 1628 0137 05       		.byte	0x5
 1629 0138 2F       		.byte	0x2f
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 38


 1630 0139 D0000000 		.4byte	0xd0
 1631 013d 08       		.byte	0x8
 1632 013e 0A       		.uleb128 0xa
 1633 013f F2040000 		.4byte	.LASF26
 1634 0143 05       		.byte	0x5
 1635 0144 30       		.byte	0x30
 1636 0145 D0000000 		.4byte	0xd0
 1637 0149 0A       		.byte	0xa
 1638 014a 0A       		.uleb128 0xa
 1639 014b 26030000 		.4byte	.LASF27
 1640 014f 05       		.byte	0x5
 1641 0150 31       		.byte	0x31
 1642 0151 D0000000 		.4byte	0xd0
 1643 0155 0C       		.byte	0xc
 1644 0156 0A       		.uleb128 0xa
 1645 0157 59020000 		.4byte	.LASF28
 1646 015b 05       		.byte	0x5
 1647 015c 32       		.byte	0x32
 1648 015d D0000000 		.4byte	0xd0
 1649 0161 0E       		.byte	0xe
 1650 0162 0A       		.uleb128 0xa
 1651 0163 B6030000 		.4byte	.LASF29
 1652 0167 05       		.byte	0x5
 1653 0168 33       		.byte	0x33
 1654 0169 D0000000 		.4byte	0xd0
 1655 016d 10       		.byte	0x10
 1656 016e 0A       		.uleb128 0xa
 1657 016f EA020000 		.4byte	.LASF30
 1658 0173 05       		.byte	0x5
 1659 0174 34       		.byte	0x34
 1660 0175 D0000000 		.4byte	0xd0
 1661 0179 12       		.byte	0x12
 1662 017a 0A       		.uleb128 0xa
 1663 017b 2F030000 		.4byte	.LASF31
 1664 017f 05       		.byte	0x5
 1665 0180 35       		.byte	0x35
 1666 0181 D0000000 		.4byte	0xd0
 1667 0185 14       		.byte	0x14
 1668 0186 0A       		.uleb128 0xa
 1669 0187 CE010000 		.4byte	.LASF32
 1670 018b 05       		.byte	0x5
 1671 018c 36       		.byte	0x36
 1672 018d D0000000 		.4byte	0xd0
 1673 0191 16       		.byte	0x16
 1674 0192 0A       		.uleb128 0xa
 1675 0193 6A000000 		.4byte	.LASF33
 1676 0197 05       		.byte	0x5
 1677 0198 37       		.byte	0x37
 1678 0199 D0000000 		.4byte	0xd0
 1679 019d 18       		.byte	0x18
 1680 019e 0A       		.uleb128 0xa
 1681 019f 51020000 		.4byte	.LASF34
 1682 01a3 05       		.byte	0x5
 1683 01a4 38       		.byte	0x38
 1684 01a5 D0000000 		.4byte	0xd0
 1685 01a9 1A       		.byte	0x1a
 1686 01aa 0A       		.uleb128 0xa
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 39


 1687 01ab A8030000 		.4byte	.LASF35
 1688 01af 05       		.byte	0x5
 1689 01b0 39       		.byte	0x39
 1690 01b1 D0000000 		.4byte	0xd0
 1691 01b5 1C       		.byte	0x1c
 1692 01b6 0A       		.uleb128 0xa
 1693 01b7 A8010000 		.4byte	.LASF36
 1694 01bb 05       		.byte	0x5
 1695 01bc 3A       		.byte	0x3a
 1696 01bd D0000000 		.4byte	0xd0
 1697 01c1 1E       		.byte	0x1e
 1698 01c2 00       		.byte	0
 1699 01c3 0B       		.uleb128 0xb
 1700 01c4 656F6300 		.ascii	"eoc\000"
 1701 01c8 01       		.byte	0x1
 1702 01c9 4B       		.byte	0x4b
 1703 01ca 00000000 		.4byte	.LFB64
 1704 01ce 18000000 		.4byte	.LFE64-.LFB64
 1705 01d2 01       		.uleb128 0x1
 1706 01d3 9C       		.byte	0x9c
 1707 01d4 0C       		.uleb128 0xc
 1708 01d5 37010000 		.4byte	.LASF55
 1709 01d9 01       		.byte	0x1
 1710 01da 4F       		.byte	0x4f
 1711 01db 68000000 		.4byte	0x68
 1712 01df 00000000 		.4byte	.LFB65
 1713 01e3 3C080000 		.4byte	.LFE65-.LFB65
 1714 01e7 01       		.uleb128 0x1
 1715 01e8 9C       		.byte	0x9c
 1716 01e9 A2030000 		.4byte	0x3a2
 1717 01ed 0D       		.uleb128 0xd
 1718 01ee 52000000 		.4byte	.LBB2
 1719 01f2 5A000000 		.4byte	.LBE2-.LBB2
 1720 01f6 07020000 		.4byte	0x207
 1721 01fa 0E       		.uleb128 0xe
 1722 01fb 6900     		.ascii	"i\000"
 1723 01fd 01       		.byte	0x1
 1724 01fe 6D       		.byte	0x6d
 1725 01ff 68000000 		.4byte	0x68
 1726 0203 02       		.uleb128 0x2
 1727 0204 91       		.byte	0x91
 1728 0205 6C       		.sleb128 -20
 1729 0206 00       		.byte	0
 1730 0207 0D       		.uleb128 0xd
 1731 0208 B6000000 		.4byte	.LBB3
 1732 020c 1C000000 		.4byte	.LBE3-.LBB3
 1733 0210 21020000 		.4byte	0x221
 1734 0214 0E       		.uleb128 0xe
 1735 0215 6900     		.ascii	"i\000"
 1736 0217 01       		.byte	0x1
 1737 0218 75       		.byte	0x75
 1738 0219 68000000 		.4byte	0x68
 1739 021d 02       		.uleb128 0x2
 1740 021e 91       		.byte	0x91
 1741 021f 68       		.sleb128 -24
 1742 0220 00       		.byte	0
 1743 0221 0F       		.uleb128 0xf
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 40


 1744 0222 58010000 		.4byte	.LBB4
 1745 0226 B2060000 		.4byte	.LBE4-.LBB4
 1746 022a 10       		.uleb128 0x10
 1747 022b 0B000000 		.4byte	.LASF37
 1748 022f 01       		.byte	0x1
 1749 0230 8F       		.byte	0x8f
 1750 0231 68000000 		.4byte	0x68
 1751 0235 02       		.uleb128 0x2
 1752 0236 91       		.byte	0x91
 1753 0237 64       		.sleb128 -28
 1754 0238 10       		.uleb128 0x10
 1755 0239 7A040000 		.4byte	.LASF38
 1756 023d 01       		.byte	0x1
 1757 023e 90       		.byte	0x90
 1758 023f 68000000 		.4byte	0x68
 1759 0243 02       		.uleb128 0x2
 1760 0244 91       		.byte	0x91
 1761 0245 60       		.sleb128 -32
 1762 0246 10       		.uleb128 0x10
 1763 0247 D1030000 		.4byte	.LASF39
 1764 024b 01       		.byte	0x1
 1765 024c 91       		.byte	0x91
 1766 024d 68000000 		.4byte	0x68
 1767 0251 02       		.uleb128 0x2
 1768 0252 91       		.byte	0x91
 1769 0253 5C       		.sleb128 -36
 1770 0254 10       		.uleb128 0x10
 1771 0255 5A050000 		.4byte	.LASF40
 1772 0259 01       		.byte	0x1
 1773 025a 92       		.byte	0x92
 1774 025b 68000000 		.4byte	0x68
 1775 025f 02       		.uleb128 0x2
 1776 0260 91       		.byte	0x91
 1777 0261 40       		.sleb128 -64
 1778 0262 10       		.uleb128 0x10
 1779 0263 38030000 		.4byte	.LASF41
 1780 0267 01       		.byte	0x1
 1781 0268 93       		.byte	0x93
 1782 0269 68000000 		.4byte	0x68
 1783 026d 02       		.uleb128 0x2
 1784 026e 91       		.byte	0x91
 1785 026f 58       		.sleb128 -40
 1786 0270 10       		.uleb128 0x10
 1787 0271 C1020000 		.4byte	.LASF42
 1788 0275 01       		.byte	0x1
 1789 0276 94       		.byte	0x94
 1790 0277 68000000 		.4byte	0x68
 1791 027b 02       		.uleb128 0x2
 1792 027c 91       		.byte	0x91
 1793 027d 54       		.sleb128 -44
 1794 027e 0D       		.uleb128 0xd
 1795 027f 8C010000 		.4byte	.LBB5
 1796 0283 2A010000 		.4byte	.LBE5-.LBB5
 1797 0287 C0020000 		.4byte	0x2c0
 1798 028b 0E       		.uleb128 0xe
 1799 028c 6900     		.ascii	"i\000"
 1800 028e 01       		.byte	0x1
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 41


 1801 028f 95       		.byte	0x95
 1802 0290 68000000 		.4byte	0x68
 1803 0294 02       		.uleb128 0x2
 1804 0295 91       		.byte	0x91
 1805 0296 50       		.sleb128 -48
 1806 0297 0F       		.uleb128 0xf
 1807 0298 94010000 		.4byte	.LBB6
 1808 029c 0C010000 		.4byte	.LBE6-.LBB6
 1809 02a0 10       		.uleb128 0x10
 1810 02a1 04030000 		.4byte	.LASF43
 1811 02a5 01       		.byte	0x1
 1812 02a6 97       		.byte	0x97
 1813 02a7 91000000 		.4byte	0x91
 1814 02ab 03       		.uleb128 0x3
 1815 02ac 91       		.byte	0x91
 1816 02ad 8C7F     		.sleb128 -116
 1817 02af 10       		.uleb128 0x10
 1818 02b0 0C030000 		.4byte	.LASF44
 1819 02b4 01       		.byte	0x1
 1820 02b5 98       		.byte	0x98
 1821 02b6 91000000 		.4byte	0x91
 1822 02ba 03       		.uleb128 0x3
 1823 02bb 91       		.byte	0x91
 1824 02bc F47E     		.sleb128 -140
 1825 02be 00       		.byte	0
 1826 02bf 00       		.byte	0
 1827 02c0 0D       		.uleb128 0xd
 1828 02c1 C0020000 		.4byte	.LBB7
 1829 02c5 58010000 		.4byte	.LBE7-.LBB7
 1830 02c9 FE020000 		.4byte	0x2fe
 1831 02cd 0E       		.uleb128 0xe
 1832 02ce 6900     		.ascii	"i\000"
 1833 02d0 01       		.byte	0x1
 1834 02d1 C2       		.byte	0xc2
 1835 02d2 68000000 		.4byte	0x68
 1836 02d6 02       		.uleb128 0x2
 1837 02d7 91       		.byte	0x91
 1838 02d8 4C       		.sleb128 -52
 1839 02d9 10       		.uleb128 0x10
 1840 02da 14030000 		.4byte	.LASF45
 1841 02de 01       		.byte	0x1
 1842 02df C2       		.byte	0xc2
 1843 02e0 68000000 		.4byte	0x68
 1844 02e4 02       		.uleb128 0x2
 1845 02e5 91       		.byte	0x91
 1846 02e6 48       		.sleb128 -56
 1847 02e7 0F       		.uleb128 0xf
 1848 02e8 E8030000 		.4byte	.LBB8
 1849 02ec 1C000000 		.4byte	.LBE8-.LBB8
 1850 02f0 0E       		.uleb128 0xe
 1851 02f1 6900     		.ascii	"i\000"
 1852 02f3 01       		.byte	0x1
 1853 02f4 DC       		.byte	0xdc
 1854 02f5 68000000 		.4byte	0x68
 1855 02f9 02       		.uleb128 0x2
 1856 02fa 91       		.byte	0x91
 1857 02fb 44       		.sleb128 -60
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 42


 1858 02fc 00       		.byte	0
 1859 02fd 00       		.byte	0
 1860 02fe 0F       		.uleb128 0xf
 1861 02ff 1A040000 		.4byte	.LBB9
 1862 0303 F0030000 		.4byte	.LBE9-.LBB9
 1863 0307 10       		.uleb128 0x10
 1864 0308 A7020000 		.4byte	.LASF46
 1865 030c 01       		.byte	0x1
 1866 030d EC       		.byte	0xec
 1867 030e 8A000000 		.4byte	0x8a
 1868 0312 03       		.uleb128 0x3
 1869 0313 91       		.byte	0x91
 1870 0314 BF7F     		.sleb128 -65
 1871 0316 10       		.uleb128 0x10
 1872 0317 92050000 		.4byte	.LASF47
 1873 031b 01       		.byte	0x1
 1874 031c ED       		.byte	0xed
 1875 031d 8A000000 		.4byte	0x8a
 1876 0321 03       		.uleb128 0x3
 1877 0322 91       		.byte	0x91
 1878 0323 BE7F     		.sleb128 -66
 1879 0325 0F       		.uleb128 0xf
 1880 0326 26060000 		.4byte	.LBB10
 1881 032a E4010000 		.4byte	.LBE10-.LBB10
 1882 032e 11       		.uleb128 0x11
 1883 032f B1030000 		.4byte	.LASF48
 1884 0333 01       		.byte	0x1
 1885 0334 7401     		.2byte	0x174
 1886 0336 91000000 		.4byte	0x91
 1887 033a 03       		.uleb128 0x3
 1888 033b 91       		.byte	0x91
 1889 033c C47E     		.sleb128 -188
 1890 033e 11       		.uleb128 0x11
 1891 033f 3F040000 		.4byte	.LASF49
 1892 0343 01       		.byte	0x1
 1893 0344 7501     		.2byte	0x175
 1894 0346 91000000 		.4byte	0x91
 1895 034a 03       		.uleb128 0x3
 1896 034b 91       		.byte	0x91
 1897 034c AC7E     		.sleb128 -212
 1898 034e 11       		.uleb128 0x11
 1899 034f 8C050000 		.4byte	.LASF50
 1900 0353 01       		.byte	0x1
 1901 0354 7601     		.2byte	0x176
 1902 0356 91000000 		.4byte	0x91
 1903 035a 03       		.uleb128 0x3
 1904 035b 91       		.byte	0x91
 1905 035c 947E     		.sleb128 -236
 1906 035e 11       		.uleb128 0x11
 1907 035f 62030000 		.4byte	.LASF51
 1908 0363 01       		.byte	0x1
 1909 0364 7701     		.2byte	0x177
 1910 0366 91000000 		.4byte	0x91
 1911 036a 03       		.uleb128 0x3
 1912 036b 91       		.byte	0x91
 1913 036c FC7D     		.sleb128 -260
 1914 036e 11       		.uleb128 0x11
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 43


 1915 036f 46050000 		.4byte	.LASF52
 1916 0373 01       		.byte	0x1
 1917 0374 7901     		.2byte	0x179
 1918 0376 91000000 		.4byte	0x91
 1919 037a 03       		.uleb128 0x3
 1920 037b 91       		.byte	0x91
 1921 037c E47D     		.sleb128 -284
 1922 037e 11       		.uleb128 0x11
 1923 037f 46040000 		.4byte	.LASF53
 1924 0383 01       		.byte	0x1
 1925 0384 7A01     		.2byte	0x17a
 1926 0386 91000000 		.4byte	0x91
 1927 038a 03       		.uleb128 0x3
 1928 038b 91       		.byte	0x91
 1929 038c CC7D     		.sleb128 -308
 1930 038e 11       		.uleb128 0x11
 1931 038f 0E040000 		.4byte	.LASF54
 1932 0393 01       		.byte	0x1
 1933 0394 7F01     		.2byte	0x17f
 1934 0396 A2030000 		.4byte	0x3a2
 1935 039a 03       		.uleb128 0x3
 1936 039b 91       		.byte	0x91
 1937 039c A87D     		.sleb128 -344
 1938 039e 00       		.byte	0
 1939 039f 00       		.byte	0
 1940 03a0 00       		.byte	0
 1941 03a1 00       		.byte	0
 1942 03a2 06       		.uleb128 0x6
 1943 03a3 68000000 		.4byte	0x68
 1944 03a7 B2030000 		.4byte	0x3b2
 1945 03ab 07       		.uleb128 0x7
 1946 03ac 7D000000 		.4byte	0x7d
 1947 03b0 08       		.byte	0x8
 1948 03b1 00       		.byte	0
 1949 03b2 12       		.uleb128 0x12
 1950 03b3 30020000 		.4byte	.LASF56
 1951 03b7 01       		.byte	0x1
 1952 03b8 BD01     		.2byte	0x1bd
 1953 03ba 00000000 		.4byte	.LFB66
 1954 03be 3E000000 		.4byte	.LFE66-.LFB66
 1955 03c2 01       		.uleb128 0x1
 1956 03c3 9C       		.byte	0x9c
 1957 03c4 D6030000 		.4byte	0x3d6
 1958 03c8 13       		.uleb128 0x13
 1959 03c9 7300     		.ascii	"s\000"
 1960 03cb 01       		.byte	0x1
 1961 03cc BD01     		.2byte	0x1bd
 1962 03ce 84000000 		.4byte	0x84
 1963 03d2 02       		.uleb128 0x2
 1964 03d3 91       		.byte	0x91
 1965 03d4 74       		.sleb128 -12
 1966 03d5 00       		.byte	0
 1967 03d6 12       		.uleb128 0x12
 1968 03d7 00000000 		.4byte	.LASF57
 1969 03db 01       		.byte	0x1
 1970 03dc CA01     		.2byte	0x1ca
 1971 03de 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 44


 1972 03e2 26000000 		.4byte	.LFE67-.LFB67
 1973 03e6 01       		.uleb128 0x1
 1974 03e7 9C       		.byte	0x9c
 1975 03e8 FA030000 		.4byte	0x3fa
 1976 03ec 13       		.uleb128 0x13
 1977 03ed 6300     		.ascii	"c\000"
 1978 03ef 01       		.byte	0x1
 1979 03f0 CA01     		.2byte	0x1ca
 1980 03f2 8A000000 		.4byte	0x8a
 1981 03f6 02       		.uleb128 0x2
 1982 03f7 91       		.byte	0x91
 1983 03f8 77       		.sleb128 -9
 1984 03f9 00       		.byte	0
 1985 03fa 14       		.uleb128 0x14
 1986 03fb AC040000 		.4byte	.LASF58
 1987 03ff 06       		.byte	0x6
 1988 0400 1207     		.2byte	0x712
 1989 0402 06040000 		.4byte	0x406
 1990 0406 15       		.uleb128 0x15
 1991 0407 A1000000 		.4byte	0xa1
 1992 040b 16       		.uleb128 0x16
 1993 040c 747300   		.ascii	"ts\000"
 1994 040f 05       		.byte	0x5
 1995 0410 10       		.byte	0x10
 1996 0411 AC000000 		.4byte	0xac
 1997 0415 05       		.uleb128 0x5
 1998 0416 03       		.byte	0x3
 1999 0417 00000000 		.4byte	ts
 2000 041b 17       		.uleb128 0x17
 2001 041c 0E050000 		.4byte	.LASF59
 2002 0420 05       		.byte	0x5
 2003 0421 11       		.byte	0x11
 2004 0422 B8000000 		.4byte	0xb8
 2005 0426 05       		.uleb128 0x5
 2006 0427 03       		.byte	0x3
 2007 0428 00000000 		.4byte	ts_enc
 2008 042c 17       		.uleb128 0x17
 2009 042d 15050000 		.4byte	.LASF60
 2010 0431 05       		.byte	0x5
 2011 0432 12       		.byte	0x12
 2012 0433 B8000000 		.4byte	0xb8
 2013 0437 05       		.uleb128 0x5
 2014 0438 03       		.byte	0x3
 2015 0439 00000000 		.4byte	ts_update
 2016 043d 17       		.uleb128 0x17
 2017 043e 05050000 		.4byte	.LASF61
 2018 0442 05       		.byte	0x5
 2019 0443 13       		.byte	0x13
 2020 0444 B8000000 		.4byte	0xb8
 2021 0448 05       		.uleb128 0x5
 2022 0449 03       		.byte	0x3
 2023 044a 00000000 		.4byte	ts_speed
 2024 044e 17       		.uleb128 0x17
 2025 044f FA040000 		.4byte	.LASF62
 2026 0453 05       		.byte	0x5
 2027 0454 14       		.byte	0x14
 2028 0455 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 45


 2029 0459 05       		.uleb128 0x5
 2030 045a 03       		.byte	0x3
 2031 045b 00000000 		.4byte	ts_display
 2032 045f 17       		.uleb128 0x17
 2033 0460 CB040000 		.4byte	.LASF63
 2034 0464 05       		.byte	0x5
 2035 0465 16       		.byte	0x16
 2036 0466 AC000000 		.4byte	0xac
 2037 046a 05       		.uleb128 0x5
 2038 046b 03       		.byte	0x3
 2039 046c 00000000 		.4byte	flag_ts_enc
 2040 0470 17       		.uleb128 0x17
 2041 0471 42020000 		.4byte	.LASF64
 2042 0475 05       		.byte	0x5
 2043 0476 17       		.byte	0x17
 2044 0477 AC000000 		.4byte	0xac
 2045 047b 05       		.uleb128 0x5
 2046 047c 03       		.byte	0x3
 2047 047d 00000000 		.4byte	flag_ts_update
 2048 0481 17       		.uleb128 0x17
 2049 0482 5C000000 		.4byte	.LASF65
 2050 0486 05       		.byte	0x5
 2051 0487 18       		.byte	0x18
 2052 0488 AC000000 		.4byte	0xac
 2053 048c 05       		.uleb128 0x5
 2054 048d 03       		.byte	0x3
 2055 048e 00000000 		.4byte	flag_ts_speed
 2056 0492 17       		.uleb128 0x17
 2057 0493 97020000 		.4byte	.LASF66
 2058 0497 05       		.byte	0x5
 2059 0498 19       		.byte	0x19
 2060 0499 AC000000 		.4byte	0xac
 2061 049d 05       		.uleb128 0x5
 2062 049e 03       		.byte	0x3
 2063 049f 00000000 		.4byte	flag_ts_display
 2064 04a3 17       		.uleb128 0x17
 2065 04a4 5A030000 		.4byte	.LASF67
 2066 04a8 05       		.byte	0x5
 2067 04a9 1C       		.byte	0x1c
 2068 04aa AC000000 		.4byte	0xac
 2069 04ae 05       		.uleb128 0x5
 2070 04af 03       		.byte	0x3
 2071 04b0 00000000 		.4byte	flag_rx
 2072 04b4 17       		.uleb128 0x17
 2073 04b5 41000000 		.4byte	.LASF68
 2074 04b9 05       		.byte	0x5
 2075 04ba 1D       		.byte	0x1d
 2076 04bb AC000000 		.4byte	0xac
 2077 04bf 05       		.uleb128 0x5
 2078 04c0 03       		.byte	0x3
 2079 04c1 00000000 		.4byte	flag_packet
 2080 04c5 17       		.uleb128 0x17
 2081 04c6 8D030000 		.4byte	.LASF69
 2082 04ca 05       		.byte	0x5
 2083 04cb 1E       		.byte	0x1e
 2084 04cc AC000000 		.4byte	0xac
 2085 04d0 05       		.uleb128 0x5
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 46


 2086 04d1 03       		.byte	0x3
 2087 04d2 00000000 		.4byte	flag_KB_string
 2088 04d6 17       		.uleb128 0x17
 2089 04d7 4B030000 		.4byte	.LASF70
 2090 04db 05       		.byte	0x5
 2091 04dc 20       		.byte	0x20
 2092 04dd AC000000 		.4byte	0xac
 2093 04e1 05       		.uleb128 0x5
 2094 04e2 03       		.byte	0x3
 2095 04e3 00000000 		.4byte	dataready_flag
 2096 04e7 17       		.uleb128 0x17
 2097 04e8 1F050000 		.4byte	.LASF71
 2098 04ec 05       		.byte	0x5
 2099 04ed 22       		.byte	0x22
 2100 04ee AC000000 		.4byte	0xac
 2101 04f2 05       		.uleb128 0x5
 2102 04f3 03       		.byte	0x3
 2103 04f4 00000000 		.4byte	flag_rf_transmission_active
 2104 04f8 06       		.uleb128 0x6
 2105 04f9 8A000000 		.4byte	0x8a
 2106 04fd 08050000 		.4byte	0x508
 2107 0501 07       		.uleb128 0x7
 2108 0502 7D000000 		.4byte	0x7d
 2109 0506 3F       		.byte	0x3f
 2110 0507 00       		.byte	0
 2111 0508 17       		.uleb128 0x17
 2112 0509 62040000 		.4byte	.LASF72
 2113 050d 05       		.byte	0x5
 2114 050e 25       		.byte	0x25
 2115 050f F8040000 		.4byte	0x4f8
 2116 0513 05       		.uleb128 0x5
 2117 0514 03       		.byte	0x3
 2118 0515 00000000 		.4byte	displaystring
 2119 0519 17       		.uleb128 0x17
 2120 051a 03020000 		.4byte	.LASF73
 2121 051e 05       		.byte	0x5
 2122 051f 26       		.byte	0x26
 2123 0520 F8040000 		.4byte	0x4f8
 2124 0524 05       		.uleb128 0x5
 2125 0525 03       		.byte	0x3
 2126 0526 00000000 		.4byte	line
 2127 052a 17       		.uleb128 0x17
 2128 052b FE020000 		.4byte	.LASF74
 2129 052f 05       		.byte	0x5
 2130 0530 26       		.byte	0x26
 2131 0531 F8040000 		.4byte	0x4f8
 2132 0535 05       		.uleb128 0x5
 2133 0536 03       		.byte	0x3
 2134 0537 00000000 		.4byte	entry
 2135 053b 06       		.uleb128 0x6
 2136 053c AC000000 		.4byte	0xac
 2137 0540 4B050000 		.4byte	0x54b
 2138 0544 07       		.uleb128 0x7
 2139 0545 7D000000 		.4byte	0x7d
 2140 0549 3F       		.byte	0x3f
 2141 054a 00       		.byte	0
 2142 054b 17       		.uleb128 0x17
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 47


 2143 054c 9F000000 		.4byte	.LASF75
 2144 0550 05       		.byte	0x5
 2145 0551 27       		.byte	0x27
 2146 0552 3B050000 		.4byte	0x53b
 2147 0556 05       		.uleb128 0x5
 2148 0557 03       		.byte	0x3
 2149 0558 00000000 		.4byte	usbBuffer
 2150 055c 17       		.uleb128 0x17
 2151 055d 7C000000 		.4byte	.LASF76
 2152 0561 05       		.byte	0x5
 2153 0562 3C       		.byte	0x3c
 2154 0563 EA000000 		.4byte	0xea
 2155 0567 05       		.uleb128 0x5
 2156 0568 03       		.byte	0x3
 2157 0569 00000000 		.4byte	system_state
 2158 056d 17       		.uleb128 0x17
 2159 056e 9C030000 		.4byte	.LASF77
 2160 0572 01       		.byte	0x1
 2161 0573 2A       		.byte	0x2a
 2162 0574 68000000 		.4byte	0x68
 2163 0578 05       		.uleb128 0x5
 2164 0579 03       		.byte	0x3
 2165 057a 00000000 		.4byte	consecStops
 2166 057e 17       		.uleb128 0x17
 2167 057f 1A020000 		.4byte	.LASF78
 2168 0583 01       		.byte	0x1
 2169 0584 2B       		.byte	0x2b
 2170 0585 68000000 		.4byte	0x68
 2171 0589 05       		.uleb128 0x5
 2172 058a 03       		.byte	0x3
 2173 058b 00000000 		.4byte	started
 2174 058f 17       		.uleb128 0x17
 2175 0590 B9040000 		.4byte	.LASF79
 2176 0594 01       		.byte	0x1
 2177 0595 2C       		.byte	0x2c
 2178 0596 68000000 		.4byte	0x68
 2179 059a 05       		.uleb128 0x5
 2180 059b 03       		.byte	0x3
 2181 059c 00000000 		.4byte	instCounter
 2182 05a0 17       		.uleb128 0x17
 2183 05a1 30040000 		.4byte	.LASF80
 2184 05a5 01       		.byte	0x1
 2185 05a6 32       		.byte	0x32
 2186 05a7 B1050000 		.4byte	0x5b1
 2187 05ab 05       		.uleb128 0x5
 2188 05ac 03       		.byte	0x3
 2189 05ad 00000000 		.4byte	flag
 2190 05b1 15       		.uleb128 0x15
 2191 05b2 68000000 		.4byte	0x68
 2192 05b6 06       		.uleb128 0x6
 2193 05b7 B1050000 		.4byte	0x5b1
 2194 05bb C7050000 		.4byte	0x5c7
 2195 05bf 18       		.uleb128 0x18
 2196 05c0 7D000000 		.4byte	0x7d
 2197 05c4 F301     		.2byte	0x1f3
 2198 05c6 00       		.byte	0
 2199 05c7 17       		.uleb128 0x17
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 48


 2200 05c8 4B040000 		.4byte	.LASF81
 2201 05cc 01       		.byte	0x1
 2202 05cd 33       		.byte	0x33
 2203 05ce D8050000 		.4byte	0x5d8
 2204 05d2 05       		.uleb128 0x5
 2205 05d3 03       		.byte	0x3
 2206 05d4 00000000 		.4byte	valuesLeftIntersection
 2207 05d8 15       		.uleb128 0x15
 2208 05d9 B6050000 		.4byte	0x5b6
 2209 05dd 17       		.uleb128 0x17
 2210 05de 4D000000 		.4byte	.LASF82
 2211 05e2 01       		.byte	0x1
 2212 05e3 34       		.byte	0x34
 2213 05e4 EE050000 		.4byte	0x5ee
 2214 05e8 05       		.uleb128 0x5
 2215 05e9 03       		.byte	0x3
 2216 05ea 00000000 		.4byte	valuesLeftLine
 2217 05ee 15       		.uleb128 0x15
 2218 05ef B6050000 		.4byte	0x5b6
 2219 05f3 17       		.uleb128 0x17
 2220 05f4 E5030000 		.4byte	.LASF83
 2221 05f8 01       		.byte	0x1
 2222 05f9 35       		.byte	0x35
 2223 05fa 04060000 		.4byte	0x604
 2224 05fe 05       		.uleb128 0x5
 2225 05ff 03       		.byte	0x3
 2226 0600 00000000 		.4byte	valuesMiddleLine
 2227 0604 15       		.uleb128 0x15
 2228 0605 B6050000 		.4byte	0x5b6
 2229 0609 17       		.uleb128 0x17
 2230 060a 98010000 		.4byte	.LASF84
 2231 060e 01       		.byte	0x1
 2232 060f 36       		.byte	0x36
 2233 0610 1A060000 		.4byte	0x61a
 2234 0614 05       		.uleb128 0x5
 2235 0615 03       		.byte	0x3
 2236 0616 00000000 		.4byte	valuesRightLine
 2237 061a 15       		.uleb128 0x15
 2238 061b B6050000 		.4byte	0x5b6
 2239 061f 17       		.uleb128 0x17
 2240 0620 DB010000 		.4byte	.LASF85
 2241 0624 01       		.byte	0x1
 2242 0625 37       		.byte	0x37
 2243 0626 30060000 		.4byte	0x630
 2244 062a 05       		.uleb128 0x5
 2245 062b 03       		.byte	0x3
 2246 062c 00000000 		.4byte	valuesRightIntersection
 2247 0630 15       		.uleb128 0x15
 2248 0631 B6050000 		.4byte	0x5b6
 2249 0635 17       		.uleb128 0x17
 2250 0636 C5040000 		.4byte	.LASF86
 2251 063a 01       		.byte	0x1
 2252 063b 38       		.byte	0x38
 2253 063c B1050000 		.4byte	0x5b1
 2254 0640 05       		.uleb128 0x5
 2255 0641 03       		.byte	0x3
 2256 0642 00000000 		.4byte	count
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 49


 2257 0646 17       		.uleb128 0x17
 2258 0647 E1040000 		.4byte	.LASF87
 2259 064b 01       		.byte	0x1
 2260 064c 39       		.byte	0x39
 2261 064d B1050000 		.4byte	0x5b1
 2262 0651 05       		.uleb128 0x5
 2263 0652 03       		.byte	0x3
 2264 0653 00000000 		.4byte	motorUpdateCount
 2265 0657 17       		.uleb128 0x17
 2266 0658 77020000 		.4byte	.LASF88
 2267 065c 01       		.byte	0x1
 2268 065d 3A       		.byte	0x3a
 2269 065e B1050000 		.4byte	0x5b1
 2270 0662 05       		.uleb128 0x5
 2271 0663 03       		.byte	0x3
 2272 0664 00000000 		.4byte	lastVeerDirection
 2273 0668 17       		.uleb128 0x17
 2274 0669 D7040000 		.4byte	.LASF89
 2275 066d 01       		.byte	0x1
 2276 066e 3C       		.byte	0x3c
 2277 066f B1050000 		.4byte	0x5b1
 2278 0673 05       		.uleb128 0x5
 2279 0674 03       		.byte	0x3
 2280 0675 00000000 		.4byte	v1M1
 2281 0679 17       		.uleb128 0x17
 2282 067a DC040000 		.4byte	.LASF90
 2283 067e 01       		.byte	0x1
 2284 067f 3D       		.byte	0x3d
 2285 0680 B1050000 		.4byte	0x5b1
 2286 0684 05       		.uleb128 0x5
 2287 0685 03       		.byte	0x3
 2288 0686 00000000 		.4byte	v1M2
 2289 068a 17       		.uleb128 0x17
 2290 068b 70040000 		.4byte	.LASF91
 2291 068f 01       		.byte	0x1
 2292 0690 3E       		.byte	0x3e
 2293 0691 B1050000 		.4byte	0x5b1
 2294 0695 05       		.uleb128 0x5
 2295 0696 03       		.byte	0x3
 2296 0697 00000000 		.4byte	v2M1
 2297 069b 17       		.uleb128 0x17
 2298 069c 75040000 		.4byte	.LASF92
 2299 06a0 01       		.byte	0x1
 2300 06a1 3F       		.byte	0x3f
 2301 06a2 B1050000 		.4byte	0x5b1
 2302 06a6 05       		.uleb128 0x5
 2303 06a7 03       		.byte	0x3
 2304 06a8 00000000 		.4byte	v2M2
 2305 06ac 17       		.uleb128 0x17
 2306 06ad 92000000 		.4byte	.LASF93
 2307 06b1 01       		.byte	0x1
 2308 06b2 40       		.byte	0x40
 2309 06b3 B1050000 		.4byte	0x5b1
 2310 06b7 05       		.uleb128 0x5
 2311 06b8 03       		.byte	0x3
 2312 06b9 00000000 		.4byte	turnComplete
 2313 06bd 17       		.uleb128 0x17
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 50


 2314 06be F3010000 		.4byte	.LASF94
 2315 06c2 01       		.byte	0x1
 2316 06c3 41       		.byte	0x41
 2317 06c4 68000000 		.4byte	0x68
 2318 06c8 05       		.uleb128 0x5
 2319 06c9 03       		.byte	0x3
 2320 06ca 00000000 		.4byte	pulsesTravelled
 2321 06ce 17       		.uleb128 0x17
 2322 06cf B3020000 		.4byte	.LASF95
 2323 06d3 01       		.byte	0x1
 2324 06d4 42       		.byte	0x42
 2325 06d5 B1050000 		.4byte	0x5b1
 2326 06d9 05       		.uleb128 0x5
 2327 06da 03       		.byte	0x3
 2328 06db 00000000 		.4byte	checkDistance
 2329 06df 17       		.uleb128 0x17
 2330 06e0 70050000 		.4byte	.LASF96
 2331 06e4 01       		.byte	0x1
 2332 06e5 43       		.byte	0x43
 2333 06e6 B1050000 		.4byte	0x5b1
 2334 06ea 05       		.uleb128 0x5
 2335 06eb 03       		.byte	0x3
 2336 06ec 00000000 		.4byte	step
 2337 06f0 17       		.uleb128 0x17
 2338 06f1 89020000 		.4byte	.LASF97
 2339 06f5 01       		.byte	0x1
 2340 06f6 44       		.byte	0x44
 2341 06f7 B1050000 		.4byte	0x5b1
 2342 06fb 05       		.uleb128 0x5
 2343 06fc 03       		.byte	0x3
 2344 06fd 00000000 		.4byte	interruptFlag
 2345 0701 17       		.uleb128 0x17
 2346 0702 2D000000 		.4byte	.LASF98
 2347 0706 01       		.byte	0x1
 2348 0707 46       		.byte	0x46
 2349 0708 68000000 		.4byte	0x68
 2350 070c 05       		.uleb128 0x5
 2351 070d 03       		.byte	0x3
 2352 070e 00000000 		.4byte	lastAdjustDirection
 2353 0712 06       		.uleb128 0x6
 2354 0713 2C000000 		.4byte	0x2c
 2355 0717 29070000 		.4byte	0x729
 2356 071b 18       		.uleb128 0x18
 2357 071c 7D000000 		.4byte	0x7d
 2358 0720 F301     		.2byte	0x1f3
 2359 0722 07       		.uleb128 0x7
 2360 0723 7D000000 		.4byte	0x7d
 2361 0727 01       		.byte	0x1
 2362 0728 00       		.byte	0
 2363 0729 17       		.uleb128 0x17
 2364 072a 25000000 		.4byte	.LASF99
 2365 072e 01       		.byte	0x1
 2366 072f 47       		.byte	0x47
 2367 0730 12070000 		.4byte	0x712
 2368 0734 05       		.uleb128 0x5
 2369 0735 03       		.byte	0x3
 2370 0736 00000000 		.4byte	squares
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 51


 2371 073a 06       		.uleb128 0x6
 2372 073b 2C000000 		.4byte	0x2c
 2373 073f 4B070000 		.4byte	0x74b
 2374 0743 18       		.uleb128 0x18
 2375 0744 7D000000 		.4byte	0x7d
 2376 0748 F301     		.2byte	0x1f3
 2377 074a 00       		.byte	0
 2378 074b 17       		.uleb128 0x17
 2379 074c 4E050000 		.4byte	.LASF100
 2380 0750 01       		.byte	0x1
 2381 0751 48       		.byte	0x48
 2382 0752 3A070000 		.4byte	0x73a
 2383 0756 05       		.uleb128 0x5
 2384 0757 03       		.byte	0x3
 2385 0758 00000000 		.4byte	instruction
 2386 075c 17       		.uleb128 0x17
 2387 075d 05040000 		.4byte	.LASF101
 2388 0761 01       		.byte	0x1
 2389 0762 49       		.byte	0x49
 2390 0763 3A070000 		.4byte	0x73a
 2391 0767 05       		.uleb128 0x5
 2392 0768 03       		.byte	0x3
 2393 0769 00000000 		.4byte	distance
 2394 076d 00       		.byte	0
 2395              		.section	.debug_abbrev,"",%progbits
 2396              	.Ldebug_abbrev0:
 2397 0000 01       		.uleb128 0x1
 2398 0001 11       		.uleb128 0x11
 2399 0002 01       		.byte	0x1
 2400 0003 25       		.uleb128 0x25
 2401 0004 0E       		.uleb128 0xe
 2402 0005 13       		.uleb128 0x13
 2403 0006 0B       		.uleb128 0xb
 2404 0007 03       		.uleb128 0x3
 2405 0008 0E       		.uleb128 0xe
 2406 0009 1B       		.uleb128 0x1b
 2407 000a 0E       		.uleb128 0xe
 2408 000b 55       		.uleb128 0x55
 2409 000c 17       		.uleb128 0x17
 2410 000d 11       		.uleb128 0x11
 2411 000e 01       		.uleb128 0x1
 2412 000f 10       		.uleb128 0x10
 2413 0010 17       		.uleb128 0x17
 2414 0011 00       		.byte	0
 2415 0012 00       		.byte	0
 2416 0013 02       		.uleb128 0x2
 2417 0014 24       		.uleb128 0x24
 2418 0015 00       		.byte	0
 2419 0016 0B       		.uleb128 0xb
 2420 0017 0B       		.uleb128 0xb
 2421 0018 3E       		.uleb128 0x3e
 2422 0019 0B       		.uleb128 0xb
 2423 001a 03       		.uleb128 0x3
 2424 001b 0E       		.uleb128 0xe
 2425 001c 00       		.byte	0
 2426 001d 00       		.byte	0
 2427 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 52


 2428 001f 16       		.uleb128 0x16
 2429 0020 00       		.byte	0
 2430 0021 03       		.uleb128 0x3
 2431 0022 0E       		.uleb128 0xe
 2432 0023 3A       		.uleb128 0x3a
 2433 0024 0B       		.uleb128 0xb
 2434 0025 3B       		.uleb128 0x3b
 2435 0026 0B       		.uleb128 0xb
 2436 0027 49       		.uleb128 0x49
 2437 0028 13       		.uleb128 0x13
 2438 0029 00       		.byte	0
 2439 002a 00       		.byte	0
 2440 002b 04       		.uleb128 0x4
 2441 002c 24       		.uleb128 0x24
 2442 002d 00       		.byte	0
 2443 002e 0B       		.uleb128 0xb
 2444 002f 0B       		.uleb128 0xb
 2445 0030 3E       		.uleb128 0x3e
 2446 0031 0B       		.uleb128 0xb
 2447 0032 03       		.uleb128 0x3
 2448 0033 08       		.uleb128 0x8
 2449 0034 00       		.byte	0
 2450 0035 00       		.byte	0
 2451 0036 05       		.uleb128 0x5
 2452 0037 0F       		.uleb128 0xf
 2453 0038 00       		.byte	0
 2454 0039 0B       		.uleb128 0xb
 2455 003a 0B       		.uleb128 0xb
 2456 003b 49       		.uleb128 0x49
 2457 003c 13       		.uleb128 0x13
 2458 003d 00       		.byte	0
 2459 003e 00       		.byte	0
 2460 003f 06       		.uleb128 0x6
 2461 0040 01       		.uleb128 0x1
 2462 0041 01       		.byte	0x1
 2463 0042 49       		.uleb128 0x49
 2464 0043 13       		.uleb128 0x13
 2465 0044 01       		.uleb128 0x1
 2466 0045 13       		.uleb128 0x13
 2467 0046 00       		.byte	0
 2468 0047 00       		.byte	0
 2469 0048 07       		.uleb128 0x7
 2470 0049 21       		.uleb128 0x21
 2471 004a 00       		.byte	0
 2472 004b 49       		.uleb128 0x49
 2473 004c 13       		.uleb128 0x13
 2474 004d 2F       		.uleb128 0x2f
 2475 004e 0B       		.uleb128 0xb
 2476 004f 00       		.byte	0
 2477 0050 00       		.byte	0
 2478 0051 08       		.uleb128 0x8
 2479 0052 16       		.uleb128 0x16
 2480 0053 00       		.byte	0
 2481 0054 03       		.uleb128 0x3
 2482 0055 0E       		.uleb128 0xe
 2483 0056 3A       		.uleb128 0x3a
 2484 0057 0B       		.uleb128 0xb
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 53


 2485 0058 3B       		.uleb128 0x3b
 2486 0059 05       		.uleb128 0x5
 2487 005a 49       		.uleb128 0x49
 2488 005b 13       		.uleb128 0x13
 2489 005c 00       		.byte	0
 2490 005d 00       		.byte	0
 2491 005e 09       		.uleb128 0x9
 2492 005f 13       		.uleb128 0x13
 2493 0060 01       		.byte	0x1
 2494 0061 03       		.uleb128 0x3
 2495 0062 0E       		.uleb128 0xe
 2496 0063 0B       		.uleb128 0xb
 2497 0064 0B       		.uleb128 0xb
 2498 0065 3A       		.uleb128 0x3a
 2499 0066 0B       		.uleb128 0xb
 2500 0067 3B       		.uleb128 0x3b
 2501 0068 0B       		.uleb128 0xb
 2502 0069 01       		.uleb128 0x1
 2503 006a 13       		.uleb128 0x13
 2504 006b 00       		.byte	0
 2505 006c 00       		.byte	0
 2506 006d 0A       		.uleb128 0xa
 2507 006e 0D       		.uleb128 0xd
 2508 006f 00       		.byte	0
 2509 0070 03       		.uleb128 0x3
 2510 0071 0E       		.uleb128 0xe
 2511 0072 3A       		.uleb128 0x3a
 2512 0073 0B       		.uleb128 0xb
 2513 0074 3B       		.uleb128 0x3b
 2514 0075 0B       		.uleb128 0xb
 2515 0076 49       		.uleb128 0x49
 2516 0077 13       		.uleb128 0x13
 2517 0078 38       		.uleb128 0x38
 2518 0079 0B       		.uleb128 0xb
 2519 007a 00       		.byte	0
 2520 007b 00       		.byte	0
 2521 007c 0B       		.uleb128 0xb
 2522 007d 2E       		.uleb128 0x2e
 2523 007e 00       		.byte	0
 2524 007f 3F       		.uleb128 0x3f
 2525 0080 19       		.uleb128 0x19
 2526 0081 03       		.uleb128 0x3
 2527 0082 08       		.uleb128 0x8
 2528 0083 3A       		.uleb128 0x3a
 2529 0084 0B       		.uleb128 0xb
 2530 0085 3B       		.uleb128 0x3b
 2531 0086 0B       		.uleb128 0xb
 2532 0087 27       		.uleb128 0x27
 2533 0088 19       		.uleb128 0x19
 2534 0089 11       		.uleb128 0x11
 2535 008a 01       		.uleb128 0x1
 2536 008b 12       		.uleb128 0x12
 2537 008c 06       		.uleb128 0x6
 2538 008d 40       		.uleb128 0x40
 2539 008e 18       		.uleb128 0x18
 2540 008f 9742     		.uleb128 0x2117
 2541 0091 19       		.uleb128 0x19
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 54


 2542 0092 00       		.byte	0
 2543 0093 00       		.byte	0
 2544 0094 0C       		.uleb128 0xc
 2545 0095 2E       		.uleb128 0x2e
 2546 0096 01       		.byte	0x1
 2547 0097 3F       		.uleb128 0x3f
 2548 0098 19       		.uleb128 0x19
 2549 0099 03       		.uleb128 0x3
 2550 009a 0E       		.uleb128 0xe
 2551 009b 3A       		.uleb128 0x3a
 2552 009c 0B       		.uleb128 0xb
 2553 009d 3B       		.uleb128 0x3b
 2554 009e 0B       		.uleb128 0xb
 2555 009f 49       		.uleb128 0x49
 2556 00a0 13       		.uleb128 0x13
 2557 00a1 11       		.uleb128 0x11
 2558 00a2 01       		.uleb128 0x1
 2559 00a3 12       		.uleb128 0x12
 2560 00a4 06       		.uleb128 0x6
 2561 00a5 40       		.uleb128 0x40
 2562 00a6 18       		.uleb128 0x18
 2563 00a7 9642     		.uleb128 0x2116
 2564 00a9 19       		.uleb128 0x19
 2565 00aa 01       		.uleb128 0x1
 2566 00ab 13       		.uleb128 0x13
 2567 00ac 00       		.byte	0
 2568 00ad 00       		.byte	0
 2569 00ae 0D       		.uleb128 0xd
 2570 00af 0B       		.uleb128 0xb
 2571 00b0 01       		.byte	0x1
 2572 00b1 11       		.uleb128 0x11
 2573 00b2 01       		.uleb128 0x1
 2574 00b3 12       		.uleb128 0x12
 2575 00b4 06       		.uleb128 0x6
 2576 00b5 01       		.uleb128 0x1
 2577 00b6 13       		.uleb128 0x13
 2578 00b7 00       		.byte	0
 2579 00b8 00       		.byte	0
 2580 00b9 0E       		.uleb128 0xe
 2581 00ba 34       		.uleb128 0x34
 2582 00bb 00       		.byte	0
 2583 00bc 03       		.uleb128 0x3
 2584 00bd 08       		.uleb128 0x8
 2585 00be 3A       		.uleb128 0x3a
 2586 00bf 0B       		.uleb128 0xb
 2587 00c0 3B       		.uleb128 0x3b
 2588 00c1 0B       		.uleb128 0xb
 2589 00c2 49       		.uleb128 0x49
 2590 00c3 13       		.uleb128 0x13
 2591 00c4 02       		.uleb128 0x2
 2592 00c5 18       		.uleb128 0x18
 2593 00c6 00       		.byte	0
 2594 00c7 00       		.byte	0
 2595 00c8 0F       		.uleb128 0xf
 2596 00c9 0B       		.uleb128 0xb
 2597 00ca 01       		.byte	0x1
 2598 00cb 11       		.uleb128 0x11
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 55


 2599 00cc 01       		.uleb128 0x1
 2600 00cd 12       		.uleb128 0x12
 2601 00ce 06       		.uleb128 0x6
 2602 00cf 00       		.byte	0
 2603 00d0 00       		.byte	0
 2604 00d1 10       		.uleb128 0x10
 2605 00d2 34       		.uleb128 0x34
 2606 00d3 00       		.byte	0
 2607 00d4 03       		.uleb128 0x3
 2608 00d5 0E       		.uleb128 0xe
 2609 00d6 3A       		.uleb128 0x3a
 2610 00d7 0B       		.uleb128 0xb
 2611 00d8 3B       		.uleb128 0x3b
 2612 00d9 0B       		.uleb128 0xb
 2613 00da 49       		.uleb128 0x49
 2614 00db 13       		.uleb128 0x13
 2615 00dc 02       		.uleb128 0x2
 2616 00dd 18       		.uleb128 0x18
 2617 00de 00       		.byte	0
 2618 00df 00       		.byte	0
 2619 00e0 11       		.uleb128 0x11
 2620 00e1 34       		.uleb128 0x34
 2621 00e2 00       		.byte	0
 2622 00e3 03       		.uleb128 0x3
 2623 00e4 0E       		.uleb128 0xe
 2624 00e5 3A       		.uleb128 0x3a
 2625 00e6 0B       		.uleb128 0xb
 2626 00e7 3B       		.uleb128 0x3b
 2627 00e8 05       		.uleb128 0x5
 2628 00e9 49       		.uleb128 0x49
 2629 00ea 13       		.uleb128 0x13
 2630 00eb 02       		.uleb128 0x2
 2631 00ec 18       		.uleb128 0x18
 2632 00ed 00       		.byte	0
 2633 00ee 00       		.byte	0
 2634 00ef 12       		.uleb128 0x12
 2635 00f0 2E       		.uleb128 0x2e
 2636 00f1 01       		.byte	0x1
 2637 00f2 3F       		.uleb128 0x3f
 2638 00f3 19       		.uleb128 0x19
 2639 00f4 03       		.uleb128 0x3
 2640 00f5 0E       		.uleb128 0xe
 2641 00f6 3A       		.uleb128 0x3a
 2642 00f7 0B       		.uleb128 0xb
 2643 00f8 3B       		.uleb128 0x3b
 2644 00f9 05       		.uleb128 0x5
 2645 00fa 27       		.uleb128 0x27
 2646 00fb 19       		.uleb128 0x19
 2647 00fc 11       		.uleb128 0x11
 2648 00fd 01       		.uleb128 0x1
 2649 00fe 12       		.uleb128 0x12
 2650 00ff 06       		.uleb128 0x6
 2651 0100 40       		.uleb128 0x40
 2652 0101 18       		.uleb128 0x18
 2653 0102 9642     		.uleb128 0x2116
 2654 0104 19       		.uleb128 0x19
 2655 0105 01       		.uleb128 0x1
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 56


 2656 0106 13       		.uleb128 0x13
 2657 0107 00       		.byte	0
 2658 0108 00       		.byte	0
 2659 0109 13       		.uleb128 0x13
 2660 010a 05       		.uleb128 0x5
 2661 010b 00       		.byte	0
 2662 010c 03       		.uleb128 0x3
 2663 010d 08       		.uleb128 0x8
 2664 010e 3A       		.uleb128 0x3a
 2665 010f 0B       		.uleb128 0xb
 2666 0110 3B       		.uleb128 0x3b
 2667 0111 05       		.uleb128 0x5
 2668 0112 49       		.uleb128 0x49
 2669 0113 13       		.uleb128 0x13
 2670 0114 02       		.uleb128 0x2
 2671 0115 18       		.uleb128 0x18
 2672 0116 00       		.byte	0
 2673 0117 00       		.byte	0
 2674 0118 14       		.uleb128 0x14
 2675 0119 34       		.uleb128 0x34
 2676 011a 00       		.byte	0
 2677 011b 03       		.uleb128 0x3
 2678 011c 0E       		.uleb128 0xe
 2679 011d 3A       		.uleb128 0x3a
 2680 011e 0B       		.uleb128 0xb
 2681 011f 3B       		.uleb128 0x3b
 2682 0120 05       		.uleb128 0x5
 2683 0121 49       		.uleb128 0x49
 2684 0122 13       		.uleb128 0x13
 2685 0123 3F       		.uleb128 0x3f
 2686 0124 19       		.uleb128 0x19
 2687 0125 3C       		.uleb128 0x3c
 2688 0126 19       		.uleb128 0x19
 2689 0127 00       		.byte	0
 2690 0128 00       		.byte	0
 2691 0129 15       		.uleb128 0x15
 2692 012a 35       		.uleb128 0x35
 2693 012b 00       		.byte	0
 2694 012c 49       		.uleb128 0x49
 2695 012d 13       		.uleb128 0x13
 2696 012e 00       		.byte	0
 2697 012f 00       		.byte	0
 2698 0130 16       		.uleb128 0x16
 2699 0131 34       		.uleb128 0x34
 2700 0132 00       		.byte	0
 2701 0133 03       		.uleb128 0x3
 2702 0134 08       		.uleb128 0x8
 2703 0135 3A       		.uleb128 0x3a
 2704 0136 0B       		.uleb128 0xb
 2705 0137 3B       		.uleb128 0x3b
 2706 0138 0B       		.uleb128 0xb
 2707 0139 49       		.uleb128 0x49
 2708 013a 13       		.uleb128 0x13
 2709 013b 3F       		.uleb128 0x3f
 2710 013c 19       		.uleb128 0x19
 2711 013d 02       		.uleb128 0x2
 2712 013e 18       		.uleb128 0x18
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 57


 2713 013f 00       		.byte	0
 2714 0140 00       		.byte	0
 2715 0141 17       		.uleb128 0x17
 2716 0142 34       		.uleb128 0x34
 2717 0143 00       		.byte	0
 2718 0144 03       		.uleb128 0x3
 2719 0145 0E       		.uleb128 0xe
 2720 0146 3A       		.uleb128 0x3a
 2721 0147 0B       		.uleb128 0xb
 2722 0148 3B       		.uleb128 0x3b
 2723 0149 0B       		.uleb128 0xb
 2724 014a 49       		.uleb128 0x49
 2725 014b 13       		.uleb128 0x13
 2726 014c 3F       		.uleb128 0x3f
 2727 014d 19       		.uleb128 0x19
 2728 014e 02       		.uleb128 0x2
 2729 014f 18       		.uleb128 0x18
 2730 0150 00       		.byte	0
 2731 0151 00       		.byte	0
 2732 0152 18       		.uleb128 0x18
 2733 0153 21       		.uleb128 0x21
 2734 0154 00       		.byte	0
 2735 0155 49       		.uleb128 0x49
 2736 0156 13       		.uleb128 0x13
 2737 0157 2F       		.uleb128 0x2f
 2738 0158 05       		.uleb128 0x5
 2739 0159 00       		.byte	0
 2740 015a 00       		.byte	0
 2741 015b 00       		.byte	0
 2742              		.section	.debug_aranges,"",%progbits
 2743 0000 34000000 		.4byte	0x34
 2744 0004 0200     		.2byte	0x2
 2745 0006 00000000 		.4byte	.Ldebug_info0
 2746 000a 04       		.byte	0x4
 2747 000b 00       		.byte	0
 2748 000c 0000     		.2byte	0
 2749 000e 0000     		.2byte	0
 2750 0010 00000000 		.4byte	.LFB64
 2751 0014 18000000 		.4byte	.LFE64-.LFB64
 2752 0018 00000000 		.4byte	.LFB65
 2753 001c 3C080000 		.4byte	.LFE65-.LFB65
 2754 0020 00000000 		.4byte	.LFB66
 2755 0024 3E000000 		.4byte	.LFE66-.LFB66
 2756 0028 00000000 		.4byte	.LFB67
 2757 002c 26000000 		.4byte	.LFE67-.LFB67
 2758 0030 00000000 		.4byte	0
 2759 0034 00000000 		.4byte	0
 2760              		.section	.debug_ranges,"",%progbits
 2761              	.Ldebug_ranges0:
 2762 0000 00000000 		.4byte	.LFB64
 2763 0004 18000000 		.4byte	.LFE64
 2764 0008 00000000 		.4byte	.LFB65
 2765 000c 3C080000 		.4byte	.LFE65
 2766 0010 00000000 		.4byte	.LFB66
 2767 0014 3E000000 		.4byte	.LFE66
 2768 0018 00000000 		.4byte	.LFB67
 2769 001c 26000000 		.4byte	.LFE67
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 58


 2770 0020 00000000 		.4byte	0
 2771 0024 00000000 		.4byte	0
 2772              		.section	.debug_line,"",%progbits
 2773              	.Ldebug_line0:
 2774 0000 98030000 		.section	.debug_str,"MS",%progbits,1
 2774      02005601 
 2774      00000201 
 2774      FB0E0D00 
 2774      01010101 
 2775              	.LASF57:
 2776 0000 75736250 		.ascii	"usbPutChar\000"
 2776      75744368 
 2776      617200
 2777              	.LASF37:
 2778 000b 68696768 		.ascii	"highCountLeftIntersection\000"
 2778      436F756E 
 2778      744C6566 
 2778      74496E74 
 2778      65727365 
 2779              	.LASF99:
 2780 0025 73717561 		.ascii	"squares\000"
 2780      72657300 
 2781              	.LASF98:
 2782 002d 6C617374 		.ascii	"lastAdjustDirection\000"
 2782      41646A75 
 2782      73744469 
 2782      72656374 
 2782      696F6E00 
 2783              	.LASF68:
 2784 0041 666C6167 		.ascii	"flag_packet\000"
 2784      5F706163 
 2784      6B657400 
 2785              	.LASF82:
 2786 004d 76616C75 		.ascii	"valuesLeftLine\000"
 2786      65734C65 
 2786      66744C69 
 2786      6E6500
 2787              	.LASF65:
 2788 005c 666C6167 		.ascii	"flag_ts_speed\000"
 2788      5F74735F 
 2788      73706565 
 2788      6400
 2789              	.LASF33:
 2790 006a 67325F78 		.ascii	"g2_xpos\000"
 2790      706F7300 
 2791              	.LASF2:
 2792 0072 73686F72 		.ascii	"short int\000"
 2792      7420696E 
 2792      7400
 2793              	.LASF76:
 2794 007c 73797374 		.ascii	"system_state\000"
 2794      656D5F73 
 2794      74617465 
 2794      00
 2795              	.LASF10:
 2796 0089 73697A65 		.ascii	"sizetype\000"
 2796      74797065 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 59


 2796      00
 2797              	.LASF93:
 2798 0092 7475726E 		.ascii	"turnComplete\000"
 2798      436F6D70 
 2798      6C657465 
 2798      00
 2799              	.LASF75:
 2800 009f 75736242 		.ascii	"usbBuffer\000"
 2800      75666665 
 2800      7200
 2801              	.LASF102:
 2802 00a9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2802      43313120 
 2802      352E342E 
 2802      31203230 
 2802      31363036 
 2803 00dc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2803      20726576 
 2803      6973696F 
 2803      6E203233 
 2803      37373135 
 2804 010f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2804      66756E63 
 2804      74696F6E 
 2804      2D736563 
 2804      74696F6E 
 2805              	.LASF55:
 2806 0137 6D61696E 		.ascii	"main\000"
 2806      00
 2807              	.LASF104:
 2808 013c 483A5C44 		.ascii	"H:\\Documents\\GitHub\\team14\\301_lab_tasks\\psoc "
 2808      6F63756D 
 2808      656E7473 
 2808      5C476974 
 2808      4875625C 
 2809 016a 73747564 		.ascii	"student pack\\psoc_code_base\\CS301_Class.cydsn\000"
 2809      656E7420 
 2809      7061636B 
 2809      5C70736F 
 2809      635F636F 
 2810              	.LASF84:
 2811 0198 76616C75 		.ascii	"valuesRightLine\000"
 2811      65735269 
 2811      6768744C 
 2811      696E6500 
 2812              	.LASF36:
 2813 01a8 67325F64 		.ascii	"g2_direction\000"
 2813      69726563 
 2813      74696F6E 
 2813      00
 2814              	.LASF15:
 2815 01b5 75696E74 		.ascii	"uint16\000"
 2815      313600
 2816              	.LASF21:
 2817 01bc 696E6465 		.ascii	"index\000"
 2817      7800
 2818              	.LASF17:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 60


 2819 01c2 696E7431 		.ascii	"int16\000"
 2819      3600
 2820              	.LASF14:
 2821 01c8 75696E74 		.ascii	"uint8\000"
 2821      3800
 2822              	.LASF32:
 2823 01ce 67315F64 		.ascii	"g1_direction\000"
 2823      69726563 
 2823      74696F6E 
 2823      00
 2824              	.LASF85:
 2825 01db 76616C75 		.ascii	"valuesRightIntersection\000"
 2825      65735269 
 2825      67687449 
 2825      6E746572 
 2825      73656374 
 2826              	.LASF94:
 2827 01f3 70756C73 		.ascii	"pulsesTravelled\000"
 2827      65735472 
 2827      6176656C 
 2827      6C656400 
 2828              	.LASF73:
 2829 0203 6C696E65 		.ascii	"line\000"
 2829      00
 2830              	.LASF0:
 2831 0208 7369676E 		.ascii	"signed char\000"
 2831      65642063 
 2831      68617200 
 2832              	.LASF18:
 2833 0214 666C6F61 		.ascii	"float\000"
 2833      7400
 2834              	.LASF78:
 2835 021a 73746172 		.ascii	"started\000"
 2835      74656400 
 2836              	.LASF6:
 2837 0222 6C6F6E67 		.ascii	"long long int\000"
 2837      206C6F6E 
 2837      6720696E 
 2837      7400
 2838              	.LASF56:
 2839 0230 75736250 		.ascii	"usbPutString\000"
 2839      75745374 
 2839      72696E67 
 2839      00
 2840              	.LASF16:
 2841 023d 696E7438 		.ascii	"int8\000"
 2841      00
 2842              	.LASF64:
 2843 0242 666C6167 		.ascii	"flag_ts_update\000"
 2843      5F74735F 
 2843      75706461 
 2843      746500
 2844              	.LASF34:
 2845 0251 67325F79 		.ascii	"g2_ypos\000"
 2845      706F7300 
 2846              	.LASF28:
 2847 0259 67305F64 		.ascii	"g0_direction\000"
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 61


 2847      69726563 
 2847      74696F6E 
 2847      00
 2848              	.LASF25:
 2849 0266 67305F78 		.ascii	"g0_xpos\000"
 2849      706F7300 
 2850              	.LASF4:
 2851 026e 6C6F6E67 		.ascii	"long int\000"
 2851      20696E74 
 2851      00
 2852              	.LASF88:
 2853 0277 6C617374 		.ascii	"lastVeerDirection\000"
 2853      56656572 
 2853      44697265 
 2853      6374696F 
 2853      6E00
 2854              	.LASF97:
 2855 0289 696E7465 		.ascii	"interruptFlag\000"
 2855      72727570 
 2855      74466C61 
 2855      6700
 2856              	.LASF66:
 2857 0297 666C6167 		.ascii	"flag_ts_display\000"
 2857      5F74735F 
 2857      64697370 
 2857      6C617900 
 2858              	.LASF46:
 2859 02a7 63757272 		.ascii	"currentInst\000"
 2859      656E7449 
 2859      6E737400 
 2860              	.LASF95:
 2861 02b3 63686563 		.ascii	"checkDistance\000"
 2861      6B446973 
 2861      74616E63 
 2861      6500
 2862              	.LASF42:
 2863 02c1 68696768 		.ascii	"highCountRightIntersection\000"
 2863      436F756E 
 2863      74526967 
 2863      6874496E 
 2863      74657273 
 2864              	.LASF1:
 2865 02dc 756E7369 		.ascii	"unsigned char\000"
 2865      676E6564 
 2865      20636861 
 2865      7200
 2866              	.LASF30:
 2867 02ea 67315F79 		.ascii	"g1_ypos\000"
 2867      706F7300 
 2868              	.LASF9:
 2869 02f2 6C6F6E67 		.ascii	"long double\000"
 2869      20646F75 
 2869      626C6500 
 2870              	.LASF74:
 2871 02fe 656E7472 		.ascii	"entry\000"
 2871      7900
 2872              	.LASF43:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 62


 2873 0304 72657375 		.ascii	"result1\000"
 2873      6C743100 
 2874              	.LASF44:
 2875 030c 72657375 		.ascii	"result2\000"
 2875      6C743200 
 2876              	.LASF45:
 2877 0314 66697273 		.ascii	"firstNonZeroIndex\000"
 2877      744E6F6E 
 2877      5A65726F 
 2877      496E6465 
 2877      7800
 2878              	.LASF27:
 2879 0326 67305F73 		.ascii	"g0_speed\000"
 2879      70656564 
 2879      00
 2880              	.LASF31:
 2881 032f 67315F73 		.ascii	"g1_speed\000"
 2881      70656564 
 2881      00
 2882              	.LASF41:
 2883 0338 68696768 		.ascii	"highCountRightLine\000"
 2883      436F756E 
 2883      74526967 
 2883      68744C69 
 2883      6E6500
 2884              	.LASF70:
 2885 034b 64617461 		.ascii	"dataready_flag\000"
 2885      72656164 
 2885      795F666C 
 2885      616700
 2886              	.LASF67:
 2887 035a 666C6167 		.ascii	"flag_rx\000"
 2887      5F727800 
 2888              	.LASF51:
 2889 0362 7365636F 		.ascii	"second\000"
 2889      6E6400
 2890              	.LASF7:
 2891 0369 6C6F6E67 		.ascii	"long long unsigned int\000"
 2891      206C6F6E 
 2891      6720756E 
 2891      7369676E 
 2891      65642069 
 2892              	.LASF8:
 2893 0380 756E7369 		.ascii	"unsigned int\000"
 2893      676E6564 
 2893      20696E74 
 2893      00
 2894              	.LASF69:
 2895 038d 666C6167 		.ascii	"flag_KB_string\000"
 2895      5F4B425F 
 2895      73747269 
 2895      6E6700
 2896              	.LASF77:
 2897 039c 636F6E73 		.ascii	"consecStops\000"
 2897      65635374 
 2897      6F707300 
 2898              	.LASF35:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 63


 2899 03a8 67325F73 		.ascii	"g2_speed\000"
 2899      70656564 
 2899      00
 2900              	.LASF48:
 2901 03b1 64697374 		.ascii	"dist\000"
 2901      00
 2902              	.LASF29:
 2903 03b6 67315F78 		.ascii	"g1_xpos\000"
 2903      706F7300 
 2904              	.LASF3:
 2905 03be 73686F72 		.ascii	"short unsigned int\000"
 2905      7420756E 
 2905      7369676E 
 2905      65642069 
 2905      6E7400
 2906              	.LASF39:
 2907 03d1 68696768 		.ascii	"highCountMiddleLine\000"
 2907      436F756E 
 2907      744D6964 
 2907      646C654C 
 2907      696E6500 
 2908              	.LASF83:
 2909 03e5 76616C75 		.ascii	"valuesMiddleLine\000"
 2909      65734D69 
 2909      64646C65 
 2909      4C696E65 
 2909      00
 2910              	.LASF105:
 2911 03f6 64617461 		.ascii	"data_main\000"
 2911      5F6D6169 
 2911      6E00
 2912              	.LASF11:
 2913 0400 63686172 		.ascii	"char\000"
 2913      00
 2914              	.LASF101:
 2915 0405 64697374 		.ascii	"distance\000"
 2915      616E6365 
 2915      00
 2916              	.LASF54:
 2917 040e 70756C73 		.ascii	"pulsesToTravel\000"
 2917      6573546F 
 2917      54726176 
 2917      656C00
 2918              	.LASF22:
 2919 041d 726F626F 		.ascii	"robot_xpos\000"
 2919      745F7870 
 2919      6F7300
 2920              	.LASF13:
 2921 0428 696E7433 		.ascii	"int32_t\000"
 2921      325F7400 
 2922              	.LASF80:
 2923 0430 666C6167 		.ascii	"flag\000"
 2923      00
 2924              	.LASF12:
 2925 0435 5F5F696E 		.ascii	"__int32_t\000"
 2925      7433325F 
 2925      7400
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 64


 2926              	.LASF49:
 2927 043f 70756C73 		.ascii	"pulses\000"
 2927      657300
 2928              	.LASF53:
 2929 0446 6356616C 		.ascii	"cVal\000"
 2929      00
 2930              	.LASF81:
 2931 044b 76616C75 		.ascii	"valuesLeftIntersection\000"
 2931      65734C65 
 2931      6674496E 
 2931      74657273 
 2931      65637469 
 2932              	.LASF72:
 2933 0462 64697370 		.ascii	"displaystring\000"
 2933      6C617973 
 2933      7472696E 
 2933      6700
 2934              	.LASF91:
 2935 0470 76324D31 		.ascii	"v2M1\000"
 2935      00
 2936              	.LASF92:
 2937 0475 76324D32 		.ascii	"v2M2\000"
 2937      00
 2938              	.LASF38:
 2939 047a 68696768 		.ascii	"highCountLeftLine\000"
 2939      436F756E 
 2939      744C6566 
 2939      744C696E 
 2939      6500
 2940              	.LASF103:
 2941 048c 6D61696E 		.ascii	"main.c\000"
 2941      2E6300
 2942              	.LASF5:
 2943 0493 6C6F6E67 		.ascii	"long unsigned int\000"
 2943      20756E73 
 2943      69676E65 
 2943      6420696E 
 2943      7400
 2944              	.LASF19:
 2945 04a5 646F7562 		.ascii	"double\000"
 2945      6C6500
 2946              	.LASF58:
 2947 04ac 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2947      52784275 
 2947      66666572 
 2947      00
 2948              	.LASF79:
 2949 04b9 696E7374 		.ascii	"instCounter\000"
 2949      436F756E 
 2949      74657200 
 2950              	.LASF86:
 2951 04c5 636F756E 		.ascii	"count\000"
 2951      7400
 2952              	.LASF63:
 2953 04cb 666C6167 		.ascii	"flag_ts_enc\000"
 2953      5F74735F 
 2953      656E6300 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 65


 2954              	.LASF89:
 2955 04d7 76314D31 		.ascii	"v1M1\000"
 2955      00
 2956              	.LASF90:
 2957 04dc 76314D32 		.ascii	"v1M2\000"
 2957      00
 2958              	.LASF87:
 2959 04e1 6D6F746F 		.ascii	"motorUpdateCount\000"
 2959      72557064 
 2959      61746543 
 2959      6F756E74 
 2959      00
 2960              	.LASF26:
 2961 04f2 67305F79 		.ascii	"g0_ypos\000"
 2961      706F7300 
 2962              	.LASF62:
 2963 04fa 74735F64 		.ascii	"ts_display\000"
 2963      6973706C 
 2963      617900
 2964              	.LASF61:
 2965 0505 74735F73 		.ascii	"ts_speed\000"
 2965      70656564 
 2965      00
 2966              	.LASF59:
 2967 050e 74735F65 		.ascii	"ts_enc\000"
 2967      6E6300
 2968              	.LASF60:
 2969 0515 74735F75 		.ascii	"ts_update\000"
 2969      70646174 
 2969      6500
 2970              	.LASF71:
 2971 051f 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2971      5F72665F 
 2971      7472616E 
 2971      736D6973 
 2971      73696F6E 
 2972              	.LASF23:
 2973 053b 726F626F 		.ascii	"robot_ypos\000"
 2973      745F7970 
 2973      6F7300
 2974              	.LASF52:
 2975 0546 696E7374 		.ascii	"instStr\000"
 2975      53747200 
 2976              	.LASF100:
 2977 054e 696E7374 		.ascii	"instruction\000"
 2977      72756374 
 2977      696F6E00 
 2978              	.LASF40:
 2979 055a 68696768 		.ascii	"highCountTurnComplete\000"
 2979      436F756E 
 2979      74547572 
 2979      6E436F6D 
 2979      706C6574 
 2980              	.LASF96:
 2981 0570 73746570 		.ascii	"step\000"
 2981      00
 2982              	.LASF20:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cc8kiBtP.s 			page 66


 2983 0575 72737369 		.ascii	"rssi\000"
 2983      00
 2984              	.LASF24:
 2985 057a 726F626F 		.ascii	"robot_orientation\000"
 2985      745F6F72 
 2985      69656E74 
 2985      6174696F 
 2985      6E00
 2986              	.LASF50:
 2987 058c 66697273 		.ascii	"first\000"
 2987      7400
 2988              	.LASF47:
 2989 0592 6E657874 		.ascii	"nextInst\000"
 2989      496E7374 
 2989      00
 2990              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
