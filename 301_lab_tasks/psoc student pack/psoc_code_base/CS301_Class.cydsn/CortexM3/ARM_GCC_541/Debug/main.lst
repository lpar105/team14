ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	TARGET_SPEED
 107              		.align	2
 108              		.type	TARGET_SPEED, %object
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 3


 109              		.size	TARGET_SPEED, 4
 110              	TARGET_SPEED:
 111 0044 00007041 		.word	1097859072
 112              		.global	restoring
 113              		.align	2
 114              		.type	restoring, %object
 115              		.size	restoring, 4
 116              	restoring:
 117 0048 1E000000 		.word	30
 118              		.global	turningDirection
 119              		.bss
 120 0012 0000     		.align	2
 121              		.type	turningDirection, %object
 122              		.size	turningDirection, 4
 123              	turningDirection:
 124 0014 00000000 		.space	4
 125              		.global	turningCount
 126              		.data
 127              		.align	2
 128              		.type	turningCount, %object
 129              		.size	turningCount, 4
 130              	turningCount:
 131 004c 1E000000 		.word	30
 132              		.global	shouldUpdate
 133              		.align	2
 134              		.type	shouldUpdate, %object
 135              		.size	shouldUpdate, 4
 136              	shouldUpdate:
 137 0050 01000000 		.word	1
 138              		.global	dotsTravelled
 139              		.bss
 140              		.align	2
 141              		.type	dotsTravelled, %object
 142              		.size	dotsTravelled, 4
 143              	dotsTravelled:
 144 0018 00000000 		.space	4
 145              		.global	flag
 146              		.align	2
 147              		.type	flag, %object
 148              		.size	flag, 4
 149              	flag:
 150 001c 00000000 		.space	4
 151              		.comm	valuesLeftIntersection,4000,4
 152              		.comm	valuesLeftLine,4000,4
 153              		.comm	valuesMiddleLine,4000,4
 154              		.comm	valuesTurnComplete,4000,4
 155              		.comm	valuesRightLine,4000,4
 156              		.comm	valuesRightIntersection,4000,4
 157              		.global	count
 158              		.align	2
 159              		.type	count, %object
 160              		.size	count, 4
 161              	count:
 162 0020 00000000 		.space	4
 163              		.global	turningLeft
 164              		.align	2
 165              		.type	turningLeft, %object
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 4


 166              		.size	turningLeft, 4
 167              	turningLeft:
 168 0024 00000000 		.space	4
 169              		.global	turningRight
 170              		.align	2
 171              		.type	turningRight, %object
 172              		.size	turningRight, 4
 173              	turningRight:
 174 0028 00000000 		.space	4
 175              		.global	lastVeerDirection
 176              		.align	2
 177              		.type	lastVeerDirection, %object
 178              		.size	lastVeerDirection, 4
 179              	lastVeerDirection:
 180 002c 00000000 		.space	4
 181              		.global	motorFlag
 182              		.align	2
 183              		.type	motorFlag, %object
 184              		.size	motorFlag, 4
 185              	motorFlag:
 186 0030 00000000 		.space	4
 187              		.global	step
 188              		.align	2
 189              		.type	step, %object
 190              		.size	step, 4
 191              	step:
 192 0034 00000000 		.space	4
 193              		.comm	v1L,4,4
 194              		.comm	v2L,4,4
 195              		.comm	v1R,4,4
 196              		.comm	v2R,4,4
 197              		.comm	numRotationsL,4,4
 198              		.comm	numRotationsR,4,4
 199              		.comm	turnCount,4,4
 200              		.global	distanceTravelled
 201              		.align	2
 202              		.type	distanceTravelled, %object
 203              		.size	distanceTravelled, 4
 204              	distanceTravelled:
 205 0038 00000000 		.space	4
 206              		.global	distancePerSecondL
 207              		.align	2
 208              		.type	distancePerSecondL, %object
 209              		.size	distancePerSecondL, 4
 210              	distancePerSecondL:
 211 003c 00000000 		.space	4
 212              		.global	distancePerSecondR
 213              		.align	2
 214              		.type	distancePerSecondR, %object
 215              		.size	distancePerSecondR, 4
 216              	distancePerSecondR:
 217 0040 00000000 		.space	4
 218              		.global	distancePerSecondAvg
 219              		.align	2
 220              		.type	distancePerSecondAvg, %object
 221              		.size	distancePerSecondAvg, 4
 222              	distancePerSecondAvg:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 5


 223 0044 00000000 		.space	4
 224              		.global	prevTurnState
 225              		.align	2
 226              		.type	prevTurnState, %object
 227              		.size	prevTurnState, 4
 228              	prevTurnState:
 229 0048 00000000 		.space	4
 230              		.global	turnState
 231              		.align	2
 232              		.type	turnState, %object
 233              		.size	turnState, 4
 234              	turnState:
 235 004c 00000000 		.space	4
 236              		.global	turnEnable
 237              		.align	2
 238              		.type	turnEnable, %object
 239              		.size	turnEnable, 4
 240              	turnEnable:
 241 0050 00000000 		.space	4
 242              		.global	turnTimer
 243              		.align	2
 244              		.type	turnTimer, %object
 245              		.size	turnTimer, 4
 246              	turnTimer:
 247 0054 00000000 		.space	4
 248              		.global	lastAdjustDirection
 249              		.align	2
 250              		.type	lastAdjustDirection, %object
 251              		.size	lastAdjustDirection, 4
 252              	lastAdjustDirection:
 253 0058 00000000 		.space	4
 254              		.section	.text.eoc,"ax",%progbits
 255              		.align	2
 256              		.global	eoc
 257              		.thumb
 258              		.thumb_func
 259              		.type	eoc, %function
 260              	eoc:
 261              	.LFB64:
 262              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 6


  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** #include "pathfind.h"
  30:main.c        **** 
  31:main.c        **** #include "vars.h"
  32:main.c        **** 
  33:main.c        **** #define ADC_COUNT 1000
  34:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 150
  35:main.c        **** #define R_INT_BLACK highCountRightIntersection < 150
  36:main.c        **** #define L_LINE_BLACK highCountLeftLine < 150
  37:main.c        **** #define R_LINE_BLACK highCountRightLine < 150
  38:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 150
  39:main.c        **** #define TC_BLACK highCountTurnComplete < 150
  40:main.c        **** float TARGET_SPEED = 15; //speed in cm^-1
  41:main.c        **** int restoring = 30;
  42:main.c        **** int turningDirection = 0;
  43:main.c        **** int turningCount = 30;
  44:main.c        **** volatile int shouldUpdate = 1;
  45:main.c        **** #define MOVE_DISTANCE 9999999 //cm
  46:main.c        **** volatile int dotsTravelled = 0;
  47:main.c        **** //* ========================================
  48:main.c        **** void usbPutString(char * s);
  49:main.c        **** void usbPutChar(char c);
  50:main.c        **** void printSensorDebug(int highCountLeftIntersection, int highCountLeftLine, int highCountMiddleLine
  51:main.c        **** //* ========================================
  52:main.c        **** 
  53:main.c        **** volatile int flag = 0;
  54:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  55:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  56:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  57:main.c        **** volatile int valuesTurnComplete[ADC_COUNT];
  58:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  59:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  60:main.c        **** volatile int count = 0;
  61:main.c        **** volatile int turningLeft = 0;
  62:main.c        **** volatile int turningRight = 0;
  63:main.c        **** volatile int lastVeerDirection = 0;
  64:main.c        **** 
  65:main.c        **** volatile int motorFlag = 0;
  66:main.c        **** volatile int step = 0; // are we on first measuring step or second step?
  67:main.c        **** volatile int v1L; // allocating storage for measure number of holes (ahead) - LEFT WHEEL
  68:main.c        **** volatile int v2L; // allocating storage for measure number of holes (behind) - LEFT WHEEL
  69:main.c        **** volatile int v1R; // allocating storage for measure number of holes (ahead) - RIGHT WHEEL
  70:main.c        **** volatile int v2R; // allocating storage for measure number of holes (behind) - RIGHT WHEEL
  71:main.c        **** volatile int numRotationsL; //
  72:main.c        **** volatile int numRotationsR; //
  73:main.c        **** volatile int turnCount;
  74:main.c        **** volatile int distanceTravelled = 0;
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 7


  75:main.c        **** volatile int distancePerSecondL = 0;
  76:main.c        **** volatile int distancePerSecondR = 0;
  77:main.c        **** volatile int distancePerSecondAvg = 0;
  78:main.c        **** volatile int prevTurnState = 0;
  79:main.c        **** volatile int turnState = 0;
  80:main.c        **** volatile int turnEnable = 0;
  81:main.c        **** volatile int turnTimer = 0;
  82:main.c        **** int lastAdjustDirection = 0;
  83:main.c        **** 
  84:main.c        **** CY_ISR(eoc) {
 263              		.loc 1 84 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268 0000 80B4     		push	{r7}
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 7, -4
 271 0002 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
  85:main.c        ****   flag = 1;
 273              		.loc 1 85 0
 274 0004 034B     		ldr	r3, .L2
 275 0006 0122     		movs	r2, #1
 276 0008 1A60     		str	r2, [r3]
  86:main.c        **** }
 277              		.loc 1 86 0
 278 000a 00BF     		nop
 279 000c BD46     		mov	sp, r7
 280              		.cfi_def_cfa_register 13
 281              		@ sp needed
 282 000e 80BC     		pop	{r7}
 283              		.cfi_restore 7
 284              		.cfi_def_cfa_offset 0
 285 0010 7047     		bx	lr
 286              	.L3:
 287 0012 00BF     		.align	2
 288              	.L2:
 289 0014 00000000 		.word	flag
 290              		.cfi_endproc
 291              	.LFE64:
 292              		.size	eoc, .-eoc
 293              		.section	.text.MyISR,"ax",%progbits
 294              		.align	2
 295              		.global	MyISR
 296              		.thumb
 297              		.thumb_func
 298              		.type	MyISR, %function
 299              	MyISR:
 300              	.LFB65:
  87:main.c        **** 
  88:main.c        **** CY_ISR(MyISR) {
 301              		.loc 1 88 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305              		@ link register save eliminated.
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 8


 306 0000 80B4     		push	{r7}
 307              		.cfi_def_cfa_offset 4
 308              		.cfi_offset 7, -4
 309 0002 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
  89:main.c        ****   motorFlag = 1;
 311              		.loc 1 89 0
 312 0004 034B     		ldr	r3, .L5
 313 0006 0122     		movs	r2, #1
 314 0008 1A60     		str	r2, [r3]
  90:main.c        **** }
 315              		.loc 1 90 0
 316 000a 00BF     		nop
 317 000c BD46     		mov	sp, r7
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 000e 80BC     		pop	{r7}
 321              		.cfi_restore 7
 322              		.cfi_def_cfa_offset 0
 323 0010 7047     		bx	lr
 324              	.L6:
 325 0012 00BF     		.align	2
 326              	.L5:
 327 0014 00000000 		.word	motorFlag
 328              		.cfi_endproc
 329              	.LFE65:
 330              		.size	MyISR, .-MyISR
 331              		.section	.rodata
 332              		.align	2
 333              	.LC0:
 334 0000 53746172 		.ascii	"Starting Pathfind\015\012\000"
 334      74696E67 
 334      20506174 
 334      6866696E 
 334      640D0A00 
 335              		.align	2
 336              	.LC1:
 337 0014 53515541 		.ascii	"SQUARES\015\012\000"
 337      5245530D 
 337      0A00
 338 001e 0000     		.align	2
 339              	.LC2:
 340 0020 25752025 		.ascii	"%u %u \015\012\000"
 340      75200D0A 
 340      00
 341 0029 000000   		.align	2
 342              	.LC3:
 343 002c 494E5354 		.ascii	"INSTRUCTIONS\015\012\000"
 343      52554354 
 343      494F4E53 
 343      0D0A00
 344 003b 00       		.align	2
 345              	.LC4:
 346 003c 2575200D 		.ascii	"%u \015\012\000"
 346      0A00
 347 0042 0000     		.align	2
 348              	.LC5:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 9


 349 0044 44495354 		.ascii	"DISTANCES\015\012\000"
 349      414E4345 
 349      530D0A00 
 350              		.align	2
 351              	.LC6:
 352 0050 257500   		.ascii	"%u\000"
 353 0053 00       		.align	2
 354              	.LC7:
 355 0054 0D0A00   		.ascii	"\015\012\000"
 356              		.global	__aeabi_i2f
 357              		.global	__aeabi_fmul
 358              		.global	__aeabi_f2iz
 359              		.section	.text.main,"ax",%progbits
 360              		.align	2
 361              		.global	main
 362              		.thumb
 363              		.thumb_func
 364              		.type	main, %function
 365              	main:
 366              	.LFB66:
  91:main.c        **** 
  92:main.c        **** int main() {
 367              		.loc 1 92 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 2088
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371 0000 90B5     		push	{r4, r7, lr}
 372              		.cfi_def_cfa_offset 12
 373              		.cfi_offset 4, -12
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 ADF6340D 		subw	sp, sp, #2100
 377              		.cfi_def_cfa_offset 2112
 378 0006 02AF     		add	r7, sp, #8
 379              		.cfi_def_cfa 7, 2104
  93:main.c        **** 
  94:main.c        ****   // --------------------------------    
  95:main.c        ****   // ----- INITIALIZATIONS ----------
  96:main.c        ****   CYGlobalIntEnable;
 380              		.loc 1 96 0
 381              		.syntax unified
 382              	@ 96 "main.c" 1
 383 0008 62B6     		CPSIE   i
 384              	@ 0 "" 2
  97:main.c        **** 
  98:main.c        ****   // ------USB SETUP ----------------    
  99:main.c        **** 
 100:main.c        ****   USBUART_Start(0, USBUART_5V_OPERATION);
 385              		.loc 1 100 0
 386              		.thumb
 387              		.syntax unified
 388 000a 0121     		movs	r1, #1
 389 000c 0020     		movs	r0, #0
 390 000e FFF7FEFF 		bl	USBUART_Start
 101:main.c        ****   UART_Start();
 391              		.loc 1 101 0
 392 0012 FFF7FEFF 		bl	UART_Start
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 10


 102:main.c        **** 
 103:main.c        ****   QuadDec_M1_Start();
 393              		.loc 1 103 0
 394 0016 FFF7FEFF 		bl	QuadDec_M1_Start
 104:main.c        ****   QuadDec_M2_Start();
 395              		.loc 1 104 0
 396 001a FFF7FEFF 		bl	QuadDec_M2_Start
 105:main.c        **** 
 106:main.c        ****   isr_TS_StartEx(MyISR);
 397              		.loc 1 106 0
 398 001e 9B48     		ldr	r0, .L59
 399 0020 FFF7FEFF 		bl	isr_TS_StartEx
 107:main.c        **** 
 108:main.c        ****   RF_BT_SELECT_Write(1);
 400              		.loc 1 108 0
 401 0024 0120     		movs	r0, #1
 402 0026 FFF7FEFF 		bl	RF_BT_SELECT_Write
 109:main.c        **** 
 110:main.c        ****   ADC_Start();
 403              		.loc 1 110 0
 404 002a FFF7FEFF 		bl	ADC_Start
 111:main.c        ****   ADC_StartConvert();
 405              		.loc 1 111 0
 406 002e FFF7FEFF 		bl	ADC_StartConvert
 112:main.c        ****   eoc_StartEx(eoc);
 407              		.loc 1 112 0
 408 0032 9748     		ldr	r0, .L59+4
 409 0034 FFF7FEFF 		bl	eoc_StartEx
 113:main.c        **** 
 114:main.c        ****   initMotors();
 410              		.loc 1 114 0
 411 0038 FFF7FEFF 		bl	initMotors
 115:main.c        **** 
 116:main.c        ****   stop();
 412              		.loc 1 116 0
 413 003c FFF7FEFF 		bl	stop
 117:main.c        **** 
 118:main.c        ****   isr_TS_StartEx(MyISR);
 414              		.loc 1 118 0
 415 0040 9248     		ldr	r0, .L59
 416 0042 FFF7FEFF 		bl	isr_TS_StartEx
 119:main.c        ****   Timer_TS_Start();
 417              		.loc 1 119 0
 418 0046 FFF7FEFF 		bl	Timer_TS_Start
 419              	.LBB2:
 120:main.c        **** 
 121:main.c        ****   unsigned char squares[500][2];
 122:main.c        **** 
 123:main.c        ****   unsigned char instruction[500];
 124:main.c        ****   unsigned char distance[500];
 125:main.c        **** 
 126:main.c        **** // Loop through the arrays and set each element to 55 or 0
 127:main.c        ****     for (int i = 0; i < 500; i++) {
 420              		.loc 1 127 0
 421 004a 0023     		movs	r3, #0
 422 004c C7F82438 		str	r3, [r7, #2084]
 423 0050 21E0     		b	.L8
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 11


 424              	.L9:
 128:main.c        ****         squares[i][0] = 55;
 425              		.loc 1 128 0 discriminator 3
 426 0052 07F58263 		add	r3, r7, #1040
 427 0056 D7F82428 		ldr	r2, [r7, #2084]
 428 005a 3721     		movs	r1, #55
 429 005c 03F81210 		strb	r1, [r3, r2, lsl #1]
 129:main.c        ****         squares[i][1] = 55;
 430              		.loc 1 129 0 discriminator 3
 431 0060 07F58262 		add	r2, r7, #1040
 432 0064 D7F82438 		ldr	r3, [r7, #2084]
 433 0068 5B00     		lsls	r3, r3, #1
 434 006a 1344     		add	r3, r3, r2
 435 006c 3722     		movs	r2, #55
 436 006e 5A70     		strb	r2, [r3, #1]
 130:main.c        ****         instruction[i] = 0;
 437              		.loc 1 130 0 discriminator 3
 438 0070 07F50772 		add	r2, r7, #540
 439 0074 D7F82438 		ldr	r3, [r7, #2084]
 440 0078 1344     		add	r3, r3, r2
 441 007a 0022     		movs	r2, #0
 442 007c 1A70     		strb	r2, [r3]
 131:main.c        ****         distance[i] = 55;
 443              		.loc 1 131 0 discriminator 3
 444 007e 07F12802 		add	r2, r7, #40
 445 0082 D7F82438 		ldr	r3, [r7, #2084]
 446 0086 1344     		add	r3, r3, r2
 447 0088 3722     		movs	r2, #55
 448 008a 1A70     		strb	r2, [r3]
 127:main.c        ****         squares[i][0] = 55;
 449              		.loc 1 127 0 discriminator 3
 450 008c D7F82438 		ldr	r3, [r7, #2084]
 451 0090 0133     		adds	r3, r3, #1
 452 0092 C7F82438 		str	r3, [r7, #2084]
 453              	.L8:
 127:main.c        ****         squares[i][0] = 55;
 454              		.loc 1 127 0 is_stmt 0 discriminator 1
 455 0096 D7F82438 		ldr	r3, [r7, #2084]
 456 009a B3F5FA7F 		cmp	r3, #500
 457 009e D8DB     		blt	.L9
 458              	.LBE2:
 132:main.c        ****     }
 133:main.c        **** 
 134:main.c        **** 
 135:main.c        **** 
 136:main.c        ****   CyDelay(4000);
 459              		.loc 1 136 0 is_stmt 1
 460 00a0 4FF47A60 		mov	r0, #4000
 461 00a4 FFF7FEFF 		bl	CyDelay
 137:main.c        ****   usbPutString("Starting Pathfind\r\n");
 462              		.loc 1 137 0
 463 00a8 7A48     		ldr	r0, .L59+8
 464 00aa FFF7FEFF 		bl	usbPutString
 138:main.c        ****   pathfind(instruction, distance, squares);
 465              		.loc 1 138 0
 466 00ae 07F58262 		add	r2, r7, #1040
 467 00b2 07F12801 		add	r1, r7, #40
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 12


 468 00b6 07F50773 		add	r3, r7, #540
 469 00ba 1846     		mov	r0, r3
 470 00bc FFF7FEFF 		bl	pathfind
 139:main.c        **** 
 140:main.c        ****     usbPutString("SQUARES\r\n");
 471              		.loc 1 140 0
 472 00c0 7548     		ldr	r0, .L59+12
 473 00c2 FFF7FEFF 		bl	usbPutString
 474              	.LBB3:
 141:main.c        **** for (int i = 0; i < 500; i++) {
 475              		.loc 1 141 0
 476 00c6 0023     		movs	r3, #0
 477 00c8 C7F82038 		str	r3, [r7, #2080]
 478 00cc 1FE0     		b	.L10
 479              	.L11:
 480              	.LBB4:
 142:main.c        ****         char squareStr[10]; 
 143:main.c        ****         snprintf(squareStr, sizeof(squareStr), "%u %u \r\n", (unsigned char)squares[i][0], (unsigne
 481              		.loc 1 143 0 discriminator 3
 482 00ce 07F58263 		add	r3, r7, #1040
 483 00d2 D7F82028 		ldr	r2, [r7, #2080]
 484 00d6 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 485 00da 1946     		mov	r1, r3
 486 00dc 07F58262 		add	r2, r7, #1040
 487 00e0 D7F82038 		ldr	r3, [r7, #2080]
 488 00e4 5B00     		lsls	r3, r3, #1
 489 00e6 1344     		add	r3, r3, r2
 490 00e8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 491 00ea 07F11C00 		add	r0, r7, #28
 492 00ee 0093     		str	r3, [sp]
 493 00f0 0B46     		mov	r3, r1
 494 00f2 6A4A     		ldr	r2, .L59+16
 495 00f4 0A21     		movs	r1, #10
 496 00f6 FFF7FEFF 		bl	snprintf
 144:main.c        ****         usbPutString(squareStr);
 497              		.loc 1 144 0 discriminator 3
 498 00fa 07F11C03 		add	r3, r7, #28
 499 00fe 1846     		mov	r0, r3
 500 0100 FFF7FEFF 		bl	usbPutString
 501              	.LBE4:
 141:main.c        **** for (int i = 0; i < 500; i++) {
 502              		.loc 1 141 0 discriminator 3
 503 0104 D7F82038 		ldr	r3, [r7, #2080]
 504 0108 0133     		adds	r3, r3, #1
 505 010a C7F82038 		str	r3, [r7, #2080]
 506              	.L10:
 141:main.c        **** for (int i = 0; i < 500; i++) {
 507              		.loc 1 141 0 is_stmt 0 discriminator 1
 508 010e D7F82038 		ldr	r3, [r7, #2080]
 509 0112 B3F5FA7F 		cmp	r3, #500
 510 0116 DADB     		blt	.L11
 511              	.LBE3:
 145:main.c        ****     }
 146:main.c        ****     
 147:main.c        **** usbPutString("INSTRUCTIONS\r\n");
 512              		.loc 1 147 0 is_stmt 1
 513 0118 6148     		ldr	r0, .L59+20
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 13


 514 011a FFF7FEFF 		bl	usbPutString
 515              	.LBB5:
 148:main.c        **** // Print all instructions
 149:main.c        ****     for (int i = 0; i < 500; i++) {
 516              		.loc 1 149 0
 517 011e 0023     		movs	r3, #0
 518 0120 C7F81C38 		str	r3, [r7, #2076]
 519 0124 15E0     		b	.L12
 520              	.L13:
 521              	.LBB6:
 150:main.c        ****         char instStr[10]; 
 151:main.c        ****         snprintf(instStr, sizeof(instStr), "%u \r\n", (unsigned char)instruction[i]);
 522              		.loc 1 151 0 discriminator 3
 523 0126 07F50772 		add	r2, r7, #540
 524 012a D7F81C38 		ldr	r3, [r7, #2076]
 525 012e 1344     		add	r3, r3, r2
 526 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 527 0132 07F11000 		add	r0, r7, #16
 528 0136 5B4A     		ldr	r2, .L59+24
 529 0138 0A21     		movs	r1, #10
 530 013a FFF7FEFF 		bl	snprintf
 152:main.c        ****         usbPutString(instStr);
 531              		.loc 1 152 0 discriminator 3
 532 013e 07F11003 		add	r3, r7, #16
 533 0142 1846     		mov	r0, r3
 534 0144 FFF7FEFF 		bl	usbPutString
 535              	.LBE6:
 149:main.c        ****         char instStr[10]; 
 536              		.loc 1 149 0 discriminator 3
 537 0148 D7F81C38 		ldr	r3, [r7, #2076]
 538 014c 0133     		adds	r3, r3, #1
 539 014e C7F81C38 		str	r3, [r7, #2076]
 540              	.L12:
 149:main.c        ****         char instStr[10]; 
 541              		.loc 1 149 0 is_stmt 0 discriminator 1
 542 0152 D7F81C38 		ldr	r3, [r7, #2076]
 543 0156 B3F5FA7F 		cmp	r3, #500
 544 015a E4DB     		blt	.L13
 545              	.LBE5:
 153:main.c        **** 
 154:main.c        ****     }
 155:main.c        **** 
 156:main.c        ****     usbPutString("DISTANCES\r\n");
 546              		.loc 1 156 0 is_stmt 1
 547 015c 5248     		ldr	r0, .L59+28
 548 015e FFF7FEFF 		bl	usbPutString
 549              	.LBB7:
 157:main.c        ****     // Print all distances
 158:main.c        ****     for (int i = 0; i < 500; i++) {
 550              		.loc 1 158 0
 551 0162 0023     		movs	r3, #0
 552 0164 C7F81838 		str	r3, [r7, #2072]
 553 0168 16E0     		b	.L14
 554              	.L15:
 555              	.LBB8:
 159:main.c        ****         char distanceStr[10];  // Assuming distances are integers and can fit in 10 characters
 160:main.c        ****         snprintf(distanceStr, sizeof(distanceStr), "%u", (unsigned int)distance[i]);
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 14


 556              		.loc 1 160 0 discriminator 3
 557 016a 07F12802 		add	r2, r7, #40
 558 016e D7F81838 		ldr	r3, [r7, #2072]
 559 0172 1344     		add	r3, r3, r2
 560 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 561 0176 381D     		adds	r0, r7, #4
 562 0178 4C4A     		ldr	r2, .L59+32
 563 017a 0A21     		movs	r1, #10
 564 017c FFF7FEFF 		bl	snprintf
 161:main.c        ****         usbPutString(distanceStr);
 565              		.loc 1 161 0 discriminator 3
 566 0180 3B1D     		adds	r3, r7, #4
 567 0182 1846     		mov	r0, r3
 568 0184 FFF7FEFF 		bl	usbPutString
 162:main.c        ****         usbPutString("\r\n");
 569              		.loc 1 162 0 discriminator 3
 570 0188 4948     		ldr	r0, .L59+36
 571 018a FFF7FEFF 		bl	usbPutString
 572              	.LBE8:
 158:main.c        ****         char distanceStr[10];  // Assuming distances are integers and can fit in 10 characters
 573              		.loc 1 158 0 discriminator 3
 574 018e D7F81838 		ldr	r3, [r7, #2072]
 575 0192 0133     		adds	r3, r3, #1
 576 0194 C7F81838 		str	r3, [r7, #2072]
 577              	.L14:
 158:main.c        ****         char distanceStr[10];  // Assuming distances are integers and can fit in 10 characters
 578              		.loc 1 158 0 is_stmt 0 discriminator 1
 579 0198 D7F81838 		ldr	r3, [r7, #2072]
 580 019c B3F5FA7F 		cmp	r3, #500
 581 01a0 E3DB     		blt	.L15
 582              	.L58:
 583              	.LBE7:
 163:main.c        ****     }
 164:main.c        **** 
 165:main.c        ****   for (;;) {
 166:main.c        **** 
 167:main.c        ****     if (motorFlag == 1) { // timer has counted 0.1s 
 584              		.loc 1 167 0 is_stmt 1
 585 01a2 444B     		ldr	r3, .L59+40
 586 01a4 1B68     		ldr	r3, [r3]
 587 01a6 012B     		cmp	r3, #1
 588 01a8 68D1     		bne	.L16
 168:main.c        **** 
 169:main.c        ****       isr_TS_Disable(); // disabling the interrupts
 589              		.loc 1 169 0
 590 01aa FFF7FEFF 		bl	isr_TS_Disable
 170:main.c        ****       if (step == 0) { //takes the first measurement, sets steps to 2, the next time the timer goes
 591              		.loc 1 170 0
 592 01ae 424B     		ldr	r3, .L59+44
 593 01b0 1B68     		ldr	r3, [r3]
 594 01b2 002B     		cmp	r3, #0
 595 01b4 11D1     		bne	.L17
 171:main.c        ****         v1L = QuadDec_M1_GetCounter(); // first measurement taken - LEFT
 596              		.loc 1 171 0
 597 01b6 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 598 01ba 0346     		mov	r3, r0
 599 01bc 1A46     		mov	r2, r3
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 15


 600 01be 3F4B     		ldr	r3, .L59+48
 601 01c0 1A60     		str	r2, [r3]
 172:main.c        ****         v1R = QuadDec_M2_GetCounter(); // first measurement taken - RIGHT
 602              		.loc 1 172 0
 603 01c2 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 604 01c6 0346     		mov	r3, r0
 605 01c8 1A46     		mov	r2, r3
 606 01ca 3D4B     		ldr	r3, .L59+52
 607 01cc 1A60     		str	r2, [r3]
 173:main.c        ****         step++;
 608              		.loc 1 173 0
 609 01ce 3A4B     		ldr	r3, .L59+44
 610 01d0 1B68     		ldr	r3, [r3]
 611 01d2 0133     		adds	r3, r3, #1
 612 01d4 384A     		ldr	r2, .L59+44
 613 01d6 1360     		str	r3, [r2]
 614 01d8 4BE0     		b	.L18
 615              	.L17:
 616              	.LBB9:
 174:main.c        ****       } else { // second measure
 175:main.c        ****         step = 0;
 617              		.loc 1 175 0
 618 01da 374B     		ldr	r3, .L59+44
 619 01dc 0022     		movs	r2, #0
 620 01de 1A60     		str	r2, [r3]
 176:main.c        **** 
 177:main.c        ****         v2L = QuadDec_M1_GetCounter(); // second measurement taken - LEFT
 621              		.loc 1 177 0
 622 01e0 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 623 01e4 0346     		mov	r3, r0
 624 01e6 1A46     		mov	r2, r3
 625 01e8 364B     		ldr	r3, .L59+56
 626 01ea 1A60     		str	r2, [r3]
 178:main.c        ****         v2R = QuadDec_M2_GetCounter(); // second measurement taken - RIGHT
 627              		.loc 1 178 0
 628 01ec FFF7FEFF 		bl	QuadDec_M2_GetCounter
 629 01f0 0346     		mov	r3, r0
 630 01f2 1A46     		mov	r2, r3
 631 01f4 344B     		ldr	r3, .L59+60
 632 01f6 1A60     		str	r2, [r3]
 179:main.c        **** 
 180:main.c        ****         numRotationsL = (v2L - v1L);
 633              		.loc 1 180 0
 634 01f8 324B     		ldr	r3, .L59+56
 635 01fa 1A68     		ldr	r2, [r3]
 636 01fc 2F4B     		ldr	r3, .L59+48
 637 01fe 1B68     		ldr	r3, [r3]
 638 0200 D31A     		subs	r3, r2, r3
 639 0202 324A     		ldr	r2, .L59+64
 640 0204 1360     		str	r3, [r2]
 181:main.c        ****         numRotationsR = (v2R - v1R);
 641              		.loc 1 181 0
 642 0206 304B     		ldr	r3, .L59+60
 643 0208 1A68     		ldr	r2, [r3]
 644 020a 2D4B     		ldr	r3, .L59+52
 645 020c 1B68     		ldr	r3, [r3]
 646 020e D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 16


 647 0210 2F4A     		ldr	r2, .L59+68
 648 0212 1360     		str	r3, [r2]
 182:main.c        **** 
 183:main.c        ****         int changeInDots = (((abs(numRotationsR) + abs(numRotationsL)) ) / 2);
 649              		.loc 1 183 0
 650 0214 2E4B     		ldr	r3, .L59+68
 651 0216 1B68     		ldr	r3, [r3]
 652 0218 83EAE372 		eor	r2, r3, r3, asr #31
 653 021c A2EBE372 		sub	r2, r2, r3, asr #31
 654 0220 2A4B     		ldr	r3, .L59+64
 655 0222 1B68     		ldr	r3, [r3]
 656 0224 002B     		cmp	r3, #0
 657 0226 B8BF     		it	lt
 658 0228 5B42     		rsblt	r3, r3, #0
 659 022a 1344     		add	r3, r3, r2
 660 022c DA0F     		lsrs	r2, r3, #31
 661 022e 1344     		add	r3, r3, r2
 662 0230 5B10     		asrs	r3, r3, #1
 663 0232 C7F8F837 		str	r3, [r7, #2040]
 184:main.c        ****         dotsTravelled = changeInDots + dotsTravelled;
 664              		.loc 1 184 0
 665 0236 274B     		ldr	r3, .L59+72
 666 0238 1A68     		ldr	r2, [r3]
 667 023a D7F8F837 		ldr	r3, [r7, #2040]
 668 023e 1344     		add	r3, r3, r2
 669 0240 244A     		ldr	r2, .L59+72
 670 0242 1360     		str	r3, [r2]
 185:main.c        ****         distanceTravelled = (dotsTravelled * (float)(1.217375 / 6.105)); //increase 6.1 to go furth
 671              		.loc 1 185 0
 672 0244 234B     		ldr	r3, .L59+72
 673 0246 1B68     		ldr	r3, [r3]
 674 0248 1846     		mov	r0, r3
 675 024a FFF7FEFF 		bl	__aeabi_i2f
 676 024e 0346     		mov	r3, r0
 677 0250 2149     		ldr	r1, .L59+76
 678 0252 1846     		mov	r0, r3
 679 0254 FFF7FEFF 		bl	__aeabi_fmul
 680 0258 0346     		mov	r3, r0
 681 025a 1846     		mov	r0, r3
 682 025c FFF7FEFF 		bl	__aeabi_f2iz
 683 0260 0246     		mov	r2, r0
 684 0262 1E4B     		ldr	r3, .L59+80
 685 0264 1A60     		str	r2, [r3]
 186:main.c        ****                                                                          //6.2 for low, 6.1 for nor
 187:main.c        **** 
 188:main.c        ****         QuadDec_M1_SetCounter(0); // set quad counter to 0 to avoid overflow
 686              		.loc 1 188 0
 687 0266 0020     		movs	r0, #0
 688 0268 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 189:main.c        ****         QuadDec_M2_SetCounter(0); // set quad counter to 0 to avoid overflow 
 689              		.loc 1 189 0
 690 026c 0020     		movs	r0, #0
 691 026e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 692              	.L18:
 693              	.LBE9:
 190:main.c        **** 
 191:main.c        ****       }
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 17


 192:main.c        ****       motorFlag = 0; // interrupt flag is back to 0
 694              		.loc 1 192 0
 695 0272 104B     		ldr	r3, .L59+40
 696 0274 0022     		movs	r2, #0
 697 0276 1A60     		str	r2, [r3]
 193:main.c        ****       isr_TS_Enable(); // interrupt enabled
 698              		.loc 1 193 0
 699 0278 FFF7FEFF 		bl	isr_TS_Enable
 700              	.L16:
 194:main.c        **** 
 195:main.c        ****     }
 196:main.c        **** 
 197:main.c        ****     if (distanceTravelled > MOVE_DISTANCE) {
 701              		.loc 1 197 0
 702 027c 174B     		ldr	r3, .L59+80
 703 027e 1B68     		ldr	r3, [r3]
 704 0280 174A     		ldr	r2, .L59+84
 705 0282 9342     		cmp	r3, r2
 706 0284 2EDD     		ble	.L19
 198:main.c        ****       stop();
 707              		.loc 1 198 0
 708 0286 FFF7FEFF 		bl	stop
 709 028a 8AE7     		b	.L58
 710              	.L60:
 711              		.align	2
 712              	.L59:
 713 028c 00000000 		.word	MyISR
 714 0290 00000000 		.word	eoc
 715 0294 00000000 		.word	.LC0
 716 0298 14000000 		.word	.LC1
 717 029c 20000000 		.word	.LC2
 718 02a0 2C000000 		.word	.LC3
 719 02a4 3C000000 		.word	.LC4
 720 02a8 44000000 		.word	.LC5
 721 02ac 50000000 		.word	.LC6
 722 02b0 54000000 		.word	.LC7
 723 02b4 00000000 		.word	motorFlag
 724 02b8 00000000 		.word	step
 725 02bc 00000000 		.word	v1L
 726 02c0 00000000 		.word	v1R
 727 02c4 00000000 		.word	v2L
 728 02c8 00000000 		.word	v2R
 729 02cc 00000000 		.word	numRotationsL
 730 02d0 00000000 		.word	numRotationsR
 731 02d4 00000000 		.word	dotsTravelled
 732 02d8 25314C3E 		.word	1045180709
 733 02dc 00000000 		.word	distanceTravelled
 734 02e0 7F969800 		.word	9999999
 735              	.L19:
 199:main.c        **** 
 200:main.c        ****     } else {
 201:main.c        **** 
 202:main.c        ****       LED_PIN_4_Write(0);
 736              		.loc 1 202 0
 737 02e4 0020     		movs	r0, #0
 738 02e6 FFF7FEFF 		bl	LED_PIN_4_Write
 203:main.c        ****       if (flag == 1) {
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 18


 739              		.loc 1 203 0
 740 02ea BA4B     		ldr	r3, .L61
 741 02ec 1B68     		ldr	r3, [r3]
 742 02ee 012B     		cmp	r3, #1
 743 02f0 7FF457AF 		bne	.L58
 204:main.c        **** 
 205:main.c        ****         ADC_IRQ_Disable();
 744              		.loc 1 205 0
 745 02f4 FFF7FEFF 		bl	ADC_IRQ_Disable
 206:main.c        ****         valuesLeftIntersection[count] = ADC_GetResult16(0);
 746              		.loc 1 206 0
 747 02f8 B74B     		ldr	r3, .L61+4
 748 02fa 1C68     		ldr	r4, [r3]
 749 02fc 0020     		movs	r0, #0
 750 02fe FFF7FEFF 		bl	ADC_GetResult16
 751 0302 0346     		mov	r3, r0
 752 0304 1A46     		mov	r2, r3
 753 0306 B54B     		ldr	r3, .L61+8
 754 0308 43F82420 		str	r2, [r3, r4, lsl #2]
 207:main.c        ****         valuesLeftLine[count] = ADC_GetResult16(1);
 755              		.loc 1 207 0
 756 030c B24B     		ldr	r3, .L61+4
 757 030e 1C68     		ldr	r4, [r3]
 758 0310 0120     		movs	r0, #1
 759 0312 FFF7FEFF 		bl	ADC_GetResult16
 760 0316 0346     		mov	r3, r0
 761 0318 1A46     		mov	r2, r3
 762 031a B14B     		ldr	r3, .L61+12
 763 031c 43F82420 		str	r2, [r3, r4, lsl #2]
 208:main.c        ****         valuesMiddleLine[count] = ADC_GetResult16(2);
 764              		.loc 1 208 0
 765 0320 AD4B     		ldr	r3, .L61+4
 766 0322 1C68     		ldr	r4, [r3]
 767 0324 0220     		movs	r0, #2
 768 0326 FFF7FEFF 		bl	ADC_GetResult16
 769 032a 0346     		mov	r3, r0
 770 032c 1A46     		mov	r2, r3
 771 032e AD4B     		ldr	r3, .L61+16
 772 0330 43F82420 		str	r2, [r3, r4, lsl #2]
 209:main.c        ****         valuesTurnComplete[count] = ADC_GetResult16(3);
 773              		.loc 1 209 0
 774 0334 A84B     		ldr	r3, .L61+4
 775 0336 1C68     		ldr	r4, [r3]
 776 0338 0320     		movs	r0, #3
 777 033a FFF7FEFF 		bl	ADC_GetResult16
 778 033e 0346     		mov	r3, r0
 779 0340 1A46     		mov	r2, r3
 780 0342 A94B     		ldr	r3, .L61+20
 781 0344 43F82420 		str	r2, [r3, r4, lsl #2]
 210:main.c        ****         valuesRightLine[count] = ADC_GetResult16(4);
 782              		.loc 1 210 0
 783 0348 A34B     		ldr	r3, .L61+4
 784 034a 1C68     		ldr	r4, [r3]
 785 034c 0420     		movs	r0, #4
 786 034e FFF7FEFF 		bl	ADC_GetResult16
 787 0352 0346     		mov	r3, r0
 788 0354 1A46     		mov	r2, r3
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 19


 789 0356 A54B     		ldr	r3, .L61+24
 790 0358 43F82420 		str	r2, [r3, r4, lsl #2]
 211:main.c        ****         valuesRightIntersection[count] = ADC_GetResult16(5);
 791              		.loc 1 211 0
 792 035c 9E4B     		ldr	r3, .L61+4
 793 035e 1C68     		ldr	r4, [r3]
 794 0360 0520     		movs	r0, #5
 795 0362 FFF7FEFF 		bl	ADC_GetResult16
 796 0366 0346     		mov	r3, r0
 797 0368 1A46     		mov	r2, r3
 798 036a A14B     		ldr	r3, .L61+28
 799 036c 43F82420 		str	r2, [r3, r4, lsl #2]
 212:main.c        **** 
 213:main.c        ****         count++;
 800              		.loc 1 213 0
 801 0370 994B     		ldr	r3, .L61+4
 802 0372 1B68     		ldr	r3, [r3]
 803 0374 0133     		adds	r3, r3, #1
 804 0376 984A     		ldr	r2, .L61+4
 805 0378 1360     		str	r3, [r2]
 214:main.c        ****         if (count == ADC_COUNT) {
 806              		.loc 1 214 0
 807 037a 974B     		ldr	r3, .L61+4
 808 037c 1B68     		ldr	r3, [r3]
 809 037e B3F57A7F 		cmp	r3, #1000
 810 0382 40F0D081 		bne	.L21
 811              	.LBB10:
 215:main.c        ****           LED_PIN_4_Write(1);
 812              		.loc 1 215 0
 813 0386 0120     		movs	r0, #1
 814 0388 FFF7FEFF 		bl	LED_PIN_4_Write
 216:main.c        ****           count = 0;
 815              		.loc 1 216 0
 816 038c 924B     		ldr	r3, .L61+4
 817 038e 0022     		movs	r2, #0
 818 0390 1A60     		str	r2, [r3]
 217:main.c        ****           int highCountLeftIntersection = 0;
 819              		.loc 1 217 0
 820 0392 0023     		movs	r3, #0
 821 0394 C7F81438 		str	r3, [r7, #2068]
 218:main.c        ****           int highCountLeftLine = 0;
 822              		.loc 1 218 0
 823 0398 0023     		movs	r3, #0
 824 039a C7F81038 		str	r3, [r7, #2064]
 219:main.c        ****           int highCountMiddleLine = 0;
 825              		.loc 1 219 0
 826 039e 0023     		movs	r3, #0
 827 03a0 C7F80C38 		str	r3, [r7, #2060]
 220:main.c        ****           int highCountTurnComplete = 0;
 828              		.loc 1 220 0
 829 03a4 0023     		movs	r3, #0
 830 03a6 C7F80838 		str	r3, [r7, #2056]
 221:main.c        ****           int highCountRightLine = 0;
 831              		.loc 1 221 0
 832 03aa 0023     		movs	r3, #0
 833 03ac C7F80438 		str	r3, [r7, #2052]
 222:main.c        ****           int highCountRightIntersection = 0;
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 20


 834              		.loc 1 222 0
 835 03b0 0023     		movs	r3, #0
 836 03b2 C7F80038 		str	r3, [r7, #2048]
 837              	.LBB11:
 223:main.c        ****           for (int i = 0; i < ADC_COUNT; i++) {
 838              		.loc 1 223 0
 839 03b6 0023     		movs	r3, #0
 840 03b8 C7F8FC37 		str	r3, [r7, #2044]
 841 03bc 58E0     		b	.L22
 842              	.L29:
 224:main.c        **** 
 225:main.c        ****             if (valuesLeftIntersection[i] > 3000) {
 843              		.loc 1 225 0
 844 03be 874A     		ldr	r2, .L61+8
 845 03c0 D7F8FC37 		ldr	r3, [r7, #2044]
 846 03c4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 847 03c8 40F6B832 		movw	r2, #3000
 848 03cc 9342     		cmp	r3, r2
 849 03ce 04DD     		ble	.L23
 226:main.c        ****               highCountLeftIntersection++;
 850              		.loc 1 226 0
 851 03d0 D7F81438 		ldr	r3, [r7, #2068]
 852 03d4 0133     		adds	r3, r3, #1
 853 03d6 C7F81438 		str	r3, [r7, #2068]
 854              	.L23:
 227:main.c        **** 
 228:main.c        ****             }
 229:main.c        **** 
 230:main.c        ****             if (valuesLeftLine[i] > 3000) {
 855              		.loc 1 230 0
 856 03da 814A     		ldr	r2, .L61+12
 857 03dc D7F8FC37 		ldr	r3, [r7, #2044]
 858 03e0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 859 03e4 40F6B832 		movw	r2, #3000
 860 03e8 9342     		cmp	r3, r2
 861 03ea 04DD     		ble	.L24
 231:main.c        ****               highCountLeftLine++;
 862              		.loc 1 231 0
 863 03ec D7F81038 		ldr	r3, [r7, #2064]
 864 03f0 0133     		adds	r3, r3, #1
 865 03f2 C7F81038 		str	r3, [r7, #2064]
 866              	.L24:
 232:main.c        **** 
 233:main.c        ****             }
 234:main.c        **** 
 235:main.c        ****             if (valuesMiddleLine[i] > 3000) {
 867              		.loc 1 235 0
 868 03f6 7B4A     		ldr	r2, .L61+16
 869 03f8 D7F8FC37 		ldr	r3, [r7, #2044]
 870 03fc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 871 0400 40F6B832 		movw	r2, #3000
 872 0404 9342     		cmp	r3, r2
 873 0406 04DD     		ble	.L25
 236:main.c        ****               highCountMiddleLine++;
 874              		.loc 1 236 0
 875 0408 D7F80C38 		ldr	r3, [r7, #2060]
 876 040c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 21


 877 040e C7F80C38 		str	r3, [r7, #2060]
 878              	.L25:
 237:main.c        **** 
 238:main.c        ****             }
 239:main.c        **** 
 240:main.c        ****             if (valuesTurnComplete[i] > 3000) {
 879              		.loc 1 240 0
 880 0412 754A     		ldr	r2, .L61+20
 881 0414 D7F8FC37 		ldr	r3, [r7, #2044]
 882 0418 52F82330 		ldr	r3, [r2, r3, lsl #2]
 883 041c 40F6B832 		movw	r2, #3000
 884 0420 9342     		cmp	r3, r2
 885 0422 04DD     		ble	.L26
 241:main.c        ****               highCountTurnComplete++;
 886              		.loc 1 241 0
 887 0424 D7F80838 		ldr	r3, [r7, #2056]
 888 0428 0133     		adds	r3, r3, #1
 889 042a C7F80838 		str	r3, [r7, #2056]
 890              	.L26:
 242:main.c        **** 
 243:main.c        ****             }
 244:main.c        **** 
 245:main.c        ****             if (valuesRightLine[i] > 3000) {
 891              		.loc 1 245 0
 892 042e 6F4A     		ldr	r2, .L61+24
 893 0430 D7F8FC37 		ldr	r3, [r7, #2044]
 894 0434 52F82330 		ldr	r3, [r2, r3, lsl #2]
 895 0438 40F6B832 		movw	r2, #3000
 896 043c 9342     		cmp	r3, r2
 897 043e 04DD     		ble	.L27
 246:main.c        ****               highCountRightLine++;
 898              		.loc 1 246 0
 899 0440 D7F80438 		ldr	r3, [r7, #2052]
 900 0444 0133     		adds	r3, r3, #1
 901 0446 C7F80438 		str	r3, [r7, #2052]
 902              	.L27:
 247:main.c        **** 
 248:main.c        ****             }
 249:main.c        **** 
 250:main.c        ****             if (valuesRightIntersection[i] > 3000) {
 903              		.loc 1 250 0
 904 044a 694A     		ldr	r2, .L61+28
 905 044c D7F8FC37 		ldr	r3, [r7, #2044]
 906 0450 52F82330 		ldr	r3, [r2, r3, lsl #2]
 907 0454 40F6B832 		movw	r2, #3000
 908 0458 9342     		cmp	r3, r2
 909 045a 04DD     		ble	.L28
 251:main.c        ****               highCountRightIntersection++;
 910              		.loc 1 251 0
 911 045c D7F80038 		ldr	r3, [r7, #2048]
 912 0460 0133     		adds	r3, r3, #1
 913 0462 C7F80038 		str	r3, [r7, #2048]
 914              	.L28:
 223:main.c        **** 
 915              		.loc 1 223 0 discriminator 2
 916 0466 D7F8FC37 		ldr	r3, [r7, #2044]
 917 046a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 22


 918 046c C7F8FC37 		str	r3, [r7, #2044]
 919              	.L22:
 223:main.c        **** 
 920              		.loc 1 223 0 is_stmt 0 discriminator 1
 921 0470 D7F8FC37 		ldr	r3, [r7, #2044]
 922 0474 B3F57A7F 		cmp	r3, #1000
 923 0478 A1DB     		blt	.L29
 924              	.LBE11:
 252:main.c        **** 
 253:main.c        ****             }
 254:main.c        **** 
 255:main.c        ****           }
 256:main.c        **** 
 257:main.c        ****           if (L_LINE_BLACK) {
 925              		.loc 1 257 0 is_stmt 1
 926 047a D7F81038 		ldr	r3, [r7, #2064]
 927 047e 952B     		cmp	r3, #149
 928 0480 03DC     		bgt	.L30
 258:main.c        ****             LED_PIN_1_Write(0);
 929              		.loc 1 258 0
 930 0482 0020     		movs	r0, #0
 931 0484 FFF7FEFF 		bl	LED_PIN_1_Write
 932 0488 02E0     		b	.L31
 933              	.L30:
 259:main.c        ****           } else {
 260:main.c        ****             LED_PIN_1_Write(1);
 934              		.loc 1 260 0
 935 048a 0120     		movs	r0, #1
 936 048c FFF7FEFF 		bl	LED_PIN_1_Write
 937              	.L31:
 261:main.c        ****           }
 262:main.c        **** 
 263:main.c        ****           if (M_LINE_BLACK) {
 938              		.loc 1 263 0
 939 0490 D7F80C38 		ldr	r3, [r7, #2060]
 940 0494 952B     		cmp	r3, #149
 941 0496 03DC     		bgt	.L32
 264:main.c        ****             LED_PIN_2_Write(0);
 942              		.loc 1 264 0
 943 0498 0020     		movs	r0, #0
 944 049a FFF7FEFF 		bl	LED_PIN_2_Write
 945 049e 02E0     		b	.L33
 946              	.L32:
 265:main.c        ****           } else {
 266:main.c        ****             LED_PIN_2_Write(1);
 947              		.loc 1 266 0
 948 04a0 0120     		movs	r0, #1
 949 04a2 FFF7FEFF 		bl	LED_PIN_2_Write
 950              	.L33:
 267:main.c        ****           }
 268:main.c        **** 
 269:main.c        ****           if (R_LINE_BLACK) {
 951              		.loc 1 269 0
 952 04a6 D7F80438 		ldr	r3, [r7, #2052]
 953 04aa 952B     		cmp	r3, #149
 954 04ac 03DC     		bgt	.L34
 270:main.c        ****             LED_PIN_3_Write(0);
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 23


 955              		.loc 1 270 0
 956 04ae 0020     		movs	r0, #0
 957 04b0 FFF7FEFF 		bl	LED_PIN_3_Write
 958 04b4 02E0     		b	.L35
 959              	.L34:
 271:main.c        ****           } else {
 272:main.c        ****             LED_PIN_3_Write(1);
 960              		.loc 1 272 0
 961 04b6 0120     		movs	r0, #1
 962 04b8 FFF7FEFF 		bl	LED_PIN_3_Write
 963              	.L35:
 273:main.c        ****           }
 274:main.c        **** 
 275:main.c        ****           shouldUpdate = 0;
 964              		.loc 1 275 0
 965 04bc 4D4B     		ldr	r3, .L61+32
 966 04be 0022     		movs	r2, #0
 967 04c0 1A60     		str	r2, [r3]
 276:main.c        ****           turnTimer = 0;
 968              		.loc 1 276 0
 969 04c2 4D4B     		ldr	r3, .L61+36
 970 04c4 0022     		movs	r2, #0
 971 04c6 1A60     		str	r2, [r3]
 277:main.c        **** 
 278:main.c        ****           // If all the sensors are under black light, stop the robot
 279:main.c        ****           if (L_INT_BLACK && M_LINE_BLACK && R_INT_BLACK && TC_BLACK && L_LINE_BLACK && R_LINE_BLAC
 972              		.loc 1 279 0
 973 04c8 D7F81438 		ldr	r3, [r7, #2068]
 974 04cc 952B     		cmp	r3, #149
 975 04ce 16DC     		bgt	.L36
 976              		.loc 1 279 0 is_stmt 0 discriminator 1
 977 04d0 D7F80C38 		ldr	r3, [r7, #2060]
 978 04d4 952B     		cmp	r3, #149
 979 04d6 12DC     		bgt	.L36
 980              		.loc 1 279 0 discriminator 2
 981 04d8 D7F80038 		ldr	r3, [r7, #2048]
 982 04dc 952B     		cmp	r3, #149
 983 04de 0EDC     		bgt	.L36
 984              		.loc 1 279 0 discriminator 3
 985 04e0 D7F80838 		ldr	r3, [r7, #2056]
 986 04e4 952B     		cmp	r3, #149
 987 04e6 0ADC     		bgt	.L36
 988              		.loc 1 279 0 discriminator 4
 989 04e8 D7F81038 		ldr	r3, [r7, #2064]
 990 04ec 952B     		cmp	r3, #149
 991 04ee 06DC     		bgt	.L36
 992              		.loc 1 279 0 discriminator 5
 993 04f0 D7F80438 		ldr	r3, [r7, #2052]
 994 04f4 952B     		cmp	r3, #149
 995 04f6 02DC     		bgt	.L36
 280:main.c        **** 
 281:main.c        ****             stop();
 996              		.loc 1 281 0 is_stmt 1
 997 04f8 FFF7FEFF 		bl	stop
 998 04fc 13E1     		b	.L21
 999              	.L36:
 282:main.c        **** 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 24


 283:main.c        ****           } else if (turningLeft == 1) { // if robot is turning left
 1000              		.loc 1 283 0
 1001 04fe 3F4B     		ldr	r3, .L61+40
 1002 0500 1B68     		ldr	r3, [r3]
 1003 0502 012B     		cmp	r3, #1
 1004 0504 14D1     		bne	.L37
 284:main.c        ****             while (turnTimer != 10000) {
 1005              		.loc 1 284 0
 1006 0506 06E0     		b	.L38
 1007              	.L39:
 285:main.c        ****               turnLeft();
 1008              		.loc 1 285 0
 1009 0508 FFF7FEFF 		bl	turnLeft
 286:main.c        ****               turnTimer++;
 1010              		.loc 1 286 0
 1011 050c 3A4B     		ldr	r3, .L61+36
 1012 050e 1B68     		ldr	r3, [r3]
 1013 0510 0133     		adds	r3, r3, #1
 1014 0512 394A     		ldr	r2, .L61+36
 1015 0514 1360     		str	r3, [r2]
 1016              	.L38:
 284:main.c        ****             while (turnTimer != 10000) {
 1017              		.loc 1 284 0
 1018 0516 384B     		ldr	r3, .L61+36
 1019 0518 1B68     		ldr	r3, [r3]
 1020 051a 42F21072 		movw	r2, #10000
 1021 051e 9342     		cmp	r3, r2
 1022 0520 F2D1     		bne	.L39
 287:main.c        ****             }
 288:main.c        ****             turnEnable = 0;
 1023              		.loc 1 288 0
 1024 0522 374B     		ldr	r3, .L61+44
 1025 0524 0022     		movs	r2, #0
 1026 0526 1A60     		str	r2, [r3]
 289:main.c        ****             turningLeft = 0;
 1027              		.loc 1 289 0
 1028 0528 344B     		ldr	r3, .L61+40
 1029 052a 0022     		movs	r2, #0
 1030 052c 1A60     		str	r2, [r3]
 1031 052e FAE0     		b	.L21
 1032              	.L37:
 290:main.c        **** 
 291:main.c        ****           } else if (turningRight == 1) { // if robot is turning right
 1033              		.loc 1 291 0
 1034 0530 344B     		ldr	r3, .L61+48
 1035 0532 1B68     		ldr	r3, [r3]
 1036 0534 012B     		cmp	r3, #1
 1037 0536 14D1     		bne	.L40
 292:main.c        ****             while (turnTimer != 10000) {
 1038              		.loc 1 292 0
 1039 0538 06E0     		b	.L41
 1040              	.L42:
 293:main.c        ****               turnRight();
 1041              		.loc 1 293 0
 1042 053a FFF7FEFF 		bl	turnRight
 294:main.c        ****               turnTimer++;
 1043              		.loc 1 294 0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 25


 1044 053e 2E4B     		ldr	r3, .L61+36
 1045 0540 1B68     		ldr	r3, [r3]
 1046 0542 0133     		adds	r3, r3, #1
 1047 0544 2C4A     		ldr	r2, .L61+36
 1048 0546 1360     		str	r3, [r2]
 1049              	.L41:
 292:main.c        ****             while (turnTimer != 10000) {
 1050              		.loc 1 292 0
 1051 0548 2B4B     		ldr	r3, .L61+36
 1052 054a 1B68     		ldr	r3, [r3]
 1053 054c 42F21072 		movw	r2, #10000
 1054 0550 9342     		cmp	r3, r2
 1055 0552 F2D1     		bne	.L42
 295:main.c        ****             }
 296:main.c        ****             turnEnable = 0;
 1056              		.loc 1 296 0
 1057 0554 2A4B     		ldr	r3, .L61+44
 1058 0556 0022     		movs	r2, #0
 1059 0558 1A60     		str	r2, [r3]
 297:main.c        ****             turningRight = 0;
 1060              		.loc 1 297 0
 1061 055a 2A4B     		ldr	r3, .L61+48
 1062 055c 0022     		movs	r2, #0
 1063 055e 1A60     		str	r2, [r3]
 1064 0560 E1E0     		b	.L21
 1065              	.L40:
 298:main.c        **** 
 299:main.c        ****           } else if (L_INT_BLACK && (M_LINE_BLACK || L_LINE_BLACK) && turnEnable == 1) { //initiate
 1066              		.loc 1 299 0
 1067 0562 D7F81438 		ldr	r3, [r7, #2068]
 1068 0566 952B     		cmp	r3, #149
 1069 0568 17DC     		bgt	.L43
 1070              		.loc 1 299 0 is_stmt 0 discriminator 1
 1071 056a D7F80C38 		ldr	r3, [r7, #2060]
 1072 056e 952B     		cmp	r3, #149
 1073 0570 03DD     		ble	.L44
 1074              		.loc 1 299 0 discriminator 3
 1075 0572 D7F81038 		ldr	r3, [r7, #2064]
 1076 0576 952B     		cmp	r3, #149
 1077 0578 0FDC     		bgt	.L43
 1078              	.L44:
 1079              		.loc 1 299 0 discriminator 4
 1080 057a 214B     		ldr	r3, .L61+44
 1081 057c 1B68     		ldr	r3, [r3]
 1082 057e 012B     		cmp	r3, #1
 1083 0580 0BD1     		bne	.L43
 300:main.c        **** 
 301:main.c        ****             turnTimer++;
 1084              		.loc 1 301 0 is_stmt 1
 1085 0582 1D4B     		ldr	r3, .L61+36
 1086 0584 1B68     		ldr	r3, [r3]
 1087 0586 0133     		adds	r3, r3, #1
 1088 0588 1B4A     		ldr	r2, .L61+36
 1089 058a 1360     		str	r3, [r2]
 302:main.c        ****             turningLeft = 1;
 1090              		.loc 1 302 0
 1091 058c 1B4B     		ldr	r3, .L61+40
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 26


 1092 058e 0122     		movs	r2, #1
 1093 0590 1A60     		str	r2, [r3]
 303:main.c        ****             lastAdjustDirection = 0;
 1094              		.loc 1 303 0
 1095 0592 1D4B     		ldr	r3, .L61+52
 1096 0594 0022     		movs	r2, #0
 1097 0596 1A60     		str	r2, [r3]
 1098 0598 C5E0     		b	.L21
 1099              	.L43:
 304:main.c        **** 
 305:main.c        ****           } else if (R_INT_BLACK && (M_LINE_BLACK || R_LINE_BLACK) && turnEnable == 1) { //initiate
 1100              		.loc 1 305 0
 1101 059a D7F80038 		ldr	r3, [r7, #2048]
 1102 059e 952B     		cmp	r3, #149
 1103 05a0 34DC     		bgt	.L45
 1104              		.loc 1 305 0 is_stmt 0 discriminator 1
 1105 05a2 D7F80C38 		ldr	r3, [r7, #2060]
 1106 05a6 952B     		cmp	r3, #149
 1107 05a8 03DD     		ble	.L46
 1108              		.loc 1 305 0 discriminator 3
 1109 05aa D7F80438 		ldr	r3, [r7, #2052]
 1110 05ae 952B     		cmp	r3, #149
 1111 05b0 2CDC     		bgt	.L45
 1112              	.L46:
 1113              		.loc 1 305 0 discriminator 4
 1114 05b2 134B     		ldr	r3, .L61+44
 1115 05b4 1B68     		ldr	r3, [r3]
 1116 05b6 012B     		cmp	r3, #1
 1117 05b8 28D1     		bne	.L45
 306:main.c        **** 
 307:main.c        ****             turnTimer++;
 1118              		.loc 1 307 0 is_stmt 1
 1119 05ba 0F4B     		ldr	r3, .L61+36
 1120 05bc 1B68     		ldr	r3, [r3]
 1121 05be 0133     		adds	r3, r3, #1
 1122 05c0 0D4A     		ldr	r2, .L61+36
 1123 05c2 1360     		str	r3, [r2]
 308:main.c        ****             turningRight = 1;
 1124              		.loc 1 308 0
 1125 05c4 0F4B     		ldr	r3, .L61+48
 1126 05c6 0122     		movs	r2, #1
 1127 05c8 1A60     		str	r2, [r3]
 309:main.c        ****             lastAdjustDirection = 2;
 1128              		.loc 1 309 0
 1129 05ca 0F4B     		ldr	r3, .L61+52
 1130 05cc 0222     		movs	r2, #2
 1131 05ce 1A60     		str	r2, [r3]
 1132 05d0 A9E0     		b	.L21
 1133              	.L62:
 1134 05d2 00BF     		.align	2
 1135              	.L61:
 1136 05d4 00000000 		.word	flag
 1137 05d8 00000000 		.word	count
 1138 05dc 00000000 		.word	valuesLeftIntersection
 1139 05e0 00000000 		.word	valuesLeftLine
 1140 05e4 00000000 		.word	valuesMiddleLine
 1141 05e8 00000000 		.word	valuesTurnComplete
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 27


 1142 05ec 00000000 		.word	valuesRightLine
 1143 05f0 00000000 		.word	valuesRightIntersection
 1144 05f4 00000000 		.word	shouldUpdate
 1145 05f8 00000000 		.word	turnTimer
 1146 05fc 00000000 		.word	turningLeft
 1147 0600 00000000 		.word	turnEnable
 1148 0604 00000000 		.word	turningRight
 1149 0608 00000000 		.word	lastAdjustDirection
 1150              	.L45:
 310:main.c        **** 
 311:main.c        ****           } else if (R_LINE_BLACK && L_LINE_BLACK) {
 1151              		.loc 1 311 0
 1152 060c D7F80438 		ldr	r3, [r7, #2052]
 1153 0610 952B     		cmp	r3, #149
 1154 0612 04DC     		bgt	.L47
 1155              		.loc 1 311 0 is_stmt 0 discriminator 1
 1156 0614 D7F81038 		ldr	r3, [r7, #2064]
 1157 0618 952B     		cmp	r3, #149
 1158 061a 40F38480 		ble	.L21
 1159              	.L47:
 312:main.c        ****             // do nothing for now
 313:main.c        **** 
 314:main.c        ****           } else if (L_INT_BLACK && R_INT_BLACK) {
 1160              		.loc 1 314 0 is_stmt 1
 1161 061e D7F81438 		ldr	r3, [r7, #2068]
 1162 0622 952B     		cmp	r3, #149
 1163 0624 03DC     		bgt	.L48
 1164              		.loc 1 314 0 is_stmt 0 discriminator 1
 1165 0626 D7F80038 		ldr	r3, [r7, #2048]
 1166 062a 952B     		cmp	r3, #149
 1167 062c 7BDD     		ble	.L21
 1168              	.L48:
 315:main.c        ****             // do nothing for now
 316:main.c        **** 
 317:main.c        ****           } else if (M_LINE_BLACK && L_LINE_BLACK) { // if robot slightly too far right
 1169              		.loc 1 317 0 is_stmt 1
 1170 062e D7F80C38 		ldr	r3, [r7, #2060]
 1171 0632 952B     		cmp	r3, #149
 1172 0634 0CDC     		bgt	.L49
 1173              		.loc 1 317 0 is_stmt 0 discriminator 1
 1174 0636 D7F81038 		ldr	r3, [r7, #2064]
 1175 063a 952B     		cmp	r3, #149
 1176 063c 08DC     		bgt	.L49
 318:main.c        ****             adjustLeft();
 1177              		.loc 1 318 0 is_stmt 1
 1178 063e FFF7FEFF 		bl	adjustLeft
 319:main.c        ****             turnEnable = 1;
 1179              		.loc 1 319 0
 1180 0642 3C4B     		ldr	r3, .L63
 1181 0644 0122     		movs	r2, #1
 1182 0646 1A60     		str	r2, [r3]
 320:main.c        ****             lastAdjustDirection = 0;
 1183              		.loc 1 320 0
 1184 0648 3B4B     		ldr	r3, .L63+4
 1185 064a 0022     		movs	r2, #0
 1186 064c 1A60     		str	r2, [r3]
 1187 064e 6AE0     		b	.L21
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 28


 1188              	.L49:
 321:main.c        **** 
 322:main.c        ****           } else if (M_LINE_BLACK && R_LINE_BLACK) { //  if robot slightly too far left
 1189              		.loc 1 322 0
 1190 0650 D7F80C38 		ldr	r3, [r7, #2060]
 1191 0654 952B     		cmp	r3, #149
 1192 0656 0CDC     		bgt	.L50
 1193              		.loc 1 322 0 is_stmt 0 discriminator 1
 1194 0658 D7F80438 		ldr	r3, [r7, #2052]
 1195 065c 952B     		cmp	r3, #149
 1196 065e 08DC     		bgt	.L50
 323:main.c        ****             adjustRight();
 1197              		.loc 1 323 0 is_stmt 1
 1198 0660 FFF7FEFF 		bl	adjustRight
 324:main.c        ****             lastAdjustDirection = 2;
 1199              		.loc 1 324 0
 1200 0664 344B     		ldr	r3, .L63+4
 1201 0666 0222     		movs	r2, #2
 1202 0668 1A60     		str	r2, [r3]
 325:main.c        ****             turnEnable = 1;
 1203              		.loc 1 325 0
 1204 066a 324B     		ldr	r3, .L63
 1205 066c 0122     		movs	r2, #1
 1206 066e 1A60     		str	r2, [r3]
 1207 0670 59E0     		b	.L21
 1208              	.L50:
 326:main.c        **** 
 327:main.c        ****           } else if (M_LINE_BLACK) { // if robot in the center keep moving straight
 1209              		.loc 1 327 0
 1210 0672 D7F80C38 		ldr	r3, [r7, #2060]
 1211 0676 952B     		cmp	r3, #149
 1212 0678 15DC     		bgt	.L51
 328:main.c        ****             shouldUpdate = 1;
 1213              		.loc 1 328 0
 1214 067a 304B     		ldr	r3, .L63+8
 1215 067c 0122     		movs	r2, #1
 1216 067e 1A60     		str	r2, [r3]
 329:main.c        ****             lastAdjustDirection = 1;
 1217              		.loc 1 329 0
 1218 0680 2D4B     		ldr	r3, .L63+4
 1219 0682 0122     		movs	r2, #1
 1220 0684 1A60     		str	r2, [r3]
 330:main.c        ****             turnEnable = 1;
 1221              		.loc 1 330 0
 1222 0686 2B4B     		ldr	r3, .L63
 1223 0688 0122     		movs	r2, #1
 1224 068a 1A60     		str	r2, [r3]
 331:main.c        ****             driveForward(distanceTravelled, TARGET_SPEED);
 1225              		.loc 1 331 0
 1226 068c 2C4B     		ldr	r3, .L63+12
 1227 068e 1C68     		ldr	r4, [r3]
 1228 0690 2C4B     		ldr	r3, .L63+16
 1229 0692 1B68     		ldr	r3, [r3]	@ float
 1230 0694 1846     		mov	r0, r3
 1231 0696 FFF7FEFF 		bl	__aeabi_f2iz
 1232 069a 0346     		mov	r3, r0
 1233 069c 1946     		mov	r1, r3
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 29


 1234 069e 2046     		mov	r0, r4
 1235 06a0 FFF7FEFF 		bl	driveForward
 1236 06a4 3FE0     		b	.L21
 1237              	.L51:
 332:main.c        **** 
 333:main.c        ****           } else if (R_LINE_BLACK) { // if robot too far left
 1238              		.loc 1 333 0
 1239 06a6 D7F80438 		ldr	r3, [r7, #2052]
 1240 06aa 952B     		cmp	r3, #149
 1241 06ac 08DC     		bgt	.L52
 334:main.c        ****             adjustRight();
 1242              		.loc 1 334 0
 1243 06ae FFF7FEFF 		bl	adjustRight
 335:main.c        ****             turnEnable = 1;
 1244              		.loc 1 335 0
 1245 06b2 204B     		ldr	r3, .L63
 1246 06b4 0122     		movs	r2, #1
 1247 06b6 1A60     		str	r2, [r3]
 336:main.c        ****             lastAdjustDirection = 2;
 1248              		.loc 1 336 0
 1249 06b8 1F4B     		ldr	r3, .L63+4
 1250 06ba 0222     		movs	r2, #2
 1251 06bc 1A60     		str	r2, [r3]
 1252 06be 32E0     		b	.L21
 1253              	.L52:
 337:main.c        **** 
 338:main.c        ****           } else if (L_LINE_BLACK) { // if robot too far right
 1254              		.loc 1 338 0
 1255 06c0 D7F81038 		ldr	r3, [r7, #2064]
 1256 06c4 952B     		cmp	r3, #149
 1257 06c6 08DC     		bgt	.L53
 339:main.c        ****             adjustLeft();
 1258              		.loc 1 339 0
 1259 06c8 FFF7FEFF 		bl	adjustLeft
 340:main.c        ****             turnEnable = 1;
 1260              		.loc 1 340 0
 1261 06cc 194B     		ldr	r3, .L63
 1262 06ce 0122     		movs	r2, #1
 1263 06d0 1A60     		str	r2, [r3]
 341:main.c        ****             lastAdjustDirection = 0;
 1264              		.loc 1 341 0
 1265 06d2 194B     		ldr	r3, .L63+4
 1266 06d4 0022     		movs	r2, #0
 1267 06d6 1A60     		str	r2, [r3]
 1268 06d8 25E0     		b	.L21
 1269              	.L53:
 342:main.c        **** 
 343:main.c        ****           } else if (L_INT_BLACK) {
 1270              		.loc 1 343 0
 1271 06da D7F81438 		ldr	r3, [r7, #2068]
 1272 06de 952B     		cmp	r3, #149
 1273 06e0 06DC     		bgt	.L54
 344:main.c        ****             //hardAdjustLeft();
 345:main.c        ****             turningLeft = 1;
 1274              		.loc 1 345 0
 1275 06e2 194B     		ldr	r3, .L63+20
 1276 06e4 0122     		movs	r2, #1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 30


 1277 06e6 1A60     		str	r2, [r3]
 346:main.c        ****             lastAdjustDirection = 0;
 1278              		.loc 1 346 0
 1279 06e8 134B     		ldr	r3, .L63+4
 1280 06ea 0022     		movs	r2, #0
 1281 06ec 1A60     		str	r2, [r3]
 1282 06ee 1AE0     		b	.L21
 1283              	.L54:
 347:main.c        **** 
 348:main.c        ****           } else if (R_INT_BLACK) {
 1284              		.loc 1 348 0
 1285 06f0 D7F80038 		ldr	r3, [r7, #2048]
 1286 06f4 952B     		cmp	r3, #149
 1287 06f6 06DC     		bgt	.L55
 349:main.c        ****             //hardAdjustRight();
 350:main.c        ****             turningRight = 1;
 1288              		.loc 1 350 0
 1289 06f8 144B     		ldr	r3, .L63+24
 1290 06fa 0122     		movs	r2, #1
 1291 06fc 1A60     		str	r2, [r3]
 351:main.c        ****             lastAdjustDirection = 2;
 1292              		.loc 1 351 0
 1293 06fe 0E4B     		ldr	r3, .L63+4
 1294 0700 0222     		movs	r2, #2
 1295 0702 1A60     		str	r2, [r3]
 1296 0704 0FE0     		b	.L21
 1297              	.L55:
 352:main.c        **** //          } else if (highCountLeftIntersection > 150 && highCountRightIntersection > 150 && highC
 353:main.c        **** //            driveForward(distanceTravelled, TARGET_SPEED);
 354:main.c        **** //            
 355:main.c        **** //        }
 356:main.c        ****         }
 357:main.c        ****             else { // completely lost find way
 358:main.c        ****             if (lastAdjustDirection == 0) {
 1298              		.loc 1 358 0
 1299 0706 0C4B     		ldr	r3, .L63+4
 1300 0708 1B68     		ldr	r3, [r3]
 1301 070a 002B     		cmp	r3, #0
 1302 070c 02D1     		bne	.L56
 359:main.c        ****               turnLeft();
 1303              		.loc 1 359 0
 1304 070e FFF7FEFF 		bl	turnLeft
 1305 0712 08E0     		b	.L21
 1306              	.L56:
 360:main.c        ****             } else if (lastAdjustDirection == 1) { // last movement was forward (middle sensor sens
 1307              		.loc 1 360 0
 1308 0714 084B     		ldr	r3, .L63+4
 1309 0716 1B68     		ldr	r3, [r3]
 1310 0718 012B     		cmp	r3, #1
 1311 071a 02D1     		bne	.L57
 361:main.c        ****               //hardAdjustLeft();
 362:main.c        ****               turnRight();
 1312              		.loc 1 362 0
 1313 071c FFF7FEFF 		bl	turnRight
 1314 0720 01E0     		b	.L21
 1315              	.L57:
 363:main.c        ****               //reverse(3000); // random number 3000
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 31


 364:main.c        ****             } else {
 365:main.c        ****               turnRight();
 1316              		.loc 1 365 0
 1317 0722 FFF7FEFF 		bl	turnRight
 1318              	.L21:
 1319              	.LBE10:
 366:main.c        ****             }
 367:main.c        ****             }
 368:main.c        ****         }
 369:main.c        **** 
 370:main.c        ****         flag = 0;
 1320              		.loc 1 370 0
 1321 0726 0A4B     		ldr	r3, .L63+28
 1322 0728 0022     		movs	r2, #0
 1323 072a 1A60     		str	r2, [r3]
 371:main.c        ****         ADC_IRQ_Enable();
 1324              		.loc 1 371 0
 1325 072c FFF7FEFF 		bl	ADC_IRQ_Enable
 372:main.c        ****       }
 373:main.c        ****     }
 374:main.c        ****   }
 1326              		.loc 1 374 0
 1327 0730 37E5     		b	.L58
 1328              	.L64:
 1329 0732 00BF     		.align	2
 1330              	.L63:
 1331 0734 00000000 		.word	turnEnable
 1332 0738 00000000 		.word	lastAdjustDirection
 1333 073c 00000000 		.word	shouldUpdate
 1334 0740 00000000 		.word	distanceTravelled
 1335 0744 00000000 		.word	TARGET_SPEED
 1336 0748 00000000 		.word	turningLeft
 1337 074c 00000000 		.word	turningRight
 1338 0750 00000000 		.word	flag
 1339              		.cfi_endproc
 1340              	.LFE66:
 1341              		.size	main, .-main
 1342              		.section	.text.usbPutString,"ax",%progbits
 1343              		.align	2
 1344              		.global	usbPutString
 1345              		.thumb
 1346              		.thumb_func
 1347              		.type	usbPutString, %function
 1348              	usbPutString:
 1349              	.LFB67:
 375:main.c        **** }
 376:main.c        **** 
 377:main.c        **** void usbPutString(char * s) {
 1350              		.loc 1 377 0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 8
 1353              		@ frame_needed = 1, uses_anonymous_args = 0
 1354 0000 80B5     		push	{r7, lr}
 1355              		.cfi_def_cfa_offset 8
 1356              		.cfi_offset 7, -8
 1357              		.cfi_offset 14, -4
 1358 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 32


 1359              		.cfi_def_cfa_offset 16
 1360 0004 00AF     		add	r7, sp, #0
 1361              		.cfi_def_cfa_register 7
 1362 0006 7860     		str	r0, [r7, #4]
 378:main.c        ****   // !! Assumes that *s is a string with allocated space >=64 chars     
 379:main.c        ****   //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 380:main.c        ****   //  length to 62 char (63rd char is a '!')
 381:main.c        **** 
 382:main.c        ****   #ifdef USE_USB
 383:main.c        ****   while (USBUART_CDCIsReady() == 0);
 1363              		.loc 1 383 0
 1364 0008 00BF     		nop
 1365              	.L66:
 1366              		.loc 1 383 0 is_stmt 0 discriminator 1
 1367 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1368 000e 0346     		mov	r3, r0
 1369 0010 002B     		cmp	r3, #0
 1370 0012 FAD0     		beq	.L66
 384:main.c        ****   s[63] = '\0';
 1371              		.loc 1 384 0 is_stmt 1
 1372 0014 7B68     		ldr	r3, [r7, #4]
 1373 0016 3F33     		adds	r3, r3, #63
 1374 0018 0022     		movs	r2, #0
 1375 001a 1A70     		strb	r2, [r3]
 385:main.c        ****   s[62] = '!';
 1376              		.loc 1 385 0
 1377 001c 7B68     		ldr	r3, [r7, #4]
 1378 001e 3E33     		adds	r3, r3, #62
 1379 0020 2122     		movs	r2, #33
 1380 0022 1A70     		strb	r2, [r3]
 386:main.c        ****   USBUART_PutData((uint8 * ) s, strlen(s));
 1381              		.loc 1 386 0
 1382 0024 7868     		ldr	r0, [r7, #4]
 1383 0026 FFF7FEFF 		bl	strlen
 1384 002a 0346     		mov	r3, r0
 1385 002c 9BB2     		uxth	r3, r3
 1386 002e 1946     		mov	r1, r3
 1387 0030 7868     		ldr	r0, [r7, #4]
 1388 0032 FFF7FEFF 		bl	USBUART_PutData
 387:main.c        ****   #endif
 388:main.c        **** }
 1389              		.loc 1 388 0
 1390 0036 00BF     		nop
 1391 0038 0837     		adds	r7, r7, #8
 1392              		.cfi_def_cfa_offset 8
 1393 003a BD46     		mov	sp, r7
 1394              		.cfi_def_cfa_register 13
 1395              		@ sp needed
 1396 003c 80BD     		pop	{r7, pc}
 1397              		.cfi_endproc
 1398              	.LFE67:
 1399              		.size	usbPutString, .-usbPutString
 1400 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1401              		.align	2
 1402              		.global	usbPutChar
 1403              		.thumb
 1404              		.thumb_func
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 33


 1405              		.type	usbPutChar, %function
 1406              	usbPutChar:
 1407              	.LFB68:
 389:main.c        **** //* ========================================
 390:main.c        **** void usbPutChar(char c) {
 1408              		.loc 1 390 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 8
 1411              		@ frame_needed = 1, uses_anonymous_args = 0
 1412 0000 80B5     		push	{r7, lr}
 1413              		.cfi_def_cfa_offset 8
 1414              		.cfi_offset 7, -8
 1415              		.cfi_offset 14, -4
 1416 0002 82B0     		sub	sp, sp, #8
 1417              		.cfi_def_cfa_offset 16
 1418 0004 00AF     		add	r7, sp, #0
 1419              		.cfi_def_cfa_register 7
 1420 0006 0346     		mov	r3, r0
 1421 0008 FB71     		strb	r3, [r7, #7]
 391:main.c        ****   #ifdef USE_USB
 392:main.c        ****   while (USBUART_CDCIsReady() == 0);
 1422              		.loc 1 392 0
 1423 000a 00BF     		nop
 1424              	.L68:
 1425              		.loc 1 392 0 is_stmt 0 discriminator 1
 1426 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1427 0010 0346     		mov	r3, r0
 1428 0012 002B     		cmp	r3, #0
 1429 0014 FAD0     		beq	.L68
 393:main.c        ****   USBUART_PutChar(c);
 1430              		.loc 1 393 0 is_stmt 1
 1431 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1432 0018 1846     		mov	r0, r3
 1433 001a FFF7FEFF 		bl	USBUART_PutChar
 394:main.c        ****   #endif
 395:main.c        **** }...
 1434              		.loc 1 395 0
 1435 001e 00BF     		nop
 1436 0020 0837     		adds	r7, r7, #8
 1437              		.cfi_def_cfa_offset 8
 1438 0022 BD46     		mov	sp, r7
 1439              		.cfi_def_cfa_register 13
 1440              		@ sp needed
 1441 0024 80BD     		pop	{r7, pc}
 1442              		.cfi_endproc
 1443              	.LFE68:
 1444              		.size	usbPutChar, .-usbPutChar
 1445 0026 00BF     		.text
 1446              	.Letext0:
 1447              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1448              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1449              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1450              		.file 5 "vars.h"
 1451              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1452              		.section	.debug_info,"",%progbits
 1453              	.Ldebug_info0:
 1454 0000 D6070000 		.4byte	0x7d6
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 34


 1455 0004 0400     		.2byte	0x4
 1456 0006 00000000 		.4byte	.Ldebug_abbrev0
 1457 000a 04       		.byte	0x4
 1458 000b 01       		.uleb128 0x1
 1459 000c BF000000 		.4byte	.LASF104
 1460 0010 0C       		.byte	0xc
 1461 0011 CA040000 		.4byte	.LASF105
 1462 0015 20020000 		.4byte	.LASF106
 1463 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1464 001d 00000000 		.4byte	0
 1465 0021 00000000 		.4byte	.Ldebug_line0
 1466 0025 02       		.uleb128 0x2
 1467 0026 01       		.byte	0x1
 1468 0027 06       		.byte	0x6
 1469 0028 E8010000 		.4byte	.LASF0
 1470 002c 02       		.uleb128 0x2
 1471 002d 01       		.byte	0x1
 1472 002e 08       		.byte	0x8
 1473 002f 56030000 		.4byte	.LASF1
 1474 0033 02       		.uleb128 0x2
 1475 0034 02       		.byte	0x2
 1476 0035 05       		.byte	0x5
 1477 0036 6D000000 		.4byte	.LASF2
 1478 003a 02       		.uleb128 0x2
 1479 003b 02       		.byte	0x2
 1480 003c 07       		.byte	0x7
 1481 003d 6E040000 		.4byte	.LASF3
 1482 0041 03       		.uleb128 0x3
 1483 0042 2B050000 		.4byte	.LASF12
 1484 0046 02       		.byte	0x2
 1485 0047 3F       		.byte	0x3f
 1486 0048 4C000000 		.4byte	0x4c
 1487 004c 02       		.uleb128 0x2
 1488 004d 04       		.byte	0x4
 1489 004e 05       		.byte	0x5
 1490 004f DA020000 		.4byte	.LASF4
 1491 0053 02       		.uleb128 0x2
 1492 0054 04       		.byte	0x4
 1493 0055 07       		.byte	0x7
 1494 0056 D1040000 		.4byte	.LASF5
 1495 005a 02       		.uleb128 0x2
 1496 005b 08       		.byte	0x8
 1497 005c 05       		.byte	0x5
 1498 005d 06060000 		.4byte	.LASF6
 1499 0061 02       		.uleb128 0x2
 1500 0062 08       		.byte	0x8
 1501 0063 07       		.byte	0x7
 1502 0064 9A030000 		.4byte	.LASF7
 1503 0068 04       		.uleb128 0x4
 1504 0069 04       		.byte	0x4
 1505 006a 05       		.byte	0x5
 1506 006b 696E7400 		.ascii	"int\000"
 1507 006f 02       		.uleb128 0x2
 1508 0070 04       		.byte	0x4
 1509 0071 07       		.byte	0x7
 1510 0072 B1030000 		.4byte	.LASF8
 1511 0076 02       		.uleb128 0x2
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 35


 1512 0077 08       		.byte	0x8
 1513 0078 04       		.byte	0x4
 1514 0079 44030000 		.4byte	.LASF9
 1515 007d 02       		.uleb128 0x2
 1516 007e 04       		.byte	0x4
 1517 007f 07       		.byte	0x7
 1518 0080 A7000000 		.4byte	.LASF10
 1519 0084 05       		.uleb128 0x5
 1520 0085 04       		.byte	0x4
 1521 0086 8A000000 		.4byte	0x8a
 1522 008a 02       		.uleb128 0x2
 1523 008b 01       		.byte	0x1
 1524 008c 08       		.byte	0x8
 1525 008d 37040000 		.4byte	.LASF11
 1526 0091 03       		.uleb128 0x3
 1527 0092 54040000 		.4byte	.LASF13
 1528 0096 03       		.byte	0x3
 1529 0097 2C       		.byte	0x2c
 1530 0098 41000000 		.4byte	0x41
 1531 009c 06       		.uleb128 0x6
 1532 009d 81040000 		.4byte	.LASF14
 1533 00a1 04       		.byte	0x4
 1534 00a2 E701     		.2byte	0x1e7
 1535 00a4 2C000000 		.4byte	0x2c
 1536 00a8 06       		.uleb128 0x6
 1537 00a9 77010000 		.4byte	.LASF15
 1538 00ad 04       		.byte	0x4
 1539 00ae E801     		.2byte	0x1e8
 1540 00b0 3A000000 		.4byte	0x3a
 1541 00b4 06       		.uleb128 0x6
 1542 00b5 95020000 		.4byte	.LASF16
 1543 00b9 04       		.byte	0x4
 1544 00ba EA01     		.2byte	0x1ea
 1545 00bc 25000000 		.4byte	0x25
 1546 00c0 06       		.uleb128 0x6
 1547 00c1 97010000 		.4byte	.LASF17
 1548 00c5 04       		.byte	0x4
 1549 00c6 EB01     		.2byte	0x1eb
 1550 00c8 33000000 		.4byte	0x33
 1551 00cc 02       		.uleb128 0x2
 1552 00cd 04       		.byte	0x4
 1553 00ce 04       		.byte	0x4
 1554 00cf F4010000 		.4byte	.LASF18
 1555 00d3 02       		.uleb128 0x2
 1556 00d4 08       		.byte	0x8
 1557 00d5 04       		.byte	0x4
 1558 00d6 E3040000 		.4byte	.LASF19
 1559 00da 07       		.uleb128 0x7
 1560 00db 24040000 		.4byte	.LASF107
 1561 00df 20       		.byte	0x20
 1562 00e0 05       		.byte	0x5
 1563 00e1 29       		.byte	0x29
 1564 00e2 B3010000 		.4byte	0x1b3
 1565 00e6 08       		.uleb128 0x8
 1566 00e7 01060000 		.4byte	.LASF20
 1567 00eb 05       		.byte	0x5
 1568 00ec 2A       		.byte	0x2a
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 36


 1569 00ed B4000000 		.4byte	0xb4
 1570 00f1 00       		.byte	0
 1571 00f2 08       		.uleb128 0x8
 1572 00f3 91010000 		.4byte	.LASF21
 1573 00f7 05       		.byte	0x5
 1574 00f8 2B       		.byte	0x2b
 1575 00f9 9C000000 		.4byte	0x9c
 1576 00fd 01       		.byte	0x1
 1577 00fe 08       		.uleb128 0x8
 1578 00ff 49040000 		.4byte	.LASF22
 1579 0103 05       		.byte	0x5
 1580 0104 2C       		.byte	0x2c
 1581 0105 C0000000 		.4byte	0xc0
 1582 0109 02       		.byte	0x2
 1583 010a 08       		.uleb128 0x8
 1584 010b 92050000 		.4byte	.LASF23
 1585 010f 05       		.byte	0x5
 1586 0110 2D       		.byte	0x2d
 1587 0111 C0000000 		.4byte	0xc0
 1588 0115 04       		.byte	0x4
 1589 0116 08       		.uleb128 0x8
 1590 0117 3D050000 		.4byte	.LASF24
 1591 011b 05       		.byte	0x5
 1592 011c 2E       		.byte	0x2e
 1593 011d C0000000 		.4byte	0xc0
 1594 0121 06       		.byte	0x6
 1595 0122 08       		.uleb128 0x8
 1596 0123 C8020000 		.4byte	.LASF25
 1597 0127 05       		.byte	0x5
 1598 0128 2F       		.byte	0x2f
 1599 0129 C0000000 		.4byte	0xc0
 1600 012d 08       		.byte	0x8
 1601 012e 08       		.uleb128 0x8
 1602 012f 35050000 		.4byte	.LASF26
 1603 0133 05       		.byte	0x5
 1604 0134 30       		.byte	0x30
 1605 0135 C0000000 		.4byte	0xc0
 1606 0139 0A       		.byte	0xa
 1607 013a 08       		.uleb128 0x8
 1608 013b 64030000 		.4byte	.LASF27
 1609 013f 05       		.byte	0x5
 1610 0140 31       		.byte	0x31
 1611 0141 C0000000 		.4byte	0xc0
 1612 0145 0C       		.byte	0xc
 1613 0146 08       		.uleb128 0x8
 1614 0147 BB020000 		.4byte	.LASF28
 1615 014b 05       		.byte	0x5
 1616 014c 32       		.byte	0x32
 1617 014d C0000000 		.4byte	0xc0
 1618 0151 0E       		.byte	0xe
 1619 0152 08       		.uleb128 0x8
 1620 0153 ED030000 		.4byte	.LASF29
 1621 0157 05       		.byte	0x5
 1622 0158 33       		.byte	0x33
 1623 0159 C0000000 		.4byte	0xc0
 1624 015d 10       		.byte	0x10
 1625 015e 08       		.uleb128 0x8
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 37


 1626 015f 3C030000 		.4byte	.LASF30
 1627 0163 05       		.byte	0x5
 1628 0164 34       		.byte	0x34
 1629 0165 C0000000 		.4byte	0xc0
 1630 0169 12       		.byte	0x12
 1631 016a 08       		.uleb128 0x8
 1632 016b 02020000 		.4byte	.LASF31
 1633 016f 05       		.byte	0x5
 1634 0170 35       		.byte	0x35
 1635 0171 C0000000 		.4byte	0xc0
 1636 0175 14       		.byte	0x14
 1637 0176 08       		.uleb128 0x8
 1638 0177 B0010000 		.4byte	.LASF32
 1639 017b 05       		.byte	0x5
 1640 017c 36       		.byte	0x36
 1641 017d C0000000 		.4byte	0xc0
 1642 0181 16       		.byte	0x16
 1643 0182 08       		.uleb128 0x8
 1644 0183 65000000 		.4byte	.LASF33
 1645 0187 05       		.byte	0x5
 1646 0188 37       		.byte	0x37
 1647 0189 C0000000 		.4byte	0xc0
 1648 018d 18       		.byte	0x18
 1649 018e 08       		.uleb128 0x8
 1650 018f FA010000 		.4byte	.LASF34
 1651 0193 05       		.byte	0x5
 1652 0194 38       		.byte	0x38
 1653 0195 C0000000 		.4byte	0xc0
 1654 0199 1A       		.byte	0x1a
 1655 019a 08       		.uleb128 0x8
 1656 019b DA030000 		.4byte	.LASF35
 1657 019f 05       		.byte	0x5
 1658 01a0 39       		.byte	0x39
 1659 01a1 C0000000 		.4byte	0xc0
 1660 01a5 1C       		.byte	0x1c
 1661 01a6 08       		.uleb128 0x8
 1662 01a7 61040000 		.4byte	.LASF36
 1663 01ab 05       		.byte	0x5
 1664 01ac 3A       		.byte	0x3a
 1665 01ad C0000000 		.4byte	0xc0
 1666 01b1 1E       		.byte	0x1e
 1667 01b2 00       		.byte	0
 1668 01b3 09       		.uleb128 0x9
 1669 01b4 656F6300 		.ascii	"eoc\000"
 1670 01b8 01       		.byte	0x1
 1671 01b9 54       		.byte	0x54
 1672 01ba 00000000 		.4byte	.LFB64
 1673 01be 18000000 		.4byte	.LFE64-.LFB64
 1674 01c2 01       		.uleb128 0x1
 1675 01c3 9C       		.byte	0x9c
 1676 01c4 0A       		.uleb128 0xa
 1677 01c5 1B030000 		.4byte	.LASF37
 1678 01c9 01       		.byte	0x1
 1679 01ca 58       		.byte	0x58
 1680 01cb 00000000 		.4byte	.LFB65
 1681 01cf 18000000 		.4byte	.LFE65-.LFB65
 1682 01d3 01       		.uleb128 0x1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 38


 1683 01d4 9C       		.byte	0x9c
 1684 01d5 0B       		.uleb128 0xb
 1685 01d6 B0000000 		.4byte	.LASF51
 1686 01da 01       		.byte	0x1
 1687 01db 5C       		.byte	0x5c
 1688 01dc 68000000 		.4byte	0x68
 1689 01e0 00000000 		.4byte	.LFB66
 1690 01e4 54070000 		.4byte	.LFE66-.LFB66
 1691 01e8 01       		.uleb128 0x1
 1692 01e9 9C       		.byte	0x9c
 1693 01ea 5F030000 		.4byte	0x35f
 1694 01ee 0C       		.uleb128 0xc
 1695 01ef 16000000 		.4byte	.LASF38
 1696 01f3 01       		.byte	0x1
 1697 01f4 79       		.byte	0x79
 1698 01f5 5F030000 		.4byte	0x35f
 1699 01f9 03       		.uleb128 0x3
 1700 01fa 91       		.byte	0x91
 1701 01fb D877     		.sleb128 -1064
 1702 01fd 0C       		.uleb128 0xc
 1703 01fe B2050000 		.4byte	.LASF39
 1704 0202 01       		.byte	0x1
 1705 0203 7B       		.byte	0x7b
 1706 0204 76030000 		.4byte	0x376
 1707 0208 03       		.uleb128 0x3
 1708 0209 91       		.byte	0x91
 1709 020a E473     		.sleb128 -1564
 1710 020c 0C       		.uleb128 0xc
 1711 020d 2E040000 		.4byte	.LASF40
 1712 0211 01       		.byte	0x1
 1713 0212 7C       		.byte	0x7c
 1714 0213 76030000 		.4byte	0x376
 1715 0217 03       		.uleb128 0x3
 1716 0218 91       		.byte	0x91
 1717 0219 F06F     		.sleb128 -2064
 1718 021b 0D       		.uleb128 0xd
 1719 021c 4A000000 		.4byte	.LBB2
 1720 0220 56000000 		.4byte	.LBE2-.LBB2
 1721 0224 35020000 		.4byte	0x235
 1722 0228 0E       		.uleb128 0xe
 1723 0229 6900     		.ascii	"i\000"
 1724 022b 01       		.byte	0x1
 1725 022c 7F       		.byte	0x7f
 1726 022d 68000000 		.4byte	0x68
 1727 0231 02       		.uleb128 0x2
 1728 0232 91       		.byte	0x91
 1729 0233 6C       		.sleb128 -20
 1730 0234 00       		.byte	0
 1731 0235 0D       		.uleb128 0xd
 1732 0236 C6000000 		.4byte	.LBB3
 1733 023a 52000000 		.4byte	.LBE3-.LBB3
 1734 023e 68020000 		.4byte	0x268
 1735 0242 0E       		.uleb128 0xe
 1736 0243 6900     		.ascii	"i\000"
 1737 0245 01       		.byte	0x1
 1738 0246 8D       		.byte	0x8d
 1739 0247 68000000 		.4byte	0x68
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 39


 1740 024b 02       		.uleb128 0x2
 1741 024c 91       		.byte	0x91
 1742 024d 68       		.sleb128 -24
 1743 024e 0F       		.uleb128 0xf
 1744 024f CE000000 		.4byte	.LBB4
 1745 0253 36000000 		.4byte	.LBE4-.LBB4
 1746 0257 0C       		.uleb128 0xc
 1747 0258 D0020000 		.4byte	.LASF41
 1748 025c 01       		.byte	0x1
 1749 025d 8E       		.byte	0x8e
 1750 025e 87030000 		.4byte	0x387
 1751 0262 03       		.uleb128 0x3
 1752 0263 91       		.byte	0x91
 1753 0264 E46F     		.sleb128 -2076
 1754 0266 00       		.byte	0
 1755 0267 00       		.byte	0
 1756 0268 0D       		.uleb128 0xd
 1757 0269 1E010000 		.4byte	.LBB5
 1758 026d 3E000000 		.4byte	.LBE5-.LBB5
 1759 0271 9B020000 		.4byte	0x29b
 1760 0275 0E       		.uleb128 0xe
 1761 0276 6900     		.ascii	"i\000"
 1762 0278 01       		.byte	0x1
 1763 0279 95       		.byte	0x95
 1764 027a 68000000 		.4byte	0x68
 1765 027e 02       		.uleb128 0x2
 1766 027f 91       		.byte	0x91
 1767 0280 64       		.sleb128 -28
 1768 0281 0F       		.uleb128 0xf
 1769 0282 26010000 		.4byte	.LBB6
 1770 0286 22000000 		.4byte	.LBE6-.LBB6
 1771 028a 0C       		.uleb128 0xc
 1772 028b AA050000 		.4byte	.LASF42
 1773 028f 01       		.byte	0x1
 1774 0290 96       		.byte	0x96
 1775 0291 87030000 		.4byte	0x387
 1776 0295 03       		.uleb128 0x3
 1777 0296 91       		.byte	0x91
 1778 0297 D86F     		.sleb128 -2088
 1779 0299 00       		.byte	0
 1780 029a 00       		.byte	0
 1781 029b 0D       		.uleb128 0xd
 1782 029c 62010000 		.4byte	.LBB7
 1783 02a0 40000000 		.4byte	.LBE7-.LBB7
 1784 02a4 CE020000 		.4byte	0x2ce
 1785 02a8 0E       		.uleb128 0xe
 1786 02a9 6900     		.ascii	"i\000"
 1787 02ab 01       		.byte	0x1
 1788 02ac 9E       		.byte	0x9e
 1789 02ad 68000000 		.4byte	0x68
 1790 02b1 02       		.uleb128 0x2
 1791 02b2 91       		.byte	0x91
 1792 02b3 60       		.sleb128 -32
 1793 02b4 0F       		.uleb128 0xf
 1794 02b5 6A010000 		.4byte	.LBB8
 1795 02b9 24000000 		.4byte	.LBE8-.LBB8
 1796 02bd 0C       		.uleb128 0xc
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 40


 1797 02be BE040000 		.4byte	.LASF43
 1798 02c2 01       		.byte	0x1
 1799 02c3 9F       		.byte	0x9f
 1800 02c4 87030000 		.4byte	0x387
 1801 02c8 03       		.uleb128 0x3
 1802 02c9 91       		.byte	0x91
 1803 02ca CC6F     		.sleb128 -2100
 1804 02cc 00       		.byte	0
 1805 02cd 00       		.byte	0
 1806 02ce 0D       		.uleb128 0xd
 1807 02cf DA010000 		.4byte	.LBB9
 1808 02d3 98000000 		.4byte	.LBE9-.LBB9
 1809 02d7 EA020000 		.4byte	0x2ea
 1810 02db 0C       		.uleb128 0xc
 1811 02dc 80030000 		.4byte	.LASF44
 1812 02e0 01       		.byte	0x1
 1813 02e1 B7       		.byte	0xb7
 1814 02e2 68000000 		.4byte	0x68
 1815 02e6 02       		.uleb128 0x2
 1816 02e7 91       		.byte	0x91
 1817 02e8 40       		.sleb128 -64
 1818 02e9 00       		.byte	0
 1819 02ea 0F       		.uleb128 0xf
 1820 02eb 86030000 		.4byte	.LBB10
 1821 02ef A0030000 		.4byte	.LBE10-.LBB10
 1822 02f3 0C       		.uleb128 0xc
 1823 02f4 E7050000 		.4byte	.LASF45
 1824 02f8 01       		.byte	0x1
 1825 02f9 D9       		.byte	0xd9
 1826 02fa 68000000 		.4byte	0x68
 1827 02fe 02       		.uleb128 0x2
 1828 02ff 91       		.byte	0x91
 1829 0300 5C       		.sleb128 -36
 1830 0301 0C       		.uleb128 0xc
 1831 0302 AC040000 		.4byte	.LASF46
 1832 0306 01       		.byte	0x1
 1833 0307 DA       		.byte	0xda
 1834 0308 68000000 		.4byte	0x68
 1835 030c 02       		.uleb128 0x2
 1836 030d 91       		.byte	0x91
 1837 030e 58       		.sleb128 -40
 1838 030f 0C       		.uleb128 0xc
 1839 0310 FF030000 		.4byte	.LASF47
 1840 0314 01       		.byte	0x1
 1841 0315 DB       		.byte	0xdb
 1842 0316 68000000 		.4byte	0x68
 1843 031a 02       		.uleb128 0x2
 1844 031b 91       		.byte	0x91
 1845 031c 54       		.sleb128 -44
 1846 031d 0C       		.uleb128 0xc
 1847 031e BE050000 		.4byte	.LASF48
 1848 0322 01       		.byte	0x1
 1849 0323 DC       		.byte	0xdc
 1850 0324 68000000 		.4byte	0x68
 1851 0328 02       		.uleb128 0x2
 1852 0329 91       		.byte	0x91
 1853 032a 50       		.sleb128 -48
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 41


 1854 032b 0C       		.uleb128 0xc
 1855 032c 6D030000 		.4byte	.LASF49
 1856 0330 01       		.byte	0x1
 1857 0331 DD       		.byte	0xdd
 1858 0332 68000000 		.4byte	0x68
 1859 0336 02       		.uleb128 0x2
 1860 0337 91       		.byte	0x91
 1861 0338 4C       		.sleb128 -52
 1862 0339 0C       		.uleb128 0xc
 1863 033a 21030000 		.4byte	.LASF50
 1864 033e 01       		.byte	0x1
 1865 033f DE       		.byte	0xde
 1866 0340 68000000 		.4byte	0x68
 1867 0344 02       		.uleb128 0x2
 1868 0345 91       		.byte	0x91
 1869 0346 48       		.sleb128 -56
 1870 0347 0F       		.uleb128 0xf
 1871 0348 B6030000 		.4byte	.LBB11
 1872 034c C4000000 		.4byte	.LBE11-.LBB11
 1873 0350 0E       		.uleb128 0xe
 1874 0351 6900     		.ascii	"i\000"
 1875 0353 01       		.byte	0x1
 1876 0354 DF       		.byte	0xdf
 1877 0355 68000000 		.4byte	0x68
 1878 0359 02       		.uleb128 0x2
 1879 035a 91       		.byte	0x91
 1880 035b 44       		.sleb128 -60
 1881 035c 00       		.byte	0
 1882 035d 00       		.byte	0
 1883 035e 00       		.byte	0
 1884 035f 10       		.uleb128 0x10
 1885 0360 2C000000 		.4byte	0x2c
 1886 0364 76030000 		.4byte	0x376
 1887 0368 11       		.uleb128 0x11
 1888 0369 7D000000 		.4byte	0x7d
 1889 036d F301     		.2byte	0x1f3
 1890 036f 12       		.uleb128 0x12
 1891 0370 7D000000 		.4byte	0x7d
 1892 0374 01       		.byte	0x1
 1893 0375 00       		.byte	0
 1894 0376 10       		.uleb128 0x10
 1895 0377 2C000000 		.4byte	0x2c
 1896 037b 87030000 		.4byte	0x387
 1897 037f 11       		.uleb128 0x11
 1898 0380 7D000000 		.4byte	0x7d
 1899 0384 F301     		.2byte	0x1f3
 1900 0386 00       		.byte	0
 1901 0387 10       		.uleb128 0x10
 1902 0388 8A000000 		.4byte	0x8a
 1903 038c 97030000 		.4byte	0x397
 1904 0390 12       		.uleb128 0x12
 1905 0391 7D000000 		.4byte	0x7d
 1906 0395 09       		.byte	0x9
 1907 0396 00       		.byte	0
 1908 0397 13       		.uleb128 0x13
 1909 0398 88020000 		.4byte	.LASF52
 1910 039c 01       		.byte	0x1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 42


 1911 039d 7901     		.2byte	0x179
 1912 039f 00000000 		.4byte	.LFB67
 1913 03a3 3E000000 		.4byte	.LFE67-.LFB67
 1914 03a7 01       		.uleb128 0x1
 1915 03a8 9C       		.byte	0x9c
 1916 03a9 BB030000 		.4byte	0x3bb
 1917 03ad 14       		.uleb128 0x14
 1918 03ae 7300     		.ascii	"s\000"
 1919 03b0 01       		.byte	0x1
 1920 03b1 7901     		.2byte	0x179
 1921 03b3 84000000 		.4byte	0x84
 1922 03b7 02       		.uleb128 0x2
 1923 03b8 91       		.byte	0x91
 1924 03b9 74       		.sleb128 -12
 1925 03ba 00       		.byte	0
 1926 03bb 13       		.uleb128 0x13
 1927 03bc 00000000 		.4byte	.LASF53
 1928 03c0 01       		.byte	0x1
 1929 03c1 8601     		.2byte	0x186
 1930 03c3 00000000 		.4byte	.LFB68
 1931 03c7 26000000 		.4byte	.LFE68-.LFB68
 1932 03cb 01       		.uleb128 0x1
 1933 03cc 9C       		.byte	0x9c
 1934 03cd DF030000 		.4byte	0x3df
 1935 03d1 14       		.uleb128 0x14
 1936 03d2 6300     		.ascii	"c\000"
 1937 03d4 01       		.byte	0x1
 1938 03d5 8601     		.2byte	0x186
 1939 03d7 8A000000 		.4byte	0x8a
 1940 03db 02       		.uleb128 0x2
 1941 03dc 91       		.byte	0x91
 1942 03dd 77       		.sleb128 -9
 1943 03de 00       		.byte	0
 1944 03df 15       		.uleb128 0x15
 1945 03e0 3C040000 		.4byte	.LASF54
 1946 03e4 06       		.byte	0x6
 1947 03e5 1207     		.2byte	0x712
 1948 03e7 EB030000 		.4byte	0x3eb
 1949 03eb 16       		.uleb128 0x16
 1950 03ec 91000000 		.4byte	0x91
 1951 03f0 17       		.uleb128 0x17
 1952 03f1 747300   		.ascii	"ts\000"
 1953 03f4 05       		.byte	0x5
 1954 03f5 10       		.byte	0x10
 1955 03f6 9C000000 		.4byte	0x9c
 1956 03fa 05       		.uleb128 0x5
 1957 03fb 03       		.byte	0x3
 1958 03fc 00000000 		.4byte	ts
 1959 0400 18       		.uleb128 0x18
 1960 0401 5B050000 		.4byte	.LASF55
 1961 0405 05       		.byte	0x5
 1962 0406 11       		.byte	0x11
 1963 0407 A8000000 		.4byte	0xa8
 1964 040b 05       		.uleb128 0x5
 1965 040c 03       		.byte	0x3
 1966 040d 00000000 		.4byte	ts_enc
 1967 0411 18       		.uleb128 0x18
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 43


 1968 0412 62050000 		.4byte	.LASF56
 1969 0416 05       		.byte	0x5
 1970 0417 12       		.byte	0x12
 1971 0418 A8000000 		.4byte	0xa8
 1972 041c 05       		.uleb128 0x5
 1973 041d 03       		.byte	0x3
 1974 041e 00000000 		.4byte	ts_update
 1975 0422 18       		.uleb128 0x18
 1976 0423 10050000 		.4byte	.LASF57
 1977 0427 05       		.byte	0x5
 1978 0428 13       		.byte	0x13
 1979 0429 A8000000 		.4byte	0xa8
 1980 042d 05       		.uleb128 0x5
 1981 042e 03       		.byte	0x3
 1982 042f 00000000 		.4byte	ts_speed
 1983 0433 18       		.uleb128 0x18
 1984 0434 4D010000 		.4byte	.LASF58
 1985 0438 05       		.byte	0x5
 1986 0439 14       		.byte	0x14
 1987 043a A8000000 		.4byte	0xa8
 1988 043e 05       		.uleb128 0x5
 1989 043f 03       		.byte	0x3
 1990 0440 00000000 		.4byte	ts_display
 1991 0444 18       		.uleb128 0x18
 1992 0445 1F050000 		.4byte	.LASF59
 1993 0449 05       		.byte	0x5
 1994 044a 16       		.byte	0x16
 1995 044b 9C000000 		.4byte	0x9c
 1996 044f 05       		.uleb128 0x5
 1997 0450 03       		.byte	0x3
 1998 0451 00000000 		.4byte	flag_ts_enc
 1999 0455 18       		.uleb128 0x18
 2000 0456 9A020000 		.4byte	.LASF60
 2001 045a 05       		.byte	0x5
 2002 045b 17       		.byte	0x17
 2003 045c 9C000000 		.4byte	0x9c
 2004 0460 05       		.uleb128 0x5
 2005 0461 03       		.byte	0x3
 2006 0462 00000000 		.4byte	flag_ts_update
 2007 0466 18       		.uleb128 0x18
 2008 0467 57000000 		.4byte	.LASF61
 2009 046b 05       		.byte	0x5
 2010 046c 18       		.byte	0x18
 2011 046d 9C000000 		.4byte	0x9c
 2012 0471 05       		.uleb128 0x5
 2013 0472 03       		.byte	0x3
 2014 0473 00000000 		.4byte	flag_ts_speed
 2015 0477 18       		.uleb128 0x18
 2016 0478 03030000 		.4byte	.LASF62
 2017 047c 05       		.byte	0x5
 2018 047d 19       		.byte	0x19
 2019 047e 9C000000 		.4byte	0x9c
 2020 0482 05       		.uleb128 0x5
 2021 0483 03       		.byte	0x3
 2022 0484 00000000 		.4byte	flag_ts_display
 2023 0488 18       		.uleb128 0x18
 2024 0489 13030000 		.4byte	.LASF63
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 44


 2025 048d 05       		.byte	0x5
 2026 048e 1C       		.byte	0x1c
 2027 048f 9C000000 		.4byte	0x9c
 2028 0493 05       		.uleb128 0x5
 2029 0494 03       		.byte	0x3
 2030 0495 00000000 		.4byte	flag_rx
 2031 0499 18       		.uleb128 0x18
 2032 049a 32000000 		.4byte	.LASF64
 2033 049e 05       		.byte	0x5
 2034 049f 1D       		.byte	0x1d
 2035 04a0 9C000000 		.4byte	0x9c
 2036 04a4 05       		.uleb128 0x5
 2037 04a5 03       		.byte	0x3
 2038 04a6 00000000 		.4byte	flag_packet
 2039 04aa 18       		.uleb128 0x18
 2040 04ab BE030000 		.4byte	.LASF65
 2041 04af 05       		.byte	0x5
 2042 04b0 1E       		.byte	0x1e
 2043 04b1 9C000000 		.4byte	0x9c
 2044 04b5 05       		.uleb128 0x5
 2045 04b6 03       		.byte	0x3
 2046 04b7 00000000 		.4byte	flag_KB_string
 2047 04bb 18       		.uleb128 0x18
 2048 04bc EA040000 		.4byte	.LASF66
 2049 04c0 05       		.byte	0x5
 2050 04c1 20       		.byte	0x20
 2051 04c2 9C000000 		.4byte	0x9c
 2052 04c6 05       		.uleb128 0x5
 2053 04c7 03       		.byte	0x3
 2054 04c8 00000000 		.4byte	dataready_flag
 2055 04cc 18       		.uleb128 0x18
 2056 04cd 76050000 		.4byte	.LASF67
 2057 04d1 05       		.byte	0x5
 2058 04d2 22       		.byte	0x22
 2059 04d3 9C000000 		.4byte	0x9c
 2060 04d7 05       		.uleb128 0x5
 2061 04d8 03       		.byte	0x3
 2062 04d9 00000000 		.4byte	flag_rf_transmission_active
 2063 04dd 10       		.uleb128 0x10
 2064 04de 8A000000 		.4byte	0x8a
 2065 04e2 ED040000 		.4byte	0x4ed
 2066 04e6 12       		.uleb128 0x12
 2067 04e7 7D000000 		.4byte	0x7d
 2068 04eb 3F       		.byte	0x3f
 2069 04ec 00       		.byte	0
 2070 04ed 18       		.uleb128 0x18
 2071 04ee 9E040000 		.4byte	.LASF68
 2072 04f2 05       		.byte	0x5
 2073 04f3 25       		.byte	0x25
 2074 04f4 DD040000 		.4byte	0x4dd
 2075 04f8 05       		.uleb128 0x5
 2076 04f9 03       		.byte	0x3
 2077 04fa 00000000 		.4byte	displaystring
 2078 04fe 18       		.uleb128 0x18
 2079 04ff D5010000 		.4byte	.LASF69
 2080 0503 05       		.byte	0x5
 2081 0504 26       		.byte	0x26
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 45


 2082 0505 DD040000 		.4byte	0x4dd
 2083 0509 05       		.uleb128 0x5
 2084 050a 03       		.byte	0x3
 2085 050b 00000000 		.4byte	line
 2086 050f 18       		.uleb128 0x18
 2087 0510 50030000 		.4byte	.LASF70
 2088 0514 05       		.byte	0x5
 2089 0515 26       		.byte	0x26
 2090 0516 DD040000 		.4byte	0x4dd
 2091 051a 05       		.uleb128 0x5
 2092 051b 03       		.byte	0x3
 2093 051c 00000000 		.4byte	entry
 2094 0520 10       		.uleb128 0x10
 2095 0521 9C000000 		.4byte	0x9c
 2096 0525 30050000 		.4byte	0x530
 2097 0529 12       		.uleb128 0x12
 2098 052a 7D000000 		.4byte	0x7d
 2099 052e 3F       		.byte	0x3f
 2100 052f 00       		.byte	0
 2101 0530 18       		.uleb128 0x18
 2102 0531 B5000000 		.4byte	.LASF71
 2103 0535 05       		.byte	0x5
 2104 0536 27       		.byte	0x27
 2105 0537 20050000 		.4byte	0x520
 2106 053b 05       		.uleb128 0x5
 2107 053c 03       		.byte	0x3
 2108 053d 00000000 		.4byte	usbBuffer
 2109 0541 18       		.uleb128 0x18
 2110 0542 9A000000 		.4byte	.LASF72
 2111 0546 05       		.byte	0x5
 2112 0547 3C       		.byte	0x3c
 2113 0548 DA000000 		.4byte	0xda
 2114 054c 05       		.uleb128 0x5
 2115 054d 03       		.byte	0x3
 2116 054e 00000000 		.4byte	system_state
 2117 0552 18       		.uleb128 0x18
 2118 0553 9D050000 		.4byte	.LASF73
 2119 0557 01       		.byte	0x1
 2120 0558 28       		.byte	0x28
 2121 0559 CC000000 		.4byte	0xcc
 2122 055d 05       		.uleb128 0x5
 2123 055e 03       		.byte	0x3
 2124 055f 00000000 		.4byte	TARGET_SPEED
 2125 0563 18       		.uleb128 0x18
 2126 0564 F5030000 		.4byte	.LASF74
 2127 0568 01       		.byte	0x1
 2128 0569 29       		.byte	0x29
 2129 056a 68000000 		.4byte	0x68
 2130 056e 05       		.uleb128 0x5
 2131 056f 03       		.byte	0x3
 2132 0570 00000000 		.4byte	restoring
 2133 0574 18       		.uleb128 0x18
 2134 0575 66010000 		.4byte	.LASF75
 2135 0579 01       		.byte	0x1
 2136 057a 2A       		.byte	0x2a
 2137 057b 68000000 		.4byte	0x68
 2138 057f 05       		.uleb128 0x5
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 46


 2139 0580 03       		.byte	0x3
 2140 0581 00000000 		.4byte	turningDirection
 2141 0585 18       		.uleb128 0x18
 2142 0586 03050000 		.4byte	.LASF76
 2143 058a 01       		.byte	0x1
 2144 058b 2B       		.byte	0x2b
 2145 058c 68000000 		.4byte	0x68
 2146 0590 05       		.uleb128 0x5
 2147 0591 03       		.byte	0x3
 2148 0592 00000000 		.4byte	turningCount
 2149 0596 18       		.uleb128 0x18
 2150 0597 CD030000 		.4byte	.LASF77
 2151 059b 01       		.byte	0x1
 2152 059c 2C       		.byte	0x2c
 2153 059d A7050000 		.4byte	0x5a7
 2154 05a1 05       		.uleb128 0x5
 2155 05a2 03       		.byte	0x3
 2156 05a3 00000000 		.4byte	shouldUpdate
 2157 05a7 16       		.uleb128 0x16
 2158 05a8 68000000 		.4byte	0x68
 2159 05ac 18       		.uleb128 0x18
 2160 05ad F5020000 		.4byte	.LASF78
 2161 05b1 01       		.byte	0x1
 2162 05b2 2E       		.byte	0x2e
 2163 05b3 A7050000 		.4byte	0x5a7
 2164 05b7 05       		.uleb128 0x5
 2165 05b8 03       		.byte	0x3
 2166 05b9 00000000 		.4byte	dotsTravelled
 2167 05bd 18       		.uleb128 0x18
 2168 05be 5C040000 		.4byte	.LASF79
 2169 05c2 01       		.byte	0x1
 2170 05c3 35       		.byte	0x35
 2171 05c4 A7050000 		.4byte	0x5a7
 2172 05c8 05       		.uleb128 0x5
 2173 05c9 03       		.byte	0x3
 2174 05ca 00000000 		.4byte	flag
 2175 05ce 10       		.uleb128 0x10
 2176 05cf A7050000 		.4byte	0x5a7
 2177 05d3 DF050000 		.4byte	0x5df
 2178 05d7 11       		.uleb128 0x11
 2179 05d8 7D000000 		.4byte	0x7d
 2180 05dc E703     		.2byte	0x3e7
 2181 05de 00       		.byte	0
 2182 05df 18       		.uleb128 0x18
 2183 05e0 87040000 		.4byte	.LASF80
 2184 05e4 01       		.byte	0x1
 2185 05e5 36       		.byte	0x36
 2186 05e6 F0050000 		.4byte	0x5f0
 2187 05ea 05       		.uleb128 0x5
 2188 05eb 03       		.byte	0x3
 2189 05ec 00000000 		.4byte	valuesLeftIntersection
 2190 05f0 16       		.uleb128 0x16
 2191 05f1 CE050000 		.4byte	0x5ce
 2192 05f5 18       		.uleb128 0x18
 2193 05f6 48000000 		.4byte	.LASF81
 2194 05fa 01       		.byte	0x1
 2195 05fb 37       		.byte	0x37
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 47


 2196 05fc 06060000 		.4byte	0x606
 2197 0600 05       		.uleb128 0x5
 2198 0601 03       		.byte	0x3
 2199 0602 00000000 		.4byte	valuesLeftLine
 2200 0606 16       		.uleb128 0x16
 2201 0607 CE050000 		.4byte	0x5ce
 2202 060b 18       		.uleb128 0x18
 2203 060c 13040000 		.4byte	.LASF82
 2204 0610 01       		.byte	0x1
 2205 0611 38       		.byte	0x38
 2206 0612 1C060000 		.4byte	0x61c
 2207 0616 05       		.uleb128 0x5
 2208 0617 03       		.byte	0x3
 2209 0618 00000000 		.4byte	valuesMiddleLine
 2210 061c 16       		.uleb128 0x16
 2211 061d CE050000 		.4byte	0x5ce
 2212 0621 18       		.uleb128 0x18
 2213 0622 77000000 		.4byte	.LASF83
 2214 0626 01       		.byte	0x1
 2215 0627 39       		.byte	0x39
 2216 0628 32060000 		.4byte	0x632
 2217 062c 05       		.uleb128 0x5
 2218 062d 03       		.byte	0x3
 2219 062e 00000000 		.4byte	valuesTurnComplete
 2220 0632 16       		.uleb128 0x16
 2221 0633 CE050000 		.4byte	0x5ce
 2222 0637 18       		.uleb128 0x18
 2223 0638 8A000000 		.4byte	.LASF84
 2224 063c 01       		.byte	0x1
 2225 063d 3A       		.byte	0x3a
 2226 063e 48060000 		.4byte	0x648
 2227 0642 05       		.uleb128 0x5
 2228 0643 03       		.byte	0x3
 2229 0644 00000000 		.4byte	valuesRightLine
 2230 0648 16       		.uleb128 0x16
 2231 0649 CE050000 		.4byte	0x5ce
 2232 064d 18       		.uleb128 0x18
 2233 064e BD010000 		.4byte	.LASF85
 2234 0652 01       		.byte	0x1
 2235 0653 3B       		.byte	0x3b
 2236 0654 5E060000 		.4byte	0x65e
 2237 0658 05       		.uleb128 0x5
 2238 0659 03       		.byte	0x3
 2239 065a 00000000 		.4byte	valuesRightIntersection
 2240 065e 16       		.uleb128 0x16
 2241 065f CE050000 		.4byte	0x5ce
 2242 0663 18       		.uleb128 0x18
 2243 0664 19050000 		.4byte	.LASF86
 2244 0668 01       		.byte	0x1
 2245 0669 3C       		.byte	0x3c
 2246 066a A7050000 		.4byte	0x5a7
 2247 066e 05       		.uleb128 0x5
 2248 066f 03       		.byte	0x3
 2249 0670 00000000 		.4byte	count
 2250 0674 18       		.uleb128 0x18
 2251 0675 4F050000 		.4byte	.LASF87
 2252 0679 01       		.byte	0x1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 48


 2253 067a 3D       		.byte	0x3d
 2254 067b A7050000 		.4byte	0x5a7
 2255 067f 05       		.uleb128 0x5
 2256 0680 03       		.byte	0x3
 2257 0681 00000000 		.4byte	turningLeft
 2258 0685 18       		.uleb128 0x18
 2259 0686 8D030000 		.4byte	.LASF88
 2260 068a 01       		.byte	0x1
 2261 068b 3E       		.byte	0x3e
 2262 068c A7050000 		.4byte	0x5a7
 2263 0690 05       		.uleb128 0x5
 2264 0691 03       		.byte	0x3
 2265 0692 00000000 		.4byte	turningRight
 2266 0696 18       		.uleb128 0x18
 2267 0697 E3020000 		.4byte	.LASF89
 2268 069b 01       		.byte	0x1
 2269 069c 3F       		.byte	0x3f
 2270 069d A7050000 		.4byte	0x5a7
 2271 06a1 05       		.uleb128 0x5
 2272 06a2 03       		.byte	0x3
 2273 06a3 00000000 		.4byte	lastVeerDirection
 2274 06a7 18       		.uleb128 0x18
 2275 06a8 F9040000 		.4byte	.LASF90
 2276 06ac 01       		.byte	0x1
 2277 06ad 41       		.byte	0x41
 2278 06ae A7050000 		.4byte	0x5a7
 2279 06b2 05       		.uleb128 0x5
 2280 06b3 03       		.byte	0x3
 2281 06b4 00000000 		.4byte	motorFlag
 2282 06b8 18       		.uleb128 0x18
 2283 06b9 E2050000 		.4byte	.LASF91
 2284 06bd 01       		.byte	0x1
 2285 06be 42       		.byte	0x42
 2286 06bf A7050000 		.4byte	0x5a7
 2287 06c3 05       		.uleb128 0x5
 2288 06c4 03       		.byte	0x3
 2289 06c5 00000000 		.4byte	step
 2290 06c9 17       		.uleb128 0x17
 2291 06ca 76314C00 		.ascii	"v1L\000"
 2292 06ce 01       		.byte	0x1
 2293 06cf 43       		.byte	0x43
 2294 06d0 A7050000 		.4byte	0x5a7
 2295 06d4 05       		.uleb128 0x5
 2296 06d5 03       		.byte	0x3
 2297 06d6 00000000 		.4byte	v1L
 2298 06da 17       		.uleb128 0x17
 2299 06db 76324C00 		.ascii	"v2L\000"
 2300 06df 01       		.byte	0x1
 2301 06e0 44       		.byte	0x44
 2302 06e1 A7050000 		.4byte	0x5a7
 2303 06e5 05       		.uleb128 0x5
 2304 06e6 03       		.byte	0x3
 2305 06e7 00000000 		.4byte	v2L
 2306 06eb 17       		.uleb128 0x17
 2307 06ec 76315200 		.ascii	"v1R\000"
 2308 06f0 01       		.byte	0x1
 2309 06f1 45       		.byte	0x45
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 49


 2310 06f2 A7050000 		.4byte	0x5a7
 2311 06f6 05       		.uleb128 0x5
 2312 06f7 03       		.byte	0x3
 2313 06f8 00000000 		.4byte	v1R
 2314 06fc 17       		.uleb128 0x17
 2315 06fd 76325200 		.ascii	"v2R\000"
 2316 0701 01       		.byte	0x1
 2317 0702 46       		.byte	0x46
 2318 0703 A7050000 		.4byte	0x5a7
 2319 0707 05       		.uleb128 0x5
 2320 0708 03       		.byte	0x3
 2321 0709 00000000 		.4byte	v2R
 2322 070d 18       		.uleb128 0x18
 2323 070e DA010000 		.4byte	.LASF92
 2324 0712 01       		.byte	0x1
 2325 0713 47       		.byte	0x47
 2326 0714 A7050000 		.4byte	0x5a7
 2327 0718 05       		.uleb128 0x5
 2328 0719 03       		.byte	0x3
 2329 071a 00000000 		.4byte	numRotationsL
 2330 071e 18       		.uleb128 0x18
 2331 071f D4050000 		.4byte	.LASF93
 2332 0723 01       		.byte	0x1
 2333 0724 48       		.byte	0x48
 2334 0725 A7050000 		.4byte	0x5a7
 2335 0729 05       		.uleb128 0x5
 2336 072a 03       		.byte	0x3
 2337 072b 00000000 		.4byte	numRotationsR
 2338 072f 18       		.uleb128 0x18
 2339 0730 E3030000 		.4byte	.LASF94
 2340 0734 01       		.byte	0x1
 2341 0735 49       		.byte	0x49
 2342 0736 A7050000 		.4byte	0x5a7
 2343 073a 05       		.uleb128 0x5
 2344 073b 03       		.byte	0x3
 2345 073c 00000000 		.4byte	turnCount
 2346 0740 18       		.uleb128 0x18
 2347 0741 A9020000 		.4byte	.LASF95
 2348 0745 01       		.byte	0x1
 2349 0746 4A       		.byte	0x4a
 2350 0747 A7050000 		.4byte	0x5a7
 2351 074b 05       		.uleb128 0x5
 2352 074c 03       		.byte	0x3
 2353 074d 00000000 		.4byte	distanceTravelled
 2354 0751 18       		.uleb128 0x18
 2355 0752 7E010000 		.4byte	.LASF96
 2356 0756 01       		.byte	0x1
 2357 0757 4B       		.byte	0x4b
 2358 0758 A7050000 		.4byte	0x5a7
 2359 075c 05       		.uleb128 0x5
 2360 075d 03       		.byte	0x3
 2361 075e 00000000 		.4byte	distancePerSecondL
 2362 0762 18       		.uleb128 0x18
 2363 0763 9D010000 		.4byte	.LASF97
 2364 0767 01       		.byte	0x1
 2365 0768 4C       		.byte	0x4c
 2366 0769 A7050000 		.4byte	0x5a7
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 50


 2367 076d 05       		.uleb128 0x5
 2368 076e 03       		.byte	0x3
 2369 076f 00000000 		.4byte	distancePerSecondR
 2370 0773 18       		.uleb128 0x18
 2371 0774 0B020000 		.4byte	.LASF98
 2372 0778 01       		.byte	0x1
 2373 0779 4D       		.byte	0x4d
 2374 077a A7050000 		.4byte	0x5a7
 2375 077e 05       		.uleb128 0x5
 2376 077f 03       		.byte	0x3
 2377 0780 00000000 		.4byte	distancePerSecondAvg
 2378 0784 18       		.uleb128 0x18
 2379 0785 58010000 		.4byte	.LASF99
 2380 0789 01       		.byte	0x1
 2381 078a 4E       		.byte	0x4e
 2382 078b A7050000 		.4byte	0x5a7
 2383 078f 05       		.uleb128 0x5
 2384 0790 03       		.byte	0x3
 2385 0791 00000000 		.4byte	prevTurnState
 2386 0795 18       		.uleb128 0x18
 2387 0796 6C050000 		.4byte	.LASF100
 2388 079a 01       		.byte	0x1
 2389 079b 4F       		.byte	0x4f
 2390 079c A7050000 		.4byte	0x5a7
 2391 07a0 05       		.uleb128 0x5
 2392 07a1 03       		.byte	0x3
 2393 07a2 00000000 		.4byte	turnState
 2394 07a6 18       		.uleb128 0x18
 2395 07a7 0B000000 		.4byte	.LASF101
 2396 07ab 01       		.byte	0x1
 2397 07ac 50       		.byte	0x50
 2398 07ad A7050000 		.4byte	0x5a7
 2399 07b1 05       		.uleb128 0x5
 2400 07b2 03       		.byte	0x3
 2401 07b3 00000000 		.4byte	turnEnable
 2402 07b7 18       		.uleb128 0x18
 2403 07b8 3E000000 		.4byte	.LASF102
 2404 07bc 01       		.byte	0x1
 2405 07bd 51       		.byte	0x51
 2406 07be A7050000 		.4byte	0x5a7
 2407 07c2 05       		.uleb128 0x5
 2408 07c3 03       		.byte	0x3
 2409 07c4 00000000 		.4byte	turnTimer
 2410 07c8 18       		.uleb128 0x18
 2411 07c9 1E000000 		.4byte	.LASF103
 2412 07cd 01       		.byte	0x1
 2413 07ce 52       		.byte	0x52
 2414 07cf 68000000 		.4byte	0x68
 2415 07d3 05       		.uleb128 0x5
 2416 07d4 03       		.byte	0x3
 2417 07d5 00000000 		.4byte	lastAdjustDirection
 2418 07d9 00       		.byte	0
 2419              		.section	.debug_abbrev,"",%progbits
 2420              	.Ldebug_abbrev0:
 2421 0000 01       		.uleb128 0x1
 2422 0001 11       		.uleb128 0x11
 2423 0002 01       		.byte	0x1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 51


 2424 0003 25       		.uleb128 0x25
 2425 0004 0E       		.uleb128 0xe
 2426 0005 13       		.uleb128 0x13
 2427 0006 0B       		.uleb128 0xb
 2428 0007 03       		.uleb128 0x3
 2429 0008 0E       		.uleb128 0xe
 2430 0009 1B       		.uleb128 0x1b
 2431 000a 0E       		.uleb128 0xe
 2432 000b 55       		.uleb128 0x55
 2433 000c 17       		.uleb128 0x17
 2434 000d 11       		.uleb128 0x11
 2435 000e 01       		.uleb128 0x1
 2436 000f 10       		.uleb128 0x10
 2437 0010 17       		.uleb128 0x17
 2438 0011 00       		.byte	0
 2439 0012 00       		.byte	0
 2440 0013 02       		.uleb128 0x2
 2441 0014 24       		.uleb128 0x24
 2442 0015 00       		.byte	0
 2443 0016 0B       		.uleb128 0xb
 2444 0017 0B       		.uleb128 0xb
 2445 0018 3E       		.uleb128 0x3e
 2446 0019 0B       		.uleb128 0xb
 2447 001a 03       		.uleb128 0x3
 2448 001b 0E       		.uleb128 0xe
 2449 001c 00       		.byte	0
 2450 001d 00       		.byte	0
 2451 001e 03       		.uleb128 0x3
 2452 001f 16       		.uleb128 0x16
 2453 0020 00       		.byte	0
 2454 0021 03       		.uleb128 0x3
 2455 0022 0E       		.uleb128 0xe
 2456 0023 3A       		.uleb128 0x3a
 2457 0024 0B       		.uleb128 0xb
 2458 0025 3B       		.uleb128 0x3b
 2459 0026 0B       		.uleb128 0xb
 2460 0027 49       		.uleb128 0x49
 2461 0028 13       		.uleb128 0x13
 2462 0029 00       		.byte	0
 2463 002a 00       		.byte	0
 2464 002b 04       		.uleb128 0x4
 2465 002c 24       		.uleb128 0x24
 2466 002d 00       		.byte	0
 2467 002e 0B       		.uleb128 0xb
 2468 002f 0B       		.uleb128 0xb
 2469 0030 3E       		.uleb128 0x3e
 2470 0031 0B       		.uleb128 0xb
 2471 0032 03       		.uleb128 0x3
 2472 0033 08       		.uleb128 0x8
 2473 0034 00       		.byte	0
 2474 0035 00       		.byte	0
 2475 0036 05       		.uleb128 0x5
 2476 0037 0F       		.uleb128 0xf
 2477 0038 00       		.byte	0
 2478 0039 0B       		.uleb128 0xb
 2479 003a 0B       		.uleb128 0xb
 2480 003b 49       		.uleb128 0x49
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 52


 2481 003c 13       		.uleb128 0x13
 2482 003d 00       		.byte	0
 2483 003e 00       		.byte	0
 2484 003f 06       		.uleb128 0x6
 2485 0040 16       		.uleb128 0x16
 2486 0041 00       		.byte	0
 2487 0042 03       		.uleb128 0x3
 2488 0043 0E       		.uleb128 0xe
 2489 0044 3A       		.uleb128 0x3a
 2490 0045 0B       		.uleb128 0xb
 2491 0046 3B       		.uleb128 0x3b
 2492 0047 05       		.uleb128 0x5
 2493 0048 49       		.uleb128 0x49
 2494 0049 13       		.uleb128 0x13
 2495 004a 00       		.byte	0
 2496 004b 00       		.byte	0
 2497 004c 07       		.uleb128 0x7
 2498 004d 13       		.uleb128 0x13
 2499 004e 01       		.byte	0x1
 2500 004f 03       		.uleb128 0x3
 2501 0050 0E       		.uleb128 0xe
 2502 0051 0B       		.uleb128 0xb
 2503 0052 0B       		.uleb128 0xb
 2504 0053 3A       		.uleb128 0x3a
 2505 0054 0B       		.uleb128 0xb
 2506 0055 3B       		.uleb128 0x3b
 2507 0056 0B       		.uleb128 0xb
 2508 0057 01       		.uleb128 0x1
 2509 0058 13       		.uleb128 0x13
 2510 0059 00       		.byte	0
 2511 005a 00       		.byte	0
 2512 005b 08       		.uleb128 0x8
 2513 005c 0D       		.uleb128 0xd
 2514 005d 00       		.byte	0
 2515 005e 03       		.uleb128 0x3
 2516 005f 0E       		.uleb128 0xe
 2517 0060 3A       		.uleb128 0x3a
 2518 0061 0B       		.uleb128 0xb
 2519 0062 3B       		.uleb128 0x3b
 2520 0063 0B       		.uleb128 0xb
 2521 0064 49       		.uleb128 0x49
 2522 0065 13       		.uleb128 0x13
 2523 0066 38       		.uleb128 0x38
 2524 0067 0B       		.uleb128 0xb
 2525 0068 00       		.byte	0
 2526 0069 00       		.byte	0
 2527 006a 09       		.uleb128 0x9
 2528 006b 2E       		.uleb128 0x2e
 2529 006c 00       		.byte	0
 2530 006d 3F       		.uleb128 0x3f
 2531 006e 19       		.uleb128 0x19
 2532 006f 03       		.uleb128 0x3
 2533 0070 08       		.uleb128 0x8
 2534 0071 3A       		.uleb128 0x3a
 2535 0072 0B       		.uleb128 0xb
 2536 0073 3B       		.uleb128 0x3b
 2537 0074 0B       		.uleb128 0xb
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 53


 2538 0075 27       		.uleb128 0x27
 2539 0076 19       		.uleb128 0x19
 2540 0077 11       		.uleb128 0x11
 2541 0078 01       		.uleb128 0x1
 2542 0079 12       		.uleb128 0x12
 2543 007a 06       		.uleb128 0x6
 2544 007b 40       		.uleb128 0x40
 2545 007c 18       		.uleb128 0x18
 2546 007d 9742     		.uleb128 0x2117
 2547 007f 19       		.uleb128 0x19
 2548 0080 00       		.byte	0
 2549 0081 00       		.byte	0
 2550 0082 0A       		.uleb128 0xa
 2551 0083 2E       		.uleb128 0x2e
 2552 0084 00       		.byte	0
 2553 0085 3F       		.uleb128 0x3f
 2554 0086 19       		.uleb128 0x19
 2555 0087 03       		.uleb128 0x3
 2556 0088 0E       		.uleb128 0xe
 2557 0089 3A       		.uleb128 0x3a
 2558 008a 0B       		.uleb128 0xb
 2559 008b 3B       		.uleb128 0x3b
 2560 008c 0B       		.uleb128 0xb
 2561 008d 27       		.uleb128 0x27
 2562 008e 19       		.uleb128 0x19
 2563 008f 11       		.uleb128 0x11
 2564 0090 01       		.uleb128 0x1
 2565 0091 12       		.uleb128 0x12
 2566 0092 06       		.uleb128 0x6
 2567 0093 40       		.uleb128 0x40
 2568 0094 18       		.uleb128 0x18
 2569 0095 9742     		.uleb128 0x2117
 2570 0097 19       		.uleb128 0x19
 2571 0098 00       		.byte	0
 2572 0099 00       		.byte	0
 2573 009a 0B       		.uleb128 0xb
 2574 009b 2E       		.uleb128 0x2e
 2575 009c 01       		.byte	0x1
 2576 009d 3F       		.uleb128 0x3f
 2577 009e 19       		.uleb128 0x19
 2578 009f 03       		.uleb128 0x3
 2579 00a0 0E       		.uleb128 0xe
 2580 00a1 3A       		.uleb128 0x3a
 2581 00a2 0B       		.uleb128 0xb
 2582 00a3 3B       		.uleb128 0x3b
 2583 00a4 0B       		.uleb128 0xb
 2584 00a5 49       		.uleb128 0x49
 2585 00a6 13       		.uleb128 0x13
 2586 00a7 11       		.uleb128 0x11
 2587 00a8 01       		.uleb128 0x1
 2588 00a9 12       		.uleb128 0x12
 2589 00aa 06       		.uleb128 0x6
 2590 00ab 40       		.uleb128 0x40
 2591 00ac 18       		.uleb128 0x18
 2592 00ad 9642     		.uleb128 0x2116
 2593 00af 19       		.uleb128 0x19
 2594 00b0 01       		.uleb128 0x1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 54


 2595 00b1 13       		.uleb128 0x13
 2596 00b2 00       		.byte	0
 2597 00b3 00       		.byte	0
 2598 00b4 0C       		.uleb128 0xc
 2599 00b5 34       		.uleb128 0x34
 2600 00b6 00       		.byte	0
 2601 00b7 03       		.uleb128 0x3
 2602 00b8 0E       		.uleb128 0xe
 2603 00b9 3A       		.uleb128 0x3a
 2604 00ba 0B       		.uleb128 0xb
 2605 00bb 3B       		.uleb128 0x3b
 2606 00bc 0B       		.uleb128 0xb
 2607 00bd 49       		.uleb128 0x49
 2608 00be 13       		.uleb128 0x13
 2609 00bf 02       		.uleb128 0x2
 2610 00c0 18       		.uleb128 0x18
 2611 00c1 00       		.byte	0
 2612 00c2 00       		.byte	0
 2613 00c3 0D       		.uleb128 0xd
 2614 00c4 0B       		.uleb128 0xb
 2615 00c5 01       		.byte	0x1
 2616 00c6 11       		.uleb128 0x11
 2617 00c7 01       		.uleb128 0x1
 2618 00c8 12       		.uleb128 0x12
 2619 00c9 06       		.uleb128 0x6
 2620 00ca 01       		.uleb128 0x1
 2621 00cb 13       		.uleb128 0x13
 2622 00cc 00       		.byte	0
 2623 00cd 00       		.byte	0
 2624 00ce 0E       		.uleb128 0xe
 2625 00cf 34       		.uleb128 0x34
 2626 00d0 00       		.byte	0
 2627 00d1 03       		.uleb128 0x3
 2628 00d2 08       		.uleb128 0x8
 2629 00d3 3A       		.uleb128 0x3a
 2630 00d4 0B       		.uleb128 0xb
 2631 00d5 3B       		.uleb128 0x3b
 2632 00d6 0B       		.uleb128 0xb
 2633 00d7 49       		.uleb128 0x49
 2634 00d8 13       		.uleb128 0x13
 2635 00d9 02       		.uleb128 0x2
 2636 00da 18       		.uleb128 0x18
 2637 00db 00       		.byte	0
 2638 00dc 00       		.byte	0
 2639 00dd 0F       		.uleb128 0xf
 2640 00de 0B       		.uleb128 0xb
 2641 00df 01       		.byte	0x1
 2642 00e0 11       		.uleb128 0x11
 2643 00e1 01       		.uleb128 0x1
 2644 00e2 12       		.uleb128 0x12
 2645 00e3 06       		.uleb128 0x6
 2646 00e4 00       		.byte	0
 2647 00e5 00       		.byte	0
 2648 00e6 10       		.uleb128 0x10
 2649 00e7 01       		.uleb128 0x1
 2650 00e8 01       		.byte	0x1
 2651 00e9 49       		.uleb128 0x49
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 55


 2652 00ea 13       		.uleb128 0x13
 2653 00eb 01       		.uleb128 0x1
 2654 00ec 13       		.uleb128 0x13
 2655 00ed 00       		.byte	0
 2656 00ee 00       		.byte	0
 2657 00ef 11       		.uleb128 0x11
 2658 00f0 21       		.uleb128 0x21
 2659 00f1 00       		.byte	0
 2660 00f2 49       		.uleb128 0x49
 2661 00f3 13       		.uleb128 0x13
 2662 00f4 2F       		.uleb128 0x2f
 2663 00f5 05       		.uleb128 0x5
 2664 00f6 00       		.byte	0
 2665 00f7 00       		.byte	0
 2666 00f8 12       		.uleb128 0x12
 2667 00f9 21       		.uleb128 0x21
 2668 00fa 00       		.byte	0
 2669 00fb 49       		.uleb128 0x49
 2670 00fc 13       		.uleb128 0x13
 2671 00fd 2F       		.uleb128 0x2f
 2672 00fe 0B       		.uleb128 0xb
 2673 00ff 00       		.byte	0
 2674 0100 00       		.byte	0
 2675 0101 13       		.uleb128 0x13
 2676 0102 2E       		.uleb128 0x2e
 2677 0103 01       		.byte	0x1
 2678 0104 3F       		.uleb128 0x3f
 2679 0105 19       		.uleb128 0x19
 2680 0106 03       		.uleb128 0x3
 2681 0107 0E       		.uleb128 0xe
 2682 0108 3A       		.uleb128 0x3a
 2683 0109 0B       		.uleb128 0xb
 2684 010a 3B       		.uleb128 0x3b
 2685 010b 05       		.uleb128 0x5
 2686 010c 27       		.uleb128 0x27
 2687 010d 19       		.uleb128 0x19
 2688 010e 11       		.uleb128 0x11
 2689 010f 01       		.uleb128 0x1
 2690 0110 12       		.uleb128 0x12
 2691 0111 06       		.uleb128 0x6
 2692 0112 40       		.uleb128 0x40
 2693 0113 18       		.uleb128 0x18
 2694 0114 9642     		.uleb128 0x2116
 2695 0116 19       		.uleb128 0x19
 2696 0117 01       		.uleb128 0x1
 2697 0118 13       		.uleb128 0x13
 2698 0119 00       		.byte	0
 2699 011a 00       		.byte	0
 2700 011b 14       		.uleb128 0x14
 2701 011c 05       		.uleb128 0x5
 2702 011d 00       		.byte	0
 2703 011e 03       		.uleb128 0x3
 2704 011f 08       		.uleb128 0x8
 2705 0120 3A       		.uleb128 0x3a
 2706 0121 0B       		.uleb128 0xb
 2707 0122 3B       		.uleb128 0x3b
 2708 0123 05       		.uleb128 0x5
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 56


 2709 0124 49       		.uleb128 0x49
 2710 0125 13       		.uleb128 0x13
 2711 0126 02       		.uleb128 0x2
 2712 0127 18       		.uleb128 0x18
 2713 0128 00       		.byte	0
 2714 0129 00       		.byte	0
 2715 012a 15       		.uleb128 0x15
 2716 012b 34       		.uleb128 0x34
 2717 012c 00       		.byte	0
 2718 012d 03       		.uleb128 0x3
 2719 012e 0E       		.uleb128 0xe
 2720 012f 3A       		.uleb128 0x3a
 2721 0130 0B       		.uleb128 0xb
 2722 0131 3B       		.uleb128 0x3b
 2723 0132 05       		.uleb128 0x5
 2724 0133 49       		.uleb128 0x49
 2725 0134 13       		.uleb128 0x13
 2726 0135 3F       		.uleb128 0x3f
 2727 0136 19       		.uleb128 0x19
 2728 0137 3C       		.uleb128 0x3c
 2729 0138 19       		.uleb128 0x19
 2730 0139 00       		.byte	0
 2731 013a 00       		.byte	0
 2732 013b 16       		.uleb128 0x16
 2733 013c 35       		.uleb128 0x35
 2734 013d 00       		.byte	0
 2735 013e 49       		.uleb128 0x49
 2736 013f 13       		.uleb128 0x13
 2737 0140 00       		.byte	0
 2738 0141 00       		.byte	0
 2739 0142 17       		.uleb128 0x17
 2740 0143 34       		.uleb128 0x34
 2741 0144 00       		.byte	0
 2742 0145 03       		.uleb128 0x3
 2743 0146 08       		.uleb128 0x8
 2744 0147 3A       		.uleb128 0x3a
 2745 0148 0B       		.uleb128 0xb
 2746 0149 3B       		.uleb128 0x3b
 2747 014a 0B       		.uleb128 0xb
 2748 014b 49       		.uleb128 0x49
 2749 014c 13       		.uleb128 0x13
 2750 014d 3F       		.uleb128 0x3f
 2751 014e 19       		.uleb128 0x19
 2752 014f 02       		.uleb128 0x2
 2753 0150 18       		.uleb128 0x18
 2754 0151 00       		.byte	0
 2755 0152 00       		.byte	0
 2756 0153 18       		.uleb128 0x18
 2757 0154 34       		.uleb128 0x34
 2758 0155 00       		.byte	0
 2759 0156 03       		.uleb128 0x3
 2760 0157 0E       		.uleb128 0xe
 2761 0158 3A       		.uleb128 0x3a
 2762 0159 0B       		.uleb128 0xb
 2763 015a 3B       		.uleb128 0x3b
 2764 015b 0B       		.uleb128 0xb
 2765 015c 49       		.uleb128 0x49
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 57


 2766 015d 13       		.uleb128 0x13
 2767 015e 3F       		.uleb128 0x3f
 2768 015f 19       		.uleb128 0x19
 2769 0160 02       		.uleb128 0x2
 2770 0161 18       		.uleb128 0x18
 2771 0162 00       		.byte	0
 2772 0163 00       		.byte	0
 2773 0164 00       		.byte	0
 2774              		.section	.debug_aranges,"",%progbits
 2775 0000 3C000000 		.4byte	0x3c
 2776 0004 0200     		.2byte	0x2
 2777 0006 00000000 		.4byte	.Ldebug_info0
 2778 000a 04       		.byte	0x4
 2779 000b 00       		.byte	0
 2780 000c 0000     		.2byte	0
 2781 000e 0000     		.2byte	0
 2782 0010 00000000 		.4byte	.LFB64
 2783 0014 18000000 		.4byte	.LFE64-.LFB64
 2784 0018 00000000 		.4byte	.LFB65
 2785 001c 18000000 		.4byte	.LFE65-.LFB65
 2786 0020 00000000 		.4byte	.LFB66
 2787 0024 54070000 		.4byte	.LFE66-.LFB66
 2788 0028 00000000 		.4byte	.LFB67
 2789 002c 3E000000 		.4byte	.LFE67-.LFB67
 2790 0030 00000000 		.4byte	.LFB68
 2791 0034 26000000 		.4byte	.LFE68-.LFB68
 2792 0038 00000000 		.4byte	0
 2793 003c 00000000 		.4byte	0
 2794              		.section	.debug_ranges,"",%progbits
 2795              	.Ldebug_ranges0:
 2796 0000 00000000 		.4byte	.LFB64
 2797 0004 18000000 		.4byte	.LFE64
 2798 0008 00000000 		.4byte	.LFB65
 2799 000c 18000000 		.4byte	.LFE65
 2800 0010 00000000 		.4byte	.LFB66
 2801 0014 54070000 		.4byte	.LFE66
 2802 0018 00000000 		.4byte	.LFB67
 2803 001c 3E000000 		.4byte	.LFE67
 2804 0020 00000000 		.4byte	.LFB68
 2805 0024 26000000 		.4byte	.LFE68
 2806 0028 00000000 		.4byte	0
 2807 002c 00000000 		.4byte	0
 2808              		.section	.debug_line,"",%progbits
 2809              	.Ldebug_line0:
 2810 0000 34030000 		.section	.debug_str,"MS",%progbits,1
 2810      02005601 
 2810      00000201 
 2810      FB0E0D00 
 2810      01010101 
 2811              	.LASF53:
 2812 0000 75736250 		.ascii	"usbPutChar\000"
 2812      75744368 
 2812      617200
 2813              	.LASF101:
 2814 000b 7475726E 		.ascii	"turnEnable\000"
 2814      456E6162 
 2814      6C6500
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 58


 2815              	.LASF38:
 2816 0016 73717561 		.ascii	"squares\000"
 2816      72657300 
 2817              	.LASF103:
 2818 001e 6C617374 		.ascii	"lastAdjustDirection\000"
 2818      41646A75 
 2818      73744469 
 2818      72656374 
 2818      696F6E00 
 2819              	.LASF64:
 2820 0032 666C6167 		.ascii	"flag_packet\000"
 2820      5F706163 
 2820      6B657400 
 2821              	.LASF102:
 2822 003e 7475726E 		.ascii	"turnTimer\000"
 2822      54696D65 
 2822      7200
 2823              	.LASF81:
 2824 0048 76616C75 		.ascii	"valuesLeftLine\000"
 2824      65734C65 
 2824      66744C69 
 2824      6E6500
 2825              	.LASF61:
 2826 0057 666C6167 		.ascii	"flag_ts_speed\000"
 2826      5F74735F 
 2826      73706565 
 2826      6400
 2827              	.LASF33:
 2828 0065 67325F78 		.ascii	"g2_xpos\000"
 2828      706F7300 
 2829              	.LASF2:
 2830 006d 73686F72 		.ascii	"short int\000"
 2830      7420696E 
 2830      7400
 2831              	.LASF83:
 2832 0077 76616C75 		.ascii	"valuesTurnComplete\000"
 2832      65735475 
 2832      726E436F 
 2832      6D706C65 
 2832      746500
 2833              	.LASF84:
 2834 008a 76616C75 		.ascii	"valuesRightLine\000"
 2834      65735269 
 2834      6768744C 
 2834      696E6500 
 2835              	.LASF72:
 2836 009a 73797374 		.ascii	"system_state\000"
 2836      656D5F73 
 2836      74617465 
 2836      00
 2837              	.LASF10:
 2838 00a7 73697A65 		.ascii	"sizetype\000"
 2838      74797065 
 2838      00
 2839              	.LASF51:
 2840 00b0 6D61696E 		.ascii	"main\000"
 2840      00
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 59


 2841              	.LASF71:
 2842 00b5 75736242 		.ascii	"usbBuffer\000"
 2842      75666665 
 2842      7200
 2843              	.LASF104:
 2844 00bf 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2844      43313120 
 2844      352E342E 
 2844      31203230 
 2844      31363036 
 2845 00f2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2845      20726576 
 2845      6973696F 
 2845      6E203233 
 2845      37373135 
 2846 0125 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2846      66756E63 
 2846      74696F6E 
 2846      2D736563 
 2846      74696F6E 
 2847              	.LASF58:
 2848 014d 74735F64 		.ascii	"ts_display\000"
 2848      6973706C 
 2848      617900
 2849              	.LASF99:
 2850 0158 70726576 		.ascii	"prevTurnState\000"
 2850      5475726E 
 2850      53746174 
 2850      6500
 2851              	.LASF75:
 2852 0166 7475726E 		.ascii	"turningDirection\000"
 2852      696E6744 
 2852      69726563 
 2852      74696F6E 
 2852      00
 2853              	.LASF15:
 2854 0177 75696E74 		.ascii	"uint16\000"
 2854      313600
 2855              	.LASF96:
 2856 017e 64697374 		.ascii	"distancePerSecondL\000"
 2856      616E6365 
 2856      50657253 
 2856      65636F6E 
 2856      644C00
 2857              	.LASF21:
 2858 0191 696E6465 		.ascii	"index\000"
 2858      7800
 2859              	.LASF17:
 2860 0197 696E7431 		.ascii	"int16\000"
 2860      3600
 2861              	.LASF97:
 2862 019d 64697374 		.ascii	"distancePerSecondR\000"
 2862      616E6365 
 2862      50657253 
 2862      65636F6E 
 2862      645200
 2863              	.LASF32:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 60


 2864 01b0 67315F64 		.ascii	"g1_direction\000"
 2864      69726563 
 2864      74696F6E 
 2864      00
 2865              	.LASF85:
 2866 01bd 76616C75 		.ascii	"valuesRightIntersection\000"
 2866      65735269 
 2866      67687449 
 2866      6E746572 
 2866      73656374 
 2867              	.LASF69:
 2868 01d5 6C696E65 		.ascii	"line\000"
 2868      00
 2869              	.LASF92:
 2870 01da 6E756D52 		.ascii	"numRotationsL\000"
 2870      6F746174 
 2870      696F6E73 
 2870      4C00
 2871              	.LASF0:
 2872 01e8 7369676E 		.ascii	"signed char\000"
 2872      65642063 
 2872      68617200 
 2873              	.LASF18:
 2874 01f4 666C6F61 		.ascii	"float\000"
 2874      7400
 2875              	.LASF34:
 2876 01fa 67325F79 		.ascii	"g2_ypos\000"
 2876      706F7300 
 2877              	.LASF31:
 2878 0202 67315F73 		.ascii	"g1_speed\000"
 2878      70656564 
 2878      00
 2879              	.LASF98:
 2880 020b 64697374 		.ascii	"distancePerSecondAvg\000"
 2880      616E6365 
 2880      50657253 
 2880      65636F6E 
 2880      64417667 
 2881              	.LASF106:
 2882 0220 483A5C44 		.ascii	"H:\\Documents\\301\\Post-Benchmark\\team14\\301_lab"
 2882      6F63756D 
 2882      656E7473 
 2882      5C333031 
 2882      5C506F73 
 2883 024e 5F746173 		.ascii	"_tasks\\psoc student pack\\psoc_code_base\\CS301_Cl"
 2883      6B735C70 
 2883      736F6320 
 2883      73747564 
 2883      656E7420 
 2884 027e 6173732E 		.ascii	"ass.cydsn\000"
 2884      63796473 
 2884      6E00
 2885              	.LASF52:
 2886 0288 75736250 		.ascii	"usbPutString\000"
 2886      75745374 
 2886      72696E67 
 2886      00
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 61


 2887              	.LASF16:
 2888 0295 696E7438 		.ascii	"int8\000"
 2888      00
 2889              	.LASF60:
 2890 029a 666C6167 		.ascii	"flag_ts_update\000"
 2890      5F74735F 
 2890      75706461 
 2890      746500
 2891              	.LASF95:
 2892 02a9 64697374 		.ascii	"distanceTravelled\000"
 2892      616E6365 
 2892      54726176 
 2892      656C6C65 
 2892      6400
 2893              	.LASF28:
 2894 02bb 67305F64 		.ascii	"g0_direction\000"
 2894      69726563 
 2894      74696F6E 
 2894      00
 2895              	.LASF25:
 2896 02c8 67305F78 		.ascii	"g0_xpos\000"
 2896      706F7300 
 2897              	.LASF41:
 2898 02d0 73717561 		.ascii	"squareStr\000"
 2898      72655374 
 2898      7200
 2899              	.LASF4:
 2900 02da 6C6F6E67 		.ascii	"long int\000"
 2900      20696E74 
 2900      00
 2901              	.LASF89:
 2902 02e3 6C617374 		.ascii	"lastVeerDirection\000"
 2902      56656572 
 2902      44697265 
 2902      6374696F 
 2902      6E00
 2903              	.LASF78:
 2904 02f5 646F7473 		.ascii	"dotsTravelled\000"
 2904      54726176 
 2904      656C6C65 
 2904      6400
 2905              	.LASF62:
 2906 0303 666C6167 		.ascii	"flag_ts_display\000"
 2906      5F74735F 
 2906      64697370 
 2906      6C617900 
 2907              	.LASF63:
 2908 0313 666C6167 		.ascii	"flag_rx\000"
 2908      5F727800 
 2909              	.LASF37:
 2910 031b 4D794953 		.ascii	"MyISR\000"
 2910      5200
 2911              	.LASF50:
 2912 0321 68696768 		.ascii	"highCountRightIntersection\000"
 2912      436F756E 
 2912      74526967 
 2912      6874496E 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 62


 2912      74657273 
 2913              	.LASF30:
 2914 033c 67315F79 		.ascii	"g1_ypos\000"
 2914      706F7300 
 2915              	.LASF9:
 2916 0344 6C6F6E67 		.ascii	"long double\000"
 2916      20646F75 
 2916      626C6500 
 2917              	.LASF70:
 2918 0350 656E7472 		.ascii	"entry\000"
 2918      7900
 2919              	.LASF1:
 2920 0356 756E7369 		.ascii	"unsigned char\000"
 2920      676E6564 
 2920      20636861 
 2920      7200
 2921              	.LASF27:
 2922 0364 67305F73 		.ascii	"g0_speed\000"
 2922      70656564 
 2922      00
 2923              	.LASF49:
 2924 036d 68696768 		.ascii	"highCountRightLine\000"
 2924      436F756E 
 2924      74526967 
 2924      68744C69 
 2924      6E6500
 2925              	.LASF44:
 2926 0380 6368616E 		.ascii	"changeInDots\000"
 2926      6765496E 
 2926      446F7473 
 2926      00
 2927              	.LASF88:
 2928 038d 7475726E 		.ascii	"turningRight\000"
 2928      696E6752 
 2928      69676874 
 2928      00
 2929              	.LASF7:
 2930 039a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2930      206C6F6E 
 2930      6720756E 
 2930      7369676E 
 2930      65642069 
 2931              	.LASF8:
 2932 03b1 756E7369 		.ascii	"unsigned int\000"
 2932      676E6564 
 2932      20696E74 
 2932      00
 2933              	.LASF65:
 2934 03be 666C6167 		.ascii	"flag_KB_string\000"
 2934      5F4B425F 
 2934      73747269 
 2934      6E6700
 2935              	.LASF77:
 2936 03cd 73686F75 		.ascii	"shouldUpdate\000"
 2936      6C645570 
 2936      64617465 
 2936      00
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 63


 2937              	.LASF35:
 2938 03da 67325F73 		.ascii	"g2_speed\000"
 2938      70656564 
 2938      00
 2939              	.LASF94:
 2940 03e3 7475726E 		.ascii	"turnCount\000"
 2940      436F756E 
 2940      7400
 2941              	.LASF29:
 2942 03ed 67315F78 		.ascii	"g1_xpos\000"
 2942      706F7300 
 2943              	.LASF74:
 2944 03f5 72657374 		.ascii	"restoring\000"
 2944      6F72696E 
 2944      6700
 2945              	.LASF47:
 2946 03ff 68696768 		.ascii	"highCountMiddleLine\000"
 2946      436F756E 
 2946      744D6964 
 2946      646C654C 
 2946      696E6500 
 2947              	.LASF82:
 2948 0413 76616C75 		.ascii	"valuesMiddleLine\000"
 2948      65734D69 
 2948      64646C65 
 2948      4C696E65 
 2948      00
 2949              	.LASF107:
 2950 0424 64617461 		.ascii	"data_main\000"
 2950      5F6D6169 
 2950      6E00
 2951              	.LASF40:
 2952 042e 64697374 		.ascii	"distance\000"
 2952      616E6365 
 2952      00
 2953              	.LASF11:
 2954 0437 63686172 		.ascii	"char\000"
 2954      00
 2955              	.LASF54:
 2956 043c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2956      52784275 
 2956      66666572 
 2956      00
 2957              	.LASF22:
 2958 0449 726F626F 		.ascii	"robot_xpos\000"
 2958      745F7870 
 2958      6F7300
 2959              	.LASF13:
 2960 0454 696E7433 		.ascii	"int32_t\000"
 2960      325F7400 
 2961              	.LASF79:
 2962 045c 666C6167 		.ascii	"flag\000"
 2962      00
 2963              	.LASF36:
 2964 0461 67325F64 		.ascii	"g2_direction\000"
 2964      69726563 
 2964      74696F6E 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 64


 2964      00
 2965              	.LASF3:
 2966 046e 73686F72 		.ascii	"short unsigned int\000"
 2966      7420756E 
 2966      7369676E 
 2966      65642069 
 2966      6E7400
 2967              	.LASF14:
 2968 0481 75696E74 		.ascii	"uint8\000"
 2968      3800
 2969              	.LASF80:
 2970 0487 76616C75 		.ascii	"valuesLeftIntersection\000"
 2970      65734C65 
 2970      6674496E 
 2970      74657273 
 2970      65637469 
 2971              	.LASF68:
 2972 049e 64697370 		.ascii	"displaystring\000"
 2972      6C617973 
 2972      7472696E 
 2972      6700
 2973              	.LASF46:
 2974 04ac 68696768 		.ascii	"highCountLeftLine\000"
 2974      436F756E 
 2974      744C6566 
 2974      744C696E 
 2974      6500
 2975              	.LASF43:
 2976 04be 64697374 		.ascii	"distanceStr\000"
 2976      616E6365 
 2976      53747200 
 2977              	.LASF105:
 2978 04ca 6D61696E 		.ascii	"main.c\000"
 2978      2E6300
 2979              	.LASF5:
 2980 04d1 6C6F6E67 		.ascii	"long unsigned int\000"
 2980      20756E73 
 2980      69676E65 
 2980      6420696E 
 2980      7400
 2981              	.LASF19:
 2982 04e3 646F7562 		.ascii	"double\000"
 2982      6C6500
 2983              	.LASF66:
 2984 04ea 64617461 		.ascii	"dataready_flag\000"
 2984      72656164 
 2984      795F666C 
 2984      616700
 2985              	.LASF90:
 2986 04f9 6D6F746F 		.ascii	"motorFlag\000"
 2986      72466C61 
 2986      6700
 2987              	.LASF76:
 2988 0503 7475726E 		.ascii	"turningCount\000"
 2988      696E6743 
 2988      6F756E74 
 2988      00
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 65


 2989              	.LASF57:
 2990 0510 74735F73 		.ascii	"ts_speed\000"
 2990      70656564 
 2990      00
 2991              	.LASF86:
 2992 0519 636F756E 		.ascii	"count\000"
 2992      7400
 2993              	.LASF59:
 2994 051f 666C6167 		.ascii	"flag_ts_enc\000"
 2994      5F74735F 
 2994      656E6300 
 2995              	.LASF12:
 2996 052b 5F5F696E 		.ascii	"__int32_t\000"
 2996      7433325F 
 2996      7400
 2997              	.LASF26:
 2998 0535 67305F79 		.ascii	"g0_ypos\000"
 2998      706F7300 
 2999              	.LASF24:
 3000 053d 726F626F 		.ascii	"robot_orientation\000"
 3000      745F6F72 
 3000      69656E74 
 3000      6174696F 
 3000      6E00
 3001              	.LASF87:
 3002 054f 7475726E 		.ascii	"turningLeft\000"
 3002      696E674C 
 3002      65667400 
 3003              	.LASF55:
 3004 055b 74735F65 		.ascii	"ts_enc\000"
 3004      6E6300
 3005              	.LASF56:
 3006 0562 74735F75 		.ascii	"ts_update\000"
 3006      70646174 
 3006      6500
 3007              	.LASF100:
 3008 056c 7475726E 		.ascii	"turnState\000"
 3008      53746174 
 3008      6500
 3009              	.LASF67:
 3010 0576 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3010      5F72665F 
 3010      7472616E 
 3010      736D6973 
 3010      73696F6E 
 3011              	.LASF23:
 3012 0592 726F626F 		.ascii	"robot_ypos\000"
 3012      745F7970 
 3012      6F7300
 3013              	.LASF73:
 3014 059d 54415247 		.ascii	"TARGET_SPEED\000"
 3014      45545F53 
 3014      50454544 
 3014      00
 3015              	.LASF42:
 3016 05aa 696E7374 		.ascii	"instStr\000"
 3016      53747200 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccx5zjBd.s 			page 66


 3017              	.LASF39:
 3018 05b2 696E7374 		.ascii	"instruction\000"
 3018      72756374 
 3018      696F6E00 
 3019              	.LASF48:
 3020 05be 68696768 		.ascii	"highCountTurnComplete\000"
 3020      436F756E 
 3020      74547572 
 3020      6E436F6D 
 3020      706C6574 
 3021              	.LASF93:
 3022 05d4 6E756D52 		.ascii	"numRotationsR\000"
 3022      6F746174 
 3022      696F6E73 
 3022      5200
 3023              	.LASF91:
 3024 05e2 73746570 		.ascii	"step\000"
 3024      00
 3025              	.LASF45:
 3026 05e7 68696768 		.ascii	"highCountLeftIntersection\000"
 3026      436F756E 
 3026      744C6566 
 3026      74496E74 
 3026      65727365 
 3027              	.LASF20:
 3028 0601 72737369 		.ascii	"rssi\000"
 3028      00
 3029              	.LASF6:
 3030 0606 6C6F6E67 		.ascii	"long long int\000"
 3030      206C6F6E 
 3030      6720696E 
 3030      7400
 3031              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
