ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	consecStops
 107              		.bss
 108 0012 0000     		.align	2
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 3


 109              		.type	consecStops, %object
 110              		.size	consecStops, 4
 111              	consecStops:
 112 0014 00000000 		.space	4
 113              		.global	started
 114              		.align	2
 115              		.type	started, %object
 116              		.size	started, 4
 117              	started:
 118 0018 00000000 		.space	4
 119              		.global	instCounter
 120              		.align	2
 121              		.type	instCounter, %object
 122              		.size	instCounter, 4
 123              	instCounter:
 124 001c 00000000 		.space	4
 125              		.global	flag
 126              		.align	2
 127              		.type	flag, %object
 128              		.size	flag, 4
 129              	flag:
 130 0020 00000000 		.space	4
 131              		.comm	valuesLeftIntersection,2000,4
 132              		.comm	valuesLeftLine,2000,4
 133              		.comm	valuesMiddleLine,2000,4
 134              		.comm	valuesRightLine,2000,4
 135              		.comm	valuesRightIntersection,2000,4
 136              		.global	count
 137              		.align	2
 138              		.type	count, %object
 139              		.size	count, 4
 140              	count:
 141 0024 00000000 		.space	4
 142              		.global	motorUpdateCount
 143              		.align	2
 144              		.type	motorUpdateCount, %object
 145              		.size	motorUpdateCount, 4
 146              	motorUpdateCount:
 147 0028 00000000 		.space	4
 148              		.global	lastVeerDirection
 149              		.align	2
 150              		.type	lastVeerDirection, %object
 151              		.size	lastVeerDirection, 4
 152              	lastVeerDirection:
 153 002c 00000000 		.space	4
 154              		.comm	v1M1,4,4
 155              		.comm	v1M2,4,4
 156              		.comm	v2M1,4,4
 157              		.comm	v2M2,4,4
 158              		.global	turnComplete
 159              		.data
 160              		.align	2
 161              		.type	turnComplete, %object
 162              		.size	turnComplete, 4
 163              	turnComplete:
 164 0044 FFFFFFFF 		.word	-1
 165              		.global	pulsesTravelled
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 4


 166              		.bss
 167              		.align	2
 168              		.type	pulsesTravelled, %object
 169              		.size	pulsesTravelled, 4
 170              	pulsesTravelled:
 171 0030 00000000 		.space	4
 172              		.global	checkDistance
 173              		.align	2
 174              		.type	checkDistance, %object
 175              		.size	checkDistance, 4
 176              	checkDistance:
 177 0034 00000000 		.space	4
 178              		.global	step
 179              		.align	2
 180              		.type	step, %object
 181              		.size	step, 4
 182              	step:
 183 0038 00000000 		.space	4
 184              		.global	interruptFlag
 185              		.align	2
 186              		.type	interruptFlag, %object
 187              		.size	interruptFlag, 4
 188              	interruptFlag:
 189 003c 00000000 		.space	4
 190              		.global	lastAdjustDirection
 191              		.align	2
 192              		.type	lastAdjustDirection, %object
 193              		.size	lastAdjustDirection, 4
 194              	lastAdjustDirection:
 195 0040 00000000 		.space	4
 196              		.comm	squares,1000,4
 197              		.comm	instruction,500,4
 198              		.comm	distance,500,4
 199              		.section	.text.eoc,"ax",%progbits
 200              		.align	2
 201              		.global	eoc
 202              		.thumb
 203              		.thumb_func
 204              		.type	eoc, %function
 205              	eoc:
 206              	.LFB64:
 207              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 5


  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** 
  30:main.c        **** #include "pathfind.h"
  31:main.c        **** 
  32:main.c        **** #include "vars.h"
  33:main.c        **** 
  34:main.c        **** #define ADC_COUNT 500
  35:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 75
  36:main.c        **** #define R_INT_BLACK highCountRightIntersection < 75
  37:main.c        **** #define L_LINE_BLACK highCountLeftLine < 75
  38:main.c        **** #define R_LINE_BLACK highCountRightLine < 75
  39:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 75
  40:main.c        **** #define TC_BLACK highCountTurnComplete < 75
  41:main.c        **** 
  42:main.c        **** int consecStops = 0;
  43:main.c        **** int started = 0;
  44:main.c        **** int instCounter = 0;
  45:main.c        **** //* ========================================
  46:main.c        **** void usbPutString(char * s);
  47:main.c        **** void usbPutChar(char c);
  48:main.c        **** //* ========================================
  49:main.c        **** 
  50:main.c        **** volatile int flag = 0;
  51:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  52:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  53:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  54:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  55:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  56:main.c        **** volatile int count = 0;
  57:main.c        **** volatile int motorUpdateCount = 0;
  58:main.c        **** volatile int lastVeerDirection = 0;
  59:main.c        **** 
  60:main.c        **** volatile int v1M1;
  61:main.c        **** volatile int v1M2;
  62:main.c        **** volatile int v2M1;
  63:main.c        **** volatile int v2M2;
  64:main.c        **** volatile int turnComplete = -1;
  65:main.c        **** int pulsesTravelled = 0;
  66:main.c        **** volatile int checkDistance = 0;
  67:main.c        **** volatile int step = 0;
  68:main.c        **** volatile int interruptFlag = 0;
  69:main.c        **** 
  70:main.c        **** int lastAdjustDirection = 0;
  71:main.c        **** unsigned char squares[500][2];
  72:main.c        **** unsigned char instruction[500];
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 6


  73:main.c        **** unsigned char distance[500];
  74:main.c        **** 
  75:main.c        **** CY_ISR(eoc) {
 208              		.loc 1 75 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213 0000 80B4     		push	{r7}
 214              		.cfi_def_cfa_offset 4
 215              		.cfi_offset 7, -4
 216 0002 00AF     		add	r7, sp, #0
 217              		.cfi_def_cfa_register 7
  76:main.c        ****     flag = 1;
 218              		.loc 1 76 0
 219 0004 034B     		ldr	r3, .L2
 220 0006 0122     		movs	r2, #1
 221 0008 1A60     		str	r2, [r3]
  77:main.c        **** }
 222              		.loc 1 77 0
 223 000a 00BF     		nop
 224 000c BD46     		mov	sp, r7
 225              		.cfi_def_cfa_register 13
 226              		@ sp needed
 227 000e 80BC     		pop	{r7}
 228              		.cfi_restore 7
 229              		.cfi_def_cfa_offset 0
 230 0010 7047     		bx	lr
 231              	.L3:
 232 0012 00BF     		.align	2
 233              	.L2:
 234 0014 00000000 		.word	flag
 235              		.cfi_endproc
 236              	.LFE64:
 237              		.size	eoc, .-eoc
 238              		.global	__aeabi_i2d
 239              		.global	__aeabi_dmul
 240              		.global	__aeabi_dcmpgt
 241              		.section	.rodata
 242              		.align	2
 243              	.LC0:
 244 0000 00000000 		.word	0
 245 0004 3E000000 		.word	62
 246 0008 7B000000 		.word	123
 247 000c B8000000 		.word	184
 248 0010 F5000000 		.word	245
 249 0014 31010000 		.word	305
 250 0018 6F010000 		.word	367
 251 001c AD010000 		.word	429
 252 0020 E9010000 		.word	489
 253 0024 26020000 		.word	550
 254              		.section	.text.main,"ax",%progbits
 255              		.align	2
 256              		.global	main
 257              		.thumb
 258              		.thumb_func
 259              		.type	main, %function
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 7


 260              	main:
 261              	.LFB65:
  78:main.c        **** 
  79:main.c        **** int main() {
 262              		.loc 1 79 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 304
 265              		@ frame_needed = 1, uses_anonymous_args = 0
 266 0000 B0B5     		push	{r4, r5, r7, lr}
 267              		.cfi_def_cfa_offset 16
 268              		.cfi_offset 4, -16
 269              		.cfi_offset 5, -12
 270              		.cfi_offset 7, -8
 271              		.cfi_offset 14, -4
 272 0002 CCB0     		sub	sp, sp, #304
 273              		.cfi_def_cfa_offset 320
 274 0004 00AF     		add	r7, sp, #0
 275              		.cfi_def_cfa_register 7
  80:main.c        ****     CYGlobalIntEnable;
 276              		.loc 1 80 0
 277              		.syntax unified
 278              	@ 80 "main.c" 1
 279 0006 62B6     		CPSIE   i
 280              	@ 0 "" 2
  81:main.c        ****     USBUART_Start(0, USBUART_5V_OPERATION);
 281              		.loc 1 81 0
 282              		.thumb
 283              		.syntax unified
 284 0008 0121     		movs	r1, #1
 285 000a 0020     		movs	r0, #0
 286 000c FFF7FEFF 		bl	USBUART_Start
  82:main.c        ****     //UART_Start();
  83:main.c        **** 
  84:main.c        ****     QuadDec_M1_Start();
 287              		.loc 1 84 0
 288 0010 FFF7FEFF 		bl	QuadDec_M1_Start
  85:main.c        ****     QuadDec_M2_Start();
 289              		.loc 1 85 0
 290 0014 FFF7FEFF 		bl	QuadDec_M2_Start
  86:main.c        **** 
  87:main.c        ****     //isr_TS_StartEx(MyISR);
  88:main.c        **** 
  89:main.c        ****     RF_BT_SELECT_Write(1);
 291              		.loc 1 89 0
 292 0018 0120     		movs	r0, #1
 293 001a FFF7FEFF 		bl	RF_BT_SELECT_Write
  90:main.c        ****     //ADC1_IRQ_Enable();
  91:main.c        ****     ADC1_Start();
 294              		.loc 1 91 0
 295 001e FFF7FEFF 		bl	ADC1_Start
  92:main.c        **** 
  93:main.c        ****     ADC1_StartConvert();
 296              		.loc 1 93 0
 297 0022 FFF7FEFF 		bl	ADC1_StartConvert
  94:main.c        **** 
  95:main.c        ****     eoc_StartEx(eoc);
 298              		.loc 1 95 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 8


 299 0026 C248     		ldr	r0, .L66
 300 0028 FFF7FEFF 		bl	eoc_StartEx
  96:main.c        **** 
  97:main.c        ****     initMotors();
 301              		.loc 1 97 0
 302 002c FFF7FEFF 		bl	initMotors
  98:main.c        **** 
  99:main.c        ****     stop();
 303              		.loc 1 99 0
 304 0030 FFF7FEFF 		bl	stop
 305              	.LBB2:
 100:main.c        ****     //isr_TS_StartEx(MyISR);
 101:main.c        ****     //Timer_TS_Start();
 102:main.c        **** 
 103:main.c        ****     // Loop through the arrays and set each element to 55 or 0
 104:main.c        ****     for (int i = 0; i < 500; i++) {
 306              		.loc 1 104 0
 307 0034 0023     		movs	r3, #0
 308 0036 C7F82C31 		str	r3, [r7, #300]
 309 003a 23E0     		b	.L5
 310              	.L6:
 105:main.c        ****         squares[i][0] = 55;
 311              		.loc 1 105 0 discriminator 3
 312 003c BD4A     		ldr	r2, .L66+4
 313 003e D7F82C31 		ldr	r3, [r7, #300]
 314 0042 3721     		movs	r1, #55
 315 0044 02F81310 		strb	r1, [r2, r3, lsl #1]
 106:main.c        ****         squares[i][1] = 55;
 316              		.loc 1 106 0 discriminator 3
 317 0048 BA4A     		ldr	r2, .L66+4
 318 004a D7F82C31 		ldr	r3, [r7, #300]
 319 004e 5B00     		lsls	r3, r3, #1
 320 0050 1344     		add	r3, r3, r2
 321 0052 3722     		movs	r2, #55
 322 0054 5A70     		strb	r2, [r3, #1]
 107:main.c        ****         instruction[i] = 0;
 323              		.loc 1 107 0 discriminator 3
 324 0056 B84A     		ldr	r2, .L66+8
 325 0058 D7F82C31 		ldr	r3, [r7, #300]
 326 005c 1344     		add	r3, r3, r2
 327 005e 0022     		movs	r2, #0
 328 0060 1A70     		strb	r2, [r3]
 108:main.c        ****         distance[i] = 0;
 329              		.loc 1 108 0 discriminator 3
 330 0062 B64A     		ldr	r2, .L66+12
 331 0064 D7F82C31 		ldr	r3, [r7, #300]
 332 0068 1344     		add	r3, r3, r2
 333 006a 0022     		movs	r2, #0
 334 006c 1A70     		strb	r2, [r3]
 109:main.c        ****         distance[i] = 55;
 335              		.loc 1 109 0 discriminator 3
 336 006e B34A     		ldr	r2, .L66+12
 337 0070 D7F82C31 		ldr	r3, [r7, #300]
 338 0074 1344     		add	r3, r3, r2
 339 0076 3722     		movs	r2, #55
 340 0078 1A70     		strb	r2, [r3]
 104:main.c        ****         squares[i][0] = 55;
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 9


 341              		.loc 1 104 0 discriminator 3
 342 007a D7F82C31 		ldr	r3, [r7, #300]
 343 007e 0133     		adds	r3, r3, #1
 344 0080 C7F82C31 		str	r3, [r7, #300]
 345              	.L5:
 104:main.c        ****         squares[i][0] = 55;
 346              		.loc 1 104 0 is_stmt 0 discriminator 1
 347 0084 D7F82C31 		ldr	r3, [r7, #300]
 348 0088 B3F5FA7F 		cmp	r3, #500
 349 008c D6DB     		blt	.L6
 350              	.LBE2:
 110:main.c        ****     }
 111:main.c        ****     pathfind(instruction, distance, squares);
 351              		.loc 1 111 0 is_stmt 1
 352 008e A94A     		ldr	r2, .L66+4
 353 0090 AA49     		ldr	r1, .L66+12
 354 0092 A948     		ldr	r0, .L66+8
 355 0094 FFF7FEFF 		bl	pathfind
 356              	.L65:
 112:main.c        **** 
 113:main.c        ****     //CyDelay(2000);
 114:main.c        ****     for (;;) {
 115:main.c        **** 
 116:main.c        ****         if (flag == 1) {
 357              		.loc 1 116 0
 358 0098 A94B     		ldr	r3, .L66+16
 359 009a 1B68     		ldr	r3, [r3]
 360 009c 012B     		cmp	r3, #1
 361 009e FBD1     		bne	.L65
 117:main.c        **** 
 118:main.c        ****             ADC1_IRQ_Disable();
 362              		.loc 1 118 0
 363 00a0 FFF7FEFF 		bl	ADC1_IRQ_Disable
 119:main.c        ****             valuesLeftIntersection[count] = ADC1_GetResult16(0);
 364              		.loc 1 119 0
 365 00a4 A74B     		ldr	r3, .L66+20
 366 00a6 1C68     		ldr	r4, [r3]
 367 00a8 0020     		movs	r0, #0
 368 00aa FFF7FEFF 		bl	ADC1_GetResult16
 369 00ae 0346     		mov	r3, r0
 370 00b0 1A46     		mov	r2, r3
 371 00b2 A54B     		ldr	r3, .L66+24
 372 00b4 43F82420 		str	r2, [r3, r4, lsl #2]
 120:main.c        ****             valuesLeftLine[count] = ADC1_GetResult16(1);
 373              		.loc 1 120 0
 374 00b8 A24B     		ldr	r3, .L66+20
 375 00ba 1C68     		ldr	r4, [r3]
 376 00bc 0120     		movs	r0, #1
 377 00be FFF7FEFF 		bl	ADC1_GetResult16
 378 00c2 0346     		mov	r3, r0
 379 00c4 1A46     		mov	r2, r3
 380 00c6 A14B     		ldr	r3, .L66+28
 381 00c8 43F82420 		str	r2, [r3, r4, lsl #2]
 121:main.c        ****             valuesMiddleLine[count] = ADC1_GetResult16(2);
 382              		.loc 1 121 0
 383 00cc 9D4B     		ldr	r3, .L66+20
 384 00ce 1C68     		ldr	r4, [r3]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 10


 385 00d0 0220     		movs	r0, #2
 386 00d2 FFF7FEFF 		bl	ADC1_GetResult16
 387 00d6 0346     		mov	r3, r0
 388 00d8 1A46     		mov	r2, r3
 389 00da 9D4B     		ldr	r3, .L66+32
 390 00dc 43F82420 		str	r2, [r3, r4, lsl #2]
 122:main.c        ****             valuesRightLine[count] = ADC1_GetResult16(3);
 391              		.loc 1 122 0
 392 00e0 984B     		ldr	r3, .L66+20
 393 00e2 1C68     		ldr	r4, [r3]
 394 00e4 0320     		movs	r0, #3
 395 00e6 FFF7FEFF 		bl	ADC1_GetResult16
 396 00ea 0346     		mov	r3, r0
 397 00ec 1A46     		mov	r2, r3
 398 00ee 994B     		ldr	r3, .L66+36
 399 00f0 43F82420 		str	r2, [r3, r4, lsl #2]
 123:main.c        ****             valuesRightIntersection[count] = ADC1_GetResult16(4);
 400              		.loc 1 123 0
 401 00f4 934B     		ldr	r3, .L66+20
 402 00f6 1C68     		ldr	r4, [r3]
 403 00f8 0420     		movs	r0, #4
 404 00fa FFF7FEFF 		bl	ADC1_GetResult16
 405 00fe 0346     		mov	r3, r0
 406 0100 1A46     		mov	r2, r3
 407 0102 954B     		ldr	r3, .L66+40
 408 0104 43F82420 		str	r2, [r3, r4, lsl #2]
 124:main.c        **** 
 125:main.c        ****             count++;
 409              		.loc 1 125 0
 410 0108 8E4B     		ldr	r3, .L66+20
 411 010a 1B68     		ldr	r3, [r3]
 412 010c 0133     		adds	r3, r3, #1
 413 010e 8D4A     		ldr	r2, .L66+20
 414 0110 1360     		str	r3, [r2]
 126:main.c        ****             if (count == ADC_COUNT) {
 415              		.loc 1 126 0
 416 0112 8C4B     		ldr	r3, .L66+20
 417 0114 1B68     		ldr	r3, [r3]
 418 0116 B3F5FA7F 		cmp	r3, #500
 419 011a 40F08E83 		bne	.L8
 420              	.LBB3:
 127:main.c        **** 
 128:main.c        ****                 count = 0;
 421              		.loc 1 128 0
 422 011e 894B     		ldr	r3, .L66+20
 423 0120 0022     		movs	r2, #0
 424 0122 1A60     		str	r2, [r3]
 129:main.c        ****                 motorUpdateCount++;
 425              		.loc 1 129 0
 426 0124 8D4B     		ldr	r3, .L66+44
 427 0126 1B68     		ldr	r3, [r3]
 428 0128 0133     		adds	r3, r3, #1
 429 012a 8C4A     		ldr	r2, .L66+44
 430 012c 1360     		str	r3, [r2]
 130:main.c        ****                 int highCountLeftIntersection = 0;
 431              		.loc 1 130 0
 432 012e 0023     		movs	r3, #0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 11


 433 0130 C7F82831 		str	r3, [r7, #296]
 131:main.c        ****                 int highCountLeftLine = 0;
 434              		.loc 1 131 0
 435 0134 0023     		movs	r3, #0
 436 0136 C7F82431 		str	r3, [r7, #292]
 132:main.c        ****                 int highCountMiddleLine = 0;
 437              		.loc 1 132 0
 438 013a 0023     		movs	r3, #0
 439 013c C7F82031 		str	r3, [r7, #288]
 133:main.c        ****                 int highCountTurnComplete = 0;
 440              		.loc 1 133 0
 441 0140 0023     		movs	r3, #0
 442 0142 C7F80431 		str	r3, [r7, #260]
 134:main.c        ****                 int highCountRightLine = 0;
 443              		.loc 1 134 0
 444 0146 0023     		movs	r3, #0
 445 0148 C7F81C31 		str	r3, [r7, #284]
 135:main.c        ****                 int highCountRightIntersection = 0;
 446              		.loc 1 135 0
 447 014c 0023     		movs	r3, #0
 448 014e C7F81831 		str	r3, [r7, #280]
 449              	.LBB4:
 136:main.c        ****                 for (int i = 0; i < ADC_COUNT; i++) {
 450              		.loc 1 136 0
 451 0152 0023     		movs	r3, #0
 452 0154 C7F81431 		str	r3, [r7, #276]
 453 0158 8AE0     		b	.L9
 454              	.L18:
 455              	.LBB5:
 137:main.c        ****                     step = 0;
 456              		.loc 1 137 0
 457 015a 814B     		ldr	r3, .L66+48
 458 015c 0022     		movs	r2, #0
 459 015e 1A60     		str	r2, [r3]
 138:main.c        ****                     char result1[24];
 139:main.c        ****                     char result2[24];
 140:main.c        ****                     if (motorUpdateCount == 1) {
 460              		.loc 1 140 0
 461 0160 7E4B     		ldr	r3, .L66+44
 462 0162 1B68     		ldr	r3, [r3]
 463 0164 012B     		cmp	r3, #1
 464 0166 3DD1     		bne	.L10
 141:main.c        ****                         if (turnComplete == -1 || turnComplete == 1) {
 465              		.loc 1 141 0
 466 0168 7E4B     		ldr	r3, .L66+52
 467 016a 1B68     		ldr	r3, [r3]
 468 016c B3F1FF3F 		cmp	r3, #-1
 469 0170 03D0     		beq	.L11
 470              		.loc 1 141 0 is_stmt 0 discriminator 1
 471 0172 7C4B     		ldr	r3, .L66+52
 472 0174 1B68     		ldr	r3, [r3]
 473 0176 012B     		cmp	r3, #1
 474 0178 2BD1     		bne	.L12
 475              	.L11:
 142:main.c        ****                             v2M1 = QuadDec_M1_GetCounter() * -1;
 476              		.loc 1 142 0 is_stmt 1
 477 017a FFF7FEFF 		bl	QuadDec_M1_GetCounter
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 12


 478 017e 0346     		mov	r3, r0
 479 0180 5B42     		negs	r3, r3
 480 0182 794A     		ldr	r2, .L66+56
 481 0184 1360     		str	r3, [r2]
 143:main.c        ****                             v2M2 = QuadDec_M2_GetCounter() * -1;
 482              		.loc 1 143 0
 483 0186 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 484 018a 0346     		mov	r3, r0
 485 018c 5B42     		negs	r3, r3
 486 018e 774A     		ldr	r2, .L66+60
 487 0190 1360     		str	r3, [r2]
 144:main.c        ****                             pulsesTravelled = pulsesTravelled + v2M1 + v2M2;
 488              		.loc 1 144 0
 489 0192 774B     		ldr	r3, .L66+64
 490 0194 1A68     		ldr	r2, [r3]
 491 0196 744B     		ldr	r3, .L66+56
 492 0198 1B68     		ldr	r3, [r3]
 493 019a 1A44     		add	r2, r2, r3
 494 019c 734B     		ldr	r3, .L66+60
 495 019e 1B68     		ldr	r3, [r3]
 496 01a0 1344     		add	r3, r3, r2
 497 01a2 734A     		ldr	r2, .L66+64
 498 01a4 1360     		str	r3, [r2]
 145:main.c        ****                             itoa((v2M1 - v1M1), result1, 10);
 499              		.loc 1 145 0
 500 01a6 704B     		ldr	r3, .L66+56
 501 01a8 1A68     		ldr	r2, [r3]
 502 01aa 724B     		ldr	r3, .L66+68
 503 01ac 1B68     		ldr	r3, [r3]
 504 01ae D31A     		subs	r3, r2, r3
 505 01b0 07F1E801 		add	r1, r7, #232
 506 01b4 0A22     		movs	r2, #10
 507 01b6 1846     		mov	r0, r3
 508 01b8 FFF7FEFF 		bl	itoa
 146:main.c        ****                             itoa((v2M2 - v1M2), result2, 10);
 509              		.loc 1 146 0
 510 01bc 6B4B     		ldr	r3, .L66+60
 511 01be 1A68     		ldr	r2, [r3]
 512 01c0 6D4B     		ldr	r3, .L66+72
 513 01c2 1B68     		ldr	r3, [r3]
 514 01c4 D31A     		subs	r3, r2, r3
 515 01c6 07F1D001 		add	r1, r7, #208
 516 01ca 0A22     		movs	r2, #10
 517 01cc 1846     		mov	r0, r3
 518 01ce FFF7FEFF 		bl	itoa
 519              	.L12:
 147:main.c        ****                         }
 148:main.c        ****                         QuadDec_M1_SetCounter(0);
 520              		.loc 1 148 0
 521 01d2 0020     		movs	r0, #0
 522 01d4 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 149:main.c        ****                         QuadDec_M2_SetCounter(0);
 523              		.loc 1 149 0
 524 01d8 0020     		movs	r0, #0
 525 01da FFF7FEFF 		bl	QuadDec_M2_SetCounter
 150:main.c        ****                         motorUpdateCount = 0;
 526              		.loc 1 150 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 13


 527 01de 5F4B     		ldr	r3, .L66+44
 528 01e0 0022     		movs	r2, #0
 529 01e2 1A60     		str	r2, [r3]
 530              	.L10:
 151:main.c        ****                     }
 152:main.c        ****                     if (valuesLeftIntersection[i] > 2000) {
 531              		.loc 1 152 0
 532 01e4 584A     		ldr	r2, .L66+24
 533 01e6 D7F81431 		ldr	r3, [r7, #276]
 534 01ea 52F82330 		ldr	r3, [r2, r3, lsl #2]
 535 01ee B3F5FA6F 		cmp	r3, #2000
 536 01f2 04DD     		ble	.L13
 153:main.c        ****                         highCountLeftIntersection++;
 537              		.loc 1 153 0
 538 01f4 D7F82831 		ldr	r3, [r7, #296]
 539 01f8 0133     		adds	r3, r3, #1
 540 01fa C7F82831 		str	r3, [r7, #296]
 541              	.L13:
 154:main.c        **** 
 155:main.c        ****                     }
 156:main.c        **** 
 157:main.c        ****                     if (valuesLeftLine[i] > 2000) {
 542              		.loc 1 157 0
 543 01fe 534A     		ldr	r2, .L66+28
 544 0200 D7F81431 		ldr	r3, [r7, #276]
 545 0204 52F82330 		ldr	r3, [r2, r3, lsl #2]
 546 0208 B3F5FA6F 		cmp	r3, #2000
 547 020c 04DD     		ble	.L14
 158:main.c        ****                         highCountLeftLine++;
 548              		.loc 1 158 0
 549 020e D7F82431 		ldr	r3, [r7, #292]
 550 0212 0133     		adds	r3, r3, #1
 551 0214 C7F82431 		str	r3, [r7, #292]
 552              	.L14:
 159:main.c        **** 
 160:main.c        ****                     }
 161:main.c        **** 
 162:main.c        ****                     if (valuesMiddleLine[i] > 2000) {
 553              		.loc 1 162 0
 554 0218 4D4A     		ldr	r2, .L66+32
 555 021a D7F81431 		ldr	r3, [r7, #276]
 556 021e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 557 0222 B3F5FA6F 		cmp	r3, #2000
 558 0226 04DD     		ble	.L15
 163:main.c        ****                         highCountMiddleLine++;
 559              		.loc 1 163 0
 560 0228 D7F82031 		ldr	r3, [r7, #288]
 561 022c 0133     		adds	r3, r3, #1
 562 022e C7F82031 		str	r3, [r7, #288]
 563              	.L15:
 164:main.c        **** 
 165:main.c        ****                     }
 166:main.c        **** 
 167:main.c        ****                     if (valuesRightLine[i] > 2000) {
 564              		.loc 1 167 0
 565 0232 484A     		ldr	r2, .L66+36
 566 0234 D7F81431 		ldr	r3, [r7, #276]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 14


 567 0238 52F82330 		ldr	r3, [r2, r3, lsl #2]
 568 023c B3F5FA6F 		cmp	r3, #2000
 569 0240 04DD     		ble	.L16
 168:main.c        ****                         highCountRightLine++;
 570              		.loc 1 168 0
 571 0242 D7F81C31 		ldr	r3, [r7, #284]
 572 0246 0133     		adds	r3, r3, #1
 573 0248 C7F81C31 		str	r3, [r7, #284]
 574              	.L16:
 169:main.c        **** 
 170:main.c        ****                     }
 171:main.c        **** 
 172:main.c        ****                     if (valuesRightIntersection[i] > 2000) {
 575              		.loc 1 172 0
 576 024c 424A     		ldr	r2, .L66+40
 577 024e D7F81431 		ldr	r3, [r7, #276]
 578 0252 52F82330 		ldr	r3, [r2, r3, lsl #2]
 579 0256 B3F5FA6F 		cmp	r3, #2000
 580 025a 04DD     		ble	.L17
 173:main.c        ****                         highCountRightIntersection++;
 581              		.loc 1 173 0
 582 025c D7F81831 		ldr	r3, [r7, #280]
 583 0260 0133     		adds	r3, r3, #1
 584 0262 C7F81831 		str	r3, [r7, #280]
 585              	.L17:
 586              	.LBE5:
 136:main.c        ****                     step = 0;
 587              		.loc 1 136 0 discriminator 2
 588 0266 D7F81431 		ldr	r3, [r7, #276]
 589 026a 0133     		adds	r3, r3, #1
 590 026c C7F81431 		str	r3, [r7, #276]
 591              	.L9:
 136:main.c        ****                     step = 0;
 592              		.loc 1 136 0 is_stmt 0 discriminator 1
 593 0270 D7F81431 		ldr	r3, [r7, #276]
 594 0274 B3F5FA7F 		cmp	r3, #500
 595 0278 FFF66FAF 		blt	.L18
 596              	.LBE4:
 174:main.c        **** 
 175:main.c        ****                     }
 176:main.c        **** 
 177:main.c        ****                 }
 178:main.c        **** 
 179:main.c        ****                 if (started == 0) {
 597              		.loc 1 179 0 is_stmt 1
 598 027c 3F4B     		ldr	r3, .L66+76
 599 027e 1B68     		ldr	r3, [r3]
 600 0280 002B     		cmp	r3, #0
 601 0282 40F0AC80 		bne	.L19
 602              	.LBB6:
 180:main.c        ****                    
 181:main.c        ****                     int i, firstNonZeroIndex = -1;
 603              		.loc 1 181 0
 604 0286 4FF0FF33 		mov	r3, #-1
 605 028a C7F80C31 		str	r3, [r7, #268]
 182:main.c        ****                     for (i = 0; i < 500; i++) {
 606              		.loc 1 182 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 15


 607 028e 0023     		movs	r3, #0
 608 0290 C7F81031 		str	r3, [r7, #272]
 609 0294 10E0     		b	.L20
 610              	.L23:
 183:main.c        ****                         if (instruction[i] != 0) {
 611              		.loc 1 183 0
 612 0296 284A     		ldr	r2, .L66+8
 613 0298 D7F81031 		ldr	r3, [r7, #272]
 614 029c 1344     		add	r3, r3, r2
 615 029e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 616 02a0 002B     		cmp	r3, #0
 617 02a2 04D0     		beq	.L21
 184:main.c        ****                             firstNonZeroIndex = i;
 618              		.loc 1 184 0
 619 02a4 D7F81031 		ldr	r3, [r7, #272]
 620 02a8 C7F80C31 		str	r3, [r7, #268]
 185:main.c        ****                             break;
 621              		.loc 1 185 0
 622 02ac 09E0     		b	.L22
 623              	.L21:
 182:main.c        ****                         if (instruction[i] != 0) {
 624              		.loc 1 182 0 discriminator 2
 625 02ae D7F81031 		ldr	r3, [r7, #272]
 626 02b2 0133     		adds	r3, r3, #1
 627 02b4 C7F81031 		str	r3, [r7, #272]
 628              	.L20:
 182:main.c        ****                         if (instruction[i] != 0) {
 629              		.loc 1 182 0 is_stmt 0 discriminator 1
 630 02b8 D7F81031 		ldr	r3, [r7, #272]
 631 02bc B3F5FA7F 		cmp	r3, #500
 632 02c0 E9DB     		blt	.L23
 633              	.L22:
 186:main.c        ****                         }
 187:main.c        ****                     }
 188:main.c        **** 
 189:main.c        ****                     if (firstNonZeroIndex != -1) {
 634              		.loc 1 189 0 is_stmt 1
 635 02c2 D7F80C31 		ldr	r3, [r7, #268]
 636 02c6 B3F1FF3F 		cmp	r3, #-1
 637 02ca 6FD0     		beq	.L24
 190:main.c        ****                         // Shift the array to start with the first non-zero element
 191:main.c        ****                         for (i = 0; i < 500 - firstNonZeroIndex; i++) {
 638              		.loc 1 191 0
 639 02cc 0023     		movs	r3, #0
 640 02ce C7F81031 		str	r3, [r7, #272]
 641 02d2 1EE0     		b	.L25
 642              	.L26:
 192:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 643              		.loc 1 192 0 discriminator 3
 644 02d4 D7F81021 		ldr	r2, [r7, #272]
 645 02d8 D7F80C31 		ldr	r3, [r7, #268]
 646 02dc 1344     		add	r3, r3, r2
 647 02de 164A     		ldr	r2, .L66+8
 648 02e0 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 649 02e2 154A     		ldr	r2, .L66+8
 650 02e4 D7F81031 		ldr	r3, [r7, #272]
 651 02e8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 16


 652 02ea 0A46     		mov	r2, r1
 653 02ec 1A70     		strb	r2, [r3]
 193:main.c        ****                             distance[i] = distance[i + firstNonZeroIndex];
 654              		.loc 1 193 0 discriminator 3
 655 02ee D7F81021 		ldr	r2, [r7, #272]
 656 02f2 D7F80C31 		ldr	r3, [r7, #268]
 657 02f6 1344     		add	r3, r3, r2
 658 02f8 104A     		ldr	r2, .L66+12
 659 02fa D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 660 02fc 0F4A     		ldr	r2, .L66+12
 661 02fe D7F81031 		ldr	r3, [r7, #272]
 662 0302 1344     		add	r3, r3, r2
 663 0304 0A46     		mov	r2, r1
 664 0306 1A70     		strb	r2, [r3]
 191:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 665              		.loc 1 191 0 discriminator 3
 666 0308 D7F81031 		ldr	r3, [r7, #272]
 667 030c 0133     		adds	r3, r3, #1
 668 030e C7F81031 		str	r3, [r7, #272]
 669              	.L25:
 191:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 670              		.loc 1 191 0 is_stmt 0 discriminator 1
 671 0312 D7F80C31 		ldr	r3, [r7, #268]
 672 0316 C3F5FA72 		rsb	r2, r3, #500
 673 031a D7F81031 		ldr	r3, [r7, #272]
 674 031e 9A42     		cmp	r2, r3
 675 0320 D8DC     		bgt	.L26
 194:main.c        ****                         }
 195:main.c        **** 
 196:main.c        ****                         // Zero out the remaining elements
 197:main.c        ****                         for (i = 500 - firstNonZeroIndex; i < 500; i++) {
 676              		.loc 1 197 0 is_stmt 1
 677 0322 D7F80C31 		ldr	r3, [r7, #268]
 678 0326 C3F5FA73 		rsb	r3, r3, #500
 679 032a C7F81031 		str	r3, [r7, #272]
 680 032e 38E0     		b	.L27
 681              	.L67:
 682              		.align	2
 683              	.L66:
 684 0330 00000000 		.word	eoc
 685 0334 00000000 		.word	squares
 686 0338 00000000 		.word	instruction
 687 033c 00000000 		.word	distance
 688 0340 00000000 		.word	flag
 689 0344 00000000 		.word	count
 690 0348 00000000 		.word	valuesLeftIntersection
 691 034c 00000000 		.word	valuesLeftLine
 692 0350 00000000 		.word	valuesMiddleLine
 693 0354 00000000 		.word	valuesRightLine
 694 0358 00000000 		.word	valuesRightIntersection
 695 035c 00000000 		.word	motorUpdateCount
 696 0360 00000000 		.word	step
 697 0364 00000000 		.word	turnComplete
 698 0368 00000000 		.word	v2M1
 699 036c 00000000 		.word	v2M2
 700 0370 00000000 		.word	pulsesTravelled
 701 0374 00000000 		.word	v1M1
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 17


 702 0378 00000000 		.word	v1M2
 703 037c 00000000 		.word	started
 704              	.L28:
 198:main.c        ****                             instruction[i] = 0;
 705              		.loc 1 198 0 discriminator 3
 706 0380 BD4A     		ldr	r2, .L68
 707 0382 D7F81031 		ldr	r3, [r7, #272]
 708 0386 1344     		add	r3, r3, r2
 709 0388 0022     		movs	r2, #0
 710 038a 1A70     		strb	r2, [r3]
 199:main.c        ****                             distance[i] = 0;
 711              		.loc 1 199 0 discriminator 3
 712 038c BB4A     		ldr	r2, .L68+4
 713 038e D7F81031 		ldr	r3, [r7, #272]
 714 0392 1344     		add	r3, r3, r2
 715 0394 0022     		movs	r2, #0
 716 0396 1A70     		strb	r2, [r3]
 197:main.c        ****                             instruction[i] = 0;
 717              		.loc 1 197 0 discriminator 3
 718 0398 D7F81031 		ldr	r3, [r7, #272]
 719 039c 0133     		adds	r3, r3, #1
 720 039e C7F81031 		str	r3, [r7, #272]
 721              	.L27:
 197:main.c        ****                             instruction[i] = 0;
 722              		.loc 1 197 0 is_stmt 0 discriminator 1
 723 03a2 D7F81031 		ldr	r3, [r7, #272]
 724 03a6 B3F5FA7F 		cmp	r3, #500
 725 03aa E9DB     		blt	.L28
 726              	.L24:
 727              	.LBB7:
 200:main.c        ****                         }
 201:main.c        **** 
 202:main.c        ****                     } else {
 203:main.c        ****                         // The array contains all zeros
 204:main.c        **** 
 205:main.c        ****                     }
 206:main.c        ****                     for (int i = 0; i < 500; i++) {
 728              		.loc 1 206 0 is_stmt 1
 729 03ac 0023     		movs	r3, #0
 730 03ae C7F80831 		str	r3, [r7, #264]
 731 03b2 04E0     		b	.L29
 732              	.L30:
 733              		.loc 1 206 0 is_stmt 0 discriminator 3
 734 03b4 D7F80831 		ldr	r3, [r7, #264]
 735 03b8 0133     		adds	r3, r3, #1
 736 03ba C7F80831 		str	r3, [r7, #264]
 737              	.L29:
 738              		.loc 1 206 0 discriminator 1
 739 03be D7F80831 		ldr	r3, [r7, #264]
 740 03c2 B3F5FA7F 		cmp	r3, #500
 741 03c6 F5DB     		blt	.L30
 742              	.LBE7:
 207:main.c        **** 
 208:main.c        ****                         char instStr[24];
 209:main.c        **** 
 210:main.c        ****                         //snprintf(instStr, sizeof(instStr), "%u - %u \r\n", (unsigned char) instru
 211:main.c        **** 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 18


 212:main.c        ****                         //usbPutString(instStr);
 213:main.c        ****                     }
 214:main.c        ****                     started = 1;
 743              		.loc 1 214 0 is_stmt 1
 744 03c8 AD4B     		ldr	r3, .L68+8
 745 03ca 0122     		movs	r2, #1
 746 03cc 1A60     		str	r2, [r3]
 215:main.c        ****                     turnComplete = -1; //let the robot travel forward first
 747              		.loc 1 215 0
 748 03ce AD4B     		ldr	r3, .L68+12
 749 03d0 4FF0FF32 		mov	r2, #-1
 750 03d4 1A60     		str	r2, [r3]
 216:main.c        ****                     checkDistance = 0; //robot checks/stops distance when this is on
 751              		.loc 1 216 0
 752 03d6 AC4B     		ldr	r3, .L68+16
 753 03d8 0022     		movs	r2, #0
 754 03da 1A60     		str	r2, [r3]
 755              	.LBE6:
 756 03dc 2DE2     		b	.L8
 757              	.L19:
 758              	.LBB8:
 217:main.c        ****                     
 218:main.c        ****                 } else {
 219:main.c        ****                     LED_PIN_1_Write(!LED_PIN_1_Read());
 759              		.loc 1 219 0
 760 03de FFF7FEFF 		bl	LED_PIN_1_Read
 761 03e2 0346     		mov	r3, r0
 762 03e4 002B     		cmp	r3, #0
 763 03e6 0CBF     		ite	eq
 764 03e8 0123     		moveq	r3, #1
 765 03ea 0023     		movne	r3, #0
 766 03ec DBB2     		uxtb	r3, r3
 767 03ee 1846     		mov	r0, r3
 768 03f0 FFF7FEFF 		bl	LED_PIN_1_Write
 220:main.c        ****                     started = 1;
 769              		.loc 1 220 0
 770 03f4 A24B     		ldr	r3, .L68+8
 771 03f6 0122     		movs	r2, #1
 772 03f8 1A60     		str	r2, [r3]
 221:main.c        **** 
 222:main.c        ****                     char currentInst = instruction[instCounter];
 773              		.loc 1 222 0
 774 03fa A44B     		ldr	r3, .L68+20
 775 03fc 1B68     		ldr	r3, [r3]
 776 03fe 9E4A     		ldr	r2, .L68
 777 0400 D35C     		ldrb	r3, [r2, r3]
 778 0402 87F80331 		strb	r3, [r7, #259]
 223:main.c        ****                     char nextInst = instruction[instCounter + 1];
 779              		.loc 1 223 0
 780 0406 A14B     		ldr	r3, .L68+20
 781 0408 1B68     		ldr	r3, [r3]
 782 040a 0133     		adds	r3, r3, #1
 783 040c 9A4A     		ldr	r2, .L68
 784 040e D35C     		ldrb	r3, [r2, r3]
 785 0410 87F80231 		strb	r3, [r7, #258]
 224:main.c        ****                     if (currentInst == 0) {
 786              		.loc 1 224 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 19


 787 0414 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 788 0418 002B     		cmp	r3, #0
 789 041a 14D1     		bne	.L31
 225:main.c        ****                         //LED_PIN_1_Write(0);
 226:main.c        ****                         //LED_PIN_6_Write(0);
 227:main.c        ****                         stop();
 790              		.loc 1 227 0
 791 041c FFF7FEFF 		bl	stop
 228:main.c        ****                         // Stop
 229:main.c        ****                         CyDelay(1000);
 792              		.loc 1 229 0
 793 0420 4FF47A70 		mov	r0, #1000
 794 0424 FFF7FEFF 		bl	CyDelay
 230:main.c        ****                         if (nextInst == 1 || nextInst == 5) {
 795              		.loc 1 230 0
 796 0428 97F80231 		ldrb	r3, [r7, #258]	@ zero_extendqisi2
 797 042c 012B     		cmp	r3, #1
 798 042e 04D0     		beq	.L32
 799              		.loc 1 230 0 is_stmt 0 discriminator 1
 800 0430 97F80231 		ldrb	r3, [r7, #258]	@ zero_extendqisi2
 801 0434 052B     		cmp	r3, #5
 802 0436 40F0E780 		bne	.L34
 803              	.L32:
 231:main.c        ****                             turnLeft();
 804              		.loc 1 231 0 is_stmt 1
 805 043a FFF7FEFF 		bl	turnLeft
 232:main.c        ****                             CyDelay(50);
 806              		.loc 1 232 0
 807 043e 3220     		movs	r0, #50
 808 0440 FFF7FEFF 		bl	CyDelay
 809 0444 E0E0     		b	.L34
 810              	.L31:
 233:main.c        ****                         }
 234:main.c        ****                     } else if ((currentInst == 1 || currentInst == 5)&& turnComplete == -1) {
 811              		.loc 1 234 0
 812 0446 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 813 044a 012B     		cmp	r3, #1
 814 044c 03D0     		beq	.L35
 815              		.loc 1 234 0 is_stmt 0 discriminator 2
 816 044e 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 817 0452 052B     		cmp	r3, #5
 818 0454 14D1     		bne	.L36
 819              	.L35:
 820              		.loc 1 234 0 discriminator 3
 821 0456 8B4B     		ldr	r3, .L68+12
 822 0458 1B68     		ldr	r3, [r3]
 823 045a B3F1FF3F 		cmp	r3, #-1
 824 045e 0FD1     		bne	.L36
 235:main.c        ****                         //LED_PIN_1_Write(1);
 236:main.c        ****                         //LED_PIN_6_Write(0);
 237:main.c        ****                         turnComplete = 0;
 825              		.loc 1 237 0 is_stmt 1
 826 0460 884B     		ldr	r3, .L68+12
 827 0462 0022     		movs	r2, #0
 828 0464 1A60     		str	r2, [r3]
 238:main.c        ****                         turnLeft();
 829              		.loc 1 238 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 20


 830 0466 FFF7FEFF 		bl	turnLeft
 239:main.c        ****                         LED_PIN_4_Write(0);
 831              		.loc 1 239 0
 832 046a 0020     		movs	r0, #0
 833 046c FFF7FEFF 		bl	LED_PIN_4_Write
 240:main.c        ****                         CyDelay(300);
 834              		.loc 1 240 0
 835 0470 4FF49670 		mov	r0, #300
 836 0474 FFF7FEFF 		bl	CyDelay
 241:main.c        ****                         pulsesTravelled = 0;
 837              		.loc 1 241 0
 838 0478 854B     		ldr	r3, .L68+24
 839 047a 0022     		movs	r2, #0
 840 047c 1A60     		str	r2, [r3]
 841 047e C3E0     		b	.L34
 842              	.L36:
 242:main.c        ****                         // Complete a left turn, then follow line
 243:main.c        **** 
 244:main.c        ****                     } else if ((currentInst == 1 || currentInst == 5) && turnComplete == 0) {
 843              		.loc 1 244 0
 844 0480 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 845 0484 012B     		cmp	r3, #1
 846 0486 03D0     		beq	.L37
 847              		.loc 1 244 0 is_stmt 0 discriminator 2
 848 0488 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 849 048c 052B     		cmp	r3, #5
 850 048e 20D1     		bne	.L38
 851              	.L37:
 852              		.loc 1 244 0 discriminator 3
 853 0490 7C4B     		ldr	r3, .L68+12
 854 0492 1B68     		ldr	r3, [r3]
 855 0494 002B     		cmp	r3, #0
 856 0496 1CD1     		bne	.L38
 245:main.c        ****                         lastAdjustDirection = 0;
 857              		.loc 1 245 0 is_stmt 1
 858 0498 7E4B     		ldr	r3, .L68+28
 859 049a 0022     		movs	r2, #0
 860 049c 1A60     		str	r2, [r3]
 246:main.c        ****                         if (R_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 861              		.loc 1 246 0
 862 049e D7F81C31 		ldr	r3, [r7, #284]
 863 04a2 4A2B     		cmp	r3, #74
 864 04a4 11DC     		bgt	.L39
 247:main.c        ****                             turnComplete = 1;
 865              		.loc 1 247 0
 866 04a6 774B     		ldr	r3, .L68+12
 867 04a8 0122     		movs	r2, #1
 868 04aa 1A60     		str	r2, [r3]
 248:main.c        ****                             stop();
 869              		.loc 1 248 0
 870 04ac FFF7FEFF 		bl	stop
 249:main.c        ****                             CyDelay(200);
 871              		.loc 1 249 0
 872 04b0 C820     		movs	r0, #200
 873 04b2 FFF7FEFF 		bl	CyDelay
 250:main.c        ****                             
 251:main.c        ****                             adjustRight();
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 21


 874              		.loc 1 251 0
 875 04b6 FFF7FEFF 		bl	adjustRight
 252:main.c        ****                             CyDelay(225);
 876              		.loc 1 252 0
 877 04ba E120     		movs	r0, #225
 878 04bc FFF7FEFF 		bl	CyDelay
 253:main.c        ****                             
 254:main.c        ****                             stop();
 879              		.loc 1 254 0
 880 04c0 FFF7FEFF 		bl	stop
 255:main.c        ****                             CyDelay(200);
 881              		.loc 1 255 0
 882 04c4 C820     		movs	r0, #200
 883 04c6 FFF7FEFF 		bl	CyDelay
 884              	.L39:
 256:main.c        ****                         }
 257:main.c        ****                         pulsesTravelled = 0;
 885              		.loc 1 257 0
 886 04ca 714B     		ldr	r3, .L68+24
 887 04cc 0022     		movs	r2, #0
 888 04ce 1A60     		str	r2, [r3]
 889 04d0 9AE0     		b	.L34
 890              	.L38:
 258:main.c        ****                     } else if (currentInst == 2 || currentInst == 6) {
 891              		.loc 1 258 0
 892 04d2 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 893 04d6 022B     		cmp	r3, #2
 894 04d8 00F09680 		beq	.L34
 895              		.loc 1 258 0 is_stmt 0 discriminator 1
 896 04dc 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 897 04e0 062B     		cmp	r3, #6
 898 04e2 00F09180 		beq	.L34
 259:main.c        ****                         //LED_PIN_1_Write(1);
 260:main.c        ****                         //LED_PIN_6_Write(1);
 261:main.c        ****                         // Drive straight
 262:main.c        ****                         
 263:main.c        ****                         
 264:main.c        ****                     } else if ((currentInst == 3||currentInst == 7) && turnComplete == -1) {
 899              		.loc 1 264 0 is_stmt 1
 900 04e6 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 901 04ea 032B     		cmp	r3, #3
 902 04ec 03D0     		beq	.L40
 903              		.loc 1 264 0 is_stmt 0 discriminator 2
 904 04ee 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 905 04f2 072B     		cmp	r3, #7
 906 04f4 14D1     		bne	.L41
 907              	.L40:
 908              		.loc 1 264 0 discriminator 3
 909 04f6 634B     		ldr	r3, .L68+12
 910 04f8 1B68     		ldr	r3, [r3]
 911 04fa B3F1FF3F 		cmp	r3, #-1
 912 04fe 0FD1     		bne	.L41
 265:main.c        ****                         //LED_PIN_1_Write(0);
 266:main.c        ****                         //LED_PIN_6_Write(1);
 267:main.c        ****                         turnComplete = 0;
 913              		.loc 1 267 0 is_stmt 1
 914 0500 604B     		ldr	r3, .L68+12
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 22


 915 0502 0022     		movs	r2, #0
 916 0504 1A60     		str	r2, [r3]
 268:main.c        ****                         turnRight();
 917              		.loc 1 268 0
 918 0506 FFF7FEFF 		bl	turnRight
 269:main.c        ****                         LED_PIN_4_Write(0);
 919              		.loc 1 269 0
 920 050a 0020     		movs	r0, #0
 921 050c FFF7FEFF 		bl	LED_PIN_4_Write
 270:main.c        ****                         CyDelay(300);
 922              		.loc 1 270 0
 923 0510 4FF49670 		mov	r0, #300
 924 0514 FFF7FEFF 		bl	CyDelay
 271:main.c        ****                         pulsesTravelled = 0;
 925              		.loc 1 271 0
 926 0518 5D4B     		ldr	r3, .L68+24
 927 051a 0022     		movs	r2, #0
 928 051c 1A60     		str	r2, [r3]
 929 051e 73E0     		b	.L34
 930              	.L41:
 272:main.c        **** 
 273:main.c        ****                     } else if ((currentInst == 3||currentInst == 7) && turnComplete == 0) {
 931              		.loc 1 273 0
 932 0520 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 933 0524 032B     		cmp	r3, #3
 934 0526 03D0     		beq	.L42
 935              		.loc 1 273 0 is_stmt 0 discriminator 2
 936 0528 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 937 052c 072B     		cmp	r3, #7
 938 052e 29D1     		bne	.L43
 939              	.L42:
 940              		.loc 1 273 0 discriminator 3
 941 0530 544B     		ldr	r3, .L68+12
 942 0532 1B68     		ldr	r3, [r3]
 943 0534 002B     		cmp	r3, #0
 944 0536 25D1     		bne	.L43
 274:main.c        ****                         lastAdjustDirection = 2;
 945              		.loc 1 274 0 is_stmt 1
 946 0538 564B     		ldr	r3, .L68+28
 947 053a 0222     		movs	r2, #2
 948 053c 1A60     		str	r2, [r3]
 275:main.c        ****                         if (L_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 949              		.loc 1 275 0
 950 053e D7F82431 		ldr	r3, [r7, #292]
 951 0542 4A2B     		cmp	r3, #74
 952 0544 1ADC     		bgt	.L44
 276:main.c        ****                             turnComplete = 1;
 953              		.loc 1 276 0
 954 0546 4F4B     		ldr	r3, .L68+12
 955 0548 0122     		movs	r2, #1
 956 054a 1A60     		str	r2, [r3]
 277:main.c        ****                             stop();
 957              		.loc 1 277 0
 958 054c FFF7FEFF 		bl	stop
 278:main.c        ****                             CyDelay(200);
 959              		.loc 1 278 0
 960 0550 C820     		movs	r0, #200
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 23


 961 0552 FFF7FEFF 		bl	CyDelay
 279:main.c        ****                             pulsesTravelled = 0;
 962              		.loc 1 279 0
 963 0556 4E4B     		ldr	r3, .L68+24
 964 0558 0022     		movs	r2, #0
 965 055a 1A60     		str	r2, [r3]
 280:main.c        ****                             
 281:main.c        ****                             adjustLeft();
 966              		.loc 1 281 0
 967 055c FFF7FEFF 		bl	adjustLeft
 282:main.c        ****                             CyDelay(225);
 968              		.loc 1 282 0
 969 0560 E120     		movs	r0, #225
 970 0562 FFF7FEFF 		bl	CyDelay
 283:main.c        ****                             pulsesTravelled = 0;
 971              		.loc 1 283 0
 972 0566 4A4B     		ldr	r3, .L68+24
 973 0568 0022     		movs	r2, #0
 974 056a 1A60     		str	r2, [r3]
 284:main.c        ****                             
 285:main.c        ****                             stop();
 975              		.loc 1 285 0
 976 056c FFF7FEFF 		bl	stop
 286:main.c        ****                             CyDelay(200);
 977              		.loc 1 286 0
 978 0570 C820     		movs	r0, #200
 979 0572 FFF7FEFF 		bl	CyDelay
 287:main.c        ****                             pulsesTravelled = 0;
 980              		.loc 1 287 0
 981 0576 464B     		ldr	r3, .L68+24
 982 0578 0022     		movs	r2, #0
 983 057a 1A60     		str	r2, [r3]
 984              	.L44:
 288:main.c        ****                         }
 289:main.c        ****                         pulsesTravelled = 0;
 985              		.loc 1 289 0
 986 057c 444B     		ldr	r3, .L68+24
 987 057e 0022     		movs	r2, #0
 988 0580 1A60     		str	r2, [r3]
 989 0582 41E0     		b	.L34
 990              	.L43:
 290:main.c        ****                     } else if ((currentInst == 4||currentInst == 8) && turnComplete == -1) {
 991              		.loc 1 290 0
 992 0584 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 993 0588 042B     		cmp	r3, #4
 994 058a 03D0     		beq	.L45
 995              		.loc 1 290 0 is_stmt 0 discriminator 2
 996 058c 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 997 0590 082B     		cmp	r3, #8
 998 0592 14D1     		bne	.L46
 999              	.L45:
 1000              		.loc 1 290 0 discriminator 3
 1001 0594 3B4B     		ldr	r3, .L68+12
 1002 0596 1B68     		ldr	r3, [r3]
 1003 0598 B3F1FF3F 		cmp	r3, #-1
 1004 059c 0FD1     		bne	.L46
 291:main.c        ****                         //LED_PIN_1_Write(0);
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 24


 292:main.c        ****                         //LED_PIN_6_Write(0);
 293:main.c        ****                         turnComplete = 0;
 1005              		.loc 1 293 0 is_stmt 1
 1006 059e 394B     		ldr	r3, .L68+12
 1007 05a0 0022     		movs	r2, #0
 1008 05a2 1A60     		str	r2, [r3]
 294:main.c        ****                         turnRight();
 1009              		.loc 1 294 0
 1010 05a4 FFF7FEFF 		bl	turnRight
 295:main.c        ****                         LED_PIN_4_Write(0);
 1011              		.loc 1 295 0
 1012 05a8 0020     		movs	r0, #0
 1013 05aa FFF7FEFF 		bl	LED_PIN_4_Write
 296:main.c        ****                         CyDelay(300);
 1014              		.loc 1 296 0
 1015 05ae 4FF49670 		mov	r0, #300
 1016 05b2 FFF7FEFF 		bl	CyDelay
 297:main.c        ****                         pulsesTravelled = 0;
 1017              		.loc 1 297 0
 1018 05b6 364B     		ldr	r3, .L68+24
 1019 05b8 0022     		movs	r2, #0
 1020 05ba 1A60     		str	r2, [r3]
 1021 05bc 24E0     		b	.L34
 1022              	.L46:
 298:main.c        **** 
 299:main.c        ****                     } else if ((currentInst == 4||currentInst == 8) && turnComplete == 0) {
 1023              		.loc 1 299 0
 1024 05be 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 1025 05c2 042B     		cmp	r3, #4
 1026 05c4 03D0     		beq	.L47
 1027              		.loc 1 299 0 is_stmt 0 discriminator 2
 1028 05c6 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 1029 05ca 082B     		cmp	r3, #8
 1030 05cc 1CD1     		bne	.L34
 1031              	.L47:
 1032              		.loc 1 299 0 discriminator 3
 1033 05ce 2D4B     		ldr	r3, .L68+12
 1034 05d0 1B68     		ldr	r3, [r3]
 1035 05d2 002B     		cmp	r3, #0
 1036 05d4 18D1     		bne	.L34
 300:main.c        ****                         //LED_PIN_1_Write(0);
 301:main.c        ****                         //LED_PIN_6_Write(0);
 302:main.c        ****                         // Do a 180, then follow line
 303:main.c        ****                         if (R_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 1037              		.loc 1 303 0 is_stmt 1
 1038 05d6 D7F81C31 		ldr	r3, [r7, #284]
 1039 05da 4A2B     		cmp	r3, #74
 1040 05dc 11DC     		bgt	.L48
 304:main.c        ****                             turnComplete = 1;
 1041              		.loc 1 304 0
 1042 05de 294B     		ldr	r3, .L68+12
 1043 05e0 0122     		movs	r2, #1
 1044 05e2 1A60     		str	r2, [r3]
 305:main.c        ****                             stop();
 1045              		.loc 1 305 0
 1046 05e4 FFF7FEFF 		bl	stop
 306:main.c        ****                             CyDelay(200);
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 25


 1047              		.loc 1 306 0
 1048 05e8 C820     		movs	r0, #200
 1049 05ea FFF7FEFF 		bl	CyDelay
 307:main.c        ****                             
 308:main.c        ****                             adjustLeft();
 1050              		.loc 1 308 0
 1051 05ee FFF7FEFF 		bl	adjustLeft
 309:main.c        ****                             CyDelay(225);
 1052              		.loc 1 309 0
 1053 05f2 E120     		movs	r0, #225
 1054 05f4 FFF7FEFF 		bl	CyDelay
 310:main.c        ****                             
 311:main.c        ****                             stop();
 1055              		.loc 1 311 0
 1056 05f8 FFF7FEFF 		bl	stop
 312:main.c        ****                             CyDelay(200);
 1057              		.loc 1 312 0
 1058 05fc C820     		movs	r0, #200
 1059 05fe FFF7FEFF 		bl	CyDelay
 1060              	.L48:
 313:main.c        ****                         }
 314:main.c        ****                         pulsesTravelled = 0;
 1061              		.loc 1 314 0
 1062 0602 234B     		ldr	r3, .L68+24
 1063 0604 0022     		movs	r2, #0
 1064 0606 1A60     		str	r2, [r3]
 1065              	.L34:
 315:main.c        ****                    
 316:main.c        ****                     }
 317:main.c        **** 
 318:main.c        ****                     //only allow code to straighten if turn is complete
 319:main.c        ****                     if (turnComplete != 0 ) {
 1066              		.loc 1 319 0
 1067 0608 1E4B     		ldr	r3, .L68+12
 1068 060a 1B68     		ldr	r3, [r3]
 1069 060c 002B     		cmp	r3, #0
 1070 060e 00F00681 		beq	.L49
 1071              	.LBB9:
 320:main.c        ****                         if ((M_LINE_BLACK && L_LINE_BLACK)) { // if robot slightly too far right
 1072              		.loc 1 320 0
 1073 0612 D7F82031 		ldr	r3, [r7, #288]
 1074 0616 4A2B     		cmp	r3, #74
 1075 0618 09DC     		bgt	.L50
 1076              		.loc 1 320 0 is_stmt 0 discriminator 1
 1077 061a D7F82431 		ldr	r3, [r7, #292]
 1078 061e 4A2B     		cmp	r3, #74
 1079 0620 05DC     		bgt	.L50
 321:main.c        ****                             adjustLeft();
 1080              		.loc 1 321 0 is_stmt 1
 1081 0622 FFF7FEFF 		bl	adjustLeft
 322:main.c        ****                             lastAdjustDirection = 0;
 1082              		.loc 1 322 0
 1083 0626 1B4B     		ldr	r3, .L68+28
 1084 0628 0022     		movs	r2, #0
 1085 062a 1A60     		str	r2, [r3]
 1086 062c 4EE0     		b	.L51
 1087              	.L50:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 26


 323:main.c        **** 
 324:main.c        ****                         } else if (M_LINE_BLACK && R_LINE_BLACK) { //  if robot slightly too far le
 1088              		.loc 1 324 0
 1089 062e D7F82031 		ldr	r3, [r7, #288]
 1090 0632 4A2B     		cmp	r3, #74
 1091 0634 09DC     		bgt	.L52
 1092              		.loc 1 324 0 is_stmt 0 discriminator 1
 1093 0636 D7F81C31 		ldr	r3, [r7, #284]
 1094 063a 4A2B     		cmp	r3, #74
 1095 063c 05DC     		bgt	.L52
 325:main.c        ****                             adjustRight();
 1096              		.loc 1 325 0 is_stmt 1
 1097 063e FFF7FEFF 		bl	adjustRight
 326:main.c        ****                             lastAdjustDirection = 2;
 1098              		.loc 1 326 0
 1099 0642 144B     		ldr	r3, .L68+28
 1100 0644 0222     		movs	r2, #2
 1101 0646 1A60     		str	r2, [r3]
 1102 0648 40E0     		b	.L51
 1103              	.L52:
 327:main.c        **** 
 328:main.c        ****                         } else if (M_LINE_BLACK) { // if robot in the center keep moving straight
 1104              		.loc 1 328 0
 1105 064a D7F82031 		ldr	r3, [r7, #288]
 1106 064e 4A2B     		cmp	r3, #74
 1107 0650 07DC     		bgt	.L53
 329:main.c        ****                             lastAdjustDirection = 1;
 1108              		.loc 1 329 0
 1109 0652 104B     		ldr	r3, .L68+28
 1110 0654 0122     		movs	r2, #1
 1111 0656 1A60     		str	r2, [r3]
 330:main.c        ****                             driveForward(0, 0);
 1112              		.loc 1 330 0
 1113 0658 0021     		movs	r1, #0
 1114 065a 0020     		movs	r0, #0
 1115 065c FFF7FEFF 		bl	driveForward
 1116 0660 34E0     		b	.L51
 1117              	.L53:
 331:main.c        **** 
 332:main.c        ****                         } else if (R_LINE_BLACK) { // if robot too far left
 1118              		.loc 1 332 0
 1119 0662 D7F81C31 		ldr	r3, [r7, #284]
 1120 0666 4A2B     		cmp	r3, #74
 1121 0668 16DC     		bgt	.L54
 333:main.c        ****                             adjustRight();
 1122              		.loc 1 333 0
 1123 066a FFF7FEFF 		bl	adjustRight
 334:main.c        ****                             lastAdjustDirection = 2;
 1124              		.loc 1 334 0
 1125 066e 094B     		ldr	r3, .L68+28
 1126 0670 0222     		movs	r2, #2
 1127 0672 1A60     		str	r2, [r3]
 1128 0674 2AE0     		b	.L51
 1129              	.L69:
 1130 0676 00BF     		.align	2
 1131              	.L68:
 1132 0678 00000000 		.word	instruction
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 27


 1133 067c 00000000 		.word	distance
 1134 0680 00000000 		.word	started
 1135 0684 00000000 		.word	turnComplete
 1136 0688 00000000 		.word	checkDistance
 1137 068c 00000000 		.word	instCounter
 1138 0690 00000000 		.word	pulsesTravelled
 1139 0694 00000000 		.word	lastAdjustDirection
 1140              	.L54:
 335:main.c        **** 
 336:main.c        ****                         } else if (L_LINE_BLACK) { // if robot too far right
 1141              		.loc 1 336 0
 1142 0698 D7F82431 		ldr	r3, [r7, #292]
 1143 069c 4A2B     		cmp	r3, #74
 1144 069e 05DC     		bgt	.L55
 337:main.c        ****                             adjustLeft();
 1145              		.loc 1 337 0
 1146 06a0 FFF7FEFF 		bl	adjustLeft
 338:main.c        ****                             lastAdjustDirection = 0;
 1147              		.loc 1 338 0
 1148 06a4 6A4B     		ldr	r3, .L70+8
 1149 06a6 0022     		movs	r2, #0
 1150 06a8 1A60     		str	r2, [r3]
 1151 06aa 0FE0     		b	.L51
 1152              	.L55:
 339:main.c        ****                         
 340:main.c        **** 
 341:main.c        ****                         } else { // completely lost find way
 342:main.c        ****                             if (lastAdjustDirection == 0) {
 1153              		.loc 1 342 0
 1154 06ac 684B     		ldr	r3, .L70+8
 1155 06ae 1B68     		ldr	r3, [r3]
 1156 06b0 002B     		cmp	r3, #0
 1157 06b2 02D1     		bne	.L56
 343:main.c        ****                                 adjustLeft();
 1158              		.loc 1 343 0
 1159 06b4 FFF7FEFF 		bl	adjustLeft
 1160 06b8 08E0     		b	.L51
 1161              	.L56:
 344:main.c        ****                             } else if (lastAdjustDirection == 1) { // last movement was forward (mi
 1162              		.loc 1 344 0
 1163 06ba 654B     		ldr	r3, .L70+8
 1164 06bc 1B68     		ldr	r3, [r3]
 1165 06be 012B     		cmp	r3, #1
 1166 06c0 02D1     		bne	.L57
 345:main.c        ****                                 //hardAdjustLeft();
 346:main.c        ****                                 adjustRight();
 1167              		.loc 1 346 0
 1168 06c2 FFF7FEFF 		bl	adjustRight
 1169 06c6 01E0     		b	.L51
 1170              	.L57:
 347:main.c        ****                             } else {
 348:main.c        ****                                 adjustRight();
 1171              		.loc 1 348 0
 1172 06c8 FFF7FEFF 		bl	adjustRight
 1173              	.L51:
 349:main.c        ****                             }
 350:main.c        **** 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 28


 351:main.c        ****                         }
 352:main.c        ****                         
 353:main.c        **** 
 354:main.c        ****                         // UPDATE INSTRUCTION LOGIC GOES HERE
 355:main.c        ****                         LED_PIN_2_Write(0);
 1174              		.loc 1 355 0
 1175 06cc 0020     		movs	r0, #0
 1176 06ce FFF7FEFF 		bl	LED_PIN_2_Write
 356:main.c        ****                         LED_PIN_3_Write(0);
 1177              		.loc 1 356 0
 1178 06d2 0020     		movs	r0, #0
 1179 06d4 FFF7FEFF 		bl	LED_PIN_3_Write
 357:main.c        ****                         LED_PIN_4_Write(0);
 1180              		.loc 1 357 0
 1181 06d8 0020     		movs	r0, #0
 1182 06da FFF7FEFF 		bl	LED_PIN_4_Write
 358:main.c        ****                         char dist[24];
 359:main.c        ****                         char pulses[24];
 360:main.c        ****                         char first[24];
 361:main.c        ****                         char second[24];
 362:main.c        ****                         //57 pulses on 1 motor = 20.42 cm
 363:main.c        ****                         char instStr[24];
 364:main.c        ****                         char cVal[24];
 365:main.c        **** 
 366:main.c        **** 
 367:main.c        ****                         //if distance has been covered and ready to switch
 368:main.c        ****                         // if stop instruction or not turning and distance has been travelled
 369:main.c        ****                         int pulsesToTravel[] = {0, 62, 123, 184, 245, 305, 367, 429, 489, 550};
 1183              		.loc 1 369 0
 1184 06de 3B46     		mov	r3, r7
 1185 06e0 5C4A     		ldr	r2, .L70+12
 1186 06e2 1C46     		mov	r4, r3
 1187 06e4 1546     		mov	r5, r2
 1188 06e6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1189 06e8 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1190 06ea 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1191 06ec 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1192 06ee 95E80300 		ldmia	r5, {r0, r1}
 1193 06f2 84E80300 		stmia	r4, {r0, r1}
 370:main.c        ****                         if (turnComplete != 0 && (pulsesTravelled * 0.7 > pulsesToTravel[distance[i
 1194              		.loc 1 370 0
 1195 06f6 584B     		ldr	r3, .L70+16
 1196 06f8 1B68     		ldr	r3, [r3]
 1197 06fa 002B     		cmp	r3, #0
 1198 06fc 00F08F80 		beq	.L49
 1199              		.loc 1 370 0 is_stmt 0 discriminator 1
 1200 0700 564B     		ldr	r3, .L70+20
 1201 0702 1B68     		ldr	r3, [r3]
 1202 0704 1846     		mov	r0, r3
 1203 0706 FFF7FEFF 		bl	__aeabi_i2d
 1204 070a 4FA3     		adr	r3, .L70
 1205 070c D3E90023 		ldrd	r2, [r3]
 1206 0710 FFF7FEFF 		bl	__aeabi_dmul
 1207 0714 0346     		mov	r3, r0
 1208 0716 0C46     		mov	r4, r1
 1209 0718 2546     		mov	r5, r4
 1210 071a 1C46     		mov	r4, r3
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 29


 1211 071c 504B     		ldr	r3, .L70+24
 1212 071e 1B68     		ldr	r3, [r3]
 1213 0720 504A     		ldr	r2, .L70+28
 1214 0722 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1215 0724 1A46     		mov	r2, r3
 1216 0726 3B46     		mov	r3, r7
 1217 0728 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1218 072c 1846     		mov	r0, r3
 1219 072e FFF7FEFF 		bl	__aeabi_i2d
 1220 0732 0246     		mov	r2, r0
 1221 0734 0B46     		mov	r3, r1
 1222 0736 2046     		mov	r0, r4
 1223 0738 2946     		mov	r1, r5
 1224 073a FFF7FEFF 		bl	__aeabi_dcmpgt
 1225 073e 0346     		mov	r3, r0
 1226 0740 002B     		cmp	r3, #0
 1227 0742 03D1     		bne	.L59
 1228              		.loc 1 370 0 discriminator 2
 1229 0744 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 1230 0748 002B     		cmp	r3, #0
 1231 074a 68D1     		bne	.L49
 1232              	.L59:
 371:main.c        ****                             // if distance reached then stop
 372:main.c        ****                             if (currentInst == 0 || currentInst == 6 || currentInst == 7 || current
 1233              		.loc 1 372 0 is_stmt 1
 1234 074c 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 1235 0750 002B     		cmp	r3, #0
 1236 0752 0FD0     		beq	.L60
 1237              		.loc 1 372 0 is_stmt 0 discriminator 1
 1238 0754 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 1239 0758 062B     		cmp	r3, #6
 1240 075a 0BD0     		beq	.L60
 1241              		.loc 1 372 0 discriminator 2
 1242 075c 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 1243 0760 072B     		cmp	r3, #7
 1244 0762 07D0     		beq	.L60
 1245              		.loc 1 372 0 discriminator 3
 1246 0764 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 1247 0768 082B     		cmp	r3, #8
 1248 076a 03D0     		beq	.L60
 1249              		.loc 1 372 0 discriminator 4
 1250 076c 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 1251 0770 052B     		cmp	r3, #5
 1252 0772 1DD1     		bne	.L61
 1253              	.L60:
 373:main.c        ****                                 LED_PIN_4_Write(1);
 1254              		.loc 1 373 0 is_stmt 1
 1255 0774 0120     		movs	r0, #1
 1256 0776 FFF7FEFF 		bl	LED_PIN_4_Write
 374:main.c        ****                                 instCounter++;
 1257              		.loc 1 374 0
 1258 077a 394B     		ldr	r3, .L70+24
 1259 077c 1B68     		ldr	r3, [r3]
 1260 077e 0133     		adds	r3, r3, #1
 1261 0780 374A     		ldr	r2, .L70+24
 1262 0782 1360     		str	r3, [r2]
 375:main.c        ****                                 turnComplete = -1;
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 30


 1263              		.loc 1 375 0
 1264 0784 344B     		ldr	r3, .L70+16
 1265 0786 4FF0FF32 		mov	r2, #-1
 1266 078a 1A60     		str	r2, [r3]
 376:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 377:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 378:main.c        ****                                 //                            //usbPutString(instStr);
 379:main.c        ****                                 pulsesTravelled = 0;
 1267              		.loc 1 379 0
 1268 078c 334B     		ldr	r3, .L70+20
 1269 078e 0022     		movs	r2, #0
 1270 0790 1A60     		str	r2, [r3]
 380:main.c        ****                                 if (currentInst != 0) {
 1271              		.loc 1 380 0
 1272 0792 97F80331 		ldrb	r3, [r7, #259]	@ zero_extendqisi2
 1273 0796 002B     		cmp	r3, #0
 1274 0798 41D0     		beq	.L49
 381:main.c        ****                                     CyDelay(400);
 1275              		.loc 1 381 0
 1276 079a 4FF4C870 		mov	r0, #400
 1277 079e FFF7FEFF 		bl	CyDelay
 382:main.c        ****                                     stop();
 1278              		.loc 1 382 0
 1279 07a2 FFF7FEFF 		bl	stop
 383:main.c        ****                                     CyDelay(1000);
 1280              		.loc 1 383 0
 1281 07a6 4FF47A70 		mov	r0, #1000
 1282 07aa FFF7FEFF 		bl	CyDelay
 380:main.c        ****                                     CyDelay(400);
 1283              		.loc 1 380 0
 1284 07ae 36E0     		b	.L49
 1285              	.L61:
 384:main.c        ****                                 }
 385:main.c        ****                                 //
 386:main.c        ****                             } 
 387:main.c        ****                             // ignoring if right sensor sensed when the next instruction doesnt mak
 388:main.c        ****                             else if (R_INT_BLACK && (nextInst != 1 && nextInst != 5)) { //reached a
 1286              		.loc 1 388 0
 1287 07b0 D7F81831 		ldr	r3, [r7, #280]
 1288 07b4 4A2B     		cmp	r3, #74
 1289 07b6 17DC     		bgt	.L63
 1290              		.loc 1 388 0 is_stmt 0 discriminator 1
 1291 07b8 97F80231 		ldrb	r3, [r7, #258]	@ zero_extendqisi2
 1292 07bc 012B     		cmp	r3, #1
 1293 07be 13D0     		beq	.L63
 1294              		.loc 1 388 0 discriminator 2
 1295 07c0 97F80231 		ldrb	r3, [r7, #258]	@ zero_extendqisi2
 1296 07c4 052B     		cmp	r3, #5
 1297 07c6 0FD0     		beq	.L63
 389:main.c        ****                                 //
 390:main.c        ****                                 LED_PIN_4_Write(1);
 1298              		.loc 1 390 0 is_stmt 1
 1299 07c8 0120     		movs	r0, #1
 1300 07ca FFF7FEFF 		bl	LED_PIN_4_Write
 391:main.c        ****                                 instCounter++;
 1301              		.loc 1 391 0
 1302 07ce 244B     		ldr	r3, .L70+24
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 31


 1303 07d0 1B68     		ldr	r3, [r3]
 1304 07d2 0133     		adds	r3, r3, #1
 1305 07d4 224A     		ldr	r2, .L70+24
 1306 07d6 1360     		str	r3, [r2]
 392:main.c        ****                                 turnComplete = -1;
 1307              		.loc 1 392 0
 1308 07d8 1F4B     		ldr	r3, .L70+16
 1309 07da 4FF0FF32 		mov	r2, #-1
 1310 07de 1A60     		str	r2, [r3]
 393:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 394:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 395:main.c        ****                                 //                            //usbPutString(instStr);
 396:main.c        ****                                 pulsesTravelled = 0;
 1311              		.loc 1 396 0
 1312 07e0 1E4B     		ldr	r3, .L70+20
 1313 07e2 0022     		movs	r2, #0
 1314 07e4 1A60     		str	r2, [r3]
 1315 07e6 1AE0     		b	.L49
 1316              	.L63:
 397:main.c        ****                             }
 398:main.c        ****                             // ignoring if left sensor sensed when the next instruction doesnt make
 399:main.c        ****                             else if (L_INT_BLACK && (nextInst != 3 && nextInst != 5)) { //reached a
 1317              		.loc 1 399 0
 1318 07e8 D7F82831 		ldr	r3, [r7, #296]
 1319 07ec 4A2B     		cmp	r3, #74
 1320 07ee 16DC     		bgt	.L49
 1321              		.loc 1 399 0 is_stmt 0 discriminator 1
 1322 07f0 97F80231 		ldrb	r3, [r7, #258]	@ zero_extendqisi2
 1323 07f4 032B     		cmp	r3, #3
 1324 07f6 12D0     		beq	.L49
 1325              		.loc 1 399 0 discriminator 2
 1326 07f8 97F80231 		ldrb	r3, [r7, #258]	@ zero_extendqisi2
 1327 07fc 052B     		cmp	r3, #5
 1328 07fe 0ED0     		beq	.L49
 400:main.c        ****                                 LED_PIN_4_Write(1);
 1329              		.loc 1 400 0 is_stmt 1
 1330 0800 0120     		movs	r0, #1
 1331 0802 FFF7FEFF 		bl	LED_PIN_4_Write
 401:main.c        ****                                 instCounter++;
 1332              		.loc 1 401 0
 1333 0806 164B     		ldr	r3, .L70+24
 1334 0808 1B68     		ldr	r3, [r3]
 1335 080a 0133     		adds	r3, r3, #1
 1336 080c 144A     		ldr	r2, .L70+24
 1337 080e 1360     		str	r3, [r2]
 402:main.c        ****                                 turnComplete = -1;
 1338              		.loc 1 402 0
 1339 0810 114B     		ldr	r3, .L70+16
 1340 0812 4FF0FF32 		mov	r2, #-1
 1341 0816 1A60     		str	r2, [r3]
 403:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 404:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 405:main.c        ****                                 //                            //usbPutString(instStr);
 406:main.c        ****                                 pulsesTravelled = 0;
 1342              		.loc 1 406 0
 1343 0818 104B     		ldr	r3, .L70+20
 1344 081a 0022     		movs	r2, #0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 32


 1345 081c 1A60     		str	r2, [r3]
 1346              	.L49:
 1347              	.LBE9:
 407:main.c        ****                             } else {
 408:main.c        **** 
 409:main.c        ****                             }
 410:main.c        ****                         }
 411:main.c        ****                     }
 412:main.c        **** 
 413:main.c        ****                     if (L_INT_BLACK) {
 1348              		.loc 1 413 0
 1349 081e D7F82831 		ldr	r3, [r7, #296]
 1350 0822 4A2B     		cmp	r3, #74
 1351 0824 02DC     		bgt	.L64
 414:main.c        ****                         LED_PIN_2_Write(1);
 1352              		.loc 1 414 0
 1353 0826 0120     		movs	r0, #1
 1354 0828 FFF7FEFF 		bl	LED_PIN_2_Write
 1355              	.L64:
 415:main.c        ****                     }
 416:main.c        **** 
 417:main.c        ****                     if (R_INT_BLACK) {
 1356              		.loc 1 417 0
 1357 082c D7F81831 		ldr	r3, [r7, #280]
 1358 0830 4A2B     		cmp	r3, #74
 1359 0832 02DC     		bgt	.L8
 418:main.c        ****                         LED_PIN_3_Write(1);
 1360              		.loc 1 418 0
 1361 0834 0120     		movs	r0, #1
 1362 0836 FFF7FEFF 		bl	LED_PIN_3_Write
 1363              	.L8:
 1364              	.LBE8:
 1365              	.LBE3:
 419:main.c        ****                     }
 420:main.c        ****                 }
 421:main.c        ****             }
 422:main.c        **** 
 423:main.c        ****             flag = 0;
 1366              		.loc 1 423 0
 1367 083a 0B4B     		ldr	r3, .L70+32
 1368 083c 0022     		movs	r2, #0
 1369 083e 1A60     		str	r2, [r3]
 424:main.c        ****             ADC1_IRQ_Enable();
 1370              		.loc 1 424 0
 1371 0840 FFF7FEFF 		bl	ADC1_IRQ_Enable
 425:main.c        ****         }
 426:main.c        **** 
 427:main.c        ****     }
 1372              		.loc 1 427 0
 1373 0844 28E4     		b	.L65
 1374              	.L71:
 1375 0846 00BF     		.align	3
 1376              	.L70:
 1377 0848 66666666 		.word	1717986918
 1378 084c 6666E63F 		.word	1072064102
 1379 0850 00000000 		.word	lastAdjustDirection
 1380 0854 00000000 		.word	.LC0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 33


 1381 0858 00000000 		.word	turnComplete
 1382 085c 00000000 		.word	pulsesTravelled
 1383 0860 00000000 		.word	instCounter
 1384 0864 00000000 		.word	distance
 1385 0868 00000000 		.word	flag
 1386              		.cfi_endproc
 1387              	.LFE65:
 1388              		.size	main, .-main
 1389              		.section	.text.usbPutString,"ax",%progbits
 1390              		.align	2
 1391              		.global	usbPutString
 1392              		.thumb
 1393              		.thumb_func
 1394              		.type	usbPutString, %function
 1395              	usbPutString:
 1396              	.LFB66:
 428:main.c        **** }
 429:main.c        **** //* ========================================
 430:main.c        **** void usbPutString(char * s) {
 1397              		.loc 1 430 0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 8
 1400              		@ frame_needed = 1, uses_anonymous_args = 0
 1401 0000 80B5     		push	{r7, lr}
 1402              		.cfi_def_cfa_offset 8
 1403              		.cfi_offset 7, -8
 1404              		.cfi_offset 14, -4
 1405 0002 82B0     		sub	sp, sp, #8
 1406              		.cfi_def_cfa_offset 16
 1407 0004 00AF     		add	r7, sp, #0
 1408              		.cfi_def_cfa_register 7
 1409 0006 7860     		str	r0, [r7, #4]
 431:main.c        ****     // !! Assumes that *s is a string with allocated space >=64 chars    
 432:main.c        ****     //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 433:main.c        ****     //  length to 62 char (63rd char is a '!')
 434:main.c        **** 
 435:main.c        ****     #ifdef USE_USB
 436:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1410              		.loc 1 436 0
 1411 0008 00BF     		nop
 1412              	.L73:
 1413              		.loc 1 436 0 is_stmt 0 discriminator 1
 1414 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1415 000e 0346     		mov	r3, r0
 1416 0010 002B     		cmp	r3, #0
 1417 0012 FAD0     		beq	.L73
 437:main.c        ****     s[63] = '\0';
 1418              		.loc 1 437 0 is_stmt 1
 1419 0014 7B68     		ldr	r3, [r7, #4]
 1420 0016 3F33     		adds	r3, r3, #63
 1421 0018 0022     		movs	r2, #0
 1422 001a 1A70     		strb	r2, [r3]
 438:main.c        ****     s[62] = '!';
 1423              		.loc 1 438 0
 1424 001c 7B68     		ldr	r3, [r7, #4]
 1425 001e 3E33     		adds	r3, r3, #62
 1426 0020 2122     		movs	r2, #33
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 34


 1427 0022 1A70     		strb	r2, [r3]
 439:main.c        ****     USBUART_PutData((uint8 * ) s, strlen(s));
 1428              		.loc 1 439 0
 1429 0024 7868     		ldr	r0, [r7, #4]
 1430 0026 FFF7FEFF 		bl	strlen
 1431 002a 0346     		mov	r3, r0
 1432 002c 9BB2     		uxth	r3, r3
 1433 002e 1946     		mov	r1, r3
 1434 0030 7868     		ldr	r0, [r7, #4]
 1435 0032 FFF7FEFF 		bl	USBUART_PutData
 440:main.c        ****     #endif
 441:main.c        **** }
 1436              		.loc 1 441 0
 1437 0036 00BF     		nop
 1438 0038 0837     		adds	r7, r7, #8
 1439              		.cfi_def_cfa_offset 8
 1440 003a BD46     		mov	sp, r7
 1441              		.cfi_def_cfa_register 13
 1442              		@ sp needed
 1443 003c 80BD     		pop	{r7, pc}
 1444              		.cfi_endproc
 1445              	.LFE66:
 1446              		.size	usbPutString, .-usbPutString
 1447 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1448              		.align	2
 1449              		.global	usbPutChar
 1450              		.thumb
 1451              		.thumb_func
 1452              		.type	usbPutChar, %function
 1453              	usbPutChar:
 1454              	.LFB67:
 442:main.c        **** //* ========================================
 443:main.c        **** void usbPutChar(char c) {
 1455              		.loc 1 443 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 8
 1458              		@ frame_needed = 1, uses_anonymous_args = 0
 1459 0000 80B5     		push	{r7, lr}
 1460              		.cfi_def_cfa_offset 8
 1461              		.cfi_offset 7, -8
 1462              		.cfi_offset 14, -4
 1463 0002 82B0     		sub	sp, sp, #8
 1464              		.cfi_def_cfa_offset 16
 1465 0004 00AF     		add	r7, sp, #0
 1466              		.cfi_def_cfa_register 7
 1467 0006 0346     		mov	r3, r0
 1468 0008 FB71     		strb	r3, [r7, #7]
 444:main.c        ****     #ifdef USE_USB
 445:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1469              		.loc 1 445 0
 1470 000a 00BF     		nop
 1471              	.L75:
 1472              		.loc 1 445 0 is_stmt 0 discriminator 1
 1473 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1474 0010 0346     		mov	r3, r0
 1475 0012 002B     		cmp	r3, #0
 1476 0014 FAD0     		beq	.L75
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 35


 446:main.c        ****     USBUART_PutChar(c);
 1477              		.loc 1 446 0 is_stmt 1
 1478 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1479 0018 1846     		mov	r0, r3
 1480 001a FFF7FEFF 		bl	USBUART_PutChar
 447:main.c        ****     #endif
 448:main.c        **** }...
 1481              		.loc 1 448 0
 1482 001e 00BF     		nop
 1483 0020 0837     		adds	r7, r7, #8
 1484              		.cfi_def_cfa_offset 8
 1485 0022 BD46     		mov	sp, r7
 1486              		.cfi_def_cfa_register 13
 1487              		@ sp needed
 1488 0024 80BD     		pop	{r7, pc}
 1489              		.cfi_endproc
 1490              	.LFE67:
 1491              		.size	usbPutChar, .-usbPutChar
 1492 0026 00BF     		.text
 1493              	.Letext0:
 1494              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1495              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1496              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1497              		.file 5 "vars.h"
 1498              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1499              		.section	.debug_info,"",%progbits
 1500              	.Ldebug_info0:
 1501 0000 4E070000 		.4byte	0x74e
 1502 0004 0400     		.2byte	0x4
 1503 0006 00000000 		.4byte	.Ldebug_abbrev0
 1504 000a 04       		.byte	0x4
 1505 000b 01       		.uleb128 0x1
 1506 000c A9000000 		.4byte	.LASF102
 1507 0010 0C       		.byte	0xc
 1508 0011 8C040000 		.4byte	.LASF103
 1509 0015 3C010000 		.4byte	.LASF104
 1510 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1511 001d 00000000 		.4byte	0
 1512 0021 00000000 		.4byte	.Ldebug_line0
 1513 0025 02       		.uleb128 0x2
 1514 0026 01       		.byte	0x1
 1515 0027 06       		.byte	0x6
 1516 0028 08020000 		.4byte	.LASF0
 1517 002c 02       		.uleb128 0x2
 1518 002d 01       		.byte	0x1
 1519 002e 08       		.byte	0x8
 1520 002f DC020000 		.4byte	.LASF1
 1521 0033 02       		.uleb128 0x2
 1522 0034 02       		.byte	0x2
 1523 0035 05       		.byte	0x5
 1524 0036 72000000 		.4byte	.LASF2
 1525 003a 02       		.uleb128 0x2
 1526 003b 02       		.byte	0x2
 1527 003c 07       		.byte	0x7
 1528 003d BE030000 		.4byte	.LASF3
 1529 0041 03       		.uleb128 0x3
 1530 0042 35040000 		.4byte	.LASF12
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 36


 1531 0046 02       		.byte	0x2
 1532 0047 3F       		.byte	0x3f
 1533 0048 4C000000 		.4byte	0x4c
 1534 004c 02       		.uleb128 0x2
 1535 004d 04       		.byte	0x4
 1536 004e 05       		.byte	0x5
 1537 004f 6E020000 		.4byte	.LASF4
 1538 0053 02       		.uleb128 0x2
 1539 0054 04       		.byte	0x4
 1540 0055 07       		.byte	0x7
 1541 0056 93040000 		.4byte	.LASF5
 1542 005a 02       		.uleb128 0x2
 1543 005b 08       		.byte	0x8
 1544 005c 05       		.byte	0x5
 1545 005d 22020000 		.4byte	.LASF6
 1546 0061 02       		.uleb128 0x2
 1547 0062 08       		.byte	0x8
 1548 0063 07       		.byte	0x7
 1549 0064 69030000 		.4byte	.LASF7
 1550 0068 04       		.uleb128 0x4
 1551 0069 04       		.byte	0x4
 1552 006a 05       		.byte	0x5
 1553 006b 696E7400 		.ascii	"int\000"
 1554 006f 02       		.uleb128 0x2
 1555 0070 04       		.byte	0x4
 1556 0071 07       		.byte	0x7
 1557 0072 80030000 		.4byte	.LASF8
 1558 0076 02       		.uleb128 0x2
 1559 0077 08       		.byte	0x8
 1560 0078 04       		.byte	0x4
 1561 0079 F2020000 		.4byte	.LASF9
 1562 007d 02       		.uleb128 0x2
 1563 007e 04       		.byte	0x4
 1564 007f 07       		.byte	0x7
 1565 0080 89000000 		.4byte	.LASF10
 1566 0084 05       		.uleb128 0x5
 1567 0085 04       		.byte	0x4
 1568 0086 8A000000 		.4byte	0x8a
 1569 008a 02       		.uleb128 0x2
 1570 008b 01       		.byte	0x1
 1571 008c 08       		.byte	0x8
 1572 008d 00040000 		.4byte	.LASF11
 1573 0091 06       		.uleb128 0x6
 1574 0092 8A000000 		.4byte	0x8a
 1575 0096 A1000000 		.4byte	0xa1
 1576 009a 07       		.uleb128 0x7
 1577 009b 7D000000 		.4byte	0x7d
 1578 009f 17       		.byte	0x17
 1579 00a0 00       		.byte	0
 1580 00a1 03       		.uleb128 0x3
 1581 00a2 28040000 		.4byte	.LASF13
 1582 00a6 03       		.byte	0x3
 1583 00a7 2C       		.byte	0x2c
 1584 00a8 41000000 		.4byte	0x41
 1585 00ac 08       		.uleb128 0x8
 1586 00ad C8010000 		.4byte	.LASF14
 1587 00b1 04       		.byte	0x4
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 37


 1588 00b2 E701     		.2byte	0x1e7
 1589 00b4 2C000000 		.4byte	0x2c
 1590 00b8 08       		.uleb128 0x8
 1591 00b9 B5010000 		.4byte	.LASF15
 1592 00bd 04       		.byte	0x4
 1593 00be E801     		.2byte	0x1e8
 1594 00c0 3A000000 		.4byte	0x3a
 1595 00c4 08       		.uleb128 0x8
 1596 00c5 3D020000 		.4byte	.LASF16
 1597 00c9 04       		.byte	0x4
 1598 00ca EA01     		.2byte	0x1ea
 1599 00cc 25000000 		.4byte	0x25
 1600 00d0 08       		.uleb128 0x8
 1601 00d1 C2010000 		.4byte	.LASF17
 1602 00d5 04       		.byte	0x4
 1603 00d6 EB01     		.2byte	0x1eb
 1604 00d8 33000000 		.4byte	0x33
 1605 00dc 02       		.uleb128 0x2
 1606 00dd 04       		.byte	0x4
 1607 00de 04       		.byte	0x4
 1608 00df 14020000 		.4byte	.LASF18
 1609 00e3 02       		.uleb128 0x2
 1610 00e4 08       		.byte	0x8
 1611 00e5 04       		.byte	0x4
 1612 00e6 A5040000 		.4byte	.LASF19
 1613 00ea 09       		.uleb128 0x9
 1614 00eb F6030000 		.4byte	.LASF105
 1615 00ef 20       		.byte	0x20
 1616 00f0 05       		.byte	0x5
 1617 00f1 29       		.byte	0x29
 1618 00f2 C3010000 		.4byte	0x1c3
 1619 00f6 0A       		.uleb128 0xa
 1620 00f7 75050000 		.4byte	.LASF20
 1621 00fb 05       		.byte	0x5
 1622 00fc 2A       		.byte	0x2a
 1623 00fd C4000000 		.4byte	0xc4
 1624 0101 00       		.byte	0
 1625 0102 0A       		.uleb128 0xa
 1626 0103 BC010000 		.4byte	.LASF21
 1627 0107 05       		.byte	0x5
 1628 0108 2B       		.byte	0x2b
 1629 0109 AC000000 		.4byte	0xac
 1630 010d 01       		.byte	0x1
 1631 010e 0A       		.uleb128 0xa
 1632 010f 1D040000 		.4byte	.LASF22
 1633 0113 05       		.byte	0x5
 1634 0114 2C       		.byte	0x2c
 1635 0115 D0000000 		.4byte	0xd0
 1636 0119 02       		.byte	0x2
 1637 011a 0A       		.uleb128 0xa
 1638 011b 3B050000 		.4byte	.LASF23
 1639 011f 05       		.byte	0x5
 1640 0120 2D       		.byte	0x2d
 1641 0121 D0000000 		.4byte	0xd0
 1642 0125 04       		.byte	0x4
 1643 0126 0A       		.uleb128 0xa
 1644 0127 7A050000 		.4byte	.LASF24
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 38


 1645 012b 05       		.byte	0x5
 1646 012c 2E       		.byte	0x2e
 1647 012d D0000000 		.4byte	0xd0
 1648 0131 06       		.byte	0x6
 1649 0132 0A       		.uleb128 0xa
 1650 0133 66020000 		.4byte	.LASF25
 1651 0137 05       		.byte	0x5
 1652 0138 2F       		.byte	0x2f
 1653 0139 D0000000 		.4byte	0xd0
 1654 013d 08       		.byte	0x8
 1655 013e 0A       		.uleb128 0xa
 1656 013f F2040000 		.4byte	.LASF26
 1657 0143 05       		.byte	0x5
 1658 0144 30       		.byte	0x30
 1659 0145 D0000000 		.4byte	0xd0
 1660 0149 0A       		.byte	0xa
 1661 014a 0A       		.uleb128 0xa
 1662 014b 26030000 		.4byte	.LASF27
 1663 014f 05       		.byte	0x5
 1664 0150 31       		.byte	0x31
 1665 0151 D0000000 		.4byte	0xd0
 1666 0155 0C       		.byte	0xc
 1667 0156 0A       		.uleb128 0xa
 1668 0157 59020000 		.4byte	.LASF28
 1669 015b 05       		.byte	0x5
 1670 015c 32       		.byte	0x32
 1671 015d D0000000 		.4byte	0xd0
 1672 0161 0E       		.byte	0xe
 1673 0162 0A       		.uleb128 0xa
 1674 0163 B6030000 		.4byte	.LASF29
 1675 0167 05       		.byte	0x5
 1676 0168 33       		.byte	0x33
 1677 0169 D0000000 		.4byte	0xd0
 1678 016d 10       		.byte	0x10
 1679 016e 0A       		.uleb128 0xa
 1680 016f EA020000 		.4byte	.LASF30
 1681 0173 05       		.byte	0x5
 1682 0174 34       		.byte	0x34
 1683 0175 D0000000 		.4byte	0xd0
 1684 0179 12       		.byte	0x12
 1685 017a 0A       		.uleb128 0xa
 1686 017b 2F030000 		.4byte	.LASF31
 1687 017f 05       		.byte	0x5
 1688 0180 35       		.byte	0x35
 1689 0181 D0000000 		.4byte	0xd0
 1690 0185 14       		.byte	0x14
 1691 0186 0A       		.uleb128 0xa
 1692 0187 CE010000 		.4byte	.LASF32
 1693 018b 05       		.byte	0x5
 1694 018c 36       		.byte	0x36
 1695 018d D0000000 		.4byte	0xd0
 1696 0191 16       		.byte	0x16
 1697 0192 0A       		.uleb128 0xa
 1698 0193 6A000000 		.4byte	.LASF33
 1699 0197 05       		.byte	0x5
 1700 0198 37       		.byte	0x37
 1701 0199 D0000000 		.4byte	0xd0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 39


 1702 019d 18       		.byte	0x18
 1703 019e 0A       		.uleb128 0xa
 1704 019f 51020000 		.4byte	.LASF34
 1705 01a3 05       		.byte	0x5
 1706 01a4 38       		.byte	0x38
 1707 01a5 D0000000 		.4byte	0xd0
 1708 01a9 1A       		.byte	0x1a
 1709 01aa 0A       		.uleb128 0xa
 1710 01ab A8030000 		.4byte	.LASF35
 1711 01af 05       		.byte	0x5
 1712 01b0 39       		.byte	0x39
 1713 01b1 D0000000 		.4byte	0xd0
 1714 01b5 1C       		.byte	0x1c
 1715 01b6 0A       		.uleb128 0xa
 1716 01b7 A8010000 		.4byte	.LASF36
 1717 01bb 05       		.byte	0x5
 1718 01bc 3A       		.byte	0x3a
 1719 01bd D0000000 		.4byte	0xd0
 1720 01c1 1E       		.byte	0x1e
 1721 01c2 00       		.byte	0
 1722 01c3 0B       		.uleb128 0xb
 1723 01c4 656F6300 		.ascii	"eoc\000"
 1724 01c8 01       		.byte	0x1
 1725 01c9 4B       		.byte	0x4b
 1726 01ca 00000000 		.4byte	.LFB64
 1727 01ce 18000000 		.4byte	.LFE64-.LFB64
 1728 01d2 01       		.uleb128 0x1
 1729 01d3 9C       		.byte	0x9c
 1730 01d4 0C       		.uleb128 0xc
 1731 01d5 37010000 		.4byte	.LASF55
 1732 01d9 01       		.byte	0x1
 1733 01da 4F       		.byte	0x4f
 1734 01db 68000000 		.4byte	0x68
 1735 01df 00000000 		.4byte	.LFB65
 1736 01e3 6C080000 		.4byte	.LFE65-.LFB65
 1737 01e7 01       		.uleb128 0x1
 1738 01e8 9C       		.byte	0x9c
 1739 01e9 86030000 		.4byte	0x386
 1740 01ed 0D       		.uleb128 0xd
 1741 01ee 34000000 		.4byte	.LBB2
 1742 01f2 5A000000 		.4byte	.LBE2-.LBB2
 1743 01f6 07020000 		.4byte	0x207
 1744 01fa 0E       		.uleb128 0xe
 1745 01fb 6900     		.ascii	"i\000"
 1746 01fd 01       		.byte	0x1
 1747 01fe 68       		.byte	0x68
 1748 01ff 68000000 		.4byte	0x68
 1749 0203 02       		.uleb128 0x2
 1750 0204 91       		.byte	0x91
 1751 0205 6C       		.sleb128 -20
 1752 0206 00       		.byte	0
 1753 0207 0F       		.uleb128 0xf
 1754 0208 1E010000 		.4byte	.LBB3
 1755 020c 1C070000 		.4byte	.LBE3-.LBB3
 1756 0210 10       		.uleb128 0x10
 1757 0211 0B000000 		.4byte	.LASF37
 1758 0215 01       		.byte	0x1
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 40


 1759 0216 82       		.byte	0x82
 1760 0217 68000000 		.4byte	0x68
 1761 021b 02       		.uleb128 0x2
 1762 021c 91       		.byte	0x91
 1763 021d 68       		.sleb128 -24
 1764 021e 10       		.uleb128 0x10
 1765 021f 7A040000 		.4byte	.LASF38
 1766 0223 01       		.byte	0x1
 1767 0224 83       		.byte	0x83
 1768 0225 68000000 		.4byte	0x68
 1769 0229 02       		.uleb128 0x2
 1770 022a 91       		.byte	0x91
 1771 022b 64       		.sleb128 -28
 1772 022c 10       		.uleb128 0x10
 1773 022d D1030000 		.4byte	.LASF39
 1774 0231 01       		.byte	0x1
 1775 0232 84       		.byte	0x84
 1776 0233 68000000 		.4byte	0x68
 1777 0237 02       		.uleb128 0x2
 1778 0238 91       		.byte	0x91
 1779 0239 60       		.sleb128 -32
 1780 023a 10       		.uleb128 0x10
 1781 023b 5A050000 		.4byte	.LASF40
 1782 023f 01       		.byte	0x1
 1783 0240 85       		.byte	0x85
 1784 0241 68000000 		.4byte	0x68
 1785 0245 02       		.uleb128 0x2
 1786 0246 91       		.byte	0x91
 1787 0247 44       		.sleb128 -60
 1788 0248 10       		.uleb128 0x10
 1789 0249 38030000 		.4byte	.LASF41
 1790 024d 01       		.byte	0x1
 1791 024e 86       		.byte	0x86
 1792 024f 68000000 		.4byte	0x68
 1793 0253 02       		.uleb128 0x2
 1794 0254 91       		.byte	0x91
 1795 0255 5C       		.sleb128 -36
 1796 0256 10       		.uleb128 0x10
 1797 0257 C1020000 		.4byte	.LASF42
 1798 025b 01       		.byte	0x1
 1799 025c 87       		.byte	0x87
 1800 025d 68000000 		.4byte	0x68
 1801 0261 02       		.uleb128 0x2
 1802 0262 91       		.byte	0x91
 1803 0263 58       		.sleb128 -40
 1804 0264 0D       		.uleb128 0xd
 1805 0265 52010000 		.4byte	.LBB4
 1806 0269 2A010000 		.4byte	.LBE4-.LBB4
 1807 026d A6020000 		.4byte	0x2a6
 1808 0271 0E       		.uleb128 0xe
 1809 0272 6900     		.ascii	"i\000"
 1810 0274 01       		.byte	0x1
 1811 0275 88       		.byte	0x88
 1812 0276 68000000 		.4byte	0x68
 1813 027a 02       		.uleb128 0x2
 1814 027b 91       		.byte	0x91
 1815 027c 54       		.sleb128 -44
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 41


 1816 027d 0F       		.uleb128 0xf
 1817 027e 5A010000 		.4byte	.LBB5
 1818 0282 0C010000 		.4byte	.LBE5-.LBB5
 1819 0286 10       		.uleb128 0x10
 1820 0287 04030000 		.4byte	.LASF43
 1821 028b 01       		.byte	0x1
 1822 028c 8A       		.byte	0x8a
 1823 028d 91000000 		.4byte	0x91
 1824 0291 03       		.uleb128 0x3
 1825 0292 91       		.byte	0x91
 1826 0293 A87F     		.sleb128 -88
 1827 0295 10       		.uleb128 0x10
 1828 0296 0C030000 		.4byte	.LASF44
 1829 029a 01       		.byte	0x1
 1830 029b 8B       		.byte	0x8b
 1831 029c 91000000 		.4byte	0x91
 1832 02a0 03       		.uleb128 0x3
 1833 02a1 91       		.byte	0x91
 1834 02a2 907F     		.sleb128 -112
 1835 02a4 00       		.byte	0
 1836 02a5 00       		.byte	0
 1837 02a6 0D       		.uleb128 0xd
 1838 02a7 86020000 		.4byte	.LBB6
 1839 02ab 56010000 		.4byte	.LBE6-.LBB6
 1840 02af E4020000 		.4byte	0x2e4
 1841 02b3 0E       		.uleb128 0xe
 1842 02b4 6900     		.ascii	"i\000"
 1843 02b6 01       		.byte	0x1
 1844 02b7 B5       		.byte	0xb5
 1845 02b8 68000000 		.4byte	0x68
 1846 02bc 02       		.uleb128 0x2
 1847 02bd 91       		.byte	0x91
 1848 02be 50       		.sleb128 -48
 1849 02bf 10       		.uleb128 0x10
 1850 02c0 14030000 		.4byte	.LASF45
 1851 02c4 01       		.byte	0x1
 1852 02c5 B5       		.byte	0xb5
 1853 02c6 68000000 		.4byte	0x68
 1854 02ca 02       		.uleb128 0x2
 1855 02cb 91       		.byte	0x91
 1856 02cc 4C       		.sleb128 -52
 1857 02cd 0F       		.uleb128 0xf
 1858 02ce AC030000 		.4byte	.LBB7
 1859 02d2 1C000000 		.4byte	.LBE7-.LBB7
 1860 02d6 0E       		.uleb128 0xe
 1861 02d7 6900     		.ascii	"i\000"
 1862 02d9 01       		.byte	0x1
 1863 02da CE       		.byte	0xce
 1864 02db 68000000 		.4byte	0x68
 1865 02df 02       		.uleb128 0x2
 1866 02e0 91       		.byte	0x91
 1867 02e1 48       		.sleb128 -56
 1868 02e2 00       		.byte	0
 1869 02e3 00       		.byte	0
 1870 02e4 0F       		.uleb128 0xf
 1871 02e5 DE030000 		.4byte	.LBB8
 1872 02e9 5C040000 		.4byte	.LBE8-.LBB8
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 42


 1873 02ed 10       		.uleb128 0x10
 1874 02ee A7020000 		.4byte	.LASF46
 1875 02f2 01       		.byte	0x1
 1876 02f3 DE       		.byte	0xde
 1877 02f4 8A000000 		.4byte	0x8a
 1878 02f8 02       		.uleb128 0x2
 1879 02f9 91       		.byte	0x91
 1880 02fa 43       		.sleb128 -61
 1881 02fb 10       		.uleb128 0x10
 1882 02fc 92050000 		.4byte	.LASF47
 1883 0300 01       		.byte	0x1
 1884 0301 DF       		.byte	0xdf
 1885 0302 8A000000 		.4byte	0x8a
 1886 0306 02       		.uleb128 0x2
 1887 0307 91       		.byte	0x91
 1888 0308 42       		.sleb128 -62
 1889 0309 0F       		.uleb128 0xf
 1890 030a 12060000 		.4byte	.LBB9
 1891 030e 0C020000 		.4byte	.LBE9-.LBB9
 1892 0312 11       		.uleb128 0x11
 1893 0313 B1030000 		.4byte	.LASF48
 1894 0317 01       		.byte	0x1
 1895 0318 6601     		.2byte	0x166
 1896 031a 91000000 		.4byte	0x91
 1897 031e 03       		.uleb128 0x3
 1898 031f 91       		.byte	0x91
 1899 0320 E07E     		.sleb128 -160
 1900 0322 11       		.uleb128 0x11
 1901 0323 3F040000 		.4byte	.LASF49
 1902 0327 01       		.byte	0x1
 1903 0328 6701     		.2byte	0x167
 1904 032a 91000000 		.4byte	0x91
 1905 032e 03       		.uleb128 0x3
 1906 032f 91       		.byte	0x91
 1907 0330 C87E     		.sleb128 -184
 1908 0332 11       		.uleb128 0x11
 1909 0333 8C050000 		.4byte	.LASF50
 1910 0337 01       		.byte	0x1
 1911 0338 6801     		.2byte	0x168
 1912 033a 91000000 		.4byte	0x91
 1913 033e 03       		.uleb128 0x3
 1914 033f 91       		.byte	0x91
 1915 0340 B07E     		.sleb128 -208
 1916 0342 11       		.uleb128 0x11
 1917 0343 62030000 		.4byte	.LASF51
 1918 0347 01       		.byte	0x1
 1919 0348 6901     		.2byte	0x169
 1920 034a 91000000 		.4byte	0x91
 1921 034e 03       		.uleb128 0x3
 1922 034f 91       		.byte	0x91
 1923 0350 987E     		.sleb128 -232
 1924 0352 11       		.uleb128 0x11
 1925 0353 46050000 		.4byte	.LASF52
 1926 0357 01       		.byte	0x1
 1927 0358 6B01     		.2byte	0x16b
 1928 035a 91000000 		.4byte	0x91
 1929 035e 03       		.uleb128 0x3
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 43


 1930 035f 91       		.byte	0x91
 1931 0360 807E     		.sleb128 -256
 1932 0362 11       		.uleb128 0x11
 1933 0363 46040000 		.4byte	.LASF53
 1934 0367 01       		.byte	0x1
 1935 0368 6C01     		.2byte	0x16c
 1936 036a 91000000 		.4byte	0x91
 1937 036e 03       		.uleb128 0x3
 1938 036f 91       		.byte	0x91
 1939 0370 E87D     		.sleb128 -280
 1940 0372 11       		.uleb128 0x11
 1941 0373 0E040000 		.4byte	.LASF54
 1942 0377 01       		.byte	0x1
 1943 0378 7101     		.2byte	0x171
 1944 037a 86030000 		.4byte	0x386
 1945 037e 03       		.uleb128 0x3
 1946 037f 91       		.byte	0x91
 1947 0380 C07D     		.sleb128 -320
 1948 0382 00       		.byte	0
 1949 0383 00       		.byte	0
 1950 0384 00       		.byte	0
 1951 0385 00       		.byte	0
 1952 0386 06       		.uleb128 0x6
 1953 0387 68000000 		.4byte	0x68
 1954 038b 96030000 		.4byte	0x396
 1955 038f 07       		.uleb128 0x7
 1956 0390 7D000000 		.4byte	0x7d
 1957 0394 09       		.byte	0x9
 1958 0395 00       		.byte	0
 1959 0396 12       		.uleb128 0x12
 1960 0397 30020000 		.4byte	.LASF56
 1961 039b 01       		.byte	0x1
 1962 039c AE01     		.2byte	0x1ae
 1963 039e 00000000 		.4byte	.LFB66
 1964 03a2 3E000000 		.4byte	.LFE66-.LFB66
 1965 03a6 01       		.uleb128 0x1
 1966 03a7 9C       		.byte	0x9c
 1967 03a8 BA030000 		.4byte	0x3ba
 1968 03ac 13       		.uleb128 0x13
 1969 03ad 7300     		.ascii	"s\000"
 1970 03af 01       		.byte	0x1
 1971 03b0 AE01     		.2byte	0x1ae
 1972 03b2 84000000 		.4byte	0x84
 1973 03b6 02       		.uleb128 0x2
 1974 03b7 91       		.byte	0x91
 1975 03b8 74       		.sleb128 -12
 1976 03b9 00       		.byte	0
 1977 03ba 12       		.uleb128 0x12
 1978 03bb 00000000 		.4byte	.LASF57
 1979 03bf 01       		.byte	0x1
 1980 03c0 BB01     		.2byte	0x1bb
 1981 03c2 00000000 		.4byte	.LFB67
 1982 03c6 26000000 		.4byte	.LFE67-.LFB67
 1983 03ca 01       		.uleb128 0x1
 1984 03cb 9C       		.byte	0x9c
 1985 03cc DE030000 		.4byte	0x3de
 1986 03d0 13       		.uleb128 0x13
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 44


 1987 03d1 6300     		.ascii	"c\000"
 1988 03d3 01       		.byte	0x1
 1989 03d4 BB01     		.2byte	0x1bb
 1990 03d6 8A000000 		.4byte	0x8a
 1991 03da 02       		.uleb128 0x2
 1992 03db 91       		.byte	0x91
 1993 03dc 77       		.sleb128 -9
 1994 03dd 00       		.byte	0
 1995 03de 14       		.uleb128 0x14
 1996 03df AC040000 		.4byte	.LASF58
 1997 03e3 06       		.byte	0x6
 1998 03e4 1207     		.2byte	0x712
 1999 03e6 EA030000 		.4byte	0x3ea
 2000 03ea 15       		.uleb128 0x15
 2001 03eb A1000000 		.4byte	0xa1
 2002 03ef 16       		.uleb128 0x16
 2003 03f0 747300   		.ascii	"ts\000"
 2004 03f3 05       		.byte	0x5
 2005 03f4 10       		.byte	0x10
 2006 03f5 AC000000 		.4byte	0xac
 2007 03f9 05       		.uleb128 0x5
 2008 03fa 03       		.byte	0x3
 2009 03fb 00000000 		.4byte	ts
 2010 03ff 17       		.uleb128 0x17
 2011 0400 0E050000 		.4byte	.LASF59
 2012 0404 05       		.byte	0x5
 2013 0405 11       		.byte	0x11
 2014 0406 B8000000 		.4byte	0xb8
 2015 040a 05       		.uleb128 0x5
 2016 040b 03       		.byte	0x3
 2017 040c 00000000 		.4byte	ts_enc
 2018 0410 17       		.uleb128 0x17
 2019 0411 15050000 		.4byte	.LASF60
 2020 0415 05       		.byte	0x5
 2021 0416 12       		.byte	0x12
 2022 0417 B8000000 		.4byte	0xb8
 2023 041b 05       		.uleb128 0x5
 2024 041c 03       		.byte	0x3
 2025 041d 00000000 		.4byte	ts_update
 2026 0421 17       		.uleb128 0x17
 2027 0422 05050000 		.4byte	.LASF61
 2028 0426 05       		.byte	0x5
 2029 0427 13       		.byte	0x13
 2030 0428 B8000000 		.4byte	0xb8
 2031 042c 05       		.uleb128 0x5
 2032 042d 03       		.byte	0x3
 2033 042e 00000000 		.4byte	ts_speed
 2034 0432 17       		.uleb128 0x17
 2035 0433 FA040000 		.4byte	.LASF62
 2036 0437 05       		.byte	0x5
 2037 0438 14       		.byte	0x14
 2038 0439 B8000000 		.4byte	0xb8
 2039 043d 05       		.uleb128 0x5
 2040 043e 03       		.byte	0x3
 2041 043f 00000000 		.4byte	ts_display
 2042 0443 17       		.uleb128 0x17
 2043 0444 CB040000 		.4byte	.LASF63
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 45


 2044 0448 05       		.byte	0x5
 2045 0449 16       		.byte	0x16
 2046 044a AC000000 		.4byte	0xac
 2047 044e 05       		.uleb128 0x5
 2048 044f 03       		.byte	0x3
 2049 0450 00000000 		.4byte	flag_ts_enc
 2050 0454 17       		.uleb128 0x17
 2051 0455 42020000 		.4byte	.LASF64
 2052 0459 05       		.byte	0x5
 2053 045a 17       		.byte	0x17
 2054 045b AC000000 		.4byte	0xac
 2055 045f 05       		.uleb128 0x5
 2056 0460 03       		.byte	0x3
 2057 0461 00000000 		.4byte	flag_ts_update
 2058 0465 17       		.uleb128 0x17
 2059 0466 5C000000 		.4byte	.LASF65
 2060 046a 05       		.byte	0x5
 2061 046b 18       		.byte	0x18
 2062 046c AC000000 		.4byte	0xac
 2063 0470 05       		.uleb128 0x5
 2064 0471 03       		.byte	0x3
 2065 0472 00000000 		.4byte	flag_ts_speed
 2066 0476 17       		.uleb128 0x17
 2067 0477 97020000 		.4byte	.LASF66
 2068 047b 05       		.byte	0x5
 2069 047c 19       		.byte	0x19
 2070 047d AC000000 		.4byte	0xac
 2071 0481 05       		.uleb128 0x5
 2072 0482 03       		.byte	0x3
 2073 0483 00000000 		.4byte	flag_ts_display
 2074 0487 17       		.uleb128 0x17
 2075 0488 5A030000 		.4byte	.LASF67
 2076 048c 05       		.byte	0x5
 2077 048d 1C       		.byte	0x1c
 2078 048e AC000000 		.4byte	0xac
 2079 0492 05       		.uleb128 0x5
 2080 0493 03       		.byte	0x3
 2081 0494 00000000 		.4byte	flag_rx
 2082 0498 17       		.uleb128 0x17
 2083 0499 41000000 		.4byte	.LASF68
 2084 049d 05       		.byte	0x5
 2085 049e 1D       		.byte	0x1d
 2086 049f AC000000 		.4byte	0xac
 2087 04a3 05       		.uleb128 0x5
 2088 04a4 03       		.byte	0x3
 2089 04a5 00000000 		.4byte	flag_packet
 2090 04a9 17       		.uleb128 0x17
 2091 04aa 8D030000 		.4byte	.LASF69
 2092 04ae 05       		.byte	0x5
 2093 04af 1E       		.byte	0x1e
 2094 04b0 AC000000 		.4byte	0xac
 2095 04b4 05       		.uleb128 0x5
 2096 04b5 03       		.byte	0x3
 2097 04b6 00000000 		.4byte	flag_KB_string
 2098 04ba 17       		.uleb128 0x17
 2099 04bb 4B030000 		.4byte	.LASF70
 2100 04bf 05       		.byte	0x5
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 46


 2101 04c0 20       		.byte	0x20
 2102 04c1 AC000000 		.4byte	0xac
 2103 04c5 05       		.uleb128 0x5
 2104 04c6 03       		.byte	0x3
 2105 04c7 00000000 		.4byte	dataready_flag
 2106 04cb 17       		.uleb128 0x17
 2107 04cc 1F050000 		.4byte	.LASF71
 2108 04d0 05       		.byte	0x5
 2109 04d1 22       		.byte	0x22
 2110 04d2 AC000000 		.4byte	0xac
 2111 04d6 05       		.uleb128 0x5
 2112 04d7 03       		.byte	0x3
 2113 04d8 00000000 		.4byte	flag_rf_transmission_active
 2114 04dc 06       		.uleb128 0x6
 2115 04dd 8A000000 		.4byte	0x8a
 2116 04e1 EC040000 		.4byte	0x4ec
 2117 04e5 07       		.uleb128 0x7
 2118 04e6 7D000000 		.4byte	0x7d
 2119 04ea 3F       		.byte	0x3f
 2120 04eb 00       		.byte	0
 2121 04ec 17       		.uleb128 0x17
 2122 04ed 62040000 		.4byte	.LASF72
 2123 04f1 05       		.byte	0x5
 2124 04f2 25       		.byte	0x25
 2125 04f3 DC040000 		.4byte	0x4dc
 2126 04f7 05       		.uleb128 0x5
 2127 04f8 03       		.byte	0x3
 2128 04f9 00000000 		.4byte	displaystring
 2129 04fd 17       		.uleb128 0x17
 2130 04fe 03020000 		.4byte	.LASF73
 2131 0502 05       		.byte	0x5
 2132 0503 26       		.byte	0x26
 2133 0504 DC040000 		.4byte	0x4dc
 2134 0508 05       		.uleb128 0x5
 2135 0509 03       		.byte	0x3
 2136 050a 00000000 		.4byte	line
 2137 050e 17       		.uleb128 0x17
 2138 050f FE020000 		.4byte	.LASF74
 2139 0513 05       		.byte	0x5
 2140 0514 26       		.byte	0x26
 2141 0515 DC040000 		.4byte	0x4dc
 2142 0519 05       		.uleb128 0x5
 2143 051a 03       		.byte	0x3
 2144 051b 00000000 		.4byte	entry
 2145 051f 06       		.uleb128 0x6
 2146 0520 AC000000 		.4byte	0xac
 2147 0524 2F050000 		.4byte	0x52f
 2148 0528 07       		.uleb128 0x7
 2149 0529 7D000000 		.4byte	0x7d
 2150 052d 3F       		.byte	0x3f
 2151 052e 00       		.byte	0
 2152 052f 17       		.uleb128 0x17
 2153 0530 9F000000 		.4byte	.LASF75
 2154 0534 05       		.byte	0x5
 2155 0535 27       		.byte	0x27
 2156 0536 1F050000 		.4byte	0x51f
 2157 053a 05       		.uleb128 0x5
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 47


 2158 053b 03       		.byte	0x3
 2159 053c 00000000 		.4byte	usbBuffer
 2160 0540 17       		.uleb128 0x17
 2161 0541 7C000000 		.4byte	.LASF76
 2162 0545 05       		.byte	0x5
 2163 0546 3C       		.byte	0x3c
 2164 0547 EA000000 		.4byte	0xea
 2165 054b 05       		.uleb128 0x5
 2166 054c 03       		.byte	0x3
 2167 054d 00000000 		.4byte	system_state
 2168 0551 17       		.uleb128 0x17
 2169 0552 9C030000 		.4byte	.LASF77
 2170 0556 01       		.byte	0x1
 2171 0557 2A       		.byte	0x2a
 2172 0558 68000000 		.4byte	0x68
 2173 055c 05       		.uleb128 0x5
 2174 055d 03       		.byte	0x3
 2175 055e 00000000 		.4byte	consecStops
 2176 0562 17       		.uleb128 0x17
 2177 0563 1A020000 		.4byte	.LASF78
 2178 0567 01       		.byte	0x1
 2179 0568 2B       		.byte	0x2b
 2180 0569 68000000 		.4byte	0x68
 2181 056d 05       		.uleb128 0x5
 2182 056e 03       		.byte	0x3
 2183 056f 00000000 		.4byte	started
 2184 0573 17       		.uleb128 0x17
 2185 0574 B9040000 		.4byte	.LASF79
 2186 0578 01       		.byte	0x1
 2187 0579 2C       		.byte	0x2c
 2188 057a 68000000 		.4byte	0x68
 2189 057e 05       		.uleb128 0x5
 2190 057f 03       		.byte	0x3
 2191 0580 00000000 		.4byte	instCounter
 2192 0584 17       		.uleb128 0x17
 2193 0585 30040000 		.4byte	.LASF80
 2194 0589 01       		.byte	0x1
 2195 058a 32       		.byte	0x32
 2196 058b 95050000 		.4byte	0x595
 2197 058f 05       		.uleb128 0x5
 2198 0590 03       		.byte	0x3
 2199 0591 00000000 		.4byte	flag
 2200 0595 15       		.uleb128 0x15
 2201 0596 68000000 		.4byte	0x68
 2202 059a 06       		.uleb128 0x6
 2203 059b 95050000 		.4byte	0x595
 2204 059f AB050000 		.4byte	0x5ab
 2205 05a3 18       		.uleb128 0x18
 2206 05a4 7D000000 		.4byte	0x7d
 2207 05a8 F301     		.2byte	0x1f3
 2208 05aa 00       		.byte	0
 2209 05ab 17       		.uleb128 0x17
 2210 05ac 4B040000 		.4byte	.LASF81
 2211 05b0 01       		.byte	0x1
 2212 05b1 33       		.byte	0x33
 2213 05b2 BC050000 		.4byte	0x5bc
 2214 05b6 05       		.uleb128 0x5
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 48


 2215 05b7 03       		.byte	0x3
 2216 05b8 00000000 		.4byte	valuesLeftIntersection
 2217 05bc 15       		.uleb128 0x15
 2218 05bd 9A050000 		.4byte	0x59a
 2219 05c1 17       		.uleb128 0x17
 2220 05c2 4D000000 		.4byte	.LASF82
 2221 05c6 01       		.byte	0x1
 2222 05c7 34       		.byte	0x34
 2223 05c8 D2050000 		.4byte	0x5d2
 2224 05cc 05       		.uleb128 0x5
 2225 05cd 03       		.byte	0x3
 2226 05ce 00000000 		.4byte	valuesLeftLine
 2227 05d2 15       		.uleb128 0x15
 2228 05d3 9A050000 		.4byte	0x59a
 2229 05d7 17       		.uleb128 0x17
 2230 05d8 E5030000 		.4byte	.LASF83
 2231 05dc 01       		.byte	0x1
 2232 05dd 35       		.byte	0x35
 2233 05de E8050000 		.4byte	0x5e8
 2234 05e2 05       		.uleb128 0x5
 2235 05e3 03       		.byte	0x3
 2236 05e4 00000000 		.4byte	valuesMiddleLine
 2237 05e8 15       		.uleb128 0x15
 2238 05e9 9A050000 		.4byte	0x59a
 2239 05ed 17       		.uleb128 0x17
 2240 05ee 98010000 		.4byte	.LASF84
 2241 05f2 01       		.byte	0x1
 2242 05f3 36       		.byte	0x36
 2243 05f4 FE050000 		.4byte	0x5fe
 2244 05f8 05       		.uleb128 0x5
 2245 05f9 03       		.byte	0x3
 2246 05fa 00000000 		.4byte	valuesRightLine
 2247 05fe 15       		.uleb128 0x15
 2248 05ff 9A050000 		.4byte	0x59a
 2249 0603 17       		.uleb128 0x17
 2250 0604 DB010000 		.4byte	.LASF85
 2251 0608 01       		.byte	0x1
 2252 0609 37       		.byte	0x37
 2253 060a 14060000 		.4byte	0x614
 2254 060e 05       		.uleb128 0x5
 2255 060f 03       		.byte	0x3
 2256 0610 00000000 		.4byte	valuesRightIntersection
 2257 0614 15       		.uleb128 0x15
 2258 0615 9A050000 		.4byte	0x59a
 2259 0619 17       		.uleb128 0x17
 2260 061a C5040000 		.4byte	.LASF86
 2261 061e 01       		.byte	0x1
 2262 061f 38       		.byte	0x38
 2263 0620 95050000 		.4byte	0x595
 2264 0624 05       		.uleb128 0x5
 2265 0625 03       		.byte	0x3
 2266 0626 00000000 		.4byte	count
 2267 062a 17       		.uleb128 0x17
 2268 062b E1040000 		.4byte	.LASF87
 2269 062f 01       		.byte	0x1
 2270 0630 39       		.byte	0x39
 2271 0631 95050000 		.4byte	0x595
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 49


 2272 0635 05       		.uleb128 0x5
 2273 0636 03       		.byte	0x3
 2274 0637 00000000 		.4byte	motorUpdateCount
 2275 063b 17       		.uleb128 0x17
 2276 063c 77020000 		.4byte	.LASF88
 2277 0640 01       		.byte	0x1
 2278 0641 3A       		.byte	0x3a
 2279 0642 95050000 		.4byte	0x595
 2280 0646 05       		.uleb128 0x5
 2281 0647 03       		.byte	0x3
 2282 0648 00000000 		.4byte	lastVeerDirection
 2283 064c 17       		.uleb128 0x17
 2284 064d D7040000 		.4byte	.LASF89
 2285 0651 01       		.byte	0x1
 2286 0652 3C       		.byte	0x3c
 2287 0653 95050000 		.4byte	0x595
 2288 0657 05       		.uleb128 0x5
 2289 0658 03       		.byte	0x3
 2290 0659 00000000 		.4byte	v1M1
 2291 065d 17       		.uleb128 0x17
 2292 065e DC040000 		.4byte	.LASF90
 2293 0662 01       		.byte	0x1
 2294 0663 3D       		.byte	0x3d
 2295 0664 95050000 		.4byte	0x595
 2296 0668 05       		.uleb128 0x5
 2297 0669 03       		.byte	0x3
 2298 066a 00000000 		.4byte	v1M2
 2299 066e 17       		.uleb128 0x17
 2300 066f 70040000 		.4byte	.LASF91
 2301 0673 01       		.byte	0x1
 2302 0674 3E       		.byte	0x3e
 2303 0675 95050000 		.4byte	0x595
 2304 0679 05       		.uleb128 0x5
 2305 067a 03       		.byte	0x3
 2306 067b 00000000 		.4byte	v2M1
 2307 067f 17       		.uleb128 0x17
 2308 0680 75040000 		.4byte	.LASF92
 2309 0684 01       		.byte	0x1
 2310 0685 3F       		.byte	0x3f
 2311 0686 95050000 		.4byte	0x595
 2312 068a 05       		.uleb128 0x5
 2313 068b 03       		.byte	0x3
 2314 068c 00000000 		.4byte	v2M2
 2315 0690 17       		.uleb128 0x17
 2316 0691 92000000 		.4byte	.LASF93
 2317 0695 01       		.byte	0x1
 2318 0696 40       		.byte	0x40
 2319 0697 95050000 		.4byte	0x595
 2320 069b 05       		.uleb128 0x5
 2321 069c 03       		.byte	0x3
 2322 069d 00000000 		.4byte	turnComplete
 2323 06a1 17       		.uleb128 0x17
 2324 06a2 F3010000 		.4byte	.LASF94
 2325 06a6 01       		.byte	0x1
 2326 06a7 41       		.byte	0x41
 2327 06a8 68000000 		.4byte	0x68
 2328 06ac 05       		.uleb128 0x5
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 50


 2329 06ad 03       		.byte	0x3
 2330 06ae 00000000 		.4byte	pulsesTravelled
 2331 06b2 17       		.uleb128 0x17
 2332 06b3 B3020000 		.4byte	.LASF95
 2333 06b7 01       		.byte	0x1
 2334 06b8 42       		.byte	0x42
 2335 06b9 95050000 		.4byte	0x595
 2336 06bd 05       		.uleb128 0x5
 2337 06be 03       		.byte	0x3
 2338 06bf 00000000 		.4byte	checkDistance
 2339 06c3 17       		.uleb128 0x17
 2340 06c4 70050000 		.4byte	.LASF96
 2341 06c8 01       		.byte	0x1
 2342 06c9 43       		.byte	0x43
 2343 06ca 95050000 		.4byte	0x595
 2344 06ce 05       		.uleb128 0x5
 2345 06cf 03       		.byte	0x3
 2346 06d0 00000000 		.4byte	step
 2347 06d4 17       		.uleb128 0x17
 2348 06d5 89020000 		.4byte	.LASF97
 2349 06d9 01       		.byte	0x1
 2350 06da 44       		.byte	0x44
 2351 06db 95050000 		.4byte	0x595
 2352 06df 05       		.uleb128 0x5
 2353 06e0 03       		.byte	0x3
 2354 06e1 00000000 		.4byte	interruptFlag
 2355 06e5 17       		.uleb128 0x17
 2356 06e6 2D000000 		.4byte	.LASF98
 2357 06ea 01       		.byte	0x1
 2358 06eb 46       		.byte	0x46
 2359 06ec 68000000 		.4byte	0x68
 2360 06f0 05       		.uleb128 0x5
 2361 06f1 03       		.byte	0x3
 2362 06f2 00000000 		.4byte	lastAdjustDirection
 2363 06f6 06       		.uleb128 0x6
 2364 06f7 2C000000 		.4byte	0x2c
 2365 06fb 0D070000 		.4byte	0x70d
 2366 06ff 18       		.uleb128 0x18
 2367 0700 7D000000 		.4byte	0x7d
 2368 0704 F301     		.2byte	0x1f3
 2369 0706 07       		.uleb128 0x7
 2370 0707 7D000000 		.4byte	0x7d
 2371 070b 01       		.byte	0x1
 2372 070c 00       		.byte	0
 2373 070d 17       		.uleb128 0x17
 2374 070e 25000000 		.4byte	.LASF99
 2375 0712 01       		.byte	0x1
 2376 0713 47       		.byte	0x47
 2377 0714 F6060000 		.4byte	0x6f6
 2378 0718 05       		.uleb128 0x5
 2379 0719 03       		.byte	0x3
 2380 071a 00000000 		.4byte	squares
 2381 071e 06       		.uleb128 0x6
 2382 071f 2C000000 		.4byte	0x2c
 2383 0723 2F070000 		.4byte	0x72f
 2384 0727 18       		.uleb128 0x18
 2385 0728 7D000000 		.4byte	0x7d
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 51


 2386 072c F301     		.2byte	0x1f3
 2387 072e 00       		.byte	0
 2388 072f 17       		.uleb128 0x17
 2389 0730 4E050000 		.4byte	.LASF100
 2390 0734 01       		.byte	0x1
 2391 0735 48       		.byte	0x48
 2392 0736 1E070000 		.4byte	0x71e
 2393 073a 05       		.uleb128 0x5
 2394 073b 03       		.byte	0x3
 2395 073c 00000000 		.4byte	instruction
 2396 0740 17       		.uleb128 0x17
 2397 0741 05040000 		.4byte	.LASF101
 2398 0745 01       		.byte	0x1
 2399 0746 49       		.byte	0x49
 2400 0747 1E070000 		.4byte	0x71e
 2401 074b 05       		.uleb128 0x5
 2402 074c 03       		.byte	0x3
 2403 074d 00000000 		.4byte	distance
 2404 0751 00       		.byte	0
 2405              		.section	.debug_abbrev,"",%progbits
 2406              	.Ldebug_abbrev0:
 2407 0000 01       		.uleb128 0x1
 2408 0001 11       		.uleb128 0x11
 2409 0002 01       		.byte	0x1
 2410 0003 25       		.uleb128 0x25
 2411 0004 0E       		.uleb128 0xe
 2412 0005 13       		.uleb128 0x13
 2413 0006 0B       		.uleb128 0xb
 2414 0007 03       		.uleb128 0x3
 2415 0008 0E       		.uleb128 0xe
 2416 0009 1B       		.uleb128 0x1b
 2417 000a 0E       		.uleb128 0xe
 2418 000b 55       		.uleb128 0x55
 2419 000c 17       		.uleb128 0x17
 2420 000d 11       		.uleb128 0x11
 2421 000e 01       		.uleb128 0x1
 2422 000f 10       		.uleb128 0x10
 2423 0010 17       		.uleb128 0x17
 2424 0011 00       		.byte	0
 2425 0012 00       		.byte	0
 2426 0013 02       		.uleb128 0x2
 2427 0014 24       		.uleb128 0x24
 2428 0015 00       		.byte	0
 2429 0016 0B       		.uleb128 0xb
 2430 0017 0B       		.uleb128 0xb
 2431 0018 3E       		.uleb128 0x3e
 2432 0019 0B       		.uleb128 0xb
 2433 001a 03       		.uleb128 0x3
 2434 001b 0E       		.uleb128 0xe
 2435 001c 00       		.byte	0
 2436 001d 00       		.byte	0
 2437 001e 03       		.uleb128 0x3
 2438 001f 16       		.uleb128 0x16
 2439 0020 00       		.byte	0
 2440 0021 03       		.uleb128 0x3
 2441 0022 0E       		.uleb128 0xe
 2442 0023 3A       		.uleb128 0x3a
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 52


 2443 0024 0B       		.uleb128 0xb
 2444 0025 3B       		.uleb128 0x3b
 2445 0026 0B       		.uleb128 0xb
 2446 0027 49       		.uleb128 0x49
 2447 0028 13       		.uleb128 0x13
 2448 0029 00       		.byte	0
 2449 002a 00       		.byte	0
 2450 002b 04       		.uleb128 0x4
 2451 002c 24       		.uleb128 0x24
 2452 002d 00       		.byte	0
 2453 002e 0B       		.uleb128 0xb
 2454 002f 0B       		.uleb128 0xb
 2455 0030 3E       		.uleb128 0x3e
 2456 0031 0B       		.uleb128 0xb
 2457 0032 03       		.uleb128 0x3
 2458 0033 08       		.uleb128 0x8
 2459 0034 00       		.byte	0
 2460 0035 00       		.byte	0
 2461 0036 05       		.uleb128 0x5
 2462 0037 0F       		.uleb128 0xf
 2463 0038 00       		.byte	0
 2464 0039 0B       		.uleb128 0xb
 2465 003a 0B       		.uleb128 0xb
 2466 003b 49       		.uleb128 0x49
 2467 003c 13       		.uleb128 0x13
 2468 003d 00       		.byte	0
 2469 003e 00       		.byte	0
 2470 003f 06       		.uleb128 0x6
 2471 0040 01       		.uleb128 0x1
 2472 0041 01       		.byte	0x1
 2473 0042 49       		.uleb128 0x49
 2474 0043 13       		.uleb128 0x13
 2475 0044 01       		.uleb128 0x1
 2476 0045 13       		.uleb128 0x13
 2477 0046 00       		.byte	0
 2478 0047 00       		.byte	0
 2479 0048 07       		.uleb128 0x7
 2480 0049 21       		.uleb128 0x21
 2481 004a 00       		.byte	0
 2482 004b 49       		.uleb128 0x49
 2483 004c 13       		.uleb128 0x13
 2484 004d 2F       		.uleb128 0x2f
 2485 004e 0B       		.uleb128 0xb
 2486 004f 00       		.byte	0
 2487 0050 00       		.byte	0
 2488 0051 08       		.uleb128 0x8
 2489 0052 16       		.uleb128 0x16
 2490 0053 00       		.byte	0
 2491 0054 03       		.uleb128 0x3
 2492 0055 0E       		.uleb128 0xe
 2493 0056 3A       		.uleb128 0x3a
 2494 0057 0B       		.uleb128 0xb
 2495 0058 3B       		.uleb128 0x3b
 2496 0059 05       		.uleb128 0x5
 2497 005a 49       		.uleb128 0x49
 2498 005b 13       		.uleb128 0x13
 2499 005c 00       		.byte	0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 53


 2500 005d 00       		.byte	0
 2501 005e 09       		.uleb128 0x9
 2502 005f 13       		.uleb128 0x13
 2503 0060 01       		.byte	0x1
 2504 0061 03       		.uleb128 0x3
 2505 0062 0E       		.uleb128 0xe
 2506 0063 0B       		.uleb128 0xb
 2507 0064 0B       		.uleb128 0xb
 2508 0065 3A       		.uleb128 0x3a
 2509 0066 0B       		.uleb128 0xb
 2510 0067 3B       		.uleb128 0x3b
 2511 0068 0B       		.uleb128 0xb
 2512 0069 01       		.uleb128 0x1
 2513 006a 13       		.uleb128 0x13
 2514 006b 00       		.byte	0
 2515 006c 00       		.byte	0
 2516 006d 0A       		.uleb128 0xa
 2517 006e 0D       		.uleb128 0xd
 2518 006f 00       		.byte	0
 2519 0070 03       		.uleb128 0x3
 2520 0071 0E       		.uleb128 0xe
 2521 0072 3A       		.uleb128 0x3a
 2522 0073 0B       		.uleb128 0xb
 2523 0074 3B       		.uleb128 0x3b
 2524 0075 0B       		.uleb128 0xb
 2525 0076 49       		.uleb128 0x49
 2526 0077 13       		.uleb128 0x13
 2527 0078 38       		.uleb128 0x38
 2528 0079 0B       		.uleb128 0xb
 2529 007a 00       		.byte	0
 2530 007b 00       		.byte	0
 2531 007c 0B       		.uleb128 0xb
 2532 007d 2E       		.uleb128 0x2e
 2533 007e 00       		.byte	0
 2534 007f 3F       		.uleb128 0x3f
 2535 0080 19       		.uleb128 0x19
 2536 0081 03       		.uleb128 0x3
 2537 0082 08       		.uleb128 0x8
 2538 0083 3A       		.uleb128 0x3a
 2539 0084 0B       		.uleb128 0xb
 2540 0085 3B       		.uleb128 0x3b
 2541 0086 0B       		.uleb128 0xb
 2542 0087 27       		.uleb128 0x27
 2543 0088 19       		.uleb128 0x19
 2544 0089 11       		.uleb128 0x11
 2545 008a 01       		.uleb128 0x1
 2546 008b 12       		.uleb128 0x12
 2547 008c 06       		.uleb128 0x6
 2548 008d 40       		.uleb128 0x40
 2549 008e 18       		.uleb128 0x18
 2550 008f 9742     		.uleb128 0x2117
 2551 0091 19       		.uleb128 0x19
 2552 0092 00       		.byte	0
 2553 0093 00       		.byte	0
 2554 0094 0C       		.uleb128 0xc
 2555 0095 2E       		.uleb128 0x2e
 2556 0096 01       		.byte	0x1
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 54


 2557 0097 3F       		.uleb128 0x3f
 2558 0098 19       		.uleb128 0x19
 2559 0099 03       		.uleb128 0x3
 2560 009a 0E       		.uleb128 0xe
 2561 009b 3A       		.uleb128 0x3a
 2562 009c 0B       		.uleb128 0xb
 2563 009d 3B       		.uleb128 0x3b
 2564 009e 0B       		.uleb128 0xb
 2565 009f 49       		.uleb128 0x49
 2566 00a0 13       		.uleb128 0x13
 2567 00a1 11       		.uleb128 0x11
 2568 00a2 01       		.uleb128 0x1
 2569 00a3 12       		.uleb128 0x12
 2570 00a4 06       		.uleb128 0x6
 2571 00a5 40       		.uleb128 0x40
 2572 00a6 18       		.uleb128 0x18
 2573 00a7 9642     		.uleb128 0x2116
 2574 00a9 19       		.uleb128 0x19
 2575 00aa 01       		.uleb128 0x1
 2576 00ab 13       		.uleb128 0x13
 2577 00ac 00       		.byte	0
 2578 00ad 00       		.byte	0
 2579 00ae 0D       		.uleb128 0xd
 2580 00af 0B       		.uleb128 0xb
 2581 00b0 01       		.byte	0x1
 2582 00b1 11       		.uleb128 0x11
 2583 00b2 01       		.uleb128 0x1
 2584 00b3 12       		.uleb128 0x12
 2585 00b4 06       		.uleb128 0x6
 2586 00b5 01       		.uleb128 0x1
 2587 00b6 13       		.uleb128 0x13
 2588 00b7 00       		.byte	0
 2589 00b8 00       		.byte	0
 2590 00b9 0E       		.uleb128 0xe
 2591 00ba 34       		.uleb128 0x34
 2592 00bb 00       		.byte	0
 2593 00bc 03       		.uleb128 0x3
 2594 00bd 08       		.uleb128 0x8
 2595 00be 3A       		.uleb128 0x3a
 2596 00bf 0B       		.uleb128 0xb
 2597 00c0 3B       		.uleb128 0x3b
 2598 00c1 0B       		.uleb128 0xb
 2599 00c2 49       		.uleb128 0x49
 2600 00c3 13       		.uleb128 0x13
 2601 00c4 02       		.uleb128 0x2
 2602 00c5 18       		.uleb128 0x18
 2603 00c6 00       		.byte	0
 2604 00c7 00       		.byte	0
 2605 00c8 0F       		.uleb128 0xf
 2606 00c9 0B       		.uleb128 0xb
 2607 00ca 01       		.byte	0x1
 2608 00cb 11       		.uleb128 0x11
 2609 00cc 01       		.uleb128 0x1
 2610 00cd 12       		.uleb128 0x12
 2611 00ce 06       		.uleb128 0x6
 2612 00cf 00       		.byte	0
 2613 00d0 00       		.byte	0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 55


 2614 00d1 10       		.uleb128 0x10
 2615 00d2 34       		.uleb128 0x34
 2616 00d3 00       		.byte	0
 2617 00d4 03       		.uleb128 0x3
 2618 00d5 0E       		.uleb128 0xe
 2619 00d6 3A       		.uleb128 0x3a
 2620 00d7 0B       		.uleb128 0xb
 2621 00d8 3B       		.uleb128 0x3b
 2622 00d9 0B       		.uleb128 0xb
 2623 00da 49       		.uleb128 0x49
 2624 00db 13       		.uleb128 0x13
 2625 00dc 02       		.uleb128 0x2
 2626 00dd 18       		.uleb128 0x18
 2627 00de 00       		.byte	0
 2628 00df 00       		.byte	0
 2629 00e0 11       		.uleb128 0x11
 2630 00e1 34       		.uleb128 0x34
 2631 00e2 00       		.byte	0
 2632 00e3 03       		.uleb128 0x3
 2633 00e4 0E       		.uleb128 0xe
 2634 00e5 3A       		.uleb128 0x3a
 2635 00e6 0B       		.uleb128 0xb
 2636 00e7 3B       		.uleb128 0x3b
 2637 00e8 05       		.uleb128 0x5
 2638 00e9 49       		.uleb128 0x49
 2639 00ea 13       		.uleb128 0x13
 2640 00eb 02       		.uleb128 0x2
 2641 00ec 18       		.uleb128 0x18
 2642 00ed 00       		.byte	0
 2643 00ee 00       		.byte	0
 2644 00ef 12       		.uleb128 0x12
 2645 00f0 2E       		.uleb128 0x2e
 2646 00f1 01       		.byte	0x1
 2647 00f2 3F       		.uleb128 0x3f
 2648 00f3 19       		.uleb128 0x19
 2649 00f4 03       		.uleb128 0x3
 2650 00f5 0E       		.uleb128 0xe
 2651 00f6 3A       		.uleb128 0x3a
 2652 00f7 0B       		.uleb128 0xb
 2653 00f8 3B       		.uleb128 0x3b
 2654 00f9 05       		.uleb128 0x5
 2655 00fa 27       		.uleb128 0x27
 2656 00fb 19       		.uleb128 0x19
 2657 00fc 11       		.uleb128 0x11
 2658 00fd 01       		.uleb128 0x1
 2659 00fe 12       		.uleb128 0x12
 2660 00ff 06       		.uleb128 0x6
 2661 0100 40       		.uleb128 0x40
 2662 0101 18       		.uleb128 0x18
 2663 0102 9642     		.uleb128 0x2116
 2664 0104 19       		.uleb128 0x19
 2665 0105 01       		.uleb128 0x1
 2666 0106 13       		.uleb128 0x13
 2667 0107 00       		.byte	0
 2668 0108 00       		.byte	0
 2669 0109 13       		.uleb128 0x13
 2670 010a 05       		.uleb128 0x5
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 56


 2671 010b 00       		.byte	0
 2672 010c 03       		.uleb128 0x3
 2673 010d 08       		.uleb128 0x8
 2674 010e 3A       		.uleb128 0x3a
 2675 010f 0B       		.uleb128 0xb
 2676 0110 3B       		.uleb128 0x3b
 2677 0111 05       		.uleb128 0x5
 2678 0112 49       		.uleb128 0x49
 2679 0113 13       		.uleb128 0x13
 2680 0114 02       		.uleb128 0x2
 2681 0115 18       		.uleb128 0x18
 2682 0116 00       		.byte	0
 2683 0117 00       		.byte	0
 2684 0118 14       		.uleb128 0x14
 2685 0119 34       		.uleb128 0x34
 2686 011a 00       		.byte	0
 2687 011b 03       		.uleb128 0x3
 2688 011c 0E       		.uleb128 0xe
 2689 011d 3A       		.uleb128 0x3a
 2690 011e 0B       		.uleb128 0xb
 2691 011f 3B       		.uleb128 0x3b
 2692 0120 05       		.uleb128 0x5
 2693 0121 49       		.uleb128 0x49
 2694 0122 13       		.uleb128 0x13
 2695 0123 3F       		.uleb128 0x3f
 2696 0124 19       		.uleb128 0x19
 2697 0125 3C       		.uleb128 0x3c
 2698 0126 19       		.uleb128 0x19
 2699 0127 00       		.byte	0
 2700 0128 00       		.byte	0
 2701 0129 15       		.uleb128 0x15
 2702 012a 35       		.uleb128 0x35
 2703 012b 00       		.byte	0
 2704 012c 49       		.uleb128 0x49
 2705 012d 13       		.uleb128 0x13
 2706 012e 00       		.byte	0
 2707 012f 00       		.byte	0
 2708 0130 16       		.uleb128 0x16
 2709 0131 34       		.uleb128 0x34
 2710 0132 00       		.byte	0
 2711 0133 03       		.uleb128 0x3
 2712 0134 08       		.uleb128 0x8
 2713 0135 3A       		.uleb128 0x3a
 2714 0136 0B       		.uleb128 0xb
 2715 0137 3B       		.uleb128 0x3b
 2716 0138 0B       		.uleb128 0xb
 2717 0139 49       		.uleb128 0x49
 2718 013a 13       		.uleb128 0x13
 2719 013b 3F       		.uleb128 0x3f
 2720 013c 19       		.uleb128 0x19
 2721 013d 02       		.uleb128 0x2
 2722 013e 18       		.uleb128 0x18
 2723 013f 00       		.byte	0
 2724 0140 00       		.byte	0
 2725 0141 17       		.uleb128 0x17
 2726 0142 34       		.uleb128 0x34
 2727 0143 00       		.byte	0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 57


 2728 0144 03       		.uleb128 0x3
 2729 0145 0E       		.uleb128 0xe
 2730 0146 3A       		.uleb128 0x3a
 2731 0147 0B       		.uleb128 0xb
 2732 0148 3B       		.uleb128 0x3b
 2733 0149 0B       		.uleb128 0xb
 2734 014a 49       		.uleb128 0x49
 2735 014b 13       		.uleb128 0x13
 2736 014c 3F       		.uleb128 0x3f
 2737 014d 19       		.uleb128 0x19
 2738 014e 02       		.uleb128 0x2
 2739 014f 18       		.uleb128 0x18
 2740 0150 00       		.byte	0
 2741 0151 00       		.byte	0
 2742 0152 18       		.uleb128 0x18
 2743 0153 21       		.uleb128 0x21
 2744 0154 00       		.byte	0
 2745 0155 49       		.uleb128 0x49
 2746 0156 13       		.uleb128 0x13
 2747 0157 2F       		.uleb128 0x2f
 2748 0158 05       		.uleb128 0x5
 2749 0159 00       		.byte	0
 2750 015a 00       		.byte	0
 2751 015b 00       		.byte	0
 2752              		.section	.debug_aranges,"",%progbits
 2753 0000 34000000 		.4byte	0x34
 2754 0004 0200     		.2byte	0x2
 2755 0006 00000000 		.4byte	.Ldebug_info0
 2756 000a 04       		.byte	0x4
 2757 000b 00       		.byte	0
 2758 000c 0000     		.2byte	0
 2759 000e 0000     		.2byte	0
 2760 0010 00000000 		.4byte	.LFB64
 2761 0014 18000000 		.4byte	.LFE64-.LFB64
 2762 0018 00000000 		.4byte	.LFB65
 2763 001c 6C080000 		.4byte	.LFE65-.LFB65
 2764 0020 00000000 		.4byte	.LFB66
 2765 0024 3E000000 		.4byte	.LFE66-.LFB66
 2766 0028 00000000 		.4byte	.LFB67
 2767 002c 26000000 		.4byte	.LFE67-.LFB67
 2768 0030 00000000 		.4byte	0
 2769 0034 00000000 		.4byte	0
 2770              		.section	.debug_ranges,"",%progbits
 2771              	.Ldebug_ranges0:
 2772 0000 00000000 		.4byte	.LFB64
 2773 0004 18000000 		.4byte	.LFE64
 2774 0008 00000000 		.4byte	.LFB65
 2775 000c 6C080000 		.4byte	.LFE65
 2776 0010 00000000 		.4byte	.LFB66
 2777 0014 3E000000 		.4byte	.LFE66
 2778 0018 00000000 		.4byte	.LFB67
 2779 001c 26000000 		.4byte	.LFE67
 2780 0020 00000000 		.4byte	0
 2781 0024 00000000 		.4byte	0
 2782              		.section	.debug_line,"",%progbits
 2783              	.Ldebug_line0:
 2784 0000 90030000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 58


 2784      02005601 
 2784      00000201 
 2784      FB0E0D00 
 2784      01010101 
 2785              	.LASF57:
 2786 0000 75736250 		.ascii	"usbPutChar\000"
 2786      75744368 
 2786      617200
 2787              	.LASF37:
 2788 000b 68696768 		.ascii	"highCountLeftIntersection\000"
 2788      436F756E 
 2788      744C6566 
 2788      74496E74 
 2788      65727365 
 2789              	.LASF99:
 2790 0025 73717561 		.ascii	"squares\000"
 2790      72657300 
 2791              	.LASF98:
 2792 002d 6C617374 		.ascii	"lastAdjustDirection\000"
 2792      41646A75 
 2792      73744469 
 2792      72656374 
 2792      696F6E00 
 2793              	.LASF68:
 2794 0041 666C6167 		.ascii	"flag_packet\000"
 2794      5F706163 
 2794      6B657400 
 2795              	.LASF82:
 2796 004d 76616C75 		.ascii	"valuesLeftLine\000"
 2796      65734C65 
 2796      66744C69 
 2796      6E6500
 2797              	.LASF65:
 2798 005c 666C6167 		.ascii	"flag_ts_speed\000"
 2798      5F74735F 
 2798      73706565 
 2798      6400
 2799              	.LASF33:
 2800 006a 67325F78 		.ascii	"g2_xpos\000"
 2800      706F7300 
 2801              	.LASF2:
 2802 0072 73686F72 		.ascii	"short int\000"
 2802      7420696E 
 2802      7400
 2803              	.LASF76:
 2804 007c 73797374 		.ascii	"system_state\000"
 2804      656D5F73 
 2804      74617465 
 2804      00
 2805              	.LASF10:
 2806 0089 73697A65 		.ascii	"sizetype\000"
 2806      74797065 
 2806      00
 2807              	.LASF93:
 2808 0092 7475726E 		.ascii	"turnComplete\000"
 2808      436F6D70 
 2808      6C657465 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 59


 2808      00
 2809              	.LASF75:
 2810 009f 75736242 		.ascii	"usbBuffer\000"
 2810      75666665 
 2810      7200
 2811              	.LASF102:
 2812 00a9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2812      43313120 
 2812      352E342E 
 2812      31203230 
 2812      31363036 
 2813 00dc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2813      20726576 
 2813      6973696F 
 2813      6E203233 
 2813      37373135 
 2814 010f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2814      66756E63 
 2814      74696F6E 
 2814      2D736563 
 2814      74696F6E 
 2815              	.LASF55:
 2816 0137 6D61696E 		.ascii	"main\000"
 2816      00
 2817              	.LASF104:
 2818 013c 483A5C44 		.ascii	"H:\\Documents\\GitHub\\team14\\301_lab_tasks\\psoc "
 2818      6F63756D 
 2818      656E7473 
 2818      5C476974 
 2818      4875625C 
 2819 016a 73747564 		.ascii	"student pack\\psoc_code_base\\CS301_Class.cydsn\000"
 2819      656E7420 
 2819      7061636B 
 2819      5C70736F 
 2819      635F636F 
 2820              	.LASF84:
 2821 0198 76616C75 		.ascii	"valuesRightLine\000"
 2821      65735269 
 2821      6768744C 
 2821      696E6500 
 2822              	.LASF36:
 2823 01a8 67325F64 		.ascii	"g2_direction\000"
 2823      69726563 
 2823      74696F6E 
 2823      00
 2824              	.LASF15:
 2825 01b5 75696E74 		.ascii	"uint16\000"
 2825      313600
 2826              	.LASF21:
 2827 01bc 696E6465 		.ascii	"index\000"
 2827      7800
 2828              	.LASF17:
 2829 01c2 696E7431 		.ascii	"int16\000"
 2829      3600
 2830              	.LASF14:
 2831 01c8 75696E74 		.ascii	"uint8\000"
 2831      3800
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 60


 2832              	.LASF32:
 2833 01ce 67315F64 		.ascii	"g1_direction\000"
 2833      69726563 
 2833      74696F6E 
 2833      00
 2834              	.LASF85:
 2835 01db 76616C75 		.ascii	"valuesRightIntersection\000"
 2835      65735269 
 2835      67687449 
 2835      6E746572 
 2835      73656374 
 2836              	.LASF94:
 2837 01f3 70756C73 		.ascii	"pulsesTravelled\000"
 2837      65735472 
 2837      6176656C 
 2837      6C656400 
 2838              	.LASF73:
 2839 0203 6C696E65 		.ascii	"line\000"
 2839      00
 2840              	.LASF0:
 2841 0208 7369676E 		.ascii	"signed char\000"
 2841      65642063 
 2841      68617200 
 2842              	.LASF18:
 2843 0214 666C6F61 		.ascii	"float\000"
 2843      7400
 2844              	.LASF78:
 2845 021a 73746172 		.ascii	"started\000"
 2845      74656400 
 2846              	.LASF6:
 2847 0222 6C6F6E67 		.ascii	"long long int\000"
 2847      206C6F6E 
 2847      6720696E 
 2847      7400
 2848              	.LASF56:
 2849 0230 75736250 		.ascii	"usbPutString\000"
 2849      75745374 
 2849      72696E67 
 2849      00
 2850              	.LASF16:
 2851 023d 696E7438 		.ascii	"int8\000"
 2851      00
 2852              	.LASF64:
 2853 0242 666C6167 		.ascii	"flag_ts_update\000"
 2853      5F74735F 
 2853      75706461 
 2853      746500
 2854              	.LASF34:
 2855 0251 67325F79 		.ascii	"g2_ypos\000"
 2855      706F7300 
 2856              	.LASF28:
 2857 0259 67305F64 		.ascii	"g0_direction\000"
 2857      69726563 
 2857      74696F6E 
 2857      00
 2858              	.LASF25:
 2859 0266 67305F78 		.ascii	"g0_xpos\000"
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 61


 2859      706F7300 
 2860              	.LASF4:
 2861 026e 6C6F6E67 		.ascii	"long int\000"
 2861      20696E74 
 2861      00
 2862              	.LASF88:
 2863 0277 6C617374 		.ascii	"lastVeerDirection\000"
 2863      56656572 
 2863      44697265 
 2863      6374696F 
 2863      6E00
 2864              	.LASF97:
 2865 0289 696E7465 		.ascii	"interruptFlag\000"
 2865      72727570 
 2865      74466C61 
 2865      6700
 2866              	.LASF66:
 2867 0297 666C6167 		.ascii	"flag_ts_display\000"
 2867      5F74735F 
 2867      64697370 
 2867      6C617900 
 2868              	.LASF46:
 2869 02a7 63757272 		.ascii	"currentInst\000"
 2869      656E7449 
 2869      6E737400 
 2870              	.LASF95:
 2871 02b3 63686563 		.ascii	"checkDistance\000"
 2871      6B446973 
 2871      74616E63 
 2871      6500
 2872              	.LASF42:
 2873 02c1 68696768 		.ascii	"highCountRightIntersection\000"
 2873      436F756E 
 2873      74526967 
 2873      6874496E 
 2873      74657273 
 2874              	.LASF1:
 2875 02dc 756E7369 		.ascii	"unsigned char\000"
 2875      676E6564 
 2875      20636861 
 2875      7200
 2876              	.LASF30:
 2877 02ea 67315F79 		.ascii	"g1_ypos\000"
 2877      706F7300 
 2878              	.LASF9:
 2879 02f2 6C6F6E67 		.ascii	"long double\000"
 2879      20646F75 
 2879      626C6500 
 2880              	.LASF74:
 2881 02fe 656E7472 		.ascii	"entry\000"
 2881      7900
 2882              	.LASF43:
 2883 0304 72657375 		.ascii	"result1\000"
 2883      6C743100 
 2884              	.LASF44:
 2885 030c 72657375 		.ascii	"result2\000"
 2885      6C743200 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 62


 2886              	.LASF45:
 2887 0314 66697273 		.ascii	"firstNonZeroIndex\000"
 2887      744E6F6E 
 2887      5A65726F 
 2887      496E6465 
 2887      7800
 2888              	.LASF27:
 2889 0326 67305F73 		.ascii	"g0_speed\000"
 2889      70656564 
 2889      00
 2890              	.LASF31:
 2891 032f 67315F73 		.ascii	"g1_speed\000"
 2891      70656564 
 2891      00
 2892              	.LASF41:
 2893 0338 68696768 		.ascii	"highCountRightLine\000"
 2893      436F756E 
 2893      74526967 
 2893      68744C69 
 2893      6E6500
 2894              	.LASF70:
 2895 034b 64617461 		.ascii	"dataready_flag\000"
 2895      72656164 
 2895      795F666C 
 2895      616700
 2896              	.LASF67:
 2897 035a 666C6167 		.ascii	"flag_rx\000"
 2897      5F727800 
 2898              	.LASF51:
 2899 0362 7365636F 		.ascii	"second\000"
 2899      6E6400
 2900              	.LASF7:
 2901 0369 6C6F6E67 		.ascii	"long long unsigned int\000"
 2901      206C6F6E 
 2901      6720756E 
 2901      7369676E 
 2901      65642069 
 2902              	.LASF8:
 2903 0380 756E7369 		.ascii	"unsigned int\000"
 2903      676E6564 
 2903      20696E74 
 2903      00
 2904              	.LASF69:
 2905 038d 666C6167 		.ascii	"flag_KB_string\000"
 2905      5F4B425F 
 2905      73747269 
 2905      6E6700
 2906              	.LASF77:
 2907 039c 636F6E73 		.ascii	"consecStops\000"
 2907      65635374 
 2907      6F707300 
 2908              	.LASF35:
 2909 03a8 67325F73 		.ascii	"g2_speed\000"
 2909      70656564 
 2909      00
 2910              	.LASF48:
 2911 03b1 64697374 		.ascii	"dist\000"
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 63


 2911      00
 2912              	.LASF29:
 2913 03b6 67315F78 		.ascii	"g1_xpos\000"
 2913      706F7300 
 2914              	.LASF3:
 2915 03be 73686F72 		.ascii	"short unsigned int\000"
 2915      7420756E 
 2915      7369676E 
 2915      65642069 
 2915      6E7400
 2916              	.LASF39:
 2917 03d1 68696768 		.ascii	"highCountMiddleLine\000"
 2917      436F756E 
 2917      744D6964 
 2917      646C654C 
 2917      696E6500 
 2918              	.LASF83:
 2919 03e5 76616C75 		.ascii	"valuesMiddleLine\000"
 2919      65734D69 
 2919      64646C65 
 2919      4C696E65 
 2919      00
 2920              	.LASF105:
 2921 03f6 64617461 		.ascii	"data_main\000"
 2921      5F6D6169 
 2921      6E00
 2922              	.LASF11:
 2923 0400 63686172 		.ascii	"char\000"
 2923      00
 2924              	.LASF101:
 2925 0405 64697374 		.ascii	"distance\000"
 2925      616E6365 
 2925      00
 2926              	.LASF54:
 2927 040e 70756C73 		.ascii	"pulsesToTravel\000"
 2927      6573546F 
 2927      54726176 
 2927      656C00
 2928              	.LASF22:
 2929 041d 726F626F 		.ascii	"robot_xpos\000"
 2929      745F7870 
 2929      6F7300
 2930              	.LASF13:
 2931 0428 696E7433 		.ascii	"int32_t\000"
 2931      325F7400 
 2932              	.LASF80:
 2933 0430 666C6167 		.ascii	"flag\000"
 2933      00
 2934              	.LASF12:
 2935 0435 5F5F696E 		.ascii	"__int32_t\000"
 2935      7433325F 
 2935      7400
 2936              	.LASF49:
 2937 043f 70756C73 		.ascii	"pulses\000"
 2937      657300
 2938              	.LASF53:
 2939 0446 6356616C 		.ascii	"cVal\000"
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 64


 2939      00
 2940              	.LASF81:
 2941 044b 76616C75 		.ascii	"valuesLeftIntersection\000"
 2941      65734C65 
 2941      6674496E 
 2941      74657273 
 2941      65637469 
 2942              	.LASF72:
 2943 0462 64697370 		.ascii	"displaystring\000"
 2943      6C617973 
 2943      7472696E 
 2943      6700
 2944              	.LASF91:
 2945 0470 76324D31 		.ascii	"v2M1\000"
 2945      00
 2946              	.LASF92:
 2947 0475 76324D32 		.ascii	"v2M2\000"
 2947      00
 2948              	.LASF38:
 2949 047a 68696768 		.ascii	"highCountLeftLine\000"
 2949      436F756E 
 2949      744C6566 
 2949      744C696E 
 2949      6500
 2950              	.LASF103:
 2951 048c 6D61696E 		.ascii	"main.c\000"
 2951      2E6300
 2952              	.LASF5:
 2953 0493 6C6F6E67 		.ascii	"long unsigned int\000"
 2953      20756E73 
 2953      69676E65 
 2953      6420696E 
 2953      7400
 2954              	.LASF19:
 2955 04a5 646F7562 		.ascii	"double\000"
 2955      6C6500
 2956              	.LASF58:
 2957 04ac 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2957      52784275 
 2957      66666572 
 2957      00
 2958              	.LASF79:
 2959 04b9 696E7374 		.ascii	"instCounter\000"
 2959      436F756E 
 2959      74657200 
 2960              	.LASF86:
 2961 04c5 636F756E 		.ascii	"count\000"
 2961      7400
 2962              	.LASF63:
 2963 04cb 666C6167 		.ascii	"flag_ts_enc\000"
 2963      5F74735F 
 2963      656E6300 
 2964              	.LASF89:
 2965 04d7 76314D31 		.ascii	"v1M1\000"
 2965      00
 2966              	.LASF90:
 2967 04dc 76314D32 		.ascii	"v1M2\000"
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 65


 2967      00
 2968              	.LASF87:
 2969 04e1 6D6F746F 		.ascii	"motorUpdateCount\000"
 2969      72557064 
 2969      61746543 
 2969      6F756E74 
 2969      00
 2970              	.LASF26:
 2971 04f2 67305F79 		.ascii	"g0_ypos\000"
 2971      706F7300 
 2972              	.LASF62:
 2973 04fa 74735F64 		.ascii	"ts_display\000"
 2973      6973706C 
 2973      617900
 2974              	.LASF61:
 2975 0505 74735F73 		.ascii	"ts_speed\000"
 2975      70656564 
 2975      00
 2976              	.LASF59:
 2977 050e 74735F65 		.ascii	"ts_enc\000"
 2977      6E6300
 2978              	.LASF60:
 2979 0515 74735F75 		.ascii	"ts_update\000"
 2979      70646174 
 2979      6500
 2980              	.LASF71:
 2981 051f 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2981      5F72665F 
 2981      7472616E 
 2981      736D6973 
 2981      73696F6E 
 2982              	.LASF23:
 2983 053b 726F626F 		.ascii	"robot_ypos\000"
 2983      745F7970 
 2983      6F7300
 2984              	.LASF52:
 2985 0546 696E7374 		.ascii	"instStr\000"
 2985      53747200 
 2986              	.LASF100:
 2987 054e 696E7374 		.ascii	"instruction\000"
 2987      72756374 
 2987      696F6E00 
 2988              	.LASF40:
 2989 055a 68696768 		.ascii	"highCountTurnComplete\000"
 2989      436F756E 
 2989      74547572 
 2989      6E436F6D 
 2989      706C6574 
 2990              	.LASF96:
 2991 0570 73746570 		.ascii	"step\000"
 2991      00
 2992              	.LASF20:
 2993 0575 72737369 		.ascii	"rssi\000"
 2993      00
 2994              	.LASF24:
 2995 057a 726F626F 		.ascii	"robot_orientation\000"
 2995      745F6F72 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccBHMkDh.s 			page 66


 2995      69656E74 
 2995      6174696F 
 2995      6E00
 2996              	.LASF50:
 2997 058c 66697273 		.ascii	"first\000"
 2997      7400
 2998              	.LASF47:
 2999 0592 6E657874 		.ascii	"nextInst\000"
 2999      496E7374 
 2999      00
 3000              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
