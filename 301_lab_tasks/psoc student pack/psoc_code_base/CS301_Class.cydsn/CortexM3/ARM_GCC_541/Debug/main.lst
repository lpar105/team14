ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	consecStops
 107              		.bss
 108 0012 0000     		.align	2
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 3


 109              		.type	consecStops, %object
 110              		.size	consecStops, 4
 111              	consecStops:
 112 0014 00000000 		.space	4
 113              		.global	started
 114              		.align	2
 115              		.type	started, %object
 116              		.size	started, 4
 117              	started:
 118 0018 00000000 		.space	4
 119              		.global	instCounter
 120              		.align	2
 121              		.type	instCounter, %object
 122              		.size	instCounter, 4
 123              	instCounter:
 124 001c 00000000 		.space	4
 125              		.global	flag
 126              		.align	2
 127              		.type	flag, %object
 128              		.size	flag, 4
 129              	flag:
 130 0020 00000000 		.space	4
 131              		.comm	valuesLeftIntersection,4000,4
 132              		.comm	valuesLeftLine,4000,4
 133              		.comm	valuesMiddleLine,4000,4
 134              		.comm	valuesTurnComplete,4000,4
 135              		.comm	valuesRightLine,4000,4
 136              		.comm	valuesRightIntersection,4000,4
 137              		.global	count
 138              		.align	2
 139              		.type	count, %object
 140              		.size	count, 4
 141              	count:
 142 0024 00000000 		.space	4
 143              		.global	motorUpdateCount
 144              		.align	2
 145              		.type	motorUpdateCount, %object
 146              		.size	motorUpdateCount, 4
 147              	motorUpdateCount:
 148 0028 00000000 		.space	4
 149              		.global	lastVeerDirection
 150              		.align	2
 151              		.type	lastVeerDirection, %object
 152              		.size	lastVeerDirection, 4
 153              	lastVeerDirection:
 154 002c 00000000 		.space	4
 155              		.comm	v1M1,4,4
 156              		.comm	v1M2,4,4
 157              		.comm	v2M1,4,4
 158              		.comm	v2M2,4,4
 159              		.global	turnComplete
 160              		.data
 161              		.align	2
 162              		.type	turnComplete, %object
 163              		.size	turnComplete, 4
 164              	turnComplete:
 165 0044 FFFFFFFF 		.word	-1
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 4


 166              		.global	pulsesTravelled
 167              		.bss
 168              		.align	2
 169              		.type	pulsesTravelled, %object
 170              		.size	pulsesTravelled, 4
 171              	pulsesTravelled:
 172 0030 00000000 		.space	4
 173              		.global	checkDistance
 174              		.align	2
 175              		.type	checkDistance, %object
 176              		.size	checkDistance, 4
 177              	checkDistance:
 178 0034 00000000 		.space	4
 179              		.global	step
 180              		.align	2
 181              		.type	step, %object
 182              		.size	step, 4
 183              	step:
 184 0038 00000000 		.space	4
 185              		.global	interruptFlag
 186              		.align	2
 187              		.type	interruptFlag, %object
 188              		.size	interruptFlag, 4
 189              	interruptFlag:
 190 003c 00000000 		.space	4
 191              		.global	lastAdjustDirection
 192              		.align	2
 193              		.type	lastAdjustDirection, %object
 194              		.size	lastAdjustDirection, 4
 195              	lastAdjustDirection:
 196 0040 00000000 		.space	4
 197              		.comm	squares,1000,4
 198              		.comm	instruction,500,4
 199              		.comm	distance,500,4
 200              		.section	.text.eoc,"ax",%progbits
 201              		.align	2
 202              		.global	eoc
 203              		.thumb
 204              		.thumb_func
 205              		.type	eoc, %function
 206              	eoc:
 207              	.LFB64:
 208              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 5


  15:main.c        ****  * ========================================
  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** 
  30:main.c        **** #include "pathfind.h"
  31:main.c        **** 
  32:main.c        **** #include "vars.h"
  33:main.c        **** 
  34:main.c        **** #define ADC_COUNT 1000
  35:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 75
  36:main.c        **** #define R_INT_BLACK highCountRightIntersection < 75
  37:main.c        **** #define L_LINE_BLACK highCountLeftLine < 75
  38:main.c        **** #define R_LINE_BLACK highCountRightLine < 75
  39:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 75
  40:main.c        **** #define TC_BLACK highCountTurnComplete < 75
  41:main.c        **** 
  42:main.c        **** int consecStops = 0;
  43:main.c        **** int started = 0;
  44:main.c        **** int instCounter = 0;
  45:main.c        **** //* ========================================
  46:main.c        **** void usbPutString(char * s);
  47:main.c        **** void usbPutChar(char c);
  48:main.c        **** //* ========================================
  49:main.c        **** 
  50:main.c        **** volatile int flag = 0;
  51:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  52:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  53:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  54:main.c        **** volatile int valuesTurnComplete[ADC_COUNT];
  55:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  56:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  57:main.c        **** volatile int count = 0;
  58:main.c        **** volatile int motorUpdateCount = 0;
  59:main.c        **** volatile int lastVeerDirection = 0;
  60:main.c        **** 
  61:main.c        **** volatile int v1M1;
  62:main.c        **** volatile int v1M2;
  63:main.c        **** volatile int v2M1;
  64:main.c        **** volatile int v2M2;
  65:main.c        **** volatile int turnComplete = -1;
  66:main.c        **** int pulsesTravelled = 0;
  67:main.c        **** volatile int checkDistance = 0;
  68:main.c        **** volatile int step = 0;
  69:main.c        **** volatile int interruptFlag = 0;
  70:main.c        **** 
  71:main.c        **** int lastAdjustDirection = 0;
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 6


  72:main.c        **** unsigned char squares[500][2];
  73:main.c        **** unsigned char instruction[500];
  74:main.c        **** unsigned char distance[500];
  75:main.c        **** 
  76:main.c        **** CY_ISR(eoc) {
 209              		.loc 1 76 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214 0000 80B4     		push	{r7}
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 7, -4
 217 0002 00AF     		add	r7, sp, #0
 218              		.cfi_def_cfa_register 7
  77:main.c        ****     flag = 1;
 219              		.loc 1 77 0
 220 0004 034B     		ldr	r3, .L2
 221 0006 0122     		movs	r2, #1
 222 0008 1A60     		str	r2, [r3]
  78:main.c        **** }
 223              		.loc 1 78 0
 224 000a 00BF     		nop
 225 000c BD46     		mov	sp, r7
 226              		.cfi_def_cfa_register 13
 227              		@ sp needed
 228 000e 80BC     		pop	{r7}
 229              		.cfi_restore 7
 230              		.cfi_def_cfa_offset 0
 231 0010 7047     		bx	lr
 232              	.L3:
 233 0012 00BF     		.align	2
 234              	.L2:
 235 0014 00000000 		.word	flag
 236              		.cfi_endproc
 237              	.LFE64:
 238              		.size	eoc, .-eoc
 239              		.global	__aeabi_i2d
 240              		.global	__aeabi_dmul
 241              		.global	__aeabi_ddiv
 242              		.global	__aeabi_dcmple
 243              		.section	.text.main,"ax",%progbits
 244              		.align	2
 245              		.global	main
 246              		.thumb
 247              		.thumb_func
 248              		.type	main, %function
 249              	main:
 250              	.LFB65:
  79:main.c        **** 
  80:main.c        **** int main() {
 251              		.loc 1 80 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 264
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 B0B5     		push	{r4, r5, r7, lr}
 256              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 7


 257              		.cfi_offset 4, -16
 258              		.cfi_offset 5, -12
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 C2B0     		sub	sp, sp, #264
 262              		.cfi_def_cfa_offset 280
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
  81:main.c        ****     CYGlobalIntEnable;
 265              		.loc 1 81 0
 266              		.syntax unified
 267              	@ 81 "main.c" 1
 268 0006 62B6     		CPSIE   i
 269              	@ 0 "" 2
  82:main.c        ****     USBUART_Start(0, USBUART_5V_OPERATION);
 270              		.loc 1 82 0
 271              		.thumb
 272              		.syntax unified
 273 0008 0121     		movs	r1, #1
 274 000a 0020     		movs	r0, #0
 275 000c FFF7FEFF 		bl	USBUART_Start
  83:main.c        ****     //UART_Start();
  84:main.c        **** 
  85:main.c        ****     QuadDec_M1_Start();
 276              		.loc 1 85 0
 277 0010 FFF7FEFF 		bl	QuadDec_M1_Start
  86:main.c        ****     QuadDec_M2_Start();
 278              		.loc 1 86 0
 279 0014 FFF7FEFF 		bl	QuadDec_M2_Start
  87:main.c        **** 
  88:main.c        ****     //isr_TS_StartEx(MyISR);
  89:main.c        **** 
  90:main.c        ****     RF_BT_SELECT_Write(1);
 280              		.loc 1 90 0
 281 0018 0120     		movs	r0, #1
 282 001a FFF7FEFF 		bl	RF_BT_SELECT_Write
  91:main.c        ****     //ADC1_IRQ_Enable();
  92:main.c        ****     ADC1_Start();
 283              		.loc 1 92 0
 284 001e FFF7FEFF 		bl	ADC1_Start
  93:main.c        **** 
  94:main.c        ****     ADC1_StartConvert();
 285              		.loc 1 94 0
 286 0022 FFF7FEFF 		bl	ADC1_StartConvert
  95:main.c        **** 
  96:main.c        ****     eoc_StartEx(eoc);
 287              		.loc 1 96 0
 288 0026 B748     		ldr	r0, .L61
 289 0028 FFF7FEFF 		bl	eoc_StartEx
  97:main.c        **** 
  98:main.c        ****     initMotors();
 290              		.loc 1 98 0
 291 002c FFF7FEFF 		bl	initMotors
  99:main.c        **** 
 100:main.c        ****     stop();
 292              		.loc 1 100 0
 293 0030 FFF7FEFF 		bl	stop
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 8


 294              	.LBB2:
 101:main.c        ****     //isr_TS_StartEx(MyISR);
 102:main.c        ****     //Timer_TS_Start();
 103:main.c        **** 
 104:main.c        ****     // Loop through the arrays and set each element to 55 or 0
 105:main.c        ****     for (int i = 0; i < 500; i++) {
 295              		.loc 1 105 0
 296 0034 0023     		movs	r3, #0
 297 0036 C7F80431 		str	r3, [r7, #260]
 298 003a 23E0     		b	.L5
 299              	.L6:
 106:main.c        ****         squares[i][0] = 55;
 300              		.loc 1 106 0 discriminator 3
 301 003c B24A     		ldr	r2, .L61+4
 302 003e D7F80431 		ldr	r3, [r7, #260]
 303 0042 3721     		movs	r1, #55
 304 0044 02F81310 		strb	r1, [r2, r3, lsl #1]
 107:main.c        ****         squares[i][1] = 55;
 305              		.loc 1 107 0 discriminator 3
 306 0048 AF4A     		ldr	r2, .L61+4
 307 004a D7F80431 		ldr	r3, [r7, #260]
 308 004e 5B00     		lsls	r3, r3, #1
 309 0050 1344     		add	r3, r3, r2
 310 0052 3722     		movs	r2, #55
 311 0054 5A70     		strb	r2, [r3, #1]
 108:main.c        ****         instruction[i] = 0;
 312              		.loc 1 108 0 discriminator 3
 313 0056 AD4A     		ldr	r2, .L61+8
 314 0058 D7F80431 		ldr	r3, [r7, #260]
 315 005c 1344     		add	r3, r3, r2
 316 005e 0022     		movs	r2, #0
 317 0060 1A70     		strb	r2, [r3]
 109:main.c        ****         distance[i] = 0;
 318              		.loc 1 109 0 discriminator 3
 319 0062 AB4A     		ldr	r2, .L61+12
 320 0064 D7F80431 		ldr	r3, [r7, #260]
 321 0068 1344     		add	r3, r3, r2
 322 006a 0022     		movs	r2, #0
 323 006c 1A70     		strb	r2, [r3]
 110:main.c        ****         distance[i] = 55;
 324              		.loc 1 110 0 discriminator 3
 325 006e A84A     		ldr	r2, .L61+12
 326 0070 D7F80431 		ldr	r3, [r7, #260]
 327 0074 1344     		add	r3, r3, r2
 328 0076 3722     		movs	r2, #55
 329 0078 1A70     		strb	r2, [r3]
 105:main.c        ****         squares[i][0] = 55;
 330              		.loc 1 105 0 discriminator 3
 331 007a D7F80431 		ldr	r3, [r7, #260]
 332 007e 0133     		adds	r3, r3, #1
 333 0080 C7F80431 		str	r3, [r7, #260]
 334              	.L5:
 105:main.c        ****         squares[i][0] = 55;
 335              		.loc 1 105 0 is_stmt 0 discriminator 1
 336 0084 D7F80431 		ldr	r3, [r7, #260]
 337 0088 B3F5FA7F 		cmp	r3, #500
 338 008c D6DB     		blt	.L6
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 9


 339              	.LBE2:
 111:main.c        ****     }
 112:main.c        ****     pathfind(instruction, distance, squares);
 340              		.loc 1 112 0 is_stmt 1
 341 008e 9E4A     		ldr	r2, .L61+4
 342 0090 9F49     		ldr	r1, .L61+12
 343 0092 9E48     		ldr	r0, .L61+8
 344 0094 FFF7FEFF 		bl	pathfind
 345              	.L59:
 113:main.c        **** 
 114:main.c        ****     //CyDelay(2000);
 115:main.c        ****     for (;;) {
 116:main.c        **** 
 117:main.c        ****         if (flag == 1) {
 346              		.loc 1 117 0
 347 0098 9E4B     		ldr	r3, .L61+16
 348 009a 1B68     		ldr	r3, [r3]
 349 009c 012B     		cmp	r3, #1
 350 009e FBD1     		bne	.L59
 118:main.c        **** 
 119:main.c        ****             ADC1_IRQ_Disable();
 351              		.loc 1 119 0
 352 00a0 FFF7FEFF 		bl	ADC1_IRQ_Disable
 120:main.c        ****             valuesLeftIntersection[count] = ADC1_GetResult16(0);
 353              		.loc 1 120 0
 354 00a4 9C4B     		ldr	r3, .L61+20
 355 00a6 1C68     		ldr	r4, [r3]
 356 00a8 0020     		movs	r0, #0
 357 00aa FFF7FEFF 		bl	ADC1_GetResult16
 358 00ae 0346     		mov	r3, r0
 359 00b0 1A46     		mov	r2, r3
 360 00b2 9A4B     		ldr	r3, .L61+24
 361 00b4 43F82420 		str	r2, [r3, r4, lsl #2]
 121:main.c        ****             valuesLeftLine[count] = ADC1_GetResult16(1);
 362              		.loc 1 121 0
 363 00b8 974B     		ldr	r3, .L61+20
 364 00ba 1C68     		ldr	r4, [r3]
 365 00bc 0120     		movs	r0, #1
 366 00be FFF7FEFF 		bl	ADC1_GetResult16
 367 00c2 0346     		mov	r3, r0
 368 00c4 1A46     		mov	r2, r3
 369 00c6 964B     		ldr	r3, .L61+28
 370 00c8 43F82420 		str	r2, [r3, r4, lsl #2]
 122:main.c        ****             valuesMiddleLine[count] = ADC1_GetResult16(2);
 371              		.loc 1 122 0
 372 00cc 924B     		ldr	r3, .L61+20
 373 00ce 1C68     		ldr	r4, [r3]
 374 00d0 0220     		movs	r0, #2
 375 00d2 FFF7FEFF 		bl	ADC1_GetResult16
 376 00d6 0346     		mov	r3, r0
 377 00d8 1A46     		mov	r2, r3
 378 00da 924B     		ldr	r3, .L61+32
 379 00dc 43F82420 		str	r2, [r3, r4, lsl #2]
 123:main.c        ****             valuesTurnComplete[count] = ADC1_GetResult16(3);
 380              		.loc 1 123 0
 381 00e0 8D4B     		ldr	r3, .L61+20
 382 00e2 1C68     		ldr	r4, [r3]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 10


 383 00e4 0320     		movs	r0, #3
 384 00e6 FFF7FEFF 		bl	ADC1_GetResult16
 385 00ea 0346     		mov	r3, r0
 386 00ec 1A46     		mov	r2, r3
 387 00ee 8E4B     		ldr	r3, .L61+36
 388 00f0 43F82420 		str	r2, [r3, r4, lsl #2]
 124:main.c        ****             valuesRightLine[count] = ADC1_GetResult16(4);
 389              		.loc 1 124 0
 390 00f4 884B     		ldr	r3, .L61+20
 391 00f6 1C68     		ldr	r4, [r3]
 392 00f8 0420     		movs	r0, #4
 393 00fa FFF7FEFF 		bl	ADC1_GetResult16
 394 00fe 0346     		mov	r3, r0
 395 0100 1A46     		mov	r2, r3
 396 0102 8A4B     		ldr	r3, .L61+40
 397 0104 43F82420 		str	r2, [r3, r4, lsl #2]
 125:main.c        ****             valuesRightIntersection[count] = ADC1_GetResult16(5);
 398              		.loc 1 125 0
 399 0108 834B     		ldr	r3, .L61+20
 400 010a 1C68     		ldr	r4, [r3]
 401 010c 0520     		movs	r0, #5
 402 010e FFF7FEFF 		bl	ADC1_GetResult16
 403 0112 0346     		mov	r3, r0
 404 0114 1A46     		mov	r2, r3
 405 0116 864B     		ldr	r3, .L61+44
 406 0118 43F82420 		str	r2, [r3, r4, lsl #2]
 126:main.c        **** 
 127:main.c        ****             count++;
 407              		.loc 1 127 0
 408 011c 7E4B     		ldr	r3, .L61+20
 409 011e 1B68     		ldr	r3, [r3]
 410 0120 0133     		adds	r3, r3, #1
 411 0122 7D4A     		ldr	r2, .L61+20
 412 0124 1360     		str	r3, [r2]
 128:main.c        ****             if (count == ADC_COUNT) {
 413              		.loc 1 128 0
 414 0126 7C4B     		ldr	r3, .L61+20
 415 0128 1B68     		ldr	r3, [r3]
 416 012a B3F57A7F 		cmp	r3, #1000
 417 012e 40F05783 		bne	.L8
 418              	.LBB3:
 129:main.c        **** 
 130:main.c        ****                 count = 0;
 419              		.loc 1 130 0
 420 0132 794B     		ldr	r3, .L61+20
 421 0134 0022     		movs	r2, #0
 422 0136 1A60     		str	r2, [r3]
 131:main.c        ****                 motorUpdateCount++;
 423              		.loc 1 131 0
 424 0138 7E4B     		ldr	r3, .L61+48
 425 013a 1B68     		ldr	r3, [r3]
 426 013c 0133     		adds	r3, r3, #1
 427 013e 7D4A     		ldr	r2, .L61+48
 428 0140 1360     		str	r3, [r2]
 132:main.c        ****                 int highCountLeftIntersection = 0;
 429              		.loc 1 132 0
 430 0142 0023     		movs	r3, #0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 11


 431 0144 C7F80031 		str	r3, [r7, #256]
 133:main.c        ****                 int highCountLeftLine = 0;
 432              		.loc 1 133 0
 433 0148 0023     		movs	r3, #0
 434 014a C7F8FC30 		str	r3, [r7, #252]
 134:main.c        ****                 int highCountMiddleLine = 0;
 435              		.loc 1 134 0
 436 014e 0023     		movs	r3, #0
 437 0150 C7F8F830 		str	r3, [r7, #248]
 135:main.c        ****                 int highCountTurnComplete = 0;
 438              		.loc 1 135 0
 439 0154 0023     		movs	r3, #0
 440 0156 C7F8F430 		str	r3, [r7, #244]
 136:main.c        ****                 int highCountRightLine = 0;
 441              		.loc 1 136 0
 442 015a 0023     		movs	r3, #0
 443 015c C7F8F030 		str	r3, [r7, #240]
 137:main.c        ****                 int highCountRightIntersection = 0;
 444              		.loc 1 137 0
 445 0160 0023     		movs	r3, #0
 446 0162 C7F8EC30 		str	r3, [r7, #236]
 447              	.LBB4:
 138:main.c        ****                 for (int i = 0; i < ADC_COUNT; i++) {
 448              		.loc 1 138 0
 449 0166 0023     		movs	r3, #0
 450 0168 C7F8E830 		str	r3, [r7, #232]
 451 016c 97E0     		b	.L9
 452              	.L19:
 453              	.LBB5:
 139:main.c        ****                     step = 0;
 454              		.loc 1 139 0
 455 016e 724B     		ldr	r3, .L61+52
 456 0170 0022     		movs	r2, #0
 457 0172 1A60     		str	r2, [r3]
 140:main.c        ****                     char result1[24];
 141:main.c        ****                     char result2[24];
 142:main.c        ****                     if (motorUpdateCount == 1) {
 458              		.loc 1 142 0
 459 0174 6F4B     		ldr	r3, .L61+48
 460 0176 1B68     		ldr	r3, [r3]
 461 0178 012B     		cmp	r3, #1
 462 017a 3DD1     		bne	.L10
 143:main.c        ****                         if (turnComplete == -1 || turnComplete == 1) {
 463              		.loc 1 143 0
 464 017c 6F4B     		ldr	r3, .L61+56
 465 017e 1B68     		ldr	r3, [r3]
 466 0180 B3F1FF3F 		cmp	r3, #-1
 467 0184 03D0     		beq	.L11
 468              		.loc 1 143 0 is_stmt 0 discriminator 1
 469 0186 6D4B     		ldr	r3, .L61+56
 470 0188 1B68     		ldr	r3, [r3]
 471 018a 012B     		cmp	r3, #1
 472 018c 2BD1     		bne	.L12
 473              	.L11:
 144:main.c        ****                         v2M1 = QuadDec_M1_GetCounter() * -1;
 474              		.loc 1 144 0 is_stmt 1
 475 018e FFF7FEFF 		bl	QuadDec_M1_GetCounter
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 12


 476 0192 0346     		mov	r3, r0
 477 0194 5B42     		negs	r3, r3
 478 0196 6A4A     		ldr	r2, .L61+60
 479 0198 1360     		str	r3, [r2]
 145:main.c        ****                         v2M2 = QuadDec_M2_GetCounter() * -1;
 480              		.loc 1 145 0
 481 019a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 482 019e 0346     		mov	r3, r0
 483 01a0 5B42     		negs	r3, r3
 484 01a2 684A     		ldr	r2, .L61+64
 485 01a4 1360     		str	r3, [r2]
 146:main.c        ****                         pulsesTravelled = pulsesTravelled + v2M1 + v2M2;
 486              		.loc 1 146 0
 487 01a6 684B     		ldr	r3, .L61+68
 488 01a8 1A68     		ldr	r2, [r3]
 489 01aa 654B     		ldr	r3, .L61+60
 490 01ac 1B68     		ldr	r3, [r3]
 491 01ae 1A44     		add	r2, r2, r3
 492 01b0 644B     		ldr	r3, .L61+64
 493 01b2 1B68     		ldr	r3, [r3]
 494 01b4 1344     		add	r3, r3, r2
 495 01b6 644A     		ldr	r2, .L61+68
 496 01b8 1360     		str	r3, [r2]
 147:main.c        ****                         itoa((v2M1 - v1M1), result1, 10);
 497              		.loc 1 147 0
 498 01ba 614B     		ldr	r3, .L61+60
 499 01bc 1A68     		ldr	r2, [r3]
 500 01be 634B     		ldr	r3, .L61+72
 501 01c0 1B68     		ldr	r3, [r3]
 502 01c2 D31A     		subs	r3, r2, r3
 503 01c4 07F1C001 		add	r1, r7, #192
 504 01c8 0A22     		movs	r2, #10
 505 01ca 1846     		mov	r0, r3
 506 01cc FFF7FEFF 		bl	itoa
 148:main.c        ****                         itoa((v2M2 - v1M2), result2, 10);
 507              		.loc 1 148 0
 508 01d0 5C4B     		ldr	r3, .L61+64
 509 01d2 1A68     		ldr	r2, [r3]
 510 01d4 5E4B     		ldr	r3, .L61+76
 511 01d6 1B68     		ldr	r3, [r3]
 512 01d8 D31A     		subs	r3, r2, r3
 513 01da 07F1A801 		add	r1, r7, #168
 514 01de 0A22     		movs	r2, #10
 515 01e0 1846     		mov	r0, r3
 516 01e2 FFF7FEFF 		bl	itoa
 517              	.L12:
 149:main.c        ****                         }
 150:main.c        ****                         QuadDec_M1_SetCounter(0);
 518              		.loc 1 150 0
 519 01e6 0020     		movs	r0, #0
 520 01e8 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 151:main.c        ****                         QuadDec_M2_SetCounter(0);
 521              		.loc 1 151 0
 522 01ec 0020     		movs	r0, #0
 523 01ee FFF7FEFF 		bl	QuadDec_M2_SetCounter
 152:main.c        ****                         motorUpdateCount = 0;
 524              		.loc 1 152 0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 13


 525 01f2 504B     		ldr	r3, .L61+48
 526 01f4 0022     		movs	r2, #0
 527 01f6 1A60     		str	r2, [r3]
 528              	.L10:
 153:main.c        ****                     }
 154:main.c        ****                     if (valuesLeftIntersection[i] > 2000) {
 529              		.loc 1 154 0
 530 01f8 484A     		ldr	r2, .L61+24
 531 01fa D7F8E830 		ldr	r3, [r7, #232]
 532 01fe 52F82330 		ldr	r3, [r2, r3, lsl #2]
 533 0202 B3F5FA6F 		cmp	r3, #2000
 534 0206 04DD     		ble	.L13
 155:main.c        ****                         highCountLeftIntersection++;
 535              		.loc 1 155 0
 536 0208 D7F80031 		ldr	r3, [r7, #256]
 537 020c 0133     		adds	r3, r3, #1
 538 020e C7F80031 		str	r3, [r7, #256]
 539              	.L13:
 156:main.c        **** 
 157:main.c        ****                     }
 158:main.c        **** 
 159:main.c        ****                     if (valuesLeftLine[i] > 2000) {
 540              		.loc 1 159 0
 541 0212 434A     		ldr	r2, .L61+28
 542 0214 D7F8E830 		ldr	r3, [r7, #232]
 543 0218 52F82330 		ldr	r3, [r2, r3, lsl #2]
 544 021c B3F5FA6F 		cmp	r3, #2000
 545 0220 04DD     		ble	.L14
 160:main.c        ****                         highCountLeftLine++;
 546              		.loc 1 160 0
 547 0222 D7F8FC30 		ldr	r3, [r7, #252]
 548 0226 0133     		adds	r3, r3, #1
 549 0228 C7F8FC30 		str	r3, [r7, #252]
 550              	.L14:
 161:main.c        **** 
 162:main.c        ****                     }
 163:main.c        **** 
 164:main.c        ****                     if (valuesMiddleLine[i] > 2000) {
 551              		.loc 1 164 0
 552 022c 3D4A     		ldr	r2, .L61+32
 553 022e D7F8E830 		ldr	r3, [r7, #232]
 554 0232 52F82330 		ldr	r3, [r2, r3, lsl #2]
 555 0236 B3F5FA6F 		cmp	r3, #2000
 556 023a 04DD     		ble	.L15
 165:main.c        ****                         highCountMiddleLine++;
 557              		.loc 1 165 0
 558 023c D7F8F830 		ldr	r3, [r7, #248]
 559 0240 0133     		adds	r3, r3, #1
 560 0242 C7F8F830 		str	r3, [r7, #248]
 561              	.L15:
 166:main.c        **** 
 167:main.c        ****                     }
 168:main.c        **** 
 169:main.c        ****                     if (valuesTurnComplete[i] > 2000) {
 562              		.loc 1 169 0
 563 0246 384A     		ldr	r2, .L61+36
 564 0248 D7F8E830 		ldr	r3, [r7, #232]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 14


 565 024c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 566 0250 B3F5FA6F 		cmp	r3, #2000
 567 0254 04DD     		ble	.L16
 170:main.c        ****                         highCountTurnComplete++;
 568              		.loc 1 170 0
 569 0256 D7F8F430 		ldr	r3, [r7, #244]
 570 025a 0133     		adds	r3, r3, #1
 571 025c C7F8F430 		str	r3, [r7, #244]
 572              	.L16:
 171:main.c        **** 
 172:main.c        ****                     }
 173:main.c        **** 
 174:main.c        ****                     if (valuesRightLine[i] > 2000) {
 573              		.loc 1 174 0
 574 0260 324A     		ldr	r2, .L61+40
 575 0262 D7F8E830 		ldr	r3, [r7, #232]
 576 0266 52F82330 		ldr	r3, [r2, r3, lsl #2]
 577 026a B3F5FA6F 		cmp	r3, #2000
 578 026e 04DD     		ble	.L17
 175:main.c        ****                         highCountRightLine++;
 579              		.loc 1 175 0
 580 0270 D7F8F030 		ldr	r3, [r7, #240]
 581 0274 0133     		adds	r3, r3, #1
 582 0276 C7F8F030 		str	r3, [r7, #240]
 583              	.L17:
 176:main.c        **** 
 177:main.c        ****                     }
 178:main.c        **** 
 179:main.c        ****                     if (valuesRightIntersection[i] > 2000) {
 584              		.loc 1 179 0
 585 027a 2D4A     		ldr	r2, .L61+44
 586 027c D7F8E830 		ldr	r3, [r7, #232]
 587 0280 52F82330 		ldr	r3, [r2, r3, lsl #2]
 588 0284 B3F5FA6F 		cmp	r3, #2000
 589 0288 04DD     		ble	.L18
 180:main.c        ****                         highCountRightIntersection++;
 590              		.loc 1 180 0
 591 028a D7F8EC30 		ldr	r3, [r7, #236]
 592 028e 0133     		adds	r3, r3, #1
 593 0290 C7F8EC30 		str	r3, [r7, #236]
 594              	.L18:
 595              	.LBE5:
 138:main.c        ****                     step = 0;
 596              		.loc 1 138 0 discriminator 2
 597 0294 D7F8E830 		ldr	r3, [r7, #232]
 598 0298 0133     		adds	r3, r3, #1
 599 029a C7F8E830 		str	r3, [r7, #232]
 600              	.L9:
 138:main.c        ****                     step = 0;
 601              		.loc 1 138 0 is_stmt 0 discriminator 1
 602 029e D7F8E830 		ldr	r3, [r7, #232]
 603 02a2 B3F57A7F 		cmp	r3, #1000
 604 02a6 FFF662AF 		blt	.L19
 605              	.LBE4:
 181:main.c        **** 
 182:main.c        ****                     }
 183:main.c        **** 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 15


 184:main.c        ****                 }
 185:main.c        **** 
 186:main.c        ****                 if (started == 0) {
 606              		.loc 1 186 0 is_stmt 1
 607 02aa 2A4B     		ldr	r3, .L61+80
 608 02ac 1B68     		ldr	r3, [r3]
 609 02ae 002B     		cmp	r3, #0
 610 02b0 40F0AF80 		bne	.L20
 611              	.LBB6:
 187:main.c        ****                     //LED_PIN_1_Write(!LED_PIN_1_Read());
 188:main.c        ****                     // Look for start using a coarse grain approach, gradually get more fine
 189:main.c        ****                     /*if (instruction[instCounter + 23] == 0 && instruction[instCounter + 24] == 0 
 190:main.c        ****                       instCounter = instCounter + 25;
 191:main.c        ****                     } else if (instruction[instCounter + 8] == 0 && instruction[instCounter + 9] ==
 192:main.c        ****                       instCounter = instCounter + 10;
 193:main.c        ****                     } else if (instruction[instCounter + 3] == 0 && instruction[instCounter + 4] ==
 194:main.c        ****                       instCounter = instCounter + 5;
 195:main.c        ****                     } else {
 196:main.c        ****                       if (instruction[instCounter + 1] == 0) {
 197:main.c        ****                         instCounter++;
 198:main.c        ****                       } else if (instruction[instCounter + 2] == 0) {
 199:main.c        ****                         instCounter = instCounter + 2;
 200:main.c        ****                       } else if (instruction[instCounter + 3] == 0) {
 201:main.c        ****                         instCounter = instCounter + 3;
 202:main.c        ****                       } else if (instruction[instCounter + 4] == 0) {
 203:main.c        ****                         instCounter = instCounter + 4;
 204:main.c        ****                       }
 205:main.c        ****                     }*/
 206:main.c        ****                     int i, firstNonZeroIndex = -1;
 612              		.loc 1 206 0
 613 02b4 4FF0FF33 		mov	r3, #-1
 614 02b8 C7F8E030 		str	r3, [r7, #224]
 207:main.c        ****                     for (i = 0; i < 500; i++) {
 615              		.loc 1 207 0
 616 02bc 0023     		movs	r3, #0
 617 02be C7F8E430 		str	r3, [r7, #228]
 618 02c2 10E0     		b	.L21
 619              	.L24:
 208:main.c        ****                         if (instruction[i] != 0) {
 620              		.loc 1 208 0
 621 02c4 114A     		ldr	r2, .L61+8
 622 02c6 D7F8E430 		ldr	r3, [r7, #228]
 623 02ca 1344     		add	r3, r3, r2
 624 02cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 625 02ce 002B     		cmp	r3, #0
 626 02d0 04D0     		beq	.L22
 209:main.c        ****                             firstNonZeroIndex = i;
 627              		.loc 1 209 0
 628 02d2 D7F8E430 		ldr	r3, [r7, #228]
 629 02d6 C7F8E030 		str	r3, [r7, #224]
 210:main.c        ****                             break;
 630              		.loc 1 210 0
 631 02da 09E0     		b	.L23
 632              	.L22:
 207:main.c        ****                         if (instruction[i] != 0) {
 633              		.loc 1 207 0 discriminator 2
 634 02dc D7F8E430 		ldr	r3, [r7, #228]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 16


 635 02e0 0133     		adds	r3, r3, #1
 636 02e2 C7F8E430 		str	r3, [r7, #228]
 637              	.L21:
 207:main.c        ****                         if (instruction[i] != 0) {
 638              		.loc 1 207 0 is_stmt 0 discriminator 1
 639 02e6 D7F8E430 		ldr	r3, [r7, #228]
 640 02ea B3F5FA7F 		cmp	r3, #500
 641 02ee E9DB     		blt	.L24
 642              	.L23:
 211:main.c        ****                         }
 212:main.c        ****                     }
 213:main.c        **** 
 214:main.c        ****                     if (firstNonZeroIndex != -1) {
 643              		.loc 1 214 0 is_stmt 1
 644 02f0 D7F8E030 		ldr	r3, [r7, #224]
 645 02f4 B3F1FF3F 		cmp	r3, #-1
 646 02f8 72D0     		beq	.L25
 215:main.c        ****                         // Shift the array to start with the first non-zero element
 216:main.c        ****                         for (i = 0; i < 500 - firstNonZeroIndex; i++) {
 647              		.loc 1 216 0
 648 02fa 0023     		movs	r3, #0
 649 02fc C7F8E430 		str	r3, [r7, #228]
 650 0300 49E0     		b	.L26
 651              	.L62:
 652 0302 00BF     		.align	2
 653              	.L61:
 654 0304 00000000 		.word	eoc
 655 0308 00000000 		.word	squares
 656 030c 00000000 		.word	instruction
 657 0310 00000000 		.word	distance
 658 0314 00000000 		.word	flag
 659 0318 00000000 		.word	count
 660 031c 00000000 		.word	valuesLeftIntersection
 661 0320 00000000 		.word	valuesLeftLine
 662 0324 00000000 		.word	valuesMiddleLine
 663 0328 00000000 		.word	valuesTurnComplete
 664 032c 00000000 		.word	valuesRightLine
 665 0330 00000000 		.word	valuesRightIntersection
 666 0334 00000000 		.word	motorUpdateCount
 667 0338 00000000 		.word	step
 668 033c 00000000 		.word	turnComplete
 669 0340 00000000 		.word	v2M1
 670 0344 00000000 		.word	v2M2
 671 0348 00000000 		.word	pulsesTravelled
 672 034c 00000000 		.word	v1M1
 673 0350 00000000 		.word	v1M2
 674 0354 00000000 		.word	started
 675              	.L27:
 217:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 676              		.loc 1 217 0 discriminator 3
 677 0358 D7F8E420 		ldr	r2, [r7, #228]
 678 035c D7F8E030 		ldr	r3, [r7, #224]
 679 0360 1344     		add	r3, r3, r2
 680 0362 B44A     		ldr	r2, .L63
 681 0364 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 682 0366 B34A     		ldr	r2, .L63
 683 0368 D7F8E430 		ldr	r3, [r7, #228]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 17


 684 036c 1344     		add	r3, r3, r2
 685 036e 0A46     		mov	r2, r1
 686 0370 1A70     		strb	r2, [r3]
 218:main.c        ****                             distance[i] = distance[i + firstNonZeroIndex];
 687              		.loc 1 218 0 discriminator 3
 688 0372 D7F8E420 		ldr	r2, [r7, #228]
 689 0376 D7F8E030 		ldr	r3, [r7, #224]
 690 037a 1344     		add	r3, r3, r2
 691 037c AE4A     		ldr	r2, .L63+4
 692 037e D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 693 0380 AD4A     		ldr	r2, .L63+4
 694 0382 D7F8E430 		ldr	r3, [r7, #228]
 695 0386 1344     		add	r3, r3, r2
 696 0388 0A46     		mov	r2, r1
 697 038a 1A70     		strb	r2, [r3]
 216:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 698              		.loc 1 216 0 discriminator 3
 699 038c D7F8E430 		ldr	r3, [r7, #228]
 700 0390 0133     		adds	r3, r3, #1
 701 0392 C7F8E430 		str	r3, [r7, #228]
 702              	.L26:
 216:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 703              		.loc 1 216 0 is_stmt 0 discriminator 1
 704 0396 D7F8E030 		ldr	r3, [r7, #224]
 705 039a C3F5FA72 		rsb	r2, r3, #500
 706 039e D7F8E430 		ldr	r3, [r7, #228]
 707 03a2 9A42     		cmp	r2, r3
 708 03a4 D8DC     		bgt	.L27
 219:main.c        ****                         }
 220:main.c        **** 
 221:main.c        ****                         // Zero out the remaining elements
 222:main.c        ****                         for (i = 500 - firstNonZeroIndex; i < 500; i++) {
 709              		.loc 1 222 0 is_stmt 1
 710 03a6 D7F8E030 		ldr	r3, [r7, #224]
 711 03aa C3F5FA73 		rsb	r3, r3, #500
 712 03ae C7F8E430 		str	r3, [r7, #228]
 713 03b2 10E0     		b	.L28
 714              	.L29:
 223:main.c        ****                             instruction[i] = 0;
 715              		.loc 1 223 0 discriminator 3
 716 03b4 9F4A     		ldr	r2, .L63
 717 03b6 D7F8E430 		ldr	r3, [r7, #228]
 718 03ba 1344     		add	r3, r3, r2
 719 03bc 0022     		movs	r2, #0
 720 03be 1A70     		strb	r2, [r3]
 224:main.c        ****                             distance[i] = 0;
 721              		.loc 1 224 0 discriminator 3
 722 03c0 9D4A     		ldr	r2, .L63+4
 723 03c2 D7F8E430 		ldr	r3, [r7, #228]
 724 03c6 1344     		add	r3, r3, r2
 725 03c8 0022     		movs	r2, #0
 726 03ca 1A70     		strb	r2, [r3]
 222:main.c        ****                             instruction[i] = 0;
 727              		.loc 1 222 0 discriminator 3
 728 03cc D7F8E430 		ldr	r3, [r7, #228]
 729 03d0 0133     		adds	r3, r3, #1
 730 03d2 C7F8E430 		str	r3, [r7, #228]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 18


 731              	.L28:
 222:main.c        ****                             instruction[i] = 0;
 732              		.loc 1 222 0 is_stmt 0 discriminator 1
 733 03d6 D7F8E430 		ldr	r3, [r7, #228]
 734 03da B3F5FA7F 		cmp	r3, #500
 735 03de E9DB     		blt	.L29
 736              	.L25:
 737              	.LBB7:
 225:main.c        ****                         }
 226:main.c        **** 
 227:main.c        ****                     } else {
 228:main.c        ****                         // The array contains all zeros
 229:main.c        **** 
 230:main.c        ****                     }
 231:main.c        ****                     for (int i = 0; i < 500; i++) {
 738              		.loc 1 231 0 is_stmt 1
 739 03e0 0023     		movs	r3, #0
 740 03e2 C7F8DC30 		str	r3, [r7, #220]
 741 03e6 04E0     		b	.L30
 742              	.L31:
 743              		.loc 1 231 0 is_stmt 0 discriminator 3
 744 03e8 D7F8DC30 		ldr	r3, [r7, #220]
 745 03ec 0133     		adds	r3, r3, #1
 746 03ee C7F8DC30 		str	r3, [r7, #220]
 747              	.L30:
 748              		.loc 1 231 0 discriminator 1
 749 03f2 D7F8DC30 		ldr	r3, [r7, #220]
 750 03f6 B3F5FA7F 		cmp	r3, #500
 751 03fa F5DB     		blt	.L31
 752              	.LBE7:
 232:main.c        **** 
 233:main.c        ****                         char instStr[24];
 234:main.c        **** 
 235:main.c        ****                         //snprintf(instStr, sizeof(instStr), "%u - %u \r\n", (unsigned char) instru
 236:main.c        **** 
 237:main.c        ****                         //usbPutString(instStr);
 238:main.c        ****                     }
 239:main.c        ****                     started = 1;
 753              		.loc 1 239 0 is_stmt 1
 754 03fc 8F4B     		ldr	r3, .L63+8
 755 03fe 0122     		movs	r2, #1
 756 0400 1A60     		str	r2, [r3]
 240:main.c        ****                     turnComplete = -1; //let the robot travel forward first
 757              		.loc 1 240 0
 758 0402 8F4B     		ldr	r3, .L63+12
 759 0404 4FF0FF32 		mov	r2, #-1
 760 0408 1A60     		str	r2, [r3]
 241:main.c        ****                     checkDistance = 0; //robot checks/stops distance when this is on
 761              		.loc 1 241 0
 762 040a 8E4B     		ldr	r3, .L63+16
 763 040c 0022     		movs	r2, #0
 764 040e 1A60     		str	r2, [r3]
 765              	.LBE6:
 766 0410 E6E1     		b	.L8
 767              	.L20:
 768              	.LBB8:
 242:main.c        ****                 } else {
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 19


 243:main.c        **** 
 244:main.c        ****                     started = 1;
 769              		.loc 1 244 0
 770 0412 8A4B     		ldr	r3, .L63+8
 771 0414 0122     		movs	r2, #1
 772 0416 1A60     		str	r2, [r3]
 245:main.c        ****                     
 246:main.c        **** 
 247:main.c        ****                     char currentInst = instruction[instCounter];
 773              		.loc 1 247 0
 774 0418 8B4B     		ldr	r3, .L63+20
 775 041a 1B68     		ldr	r3, [r3]
 776 041c 854A     		ldr	r2, .L63
 777 041e D35C     		ldrb	r3, [r2, r3]
 778 0420 87F8DB30 		strb	r3, [r7, #219]
 248:main.c        ****                     char nextInst = instruction[instCounter + 1];
 779              		.loc 1 248 0
 780 0424 884B     		ldr	r3, .L63+20
 781 0426 1B68     		ldr	r3, [r3]
 782 0428 0133     		adds	r3, r3, #1
 783 042a 824A     		ldr	r2, .L63
 784 042c D35C     		ldrb	r3, [r2, r3]
 785 042e 87F8DA30 		strb	r3, [r7, #218]
 249:main.c        ****                     if (currentInst == 0) {
 786              		.loc 1 249 0
 787 0432 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 788 0436 002B     		cmp	r3, #0
 789 0438 0CD1     		bne	.L32
 250:main.c        ****                         LED_PIN_1_Write(0);
 790              		.loc 1 250 0
 791 043a 0020     		movs	r0, #0
 792 043c FFF7FEFF 		bl	LED_PIN_1_Write
 251:main.c        ****                         LED_PIN_6_Write(0);
 793              		.loc 1 251 0
 794 0440 0020     		movs	r0, #0
 795 0442 FFF7FEFF 		bl	LED_PIN_6_Write
 252:main.c        ****                         stop();
 796              		.loc 1 252 0
 797 0446 FFF7FEFF 		bl	stop
 253:main.c        ****                         // Stop
 254:main.c        ****                         CyDelay(1000);
 798              		.loc 1 254 0
 799 044a 4FF47A70 		mov	r0, #1000
 800 044e FFF7FEFF 		bl	CyDelay
 801 0452 B8E0     		b	.L33
 802              	.L32:
 255:main.c        ****                     } else if (currentInst == 1 && turnComplete == -1) {
 803              		.loc 1 255 0
 804 0454 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 805 0458 012B     		cmp	r3, #1
 806 045a 19D1     		bne	.L34
 807              		.loc 1 255 0 is_stmt 0 discriminator 1
 808 045c 784B     		ldr	r3, .L63+12
 809 045e 1B68     		ldr	r3, [r3]
 810 0460 B3F1FF3F 		cmp	r3, #-1
 811 0464 14D1     		bne	.L34
 256:main.c        ****                         LED_PIN_1_Write(1);
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 20


 812              		.loc 1 256 0 is_stmt 1
 813 0466 0120     		movs	r0, #1
 814 0468 FFF7FEFF 		bl	LED_PIN_1_Write
 257:main.c        ****                         LED_PIN_6_Write(0);
 815              		.loc 1 257 0
 816 046c 0020     		movs	r0, #0
 817 046e FFF7FEFF 		bl	LED_PIN_6_Write
 258:main.c        ****                         turnComplete = 0;
 818              		.loc 1 258 0
 819 0472 734B     		ldr	r3, .L63+12
 820 0474 0022     		movs	r2, #0
 821 0476 1A60     		str	r2, [r3]
 259:main.c        ****                         turnLeft();
 822              		.loc 1 259 0
 823 0478 FFF7FEFF 		bl	turnLeft
 260:main.c        ****                         LED_PIN_4_Write(0);
 824              		.loc 1 260 0
 825 047c 0020     		movs	r0, #0
 826 047e FFF7FEFF 		bl	LED_PIN_4_Write
 261:main.c        ****                         CyDelay(150);
 827              		.loc 1 261 0
 828 0482 9620     		movs	r0, #150
 829 0484 FFF7FEFF 		bl	CyDelay
 262:main.c        ****                         pulsesTravelled = 0;
 830              		.loc 1 262 0
 831 0488 704B     		ldr	r3, .L63+24
 832 048a 0022     		movs	r2, #0
 833 048c 1A60     		str	r2, [r3]
 834 048e 9AE0     		b	.L33
 835              	.L34:
 263:main.c        ****                         // Complete a left turn, then follow line
 264:main.c        **** 
 265:main.c        ****                     } else if (currentInst == 1 && turnComplete == 0){
 836              		.loc 1 265 0
 837 0490 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 838 0494 012B     		cmp	r3, #1
 839 0496 16D1     		bne	.L35
 840              		.loc 1 265 0 is_stmt 0 discriminator 1
 841 0498 694B     		ldr	r3, .L63+12
 842 049a 1B68     		ldr	r3, [r3]
 843 049c 002B     		cmp	r3, #0
 844 049e 12D1     		bne	.L35
 266:main.c        ****                         lastAdjustDirection = 0;
 845              		.loc 1 266 0 is_stmt 1
 846 04a0 6B4B     		ldr	r3, .L63+28
 847 04a2 0022     		movs	r2, #0
 848 04a4 1A60     		str	r2, [r3]
 267:main.c        ****                         if (L_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 849              		.loc 1 267 0
 850 04a6 D7F8FC30 		ldr	r3, [r7, #252]
 851 04aa 4A2B     		cmp	r3, #74
 852 04ac 07DC     		bgt	.L36
 268:main.c        ****                             turnComplete = 1;
 853              		.loc 1 268 0
 854 04ae 644B     		ldr	r3, .L63+12
 855 04b0 0122     		movs	r2, #1
 856 04b2 1A60     		str	r2, [r3]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 21


 269:main.c        ****                             turnRight();
 857              		.loc 1 269 0
 858 04b4 FFF7FEFF 		bl	turnRight
 270:main.c        ****                             CyDelay(200);
 859              		.loc 1 270 0
 860 04b8 C820     		movs	r0, #200
 861 04ba FFF7FEFF 		bl	CyDelay
 862              	.L36:
 271:main.c        ****                         }
 272:main.c        ****                         pulsesTravelled = 0;
 863              		.loc 1 272 0
 864 04be 634B     		ldr	r3, .L63+24
 865 04c0 0022     		movs	r2, #0
 866 04c2 1A60     		str	r2, [r3]
 867 04c4 7FE0     		b	.L33
 868              	.L35:
 273:main.c        ****                     } else if (currentInst == 2) {
 869              		.loc 1 273 0
 870 04c6 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 871 04ca 022B     		cmp	r3, #2
 872 04cc 06D1     		bne	.L37
 274:main.c        ****                         LED_PIN_1_Write(1);
 873              		.loc 1 274 0
 874 04ce 0120     		movs	r0, #1
 875 04d0 FFF7FEFF 		bl	LED_PIN_1_Write
 275:main.c        ****                         LED_PIN_6_Write(1);
 876              		.loc 1 275 0
 877 04d4 0120     		movs	r0, #1
 878 04d6 FFF7FEFF 		bl	LED_PIN_6_Write
 879 04da 74E0     		b	.L33
 880              	.L37:
 276:main.c        ****                         // Drive straight
 277:main.c        ****                     } else if (currentInst == 3 && turnComplete == -1) { 
 881              		.loc 1 277 0
 882 04dc 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 883 04e0 032B     		cmp	r3, #3
 884 04e2 19D1     		bne	.L38
 885              		.loc 1 277 0 is_stmt 0 discriminator 1
 886 04e4 564B     		ldr	r3, .L63+12
 887 04e6 1B68     		ldr	r3, [r3]
 888 04e8 B3F1FF3F 		cmp	r3, #-1
 889 04ec 14D1     		bne	.L38
 278:main.c        ****                         LED_PIN_1_Write(0);
 890              		.loc 1 278 0 is_stmt 1
 891 04ee 0020     		movs	r0, #0
 892 04f0 FFF7FEFF 		bl	LED_PIN_1_Write
 279:main.c        ****                         LED_PIN_6_Write(1);
 893              		.loc 1 279 0
 894 04f4 0120     		movs	r0, #1
 895 04f6 FFF7FEFF 		bl	LED_PIN_6_Write
 280:main.c        ****                         turnComplete = 0;
 896              		.loc 1 280 0
 897 04fa 514B     		ldr	r3, .L63+12
 898 04fc 0022     		movs	r2, #0
 899 04fe 1A60     		str	r2, [r3]
 281:main.c        ****                         turnRight();
 900              		.loc 1 281 0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 22


 901 0500 FFF7FEFF 		bl	turnRight
 282:main.c        ****                         LED_PIN_4_Write(0);
 902              		.loc 1 282 0
 903 0504 0020     		movs	r0, #0
 904 0506 FFF7FEFF 		bl	LED_PIN_4_Write
 283:main.c        ****                         CyDelay(150);
 905              		.loc 1 283 0
 906 050a 9620     		movs	r0, #150
 907 050c FFF7FEFF 		bl	CyDelay
 284:main.c        ****                         pulsesTravelled = 0;
 908              		.loc 1 284 0
 909 0510 4E4B     		ldr	r3, .L63+24
 910 0512 0022     		movs	r2, #0
 911 0514 1A60     		str	r2, [r3]
 912 0516 56E0     		b	.L33
 913              	.L38:
 285:main.c        ****                         
 286:main.c        ****                     } else if (currentInst == 3 && turnComplete == 0){
 914              		.loc 1 286 0
 915 0518 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 916 051c 032B     		cmp	r3, #3
 917 051e 16D1     		bne	.L39
 918              		.loc 1 286 0 is_stmt 0 discriminator 1
 919 0520 474B     		ldr	r3, .L63+12
 920 0522 1B68     		ldr	r3, [r3]
 921 0524 002B     		cmp	r3, #0
 922 0526 12D1     		bne	.L39
 287:main.c        ****                         lastAdjustDirection = 2;
 923              		.loc 1 287 0 is_stmt 1
 924 0528 494B     		ldr	r3, .L63+28
 925 052a 0222     		movs	r2, #2
 926 052c 1A60     		str	r2, [r3]
 288:main.c        ****                         if (R_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 927              		.loc 1 288 0
 928 052e D7F8F030 		ldr	r3, [r7, #240]
 929 0532 4A2B     		cmp	r3, #74
 930 0534 07DC     		bgt	.L40
 289:main.c        ****                             turnComplete = 1;
 931              		.loc 1 289 0
 932 0536 424B     		ldr	r3, .L63+12
 933 0538 0122     		movs	r2, #1
 934 053a 1A60     		str	r2, [r3]
 290:main.c        ****                             turnLeft();
 935              		.loc 1 290 0
 936 053c FFF7FEFF 		bl	turnLeft
 291:main.c        ****                             CyDelay(200);
 937              		.loc 1 291 0
 938 0540 C820     		movs	r0, #200
 939 0542 FFF7FEFF 		bl	CyDelay
 940              	.L40:
 292:main.c        ****                         }
 293:main.c        ****                         pulsesTravelled = 0;
 941              		.loc 1 293 0
 942 0546 414B     		ldr	r3, .L63+24
 943 0548 0022     		movs	r2, #0
 944 054a 1A60     		str	r2, [r3]
 945 054c 3BE0     		b	.L33
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 23


 946              	.L39:
 294:main.c        ****                     }  else if (currentInst == 4) {
 947              		.loc 1 294 0
 948 054e 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 949 0552 042B     		cmp	r3, #4
 950 0554 06D1     		bne	.L41
 295:main.c        ****                         LED_PIN_1_Write(0);
 951              		.loc 1 295 0
 952 0556 0020     		movs	r0, #0
 953 0558 FFF7FEFF 		bl	LED_PIN_1_Write
 296:main.c        ****                         LED_PIN_6_Write(0);
 954              		.loc 1 296 0
 955 055c 0020     		movs	r0, #0
 956 055e FFF7FEFF 		bl	LED_PIN_6_Write
 957 0562 30E0     		b	.L33
 958              	.L41:
 297:main.c        ****                         // Do a 180, then follow line
 298:main.c        ****                     } else if (currentInst == 5) {
 959              		.loc 1 298 0
 960 0564 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 961 0568 052B     		cmp	r3, #5
 962 056a 0CD1     		bne	.L42
 299:main.c        ****                         LED_PIN_1_Write(1);
 963              		.loc 1 299 0
 964 056c 0120     		movs	r0, #1
 965 056e FFF7FEFF 		bl	LED_PIN_1_Write
 300:main.c        ****                         LED_PIN_6_Write(0);
 966              		.loc 1 300 0
 967 0572 0020     		movs	r0, #0
 968 0574 FFF7FEFF 		bl	LED_PIN_6_Write
 301:main.c        ****                         // Complete a left turn, then follow line until end of encoder position
 302:main.c        ****                         if (turnComplete == 0) { 
 969              		.loc 1 302 0
 970 0578 314B     		ldr	r3, .L63+12
 971 057a 1B68     		ldr	r3, [r3]
 972 057c 002B     		cmp	r3, #0
 973 057e 22D1     		bne	.L33
 303:main.c        ****                             turnLeft();
 974              		.loc 1 303 0
 975 0580 FFF7FEFF 		bl	turnLeft
 976 0584 1FE0     		b	.L33
 977              	.L42:
 304:main.c        ****                         }
 305:main.c        ****                     } else if (currentInst == 6) {
 978              		.loc 1 305 0
 979 0586 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 980 058a 062B     		cmp	r3, #6
 981 058c 06D1     		bne	.L44
 306:main.c        ****                         LED_PIN_1_Write(1);
 982              		.loc 1 306 0
 983 058e 0120     		movs	r0, #1
 984 0590 FFF7FEFF 		bl	LED_PIN_1_Write
 307:main.c        ****                         LED_PIN_6_Write(1);
 985              		.loc 1 307 0
 986 0594 0120     		movs	r0, #1
 987 0596 FFF7FEFF 		bl	LED_PIN_6_Write
 988 059a 14E0     		b	.L33
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 24


 989              	.L44:
 308:main.c        ****                         // Follow line until end of encoder position
 309:main.c        ****                     } else if (currentInst == 7) {
 990              		.loc 1 309 0
 991 059c 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 992 05a0 072B     		cmp	r3, #7
 993 05a2 06D1     		bne	.L45
 310:main.c        ****                         LED_PIN_1_Write(0);
 994              		.loc 1 310 0
 995 05a4 0020     		movs	r0, #0
 996 05a6 FFF7FEFF 		bl	LED_PIN_1_Write
 311:main.c        ****                         LED_PIN_6_Write(1);
 997              		.loc 1 311 0
 998 05aa 0120     		movs	r0, #1
 999 05ac FFF7FEFF 		bl	LED_PIN_6_Write
 1000 05b0 09E0     		b	.L33
 1001              	.L45:
 312:main.c        ****                         // Complete a right turn, then follow line until end of encoder position
 313:main.c        ****                     } else if (currentInst == 8) {
 1002              		.loc 1 313 0
 1003 05b2 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1004 05b6 082B     		cmp	r3, #8
 1005 05b8 05D1     		bne	.L33
 314:main.c        ****                         LED_PIN_1_Write(0);
 1006              		.loc 1 314 0
 1007 05ba 0020     		movs	r0, #0
 1008 05bc FFF7FEFF 		bl	LED_PIN_1_Write
 315:main.c        ****                         LED_PIN_6_Write(0);
 1009              		.loc 1 315 0
 1010 05c0 0020     		movs	r0, #0
 1011 05c2 FFF7FEFF 		bl	LED_PIN_6_Write
 1012              	.L33:
 316:main.c        ****                         // Complete a 180 turn, then follow line until end of encoder position
 317:main.c        ****                     }
 318:main.c        **** 
 319:main.c        ****                     //only allow code to straighten if turn is complete
 320:main.c        ****                     if (turnComplete != 0) {
 1013              		.loc 1 320 0
 1014 05c6 1E4B     		ldr	r3, .L63+12
 1015 05c8 1B68     		ldr	r3, [r3]
 1016 05ca 002B     		cmp	r3, #0
 1017 05cc 00F0FA80 		beq	.L46
 1018              	.LBB9:
 321:main.c        ****                     if ((M_LINE_BLACK && L_LINE_BLACK)) { // if robot slightly too far right
 1019              		.loc 1 321 0
 1020 05d0 D7F8F830 		ldr	r3, [r7, #248]
 1021 05d4 4A2B     		cmp	r3, #74
 1022 05d6 09DC     		bgt	.L47
 1023              		.loc 1 321 0 is_stmt 0 discriminator 1
 1024 05d8 D7F8FC30 		ldr	r3, [r7, #252]
 1025 05dc 4A2B     		cmp	r3, #74
 1026 05de 05DC     		bgt	.L47
 322:main.c        ****                         adjustLeft();
 1027              		.loc 1 322 0 is_stmt 1
 1028 05e0 FFF7FEFF 		bl	adjustLeft
 323:main.c        ****                         lastAdjustDirection = 0;
 1029              		.loc 1 323 0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 25


 1030 05e4 1A4B     		ldr	r3, .L63+28
 1031 05e6 0022     		movs	r2, #0
 1032 05e8 1A60     		str	r2, [r3]
 1033 05ea 3CE0     		b	.L48
 1034              	.L47:
 324:main.c        **** 
 325:main.c        ****                     } else if (M_LINE_BLACK && R_LINE_BLACK) { //  if robot slightly too far left
 1035              		.loc 1 325 0
 1036 05ec D7F8F830 		ldr	r3, [r7, #248]
 1037 05f0 4A2B     		cmp	r3, #74
 1038 05f2 09DC     		bgt	.L49
 1039              		.loc 1 325 0 is_stmt 0 discriminator 1
 1040 05f4 D7F8F030 		ldr	r3, [r7, #240]
 1041 05f8 4A2B     		cmp	r3, #74
 1042 05fa 05DC     		bgt	.L49
 326:main.c        ****                         adjustRight();
 1043              		.loc 1 326 0 is_stmt 1
 1044 05fc FFF7FEFF 		bl	adjustRight
 327:main.c        ****                         lastAdjustDirection = 2;
 1045              		.loc 1 327 0
 1046 0600 134B     		ldr	r3, .L63+28
 1047 0602 0222     		movs	r2, #2
 1048 0604 1A60     		str	r2, [r3]
 1049 0606 2EE0     		b	.L48
 1050              	.L49:
 328:main.c        **** 
 329:main.c        ****                     } else if (M_LINE_BLACK) { // if robot in the center keep moving straight
 1051              		.loc 1 329 0
 1052 0608 D7F8F830 		ldr	r3, [r7, #248]
 1053 060c 4A2B     		cmp	r3, #74
 1054 060e 07DC     		bgt	.L50
 330:main.c        ****                         lastAdjustDirection = 1;
 1055              		.loc 1 330 0
 1056 0610 0F4B     		ldr	r3, .L63+28
 1057 0612 0122     		movs	r2, #1
 1058 0614 1A60     		str	r2, [r3]
 331:main.c        ****                         driveForward(0, 0);
 1059              		.loc 1 331 0
 1060 0616 0021     		movs	r1, #0
 1061 0618 0020     		movs	r0, #0
 1062 061a FFF7FEFF 		bl	driveForward
 1063 061e 22E0     		b	.L48
 1064              	.L50:
 332:main.c        **** 
 333:main.c        ****                     } else if (R_LINE_BLACK) { // if robot too far left
 1065              		.loc 1 333 0
 1066 0620 D7F8F030 		ldr	r3, [r7, #240]
 1067 0624 4A2B     		cmp	r3, #74
 1068 0626 15DC     		bgt	.L51
 334:main.c        ****                         adjustRight();
 1069              		.loc 1 334 0
 1070 0628 FFF7FEFF 		bl	adjustRight
 335:main.c        ****                         lastAdjustDirection = 2;
 1071              		.loc 1 335 0
 1072 062c 084B     		ldr	r3, .L63+28
 1073 062e 0222     		movs	r2, #2
 1074 0630 1A60     		str	r2, [r3]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 26


 1075 0632 18E0     		b	.L48
 1076              	.L64:
 1077              		.align	2
 1078              	.L63:
 1079 0634 00000000 		.word	instruction
 1080 0638 00000000 		.word	distance
 1081 063c 00000000 		.word	started
 1082 0640 00000000 		.word	turnComplete
 1083 0644 00000000 		.word	checkDistance
 1084 0648 00000000 		.word	instCounter
 1085 064c 00000000 		.word	pulsesTravelled
 1086 0650 00000000 		.word	lastAdjustDirection
 1087              	.L51:
 336:main.c        **** 
 337:main.c        ****                     } else if (L_LINE_BLACK) { // if robot too far right
 1088              		.loc 1 337 0
 1089 0654 D7F8FC30 		ldr	r3, [r7, #252]
 1090 0658 4A2B     		cmp	r3, #74
 1091 065a 04DC     		bgt	.L48
 338:main.c        ****                         adjustLeft();
 1092              		.loc 1 338 0
 1093 065c FFF7FEFF 		bl	adjustLeft
 339:main.c        ****                         lastAdjustDirection = 0;
 1094              		.loc 1 339 0
 1095 0660 674B     		ldr	r3, .L65+16
 1096 0662 0022     		movs	r2, #0
 1097 0664 1A60     		str	r2, [r3]
 1098              	.L48:
 340:main.c        ****                     }
 341:main.c        ****                     else {
 342:main.c        ****                     }
 343:main.c        ****                     
 344:main.c        **** 
 345:main.c        ****                     /*} else { // completely lost find way
 346:main.c        ****                         if (lastAdjustDirection == 0) {
 347:main.c        ****                             turnLeft();
 348:main.c        ****                         } else if (lastAdjustDirection == 1) { // last movement was forward (middle
 349:main.c        ****                             //hardAdjustLeft();
 350:main.c        ****                             turnRight();
 351:main.c        ****                         } else {
 352:main.c        ****                             turnRight();
 353:main.c        ****                         }
 354:main.c        **** 
 355:main.c        ****                     }
 356:main.c        ****                     */
 357:main.c        **** 
 358:main.c        ****                     // UPDATE INSTRUCTION LOGIC GOES HERE this needs dramatic improving
 359:main.c        ****                     LED_PIN_2_Write(0);
 1099              		.loc 1 359 0
 1100 0666 0020     		movs	r0, #0
 1101 0668 FFF7FEFF 		bl	LED_PIN_2_Write
 360:main.c        ****                     LED_PIN_3_Write(0);
 1102              		.loc 1 360 0
 1103 066c 0020     		movs	r0, #0
 1104 066e FFF7FEFF 		bl	LED_PIN_3_Write
 361:main.c        ****                     LED_PIN_4_Write(0);
 1105              		.loc 1 361 0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 27


 1106 0672 0020     		movs	r0, #0
 1107 0674 FFF7FEFF 		bl	LED_PIN_4_Write
 362:main.c        ****                     char dist[24];
 363:main.c        ****                     char pulses[24];
 364:main.c        ****                     char first[24];
 365:main.c        ****                     char second[24];
 366:main.c        ****                     //itoa(distance[instCounter] * 9.13333, first, 10);
 367:main.c        ****                     //itoa((pulsesTravelled), pulses, 10);
 368:main.c        ****                     //itoa(pulsesTravelled * 20.42 / 57 / 2, second, 10);
 369:main.c        ****                     //itoa(distance[instCounter], dist, 10);
 370:main.c        ****                     /*usbPutString(dist);
 371:main.c        ****                     usbPutString(" - ");
 372:main.c        ****                     usbPutString(pulses);
 373:main.c        ****                     usbPutString("       ");
 374:main.c        ****                     usbPutString(first);
 375:main.c        ****                     usbPutString(" <= ");
 376:main.c        ****                     usbPutString(second);
 377:main.c        ****                     usbPutString("\r\n");*/
 378:main.c        ****                     //if (distance[instCounter] * 13.25 * 228 <= (pulsesTravelled) * 20.42 * 0.5) {
 379:main.c        ****                     //57 pulses on 1 motor = 20.42 cm
 380:main.c        ****                     char instStr[24];
 381:main.c        ****                     char cVal[24];
 382:main.c        **** 
 383:main.c        ****                   //  itoa(instCounter, cVal, 10);
 384:main.c        ****                   //  if ((distance[instCounter] * 9.13333 <= pulsesTravelled * 20.42 / 57 / 2) && 
 385:main.c        ****                  //       if ((R_INT_BLACK || L_INT_BLACK)) { //reached an intersection
 386:main.c        ****                  //           LED_PIN_4_Write(1);
 387:main.c        ****                  //           instCounter++;
 388:main.c        ****                  //           turnComplete = -1;
 389:main.c        ****                   //          pulsesTravelled = 0;
 390:main.c        ****                  //       }
 391:main.c        **** //                        if (checkDistance == 1) {
 392:main.c        **** //                            if (distance[instCounter] * 9.13333 <= pulsesTravelled * 20.42 / 57 /
 393:main.c        **** //                                LED_PIN_4_Write(1);
 394:main.c        **** //                                instCounter++;
 395:main.c        **** //                                turnComplete = 0;
 396:main.c        **** //                                pulsesTravelled = 0;
 397:main.c        **** //                            }
 398:main.c        **** //                        }
 399:main.c        ****                         
 400:main.c        ****                     //}
 401:main.c        ****                     
 402:main.c        ****                     //if distance has been covered and ready to switch
 403:main.c        ****                     if (turnComplete != 0 &&(distance[instCounter] * 9.13333 <= pulsesTravelled * 2
 1108              		.loc 1 403 0
 1109 0678 624B     		ldr	r3, .L65+20
 1110 067a 1B68     		ldr	r3, [r3]
 1111 067c 002B     		cmp	r3, #0
 1112 067e 00F0A180 		beq	.L46
 1113              		.loc 1 403 0 is_stmt 0 discriminator 1
 1114 0682 614B     		ldr	r3, .L65+24
 1115 0684 1B68     		ldr	r3, [r3]
 1116 0686 614A     		ldr	r2, .L65+28
 1117 0688 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1118 068a 1846     		mov	r0, r3
 1119 068c FFF7FEFF 		bl	__aeabi_i2d
 1120 0690 57A3     		adr	r3, .L65
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 28


 1121 0692 D3E90023 		ldrd	r2, [r3]
 1122 0696 FFF7FEFF 		bl	__aeabi_dmul
 1123 069a 0346     		mov	r3, r0
 1124 069c 0C46     		mov	r4, r1
 1125 069e 2546     		mov	r5, r4
 1126 06a0 1C46     		mov	r4, r3
 1127 06a2 5B4B     		ldr	r3, .L65+32
 1128 06a4 1B68     		ldr	r3, [r3]
 1129 06a6 1846     		mov	r0, r3
 1130 06a8 FFF7FEFF 		bl	__aeabi_i2d
 1131 06ac 52A3     		adr	r3, .L65+8
 1132 06ae D3E90023 		ldrd	r2, [r3]
 1133 06b2 FFF7FEFF 		bl	__aeabi_dmul
 1134 06b6 0246     		mov	r2, r0
 1135 06b8 0B46     		mov	r3, r1
 1136 06ba 1046     		mov	r0, r2
 1137 06bc 1946     		mov	r1, r3
 1138 06be 4FF00002 		mov	r2, #0
 1139 06c2 544B     		ldr	r3, .L65+36
 1140 06c4 FFF7FEFF 		bl	__aeabi_ddiv
 1141 06c8 0246     		mov	r2, r0
 1142 06ca 0B46     		mov	r3, r1
 1143 06cc 1046     		mov	r0, r2
 1144 06ce 1946     		mov	r1, r3
 1145 06d0 4FF00002 		mov	r2, #0
 1146 06d4 4FF08043 		mov	r3, #1073741824
 1147 06d8 FFF7FEFF 		bl	__aeabi_ddiv
 1148 06dc 0246     		mov	r2, r0
 1149 06de 0B46     		mov	r3, r1
 1150 06e0 2046     		mov	r0, r4
 1151 06e2 2946     		mov	r1, r5
 1152 06e4 FFF7FEFF 		bl	__aeabi_dcmple
 1153 06e8 0346     		mov	r3, r0
 1154 06ea 002B     		cmp	r3, #0
 1155 06ec 6AD0     		beq	.L46
 404:main.c        ****                         if (currentInst == 0) {
 1156              		.loc 1 404 0 is_stmt 1
 1157 06ee 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1158 06f2 002B     		cmp	r3, #0
 1159 06f4 0FD1     		bne	.L54
 405:main.c        ****                             LED_PIN_4_Write(1);
 1160              		.loc 1 405 0
 1161 06f6 0120     		movs	r0, #1
 1162 06f8 FFF7FEFF 		bl	LED_PIN_4_Write
 406:main.c        ****                             instCounter++;
 1163              		.loc 1 406 0
 1164 06fc 424B     		ldr	r3, .L65+24
 1165 06fe 1B68     		ldr	r3, [r3]
 1166 0700 0133     		adds	r3, r3, #1
 1167 0702 414A     		ldr	r2, .L65+24
 1168 0704 1360     		str	r3, [r2]
 407:main.c        ****                             turnComplete = -1;
 1169              		.loc 1 407 0
 1170 0706 3F4B     		ldr	r3, .L65+20
 1171 0708 4FF0FF32 		mov	r2, #-1
 1172 070c 1A60     		str	r2, [r3]
 408:main.c        **** //                            //snprintf(instStr, sizeof(instStr), "%u - %u c:%s\r\n", (unsigned ch
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 29


 409:main.c        **** //                            //usbPutString("INSTCHANGE - ");
 410:main.c        **** //                            //usbPutString(instStr);
 411:main.c        ****                             pulsesTravelled = 0;
 1173              		.loc 1 411 0
 1174 070e 404B     		ldr	r3, .L65+32
 1175 0710 0022     		movs	r2, #0
 1176 0712 1A60     		str	r2, [r3]
 1177 0714 56E0     		b	.L46
 1178              	.L54:
 412:main.c        **** //
 413:main.c        ****                         } else if (R_INT_BLACK && (nextInst == 3 || nextInst == 2 || nextInst == 4 
 1179              		.loc 1 413 0
 1180 0716 D7F8EC30 		ldr	r3, [r7, #236]
 1181 071a 4A2B     		cmp	r3, #74
 1182 071c 27DC     		bgt	.L55
 1183              		.loc 1 413 0 is_stmt 0 discriminator 1
 1184 071e 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1185 0722 032B     		cmp	r3, #3
 1186 0724 13D0     		beq	.L56
 1187              		.loc 1 413 0 discriminator 2
 1188 0726 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1189 072a 022B     		cmp	r3, #2
 1190 072c 0FD0     		beq	.L56
 1191              		.loc 1 413 0 discriminator 3
 1192 072e 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1193 0732 042B     		cmp	r3, #4
 1194 0734 0BD0     		beq	.L56
 1195              		.loc 1 413 0 discriminator 4
 1196 0736 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1197 073a 072B     		cmp	r3, #7
 1198 073c 07D0     		beq	.L56
 1199              		.loc 1 413 0 discriminator 5
 1200 073e 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1201 0742 062B     		cmp	r3, #6
 1202 0744 03D0     		beq	.L56
 1203              		.loc 1 413 0 discriminator 6
 1204 0746 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1205 074a 082B     		cmp	r3, #8
 1206 074c 0FD1     		bne	.L55
 1207              	.L56:
 414:main.c        **** //
 415:main.c        ****                             LED_PIN_4_Write(1);
 1208              		.loc 1 415 0 is_stmt 1
 1209 074e 0120     		movs	r0, #1
 1210 0750 FFF7FEFF 		bl	LED_PIN_4_Write
 416:main.c        ****                             instCounter++;
 1211              		.loc 1 416 0
 1212 0754 2C4B     		ldr	r3, .L65+24
 1213 0756 1B68     		ldr	r3, [r3]
 1214 0758 0133     		adds	r3, r3, #1
 1215 075a 2B4A     		ldr	r2, .L65+24
 1216 075c 1360     		str	r3, [r2]
 417:main.c        ****                             turnComplete = -1;
 1217              		.loc 1 417 0
 1218 075e 294B     		ldr	r3, .L65+20
 1219 0760 4FF0FF32 		mov	r2, #-1
 1220 0764 1A60     		str	r2, [r3]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 30


 418:main.c        **** //                            //snprintf(instStr, sizeof(instStr), "%u - %u c:%s\r\n", (unsigned ch
 419:main.c        **** //                            //usbPutString("INSTCHANGE - ");
 420:main.c        **** //                            //usbPutString(instStr);
 421:main.c        ****                             pulsesTravelled = 0;
 1221              		.loc 1 421 0
 1222 0766 2A4B     		ldr	r3, .L65+32
 1223 0768 0022     		movs	r2, #0
 1224 076a 1A60     		str	r2, [r3]
 1225 076c 2AE0     		b	.L46
 1226              	.L55:
 422:main.c        ****                         }
 423:main.c        ****                         else if (L_INT_BLACK && (nextInst == 1 || nextInst == 2 || nextInst == 5|| 
 1227              		.loc 1 423 0
 1228 076e D7F80031 		ldr	r3, [r7, #256]
 1229 0772 4A2B     		cmp	r3, #74
 1230 0774 26DC     		bgt	.L46
 1231              		.loc 1 423 0 is_stmt 0 discriminator 1
 1232 0776 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1233 077a 012B     		cmp	r3, #1
 1234 077c 13D0     		beq	.L57
 1235              		.loc 1 423 0 discriminator 2
 1236 077e 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1237 0782 022B     		cmp	r3, #2
 1238 0784 0FD0     		beq	.L57
 1239              		.loc 1 423 0 discriminator 3
 1240 0786 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1241 078a 052B     		cmp	r3, #5
 1242 078c 0BD0     		beq	.L57
 1243              		.loc 1 423 0 discriminator 4
 1244 078e 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1245 0792 042B     		cmp	r3, #4
 1246 0794 07D0     		beq	.L57
 1247              		.loc 1 423 0 discriminator 5
 1248 0796 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1249 079a 062B     		cmp	r3, #6
 1250 079c 03D0     		beq	.L57
 1251              		.loc 1 423 0 discriminator 6
 1252 079e 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1253 07a2 082B     		cmp	r3, #8
 1254 07a4 0ED1     		bne	.L46
 1255              	.L57:
 424:main.c        ****                             LED_PIN_4_Write(1);
 1256              		.loc 1 424 0 is_stmt 1
 1257 07a6 0120     		movs	r0, #1
 1258 07a8 FFF7FEFF 		bl	LED_PIN_4_Write
 425:main.c        ****                             instCounter++;
 1259              		.loc 1 425 0
 1260 07ac 164B     		ldr	r3, .L65+24
 1261 07ae 1B68     		ldr	r3, [r3]
 1262 07b0 0133     		adds	r3, r3, #1
 1263 07b2 154A     		ldr	r2, .L65+24
 1264 07b4 1360     		str	r3, [r2]
 426:main.c        ****                             turnComplete = -1;
 1265              		.loc 1 426 0
 1266 07b6 134B     		ldr	r3, .L65+20
 1267 07b8 4FF0FF32 		mov	r2, #-1
 1268 07bc 1A60     		str	r2, [r3]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 31


 427:main.c        **** //                            //snprintf(instStr, sizeof(instStr), "%u - %u c:%s\r\n", (unsigned ch
 428:main.c        **** //                            //usbPutString("INSTCHANGE - ");
 429:main.c        **** //                            //usbPutString(instStr);
 430:main.c        ****                             pulsesTravelled = 0;
 1269              		.loc 1 430 0
 1270 07be 144B     		ldr	r3, .L65+32
 1271 07c0 0022     		movs	r2, #0
 1272 07c2 1A60     		str	r2, [r3]
 1273              	.L46:
 1274              	.LBE9:
 431:main.c        ****                         }
 432:main.c        ****                         else {
 433:main.c        ****                             
 434:main.c        ****                         }
 435:main.c        ****                     }
 436:main.c        ****                     }
 437:main.c        **** 
 438:main.c        ****                     if (L_INT_BLACK) {
 1275              		.loc 1 438 0
 1276 07c4 D7F80031 		ldr	r3, [r7, #256]
 1277 07c8 4A2B     		cmp	r3, #74
 1278 07ca 02DC     		bgt	.L58
 439:main.c        ****                         LED_PIN_2_Write(1);
 1279              		.loc 1 439 0
 1280 07cc 0120     		movs	r0, #1
 1281 07ce FFF7FEFF 		bl	LED_PIN_2_Write
 1282              	.L58:
 440:main.c        ****                     }
 441:main.c        **** 
 442:main.c        ****                     if (R_INT_BLACK) {
 1283              		.loc 1 442 0
 1284 07d2 D7F8EC30 		ldr	r3, [r7, #236]
 1285 07d6 4A2B     		cmp	r3, #74
 1286 07d8 02DC     		bgt	.L8
 443:main.c        ****                         LED_PIN_3_Write(1);
 1287              		.loc 1 443 0
 1288 07da 0120     		movs	r0, #1
 1289 07dc FFF7FEFF 		bl	LED_PIN_3_Write
 1290              	.L8:
 1291              	.LBE8:
 1292              	.LBE3:
 444:main.c        ****                     }
 445:main.c        **** 
 446:main.c        ****                     /*if (instruction[instCounter] == 0) {
 447:main.c        ****                         consecStops++;
 448:main.c        ****                     } else {
 449:main.c        ****                         consecStops = 0;
 450:main.c        ****                     }*/
 451:main.c        ****                 }
 452:main.c        ****             }
 453:main.c        **** 
 454:main.c        ****             flag = 0;
 1293              		.loc 1 454 0
 1294 07e0 0D4B     		ldr	r3, .L65+40
 1295 07e2 0022     		movs	r2, #0
 1296 07e4 1A60     		str	r2, [r3]
 455:main.c        ****             ADC1_IRQ_Enable();
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 32


 1297              		.loc 1 455 0
 1298 07e6 FFF7FEFF 		bl	ADC1_IRQ_Enable
 456:main.c        ****         }
 457:main.c        **** 
 458:main.c        ****     }
 1299              		.loc 1 458 0
 1300 07ea 55E4     		b	.L59
 1301              	.L66:
 1302 07ec AFF30080 		.align	3
 1303              	.L65:
 1304 07f0 C0266BD4 		.word	-731175232
 1305 07f4 43442240 		.word	1075987523
 1306 07f8 EC51B81E 		.word	515396076
 1307 07fc 856B3440 		.word	1077177221
 1308 0800 00000000 		.word	lastAdjustDirection
 1309 0804 00000000 		.word	turnComplete
 1310 0808 00000000 		.word	instCounter
 1311 080c 00000000 		.word	distance
 1312 0810 00000000 		.word	pulsesTravelled
 1313 0814 00804C40 		.word	1078755328
 1314 0818 00000000 		.word	flag
 1315              		.cfi_endproc
 1316              	.LFE65:
 1317              		.size	main, .-main
 1318              		.section	.text.usbPutString,"ax",%progbits
 1319              		.align	2
 1320              		.global	usbPutString
 1321              		.thumb
 1322              		.thumb_func
 1323              		.type	usbPutString, %function
 1324              	usbPutString:
 1325              	.LFB66:
 459:main.c        **** }
 460:main.c        **** //* ========================================
 461:main.c        **** void usbPutString(char * s) {
 1326              		.loc 1 461 0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 8
 1329              		@ frame_needed = 1, uses_anonymous_args = 0
 1330 0000 80B5     		push	{r7, lr}
 1331              		.cfi_def_cfa_offset 8
 1332              		.cfi_offset 7, -8
 1333              		.cfi_offset 14, -4
 1334 0002 82B0     		sub	sp, sp, #8
 1335              		.cfi_def_cfa_offset 16
 1336 0004 00AF     		add	r7, sp, #0
 1337              		.cfi_def_cfa_register 7
 1338 0006 7860     		str	r0, [r7, #4]
 462:main.c        ****     // !! Assumes that *s is a string with allocated space >=64 chars    
 463:main.c        ****     //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 464:main.c        ****     //  length to 62 char (63rd char is a '!')
 465:main.c        **** 
 466:main.c        ****     #ifdef USE_USB
 467:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1339              		.loc 1 467 0
 1340 0008 00BF     		nop
 1341              	.L68:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 33


 1342              		.loc 1 467 0 is_stmt 0 discriminator 1
 1343 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1344 000e 0346     		mov	r3, r0
 1345 0010 002B     		cmp	r3, #0
 1346 0012 FAD0     		beq	.L68
 468:main.c        ****     s[63] = '\0';
 1347              		.loc 1 468 0 is_stmt 1
 1348 0014 7B68     		ldr	r3, [r7, #4]
 1349 0016 3F33     		adds	r3, r3, #63
 1350 0018 0022     		movs	r2, #0
 1351 001a 1A70     		strb	r2, [r3]
 469:main.c        ****     s[62] = '!';
 1352              		.loc 1 469 0
 1353 001c 7B68     		ldr	r3, [r7, #4]
 1354 001e 3E33     		adds	r3, r3, #62
 1355 0020 2122     		movs	r2, #33
 1356 0022 1A70     		strb	r2, [r3]
 470:main.c        ****     USBUART_PutData((uint8 * ) s, strlen(s));
 1357              		.loc 1 470 0
 1358 0024 7868     		ldr	r0, [r7, #4]
 1359 0026 FFF7FEFF 		bl	strlen
 1360 002a 0346     		mov	r3, r0
 1361 002c 9BB2     		uxth	r3, r3
 1362 002e 1946     		mov	r1, r3
 1363 0030 7868     		ldr	r0, [r7, #4]
 1364 0032 FFF7FEFF 		bl	USBUART_PutData
 471:main.c        ****     #endif
 472:main.c        **** }
 1365              		.loc 1 472 0
 1366 0036 00BF     		nop
 1367 0038 0837     		adds	r7, r7, #8
 1368              		.cfi_def_cfa_offset 8
 1369 003a BD46     		mov	sp, r7
 1370              		.cfi_def_cfa_register 13
 1371              		@ sp needed
 1372 003c 80BD     		pop	{r7, pc}
 1373              		.cfi_endproc
 1374              	.LFE66:
 1375              		.size	usbPutString, .-usbPutString
 1376 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1377              		.align	2
 1378              		.global	usbPutChar
 1379              		.thumb
 1380              		.thumb_func
 1381              		.type	usbPutChar, %function
 1382              	usbPutChar:
 1383              	.LFB67:
 473:main.c        **** //* ========================================
 474:main.c        **** void usbPutChar(char c) {
 1384              		.loc 1 474 0
 1385              		.cfi_startproc
 1386              		@ args = 0, pretend = 0, frame = 8
 1387              		@ frame_needed = 1, uses_anonymous_args = 0
 1388 0000 80B5     		push	{r7, lr}
 1389              		.cfi_def_cfa_offset 8
 1390              		.cfi_offset 7, -8
 1391              		.cfi_offset 14, -4
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 34


 1392 0002 82B0     		sub	sp, sp, #8
 1393              		.cfi_def_cfa_offset 16
 1394 0004 00AF     		add	r7, sp, #0
 1395              		.cfi_def_cfa_register 7
 1396 0006 0346     		mov	r3, r0
 1397 0008 FB71     		strb	r3, [r7, #7]
 475:main.c        ****     #ifdef USE_USB
 476:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1398              		.loc 1 476 0
 1399 000a 00BF     		nop
 1400              	.L70:
 1401              		.loc 1 476 0 is_stmt 0 discriminator 1
 1402 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1403 0010 0346     		mov	r3, r0
 1404 0012 002B     		cmp	r3, #0
 1405 0014 FAD0     		beq	.L70
 477:main.c        ****     USBUART_PutChar(c);
 1406              		.loc 1 477 0 is_stmt 1
 1407 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1408 0018 1846     		mov	r0, r3
 1409 001a FFF7FEFF 		bl	USBUART_PutChar
 478:main.c        ****     #endif
 479:main.c        **** }...
 1410              		.loc 1 479 0
 1411 001e 00BF     		nop
 1412 0020 0837     		adds	r7, r7, #8
 1413              		.cfi_def_cfa_offset 8
 1414 0022 BD46     		mov	sp, r7
 1415              		.cfi_def_cfa_register 13
 1416              		@ sp needed
 1417 0024 80BD     		pop	{r7, pc}
 1418              		.cfi_endproc
 1419              	.LFE67:
 1420              		.size	usbPutChar, .-usbPutChar
 1421 0026 00BF     		.text
 1422              	.Letext0:
 1423              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1424              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1425              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1426              		.file 5 "vars.h"
 1427              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1428              		.section	.debug_info,"",%progbits
 1429              	.Ldebug_info0:
 1430 0000 44070000 		.4byte	0x744
 1431 0004 0400     		.2byte	0x4
 1432 0006 00000000 		.4byte	.Ldebug_abbrev0
 1433 000a 04       		.byte	0x4
 1434 000b 01       		.uleb128 0x1
 1435 000c 17010000 		.4byte	.LASF102
 1436 0010 0C       		.byte	0xc
 1437 0011 8F040000 		.4byte	.LASF103
 1438 0015 4D000000 		.4byte	.LASF104
 1439 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1440 001d 00000000 		.4byte	0
 1441 0021 00000000 		.4byte	.Ldebug_line0
 1442 0025 02       		.uleb128 0x2
 1443 0026 01       		.byte	0x1
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 35


 1444 0027 06       		.byte	0x6
 1445 0028 1A020000 		.4byte	.LASF0
 1446 002c 02       		.uleb128 0x2
 1447 002d 01       		.byte	0x1
 1448 002e 08       		.byte	0x8
 1449 002f EE020000 		.4byte	.LASF1
 1450 0033 02       		.uleb128 0x2
 1451 0034 02       		.byte	0x2
 1452 0035 05       		.byte	0x5
 1453 0036 CD000000 		.4byte	.LASF2
 1454 003a 02       		.uleb128 0x2
 1455 003b 02       		.byte	0x2
 1456 003c 07       		.byte	0x7
 1457 003d D0030000 		.4byte	.LASF3
 1458 0041 03       		.uleb128 0x3
 1459 0042 38040000 		.4byte	.LASF12
 1460 0046 02       		.byte	0x2
 1461 0047 3F       		.byte	0x3f
 1462 0048 4C000000 		.4byte	0x4c
 1463 004c 02       		.uleb128 0x2
 1464 004d 04       		.byte	0x4
 1465 004e 05       		.byte	0x5
 1466 004f 80020000 		.4byte	.LASF4
 1467 0053 02       		.uleb128 0x2
 1468 0054 04       		.byte	0x4
 1469 0055 07       		.byte	0x7
 1470 0056 96040000 		.4byte	.LASF5
 1471 005a 02       		.uleb128 0x2
 1472 005b 08       		.byte	0x8
 1473 005c 05       		.byte	0x5
 1474 005d 34020000 		.4byte	.LASF6
 1475 0061 02       		.uleb128 0x2
 1476 0062 08       		.byte	0x8
 1477 0063 07       		.byte	0x7
 1478 0064 7B030000 		.4byte	.LASF7
 1479 0068 04       		.uleb128 0x4
 1480 0069 04       		.byte	0x4
 1481 006a 05       		.byte	0x5
 1482 006b 696E7400 		.ascii	"int\000"
 1483 006f 02       		.uleb128 0x2
 1484 0070 04       		.byte	0x4
 1485 0071 07       		.byte	0x7
 1486 0072 92030000 		.4byte	.LASF8
 1487 0076 02       		.uleb128 0x2
 1488 0077 08       		.byte	0x8
 1489 0078 04       		.byte	0x4
 1490 0079 04030000 		.4byte	.LASF9
 1491 007d 02       		.uleb128 0x2
 1492 007e 04       		.byte	0x4
 1493 007f 07       		.byte	0x7
 1494 0080 F7000000 		.4byte	.LASF10
 1495 0084 05       		.uleb128 0x5
 1496 0085 04       		.byte	0x4
 1497 0086 8A000000 		.4byte	0x8a
 1498 008a 02       		.uleb128 0x2
 1499 008b 01       		.byte	0x1
 1500 008c 08       		.byte	0x8
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 36


 1501 008d 12040000 		.4byte	.LASF11
 1502 0091 06       		.uleb128 0x6
 1503 0092 8A000000 		.4byte	0x8a
 1504 0096 A1000000 		.4byte	0xa1
 1505 009a 07       		.uleb128 0x7
 1506 009b 7D000000 		.4byte	0x7d
 1507 009f 17       		.byte	0x17
 1508 00a0 00       		.byte	0
 1509 00a1 03       		.uleb128 0x3
 1510 00a2 2B040000 		.4byte	.LASF13
 1511 00a6 03       		.byte	0x3
 1512 00a7 2C       		.byte	0x2c
 1513 00a8 41000000 		.4byte	0x41
 1514 00ac 08       		.uleb128 0x8
 1515 00ad DA010000 		.4byte	.LASF14
 1516 00b1 04       		.byte	0x4
 1517 00b2 E701     		.2byte	0x1e7
 1518 00b4 2C000000 		.4byte	0x2c
 1519 00b8 08       		.uleb128 0x8
 1520 00b9 C7010000 		.4byte	.LASF15
 1521 00bd 04       		.byte	0x4
 1522 00be E801     		.2byte	0x1e8
 1523 00c0 3A000000 		.4byte	0x3a
 1524 00c4 08       		.uleb128 0x8
 1525 00c5 4F020000 		.4byte	.LASF16
 1526 00c9 04       		.byte	0x4
 1527 00ca EA01     		.2byte	0x1ea
 1528 00cc 25000000 		.4byte	0x25
 1529 00d0 08       		.uleb128 0x8
 1530 00d1 D4010000 		.4byte	.LASF17
 1531 00d5 04       		.byte	0x4
 1532 00d6 EB01     		.2byte	0x1eb
 1533 00d8 33000000 		.4byte	0x33
 1534 00dc 02       		.uleb128 0x2
 1535 00dd 04       		.byte	0x4
 1536 00de 04       		.byte	0x4
 1537 00df 26020000 		.4byte	.LASF18
 1538 00e3 02       		.uleb128 0x2
 1539 00e4 08       		.byte	0x8
 1540 00e5 04       		.byte	0x4
 1541 00e6 A8040000 		.4byte	.LASF19
 1542 00ea 09       		.uleb128 0x9
 1543 00eb 08040000 		.4byte	.LASF105
 1544 00ef 20       		.byte	0x20
 1545 00f0 05       		.byte	0x5
 1546 00f1 29       		.byte	0x29
 1547 00f2 C3010000 		.4byte	0x1c3
 1548 00f6 0A       		.uleb128 0xa
 1549 00f7 78050000 		.4byte	.LASF20
 1550 00fb 05       		.byte	0x5
 1551 00fc 2A       		.byte	0x2a
 1552 00fd C4000000 		.4byte	0xc4
 1553 0101 00       		.byte	0
 1554 0102 0A       		.uleb128 0xa
 1555 0103 CE010000 		.4byte	.LASF21
 1556 0107 05       		.byte	0x5
 1557 0108 2B       		.byte	0x2b
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 37


 1558 0109 AC000000 		.4byte	0xac
 1559 010d 01       		.byte	0x1
 1560 010e 0A       		.uleb128 0xa
 1561 010f 20040000 		.4byte	.LASF22
 1562 0113 05       		.byte	0x5
 1563 0114 2C       		.byte	0x2c
 1564 0115 D0000000 		.4byte	0xd0
 1565 0119 02       		.byte	0x2
 1566 011a 0A       		.uleb128 0xa
 1567 011b 3E050000 		.4byte	.LASF23
 1568 011f 05       		.byte	0x5
 1569 0120 2D       		.byte	0x2d
 1570 0121 D0000000 		.4byte	0xd0
 1571 0125 04       		.byte	0x4
 1572 0126 0A       		.uleb128 0xa
 1573 0127 7D050000 		.4byte	.LASF24
 1574 012b 05       		.byte	0x5
 1575 012c 2E       		.byte	0x2e
 1576 012d D0000000 		.4byte	0xd0
 1577 0131 06       		.byte	0x6
 1578 0132 0A       		.uleb128 0xa
 1579 0133 78020000 		.4byte	.LASF25
 1580 0137 05       		.byte	0x5
 1581 0138 2F       		.byte	0x2f
 1582 0139 D0000000 		.4byte	0xd0
 1583 013d 08       		.byte	0x8
 1584 013e 0A       		.uleb128 0xa
 1585 013f F5040000 		.4byte	.LASF26
 1586 0143 05       		.byte	0x5
 1587 0144 30       		.byte	0x30
 1588 0145 D0000000 		.4byte	0xd0
 1589 0149 0A       		.byte	0xa
 1590 014a 0A       		.uleb128 0xa
 1591 014b 38030000 		.4byte	.LASF27
 1592 014f 05       		.byte	0x5
 1593 0150 31       		.byte	0x31
 1594 0151 D0000000 		.4byte	0xd0
 1595 0155 0C       		.byte	0xc
 1596 0156 0A       		.uleb128 0xa
 1597 0157 6B020000 		.4byte	.LASF28
 1598 015b 05       		.byte	0x5
 1599 015c 32       		.byte	0x32
 1600 015d D0000000 		.4byte	0xd0
 1601 0161 0E       		.byte	0xe
 1602 0162 0A       		.uleb128 0xa
 1603 0163 C8030000 		.4byte	.LASF29
 1604 0167 05       		.byte	0x5
 1605 0168 33       		.byte	0x33
 1606 0169 D0000000 		.4byte	0xd0
 1607 016d 10       		.byte	0x10
 1608 016e 0A       		.uleb128 0xa
 1609 016f FC020000 		.4byte	.LASF30
 1610 0173 05       		.byte	0x5
 1611 0174 34       		.byte	0x34
 1612 0175 D0000000 		.4byte	0xd0
 1613 0179 12       		.byte	0x12
 1614 017a 0A       		.uleb128 0xa
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 38


 1615 017b 41030000 		.4byte	.LASF31
 1616 017f 05       		.byte	0x5
 1617 0180 35       		.byte	0x35
 1618 0181 D0000000 		.4byte	0xd0
 1619 0185 14       		.byte	0x14
 1620 0186 0A       		.uleb128 0xa
 1621 0187 E0010000 		.4byte	.LASF32
 1622 018b 05       		.byte	0x5
 1623 018c 36       		.byte	0x36
 1624 018d D0000000 		.4byte	0xd0
 1625 0191 16       		.byte	0x16
 1626 0192 0A       		.uleb128 0xa
 1627 0193 C5000000 		.4byte	.LASF33
 1628 0197 05       		.byte	0x5
 1629 0198 37       		.byte	0x37
 1630 0199 D0000000 		.4byte	0xd0
 1631 019d 18       		.byte	0x18
 1632 019e 0A       		.uleb128 0xa
 1633 019f 63020000 		.4byte	.LASF34
 1634 01a3 05       		.byte	0x5
 1635 01a4 38       		.byte	0x38
 1636 01a5 D0000000 		.4byte	0xd0
 1637 01a9 1A       		.byte	0x1a
 1638 01aa 0A       		.uleb128 0xa
 1639 01ab BA030000 		.4byte	.LASF35
 1640 01af 05       		.byte	0x5
 1641 01b0 39       		.byte	0x39
 1642 01b1 D0000000 		.4byte	0xd0
 1643 01b5 1C       		.byte	0x1c
 1644 01b6 0A       		.uleb128 0xa
 1645 01b7 BA010000 		.4byte	.LASF36
 1646 01bb 05       		.byte	0x5
 1647 01bc 3A       		.byte	0x3a
 1648 01bd D0000000 		.4byte	0xd0
 1649 01c1 1E       		.byte	0x1e
 1650 01c2 00       		.byte	0
 1651 01c3 0B       		.uleb128 0xb
 1652 01c4 656F6300 		.ascii	"eoc\000"
 1653 01c8 01       		.byte	0x1
 1654 01c9 4C       		.byte	0x4c
 1655 01ca 00000000 		.4byte	.LFB64
 1656 01ce 18000000 		.4byte	.LFE64-.LFB64
 1657 01d2 01       		.uleb128 0x1
 1658 01d3 9C       		.byte	0x9c
 1659 01d4 0C       		.uleb128 0xc
 1660 01d5 A5010000 		.4byte	.LASF54
 1661 01d9 01       		.byte	0x1
 1662 01da 50       		.byte	0x50
 1663 01db 68000000 		.4byte	0x68
 1664 01df 00000000 		.4byte	.LFB65
 1665 01e3 1C080000 		.4byte	.LFE65-.LFB65
 1666 01e7 01       		.uleb128 0x1
 1667 01e8 9C       		.byte	0x9c
 1668 01e9 76030000 		.4byte	0x376
 1669 01ed 0D       		.uleb128 0xd
 1670 01ee 34000000 		.4byte	.LBB2
 1671 01f2 5A000000 		.4byte	.LBE2-.LBB2
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 39


 1672 01f6 07020000 		.4byte	0x207
 1673 01fa 0E       		.uleb128 0xe
 1674 01fb 6900     		.ascii	"i\000"
 1675 01fd 01       		.byte	0x1
 1676 01fe 69       		.byte	0x69
 1677 01ff 68000000 		.4byte	0x68
 1678 0203 02       		.uleb128 0x2
 1679 0204 91       		.byte	0x91
 1680 0205 6C       		.sleb128 -20
 1681 0206 00       		.byte	0
 1682 0207 0F       		.uleb128 0xf
 1683 0208 32010000 		.4byte	.LBB3
 1684 020c AE060000 		.4byte	.LBE3-.LBB3
 1685 0210 10       		.uleb128 0x10
 1686 0211 0B000000 		.4byte	.LASF37
 1687 0215 01       		.byte	0x1
 1688 0216 84       		.byte	0x84
 1689 0217 68000000 		.4byte	0x68
 1690 021b 02       		.uleb128 0x2
 1691 021c 91       		.byte	0x91
 1692 021d 68       		.sleb128 -24
 1693 021e 10       		.uleb128 0x10
 1694 021f 7D040000 		.4byte	.LASF38
 1695 0223 01       		.byte	0x1
 1696 0224 85       		.byte	0x85
 1697 0225 68000000 		.4byte	0x68
 1698 0229 02       		.uleb128 0x2
 1699 022a 91       		.byte	0x91
 1700 022b 64       		.sleb128 -28
 1701 022c 10       		.uleb128 0x10
 1702 022d E3030000 		.4byte	.LASF39
 1703 0231 01       		.byte	0x1
 1704 0232 86       		.byte	0x86
 1705 0233 68000000 		.4byte	0x68
 1706 0237 02       		.uleb128 0x2
 1707 0238 91       		.byte	0x91
 1708 0239 60       		.sleb128 -32
 1709 023a 10       		.uleb128 0x10
 1710 023b 5D050000 		.4byte	.LASF40
 1711 023f 01       		.byte	0x1
 1712 0240 87       		.byte	0x87
 1713 0241 68000000 		.4byte	0x68
 1714 0245 02       		.uleb128 0x2
 1715 0246 91       		.byte	0x91
 1716 0247 5C       		.sleb128 -36
 1717 0248 10       		.uleb128 0x10
 1718 0249 4A030000 		.4byte	.LASF41
 1719 024d 01       		.byte	0x1
 1720 024e 88       		.byte	0x88
 1721 024f 68000000 		.4byte	0x68
 1722 0253 02       		.uleb128 0x2
 1723 0254 91       		.byte	0x91
 1724 0255 58       		.sleb128 -40
 1725 0256 10       		.uleb128 0x10
 1726 0257 D3020000 		.4byte	.LASF42
 1727 025b 01       		.byte	0x1
 1728 025c 89       		.byte	0x89
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 40


 1729 025d 68000000 		.4byte	0x68
 1730 0261 02       		.uleb128 0x2
 1731 0262 91       		.byte	0x91
 1732 0263 54       		.sleb128 -44
 1733 0264 0D       		.uleb128 0xd
 1734 0265 66010000 		.4byte	.LBB4
 1735 0269 44010000 		.4byte	.LBE4-.LBB4
 1736 026d A6020000 		.4byte	0x2a6
 1737 0271 0E       		.uleb128 0xe
 1738 0272 6900     		.ascii	"i\000"
 1739 0274 01       		.byte	0x1
 1740 0275 8A       		.byte	0x8a
 1741 0276 68000000 		.4byte	0x68
 1742 027a 02       		.uleb128 0x2
 1743 027b 91       		.byte	0x91
 1744 027c 50       		.sleb128 -48
 1745 027d 0F       		.uleb128 0xf
 1746 027e 6E010000 		.4byte	.LBB5
 1747 0282 26010000 		.4byte	.LBE5-.LBB5
 1748 0286 10       		.uleb128 0x10
 1749 0287 16030000 		.4byte	.LASF43
 1750 028b 01       		.byte	0x1
 1751 028c 8C       		.byte	0x8c
 1752 028d 91000000 		.4byte	0x91
 1753 0291 03       		.uleb128 0x3
 1754 0292 91       		.byte	0x91
 1755 0293 A87F     		.sleb128 -88
 1756 0295 10       		.uleb128 0x10
 1757 0296 1E030000 		.4byte	.LASF44
 1758 029a 01       		.byte	0x1
 1759 029b 8D       		.byte	0x8d
 1760 029c 91000000 		.4byte	0x91
 1761 02a0 03       		.uleb128 0x3
 1762 02a1 91       		.byte	0x91
 1763 02a2 907F     		.sleb128 -112
 1764 02a4 00       		.byte	0
 1765 02a5 00       		.byte	0
 1766 02a6 0D       		.uleb128 0xd
 1767 02a7 B4020000 		.4byte	.LBB6
 1768 02ab 5C010000 		.4byte	.LBE6-.LBB6
 1769 02af E4020000 		.4byte	0x2e4
 1770 02b3 0E       		.uleb128 0xe
 1771 02b4 6900     		.ascii	"i\000"
 1772 02b6 01       		.byte	0x1
 1773 02b7 CE       		.byte	0xce
 1774 02b8 68000000 		.4byte	0x68
 1775 02bc 02       		.uleb128 0x2
 1776 02bd 91       		.byte	0x91
 1777 02be 4C       		.sleb128 -52
 1778 02bf 10       		.uleb128 0x10
 1779 02c0 26030000 		.4byte	.LASF45
 1780 02c4 01       		.byte	0x1
 1781 02c5 CE       		.byte	0xce
 1782 02c6 68000000 		.4byte	0x68
 1783 02ca 02       		.uleb128 0x2
 1784 02cb 91       		.byte	0x91
 1785 02cc 48       		.sleb128 -56
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 41


 1786 02cd 0F       		.uleb128 0xf
 1787 02ce E0030000 		.4byte	.LBB7
 1788 02d2 1C000000 		.4byte	.LBE7-.LBB7
 1789 02d6 0E       		.uleb128 0xe
 1790 02d7 6900     		.ascii	"i\000"
 1791 02d9 01       		.byte	0x1
 1792 02da E7       		.byte	0xe7
 1793 02db 68000000 		.4byte	0x68
 1794 02df 02       		.uleb128 0x2
 1795 02e0 91       		.byte	0x91
 1796 02e1 44       		.sleb128 -60
 1797 02e2 00       		.byte	0
 1798 02e3 00       		.byte	0
 1799 02e4 0F       		.uleb128 0xf
 1800 02e5 12040000 		.4byte	.LBB8
 1801 02e9 CE030000 		.4byte	.LBE8-.LBB8
 1802 02ed 10       		.uleb128 0x10
 1803 02ee B9020000 		.4byte	.LASF46
 1804 02f2 01       		.byte	0x1
 1805 02f3 F7       		.byte	0xf7
 1806 02f4 8A000000 		.4byte	0x8a
 1807 02f8 02       		.uleb128 0x2
 1808 02f9 91       		.byte	0x91
 1809 02fa 43       		.sleb128 -61
 1810 02fb 10       		.uleb128 0x10
 1811 02fc 95050000 		.4byte	.LASF47
 1812 0300 01       		.byte	0x1
 1813 0301 F8       		.byte	0xf8
 1814 0302 8A000000 		.4byte	0x8a
 1815 0306 02       		.uleb128 0x2
 1816 0307 91       		.byte	0x91
 1817 0308 42       		.sleb128 -62
 1818 0309 0F       		.uleb128 0xf
 1819 030a D0050000 		.4byte	.LBB9
 1820 030e F4010000 		.4byte	.LBE9-.LBB9
 1821 0312 11       		.uleb128 0x11
 1822 0313 C3030000 		.4byte	.LASF48
 1823 0317 01       		.byte	0x1
 1824 0318 6A01     		.2byte	0x16a
 1825 031a 91000000 		.4byte	0x91
 1826 031e 03       		.uleb128 0x3
 1827 031f 91       		.byte	0x91
 1828 0320 E07E     		.sleb128 -160
 1829 0322 11       		.uleb128 0x11
 1830 0323 42040000 		.4byte	.LASF49
 1831 0327 01       		.byte	0x1
 1832 0328 6B01     		.2byte	0x16b
 1833 032a 91000000 		.4byte	0x91
 1834 032e 03       		.uleb128 0x3
 1835 032f 91       		.byte	0x91
 1836 0330 C87E     		.sleb128 -184
 1837 0332 11       		.uleb128 0x11
 1838 0333 8F050000 		.4byte	.LASF50
 1839 0337 01       		.byte	0x1
 1840 0338 6C01     		.2byte	0x16c
 1841 033a 91000000 		.4byte	0x91
 1842 033e 03       		.uleb128 0x3
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 42


 1843 033f 91       		.byte	0x91
 1844 0340 B07E     		.sleb128 -208
 1845 0342 11       		.uleb128 0x11
 1846 0343 74030000 		.4byte	.LASF51
 1847 0347 01       		.byte	0x1
 1848 0348 6D01     		.2byte	0x16d
 1849 034a 91000000 		.4byte	0x91
 1850 034e 03       		.uleb128 0x3
 1851 034f 91       		.byte	0x91
 1852 0350 987E     		.sleb128 -232
 1853 0352 11       		.uleb128 0x11
 1854 0353 49050000 		.4byte	.LASF52
 1855 0357 01       		.byte	0x1
 1856 0358 7C01     		.2byte	0x17c
 1857 035a 91000000 		.4byte	0x91
 1858 035e 03       		.uleb128 0x3
 1859 035f 91       		.byte	0x91
 1860 0360 807E     		.sleb128 -256
 1861 0362 11       		.uleb128 0x11
 1862 0363 49040000 		.4byte	.LASF53
 1863 0367 01       		.byte	0x1
 1864 0368 7D01     		.2byte	0x17d
 1865 036a 91000000 		.4byte	0x91
 1866 036e 03       		.uleb128 0x3
 1867 036f 91       		.byte	0x91
 1868 0370 E87D     		.sleb128 -280
 1869 0372 00       		.byte	0
 1870 0373 00       		.byte	0
 1871 0374 00       		.byte	0
 1872 0375 00       		.byte	0
 1873 0376 12       		.uleb128 0x12
 1874 0377 42020000 		.4byte	.LASF55
 1875 037b 01       		.byte	0x1
 1876 037c CD01     		.2byte	0x1cd
 1877 037e 00000000 		.4byte	.LFB66
 1878 0382 3E000000 		.4byte	.LFE66-.LFB66
 1879 0386 01       		.uleb128 0x1
 1880 0387 9C       		.byte	0x9c
 1881 0388 9A030000 		.4byte	0x39a
 1882 038c 13       		.uleb128 0x13
 1883 038d 7300     		.ascii	"s\000"
 1884 038f 01       		.byte	0x1
 1885 0390 CD01     		.2byte	0x1cd
 1886 0392 84000000 		.4byte	0x84
 1887 0396 02       		.uleb128 0x2
 1888 0397 91       		.byte	0x91
 1889 0398 74       		.sleb128 -12
 1890 0399 00       		.byte	0
 1891 039a 12       		.uleb128 0x12
 1892 039b 00000000 		.4byte	.LASF56
 1893 039f 01       		.byte	0x1
 1894 03a0 DA01     		.2byte	0x1da
 1895 03a2 00000000 		.4byte	.LFB67
 1896 03a6 26000000 		.4byte	.LFE67-.LFB67
 1897 03aa 01       		.uleb128 0x1
 1898 03ab 9C       		.byte	0x9c
 1899 03ac BE030000 		.4byte	0x3be
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 43


 1900 03b0 13       		.uleb128 0x13
 1901 03b1 6300     		.ascii	"c\000"
 1902 03b3 01       		.byte	0x1
 1903 03b4 DA01     		.2byte	0x1da
 1904 03b6 8A000000 		.4byte	0x8a
 1905 03ba 02       		.uleb128 0x2
 1906 03bb 91       		.byte	0x91
 1907 03bc 77       		.sleb128 -9
 1908 03bd 00       		.byte	0
 1909 03be 14       		.uleb128 0x14
 1910 03bf AF040000 		.4byte	.LASF57
 1911 03c3 06       		.byte	0x6
 1912 03c4 1207     		.2byte	0x712
 1913 03c6 CA030000 		.4byte	0x3ca
 1914 03ca 15       		.uleb128 0x15
 1915 03cb A1000000 		.4byte	0xa1
 1916 03cf 16       		.uleb128 0x16
 1917 03d0 747300   		.ascii	"ts\000"
 1918 03d3 05       		.byte	0x5
 1919 03d4 10       		.byte	0x10
 1920 03d5 AC000000 		.4byte	0xac
 1921 03d9 05       		.uleb128 0x5
 1922 03da 03       		.byte	0x3
 1923 03db 00000000 		.4byte	ts
 1924 03df 17       		.uleb128 0x17
 1925 03e0 11050000 		.4byte	.LASF58
 1926 03e4 05       		.byte	0x5
 1927 03e5 11       		.byte	0x11
 1928 03e6 B8000000 		.4byte	0xb8
 1929 03ea 05       		.uleb128 0x5
 1930 03eb 03       		.byte	0x3
 1931 03ec 00000000 		.4byte	ts_enc
 1932 03f0 17       		.uleb128 0x17
 1933 03f1 18050000 		.4byte	.LASF59
 1934 03f5 05       		.byte	0x5
 1935 03f6 12       		.byte	0x12
 1936 03f7 B8000000 		.4byte	0xb8
 1937 03fb 05       		.uleb128 0x5
 1938 03fc 03       		.byte	0x3
 1939 03fd 00000000 		.4byte	ts_update
 1940 0401 17       		.uleb128 0x17
 1941 0402 08050000 		.4byte	.LASF60
 1942 0406 05       		.byte	0x5
 1943 0407 13       		.byte	0x13
 1944 0408 B8000000 		.4byte	0xb8
 1945 040c 05       		.uleb128 0x5
 1946 040d 03       		.byte	0x3
 1947 040e 00000000 		.4byte	ts_speed
 1948 0412 17       		.uleb128 0x17
 1949 0413 FD040000 		.4byte	.LASF61
 1950 0417 05       		.byte	0x5
 1951 0418 14       		.byte	0x14
 1952 0419 B8000000 		.4byte	0xb8
 1953 041d 05       		.uleb128 0x5
 1954 041e 03       		.byte	0x3
 1955 041f 00000000 		.4byte	ts_display
 1956 0423 17       		.uleb128 0x17
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 44


 1957 0424 CE040000 		.4byte	.LASF62
 1958 0428 05       		.byte	0x5
 1959 0429 16       		.byte	0x16
 1960 042a AC000000 		.4byte	0xac
 1961 042e 05       		.uleb128 0x5
 1962 042f 03       		.byte	0x3
 1963 0430 00000000 		.4byte	flag_ts_enc
 1964 0434 17       		.uleb128 0x17
 1965 0435 54020000 		.4byte	.LASF63
 1966 0439 05       		.byte	0x5
 1967 043a 17       		.byte	0x17
 1968 043b AC000000 		.4byte	0xac
 1969 043f 05       		.uleb128 0x5
 1970 0440 03       		.byte	0x3
 1971 0441 00000000 		.4byte	flag_ts_update
 1972 0445 17       		.uleb128 0x17
 1973 0446 B7000000 		.4byte	.LASF64
 1974 044a 05       		.byte	0x5
 1975 044b 18       		.byte	0x18
 1976 044c AC000000 		.4byte	0xac
 1977 0450 05       		.uleb128 0x5
 1978 0451 03       		.byte	0x3
 1979 0452 00000000 		.4byte	flag_ts_speed
 1980 0456 17       		.uleb128 0x17
 1981 0457 A9020000 		.4byte	.LASF65
 1982 045b 05       		.byte	0x5
 1983 045c 19       		.byte	0x19
 1984 045d AC000000 		.4byte	0xac
 1985 0461 05       		.uleb128 0x5
 1986 0462 03       		.byte	0x3
 1987 0463 00000000 		.4byte	flag_ts_display
 1988 0467 17       		.uleb128 0x17
 1989 0468 6C030000 		.4byte	.LASF66
 1990 046c 05       		.byte	0x5
 1991 046d 1C       		.byte	0x1c
 1992 046e AC000000 		.4byte	0xac
 1993 0472 05       		.uleb128 0x5
 1994 0473 03       		.byte	0x3
 1995 0474 00000000 		.4byte	flag_rx
 1996 0478 17       		.uleb128 0x17
 1997 0479 41000000 		.4byte	.LASF67
 1998 047d 05       		.byte	0x5
 1999 047e 1D       		.byte	0x1d
 2000 047f AC000000 		.4byte	0xac
 2001 0483 05       		.uleb128 0x5
 2002 0484 03       		.byte	0x3
 2003 0485 00000000 		.4byte	flag_packet
 2004 0489 17       		.uleb128 0x17
 2005 048a 9F030000 		.4byte	.LASF68
 2006 048e 05       		.byte	0x5
 2007 048f 1E       		.byte	0x1e
 2008 0490 AC000000 		.4byte	0xac
 2009 0494 05       		.uleb128 0x5
 2010 0495 03       		.byte	0x3
 2011 0496 00000000 		.4byte	flag_KB_string
 2012 049a 17       		.uleb128 0x17
 2013 049b 5D030000 		.4byte	.LASF69
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 45


 2014 049f 05       		.byte	0x5
 2015 04a0 20       		.byte	0x20
 2016 04a1 AC000000 		.4byte	0xac
 2017 04a5 05       		.uleb128 0x5
 2018 04a6 03       		.byte	0x3
 2019 04a7 00000000 		.4byte	dataready_flag
 2020 04ab 17       		.uleb128 0x17
 2021 04ac 22050000 		.4byte	.LASF70
 2022 04b0 05       		.byte	0x5
 2023 04b1 22       		.byte	0x22
 2024 04b2 AC000000 		.4byte	0xac
 2025 04b6 05       		.uleb128 0x5
 2026 04b7 03       		.byte	0x3
 2027 04b8 00000000 		.4byte	flag_rf_transmission_active
 2028 04bc 06       		.uleb128 0x6
 2029 04bd 8A000000 		.4byte	0x8a
 2030 04c1 CC040000 		.4byte	0x4cc
 2031 04c5 07       		.uleb128 0x7
 2032 04c6 7D000000 		.4byte	0x7d
 2033 04ca 3F       		.byte	0x3f
 2034 04cb 00       		.byte	0
 2035 04cc 17       		.uleb128 0x17
 2036 04cd 65040000 		.4byte	.LASF71
 2037 04d1 05       		.byte	0x5
 2038 04d2 25       		.byte	0x25
 2039 04d3 BC040000 		.4byte	0x4bc
 2040 04d7 05       		.uleb128 0x5
 2041 04d8 03       		.byte	0x3
 2042 04d9 00000000 		.4byte	displaystring
 2043 04dd 17       		.uleb128 0x17
 2044 04de 15020000 		.4byte	.LASF72
 2045 04e2 05       		.byte	0x5
 2046 04e3 26       		.byte	0x26
 2047 04e4 BC040000 		.4byte	0x4bc
 2048 04e8 05       		.uleb128 0x5
 2049 04e9 03       		.byte	0x3
 2050 04ea 00000000 		.4byte	line
 2051 04ee 17       		.uleb128 0x17
 2052 04ef 10030000 		.4byte	.LASF73
 2053 04f3 05       		.byte	0x5
 2054 04f4 26       		.byte	0x26
 2055 04f5 BC040000 		.4byte	0x4bc
 2056 04f9 05       		.uleb128 0x5
 2057 04fa 03       		.byte	0x3
 2058 04fb 00000000 		.4byte	entry
 2059 04ff 06       		.uleb128 0x6
 2060 0500 AC000000 		.4byte	0xac
 2061 0504 0F050000 		.4byte	0x50f
 2062 0508 07       		.uleb128 0x7
 2063 0509 7D000000 		.4byte	0x7d
 2064 050d 3F       		.byte	0x3f
 2065 050e 00       		.byte	0
 2066 050f 17       		.uleb128 0x17
 2067 0510 0D010000 		.4byte	.LASF74
 2068 0514 05       		.byte	0x5
 2069 0515 27       		.byte	0x27
 2070 0516 FF040000 		.4byte	0x4ff
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 46


 2071 051a 05       		.uleb128 0x5
 2072 051b 03       		.byte	0x3
 2073 051c 00000000 		.4byte	usbBuffer
 2074 0520 17       		.uleb128 0x17
 2075 0521 EA000000 		.4byte	.LASF75
 2076 0525 05       		.byte	0x5
 2077 0526 3C       		.byte	0x3c
 2078 0527 EA000000 		.4byte	0xea
 2079 052b 05       		.uleb128 0x5
 2080 052c 03       		.byte	0x3
 2081 052d 00000000 		.4byte	system_state
 2082 0531 17       		.uleb128 0x17
 2083 0532 AE030000 		.4byte	.LASF76
 2084 0536 01       		.byte	0x1
 2085 0537 2A       		.byte	0x2a
 2086 0538 68000000 		.4byte	0x68
 2087 053c 05       		.uleb128 0x5
 2088 053d 03       		.byte	0x3
 2089 053e 00000000 		.4byte	consecStops
 2090 0542 17       		.uleb128 0x17
 2091 0543 2C020000 		.4byte	.LASF77
 2092 0547 01       		.byte	0x1
 2093 0548 2B       		.byte	0x2b
 2094 0549 68000000 		.4byte	0x68
 2095 054d 05       		.uleb128 0x5
 2096 054e 03       		.byte	0x3
 2097 054f 00000000 		.4byte	started
 2098 0553 17       		.uleb128 0x17
 2099 0554 BC040000 		.4byte	.LASF78
 2100 0558 01       		.byte	0x1
 2101 0559 2C       		.byte	0x2c
 2102 055a 68000000 		.4byte	0x68
 2103 055e 05       		.uleb128 0x5
 2104 055f 03       		.byte	0x3
 2105 0560 00000000 		.4byte	instCounter
 2106 0564 17       		.uleb128 0x17
 2107 0565 33040000 		.4byte	.LASF79
 2108 0569 01       		.byte	0x1
 2109 056a 32       		.byte	0x32
 2110 056b 75050000 		.4byte	0x575
 2111 056f 05       		.uleb128 0x5
 2112 0570 03       		.byte	0x3
 2113 0571 00000000 		.4byte	flag
 2114 0575 15       		.uleb128 0x15
 2115 0576 68000000 		.4byte	0x68
 2116 057a 06       		.uleb128 0x6
 2117 057b 75050000 		.4byte	0x575
 2118 057f 8B050000 		.4byte	0x58b
 2119 0583 18       		.uleb128 0x18
 2120 0584 7D000000 		.4byte	0x7d
 2121 0588 E703     		.2byte	0x3e7
 2122 058a 00       		.byte	0
 2123 058b 17       		.uleb128 0x17
 2124 058c 4E040000 		.4byte	.LASF80
 2125 0590 01       		.byte	0x1
 2126 0591 33       		.byte	0x33
 2127 0592 9C050000 		.4byte	0x59c
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 47


 2128 0596 05       		.uleb128 0x5
 2129 0597 03       		.byte	0x3
 2130 0598 00000000 		.4byte	valuesLeftIntersection
 2131 059c 15       		.uleb128 0x15
 2132 059d 7A050000 		.4byte	0x57a
 2133 05a1 17       		.uleb128 0x17
 2134 05a2 A8000000 		.4byte	.LASF81
 2135 05a6 01       		.byte	0x1
 2136 05a7 34       		.byte	0x34
 2137 05a8 B2050000 		.4byte	0x5b2
 2138 05ac 05       		.uleb128 0x5
 2139 05ad 03       		.byte	0x3
 2140 05ae 00000000 		.4byte	valuesLeftLine
 2141 05b2 15       		.uleb128 0x15
 2142 05b3 7A050000 		.4byte	0x57a
 2143 05b7 17       		.uleb128 0x17
 2144 05b8 F7030000 		.4byte	.LASF82
 2145 05bc 01       		.byte	0x1
 2146 05bd 35       		.byte	0x35
 2147 05be C8050000 		.4byte	0x5c8
 2148 05c2 05       		.uleb128 0x5
 2149 05c3 03       		.byte	0x3
 2150 05c4 00000000 		.4byte	valuesMiddleLine
 2151 05c8 15       		.uleb128 0x15
 2152 05c9 7A050000 		.4byte	0x57a
 2153 05cd 17       		.uleb128 0x17
 2154 05ce D7000000 		.4byte	.LASF83
 2155 05d2 01       		.byte	0x1
 2156 05d3 36       		.byte	0x36
 2157 05d4 DE050000 		.4byte	0x5de
 2158 05d8 05       		.uleb128 0x5
 2159 05d9 03       		.byte	0x3
 2160 05da 00000000 		.4byte	valuesTurnComplete
 2161 05de 15       		.uleb128 0x15
 2162 05df 7A050000 		.4byte	0x57a
 2163 05e3 17       		.uleb128 0x17
 2164 05e4 AA010000 		.4byte	.LASF84
 2165 05e8 01       		.byte	0x1
 2166 05e9 37       		.byte	0x37
 2167 05ea F4050000 		.4byte	0x5f4
 2168 05ee 05       		.uleb128 0x5
 2169 05ef 03       		.byte	0x3
 2170 05f0 00000000 		.4byte	valuesRightLine
 2171 05f4 15       		.uleb128 0x15
 2172 05f5 7A050000 		.4byte	0x57a
 2173 05f9 17       		.uleb128 0x17
 2174 05fa ED010000 		.4byte	.LASF85
 2175 05fe 01       		.byte	0x1
 2176 05ff 38       		.byte	0x38
 2177 0600 0A060000 		.4byte	0x60a
 2178 0604 05       		.uleb128 0x5
 2179 0605 03       		.byte	0x3
 2180 0606 00000000 		.4byte	valuesRightIntersection
 2181 060a 15       		.uleb128 0x15
 2182 060b 7A050000 		.4byte	0x57a
 2183 060f 17       		.uleb128 0x17
 2184 0610 C8040000 		.4byte	.LASF86
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 48


 2185 0614 01       		.byte	0x1
 2186 0615 39       		.byte	0x39
 2187 0616 75050000 		.4byte	0x575
 2188 061a 05       		.uleb128 0x5
 2189 061b 03       		.byte	0x3
 2190 061c 00000000 		.4byte	count
 2191 0620 17       		.uleb128 0x17
 2192 0621 E4040000 		.4byte	.LASF87
 2193 0625 01       		.byte	0x1
 2194 0626 3A       		.byte	0x3a
 2195 0627 75050000 		.4byte	0x575
 2196 062b 05       		.uleb128 0x5
 2197 062c 03       		.byte	0x3
 2198 062d 00000000 		.4byte	motorUpdateCount
 2199 0631 17       		.uleb128 0x17
 2200 0632 89020000 		.4byte	.LASF88
 2201 0636 01       		.byte	0x1
 2202 0637 3B       		.byte	0x3b
 2203 0638 75050000 		.4byte	0x575
 2204 063c 05       		.uleb128 0x5
 2205 063d 03       		.byte	0x3
 2206 063e 00000000 		.4byte	lastVeerDirection
 2207 0642 17       		.uleb128 0x17
 2208 0643 DA040000 		.4byte	.LASF89
 2209 0647 01       		.byte	0x1
 2210 0648 3D       		.byte	0x3d
 2211 0649 75050000 		.4byte	0x575
 2212 064d 05       		.uleb128 0x5
 2213 064e 03       		.byte	0x3
 2214 064f 00000000 		.4byte	v1M1
 2215 0653 17       		.uleb128 0x17
 2216 0654 DF040000 		.4byte	.LASF90
 2217 0658 01       		.byte	0x1
 2218 0659 3E       		.byte	0x3e
 2219 065a 75050000 		.4byte	0x575
 2220 065e 05       		.uleb128 0x5
 2221 065f 03       		.byte	0x3
 2222 0660 00000000 		.4byte	v1M2
 2223 0664 17       		.uleb128 0x17
 2224 0665 73040000 		.4byte	.LASF91
 2225 0669 01       		.byte	0x1
 2226 066a 3F       		.byte	0x3f
 2227 066b 75050000 		.4byte	0x575
 2228 066f 05       		.uleb128 0x5
 2229 0670 03       		.byte	0x3
 2230 0671 00000000 		.4byte	v2M1
 2231 0675 17       		.uleb128 0x17
 2232 0676 78040000 		.4byte	.LASF92
 2233 067a 01       		.byte	0x1
 2234 067b 40       		.byte	0x40
 2235 067c 75050000 		.4byte	0x575
 2236 0680 05       		.uleb128 0x5
 2237 0681 03       		.byte	0x3
 2238 0682 00000000 		.4byte	v2M2
 2239 0686 17       		.uleb128 0x17
 2240 0687 00010000 		.4byte	.LASF93
 2241 068b 01       		.byte	0x1
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 49


 2242 068c 41       		.byte	0x41
 2243 068d 75050000 		.4byte	0x575
 2244 0691 05       		.uleb128 0x5
 2245 0692 03       		.byte	0x3
 2246 0693 00000000 		.4byte	turnComplete
 2247 0697 17       		.uleb128 0x17
 2248 0698 05020000 		.4byte	.LASF94
 2249 069c 01       		.byte	0x1
 2250 069d 42       		.byte	0x42
 2251 069e 68000000 		.4byte	0x68
 2252 06a2 05       		.uleb128 0x5
 2253 06a3 03       		.byte	0x3
 2254 06a4 00000000 		.4byte	pulsesTravelled
 2255 06a8 17       		.uleb128 0x17
 2256 06a9 C5020000 		.4byte	.LASF95
 2257 06ad 01       		.byte	0x1
 2258 06ae 43       		.byte	0x43
 2259 06af 75050000 		.4byte	0x575
 2260 06b3 05       		.uleb128 0x5
 2261 06b4 03       		.byte	0x3
 2262 06b5 00000000 		.4byte	checkDistance
 2263 06b9 17       		.uleb128 0x17
 2264 06ba 73050000 		.4byte	.LASF96
 2265 06be 01       		.byte	0x1
 2266 06bf 44       		.byte	0x44
 2267 06c0 75050000 		.4byte	0x575
 2268 06c4 05       		.uleb128 0x5
 2269 06c5 03       		.byte	0x3
 2270 06c6 00000000 		.4byte	step
 2271 06ca 17       		.uleb128 0x17
 2272 06cb 9B020000 		.4byte	.LASF97
 2273 06cf 01       		.byte	0x1
 2274 06d0 45       		.byte	0x45
 2275 06d1 75050000 		.4byte	0x575
 2276 06d5 05       		.uleb128 0x5
 2277 06d6 03       		.byte	0x3
 2278 06d7 00000000 		.4byte	interruptFlag
 2279 06db 17       		.uleb128 0x17
 2280 06dc 2D000000 		.4byte	.LASF98
 2281 06e0 01       		.byte	0x1
 2282 06e1 47       		.byte	0x47
 2283 06e2 68000000 		.4byte	0x68
 2284 06e6 05       		.uleb128 0x5
 2285 06e7 03       		.byte	0x3
 2286 06e8 00000000 		.4byte	lastAdjustDirection
 2287 06ec 06       		.uleb128 0x6
 2288 06ed 2C000000 		.4byte	0x2c
 2289 06f1 03070000 		.4byte	0x703
 2290 06f5 18       		.uleb128 0x18
 2291 06f6 7D000000 		.4byte	0x7d
 2292 06fa F301     		.2byte	0x1f3
 2293 06fc 07       		.uleb128 0x7
 2294 06fd 7D000000 		.4byte	0x7d
 2295 0701 01       		.byte	0x1
 2296 0702 00       		.byte	0
 2297 0703 17       		.uleb128 0x17
 2298 0704 25000000 		.4byte	.LASF99
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 50


 2299 0708 01       		.byte	0x1
 2300 0709 48       		.byte	0x48
 2301 070a EC060000 		.4byte	0x6ec
 2302 070e 05       		.uleb128 0x5
 2303 070f 03       		.byte	0x3
 2304 0710 00000000 		.4byte	squares
 2305 0714 06       		.uleb128 0x6
 2306 0715 2C000000 		.4byte	0x2c
 2307 0719 25070000 		.4byte	0x725
 2308 071d 18       		.uleb128 0x18
 2309 071e 7D000000 		.4byte	0x7d
 2310 0722 F301     		.2byte	0x1f3
 2311 0724 00       		.byte	0
 2312 0725 17       		.uleb128 0x17
 2313 0726 51050000 		.4byte	.LASF100
 2314 072a 01       		.byte	0x1
 2315 072b 49       		.byte	0x49
 2316 072c 14070000 		.4byte	0x714
 2317 0730 05       		.uleb128 0x5
 2318 0731 03       		.byte	0x3
 2319 0732 00000000 		.4byte	instruction
 2320 0736 17       		.uleb128 0x17
 2321 0737 17040000 		.4byte	.LASF101
 2322 073b 01       		.byte	0x1
 2323 073c 4A       		.byte	0x4a
 2324 073d 14070000 		.4byte	0x714
 2325 0741 05       		.uleb128 0x5
 2326 0742 03       		.byte	0x3
 2327 0743 00000000 		.4byte	distance
 2328 0747 00       		.byte	0
 2329              		.section	.debug_abbrev,"",%progbits
 2330              	.Ldebug_abbrev0:
 2331 0000 01       		.uleb128 0x1
 2332 0001 11       		.uleb128 0x11
 2333 0002 01       		.byte	0x1
 2334 0003 25       		.uleb128 0x25
 2335 0004 0E       		.uleb128 0xe
 2336 0005 13       		.uleb128 0x13
 2337 0006 0B       		.uleb128 0xb
 2338 0007 03       		.uleb128 0x3
 2339 0008 0E       		.uleb128 0xe
 2340 0009 1B       		.uleb128 0x1b
 2341 000a 0E       		.uleb128 0xe
 2342 000b 55       		.uleb128 0x55
 2343 000c 17       		.uleb128 0x17
 2344 000d 11       		.uleb128 0x11
 2345 000e 01       		.uleb128 0x1
 2346 000f 10       		.uleb128 0x10
 2347 0010 17       		.uleb128 0x17
 2348 0011 00       		.byte	0
 2349 0012 00       		.byte	0
 2350 0013 02       		.uleb128 0x2
 2351 0014 24       		.uleb128 0x24
 2352 0015 00       		.byte	0
 2353 0016 0B       		.uleb128 0xb
 2354 0017 0B       		.uleb128 0xb
 2355 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 51


 2356 0019 0B       		.uleb128 0xb
 2357 001a 03       		.uleb128 0x3
 2358 001b 0E       		.uleb128 0xe
 2359 001c 00       		.byte	0
 2360 001d 00       		.byte	0
 2361 001e 03       		.uleb128 0x3
 2362 001f 16       		.uleb128 0x16
 2363 0020 00       		.byte	0
 2364 0021 03       		.uleb128 0x3
 2365 0022 0E       		.uleb128 0xe
 2366 0023 3A       		.uleb128 0x3a
 2367 0024 0B       		.uleb128 0xb
 2368 0025 3B       		.uleb128 0x3b
 2369 0026 0B       		.uleb128 0xb
 2370 0027 49       		.uleb128 0x49
 2371 0028 13       		.uleb128 0x13
 2372 0029 00       		.byte	0
 2373 002a 00       		.byte	0
 2374 002b 04       		.uleb128 0x4
 2375 002c 24       		.uleb128 0x24
 2376 002d 00       		.byte	0
 2377 002e 0B       		.uleb128 0xb
 2378 002f 0B       		.uleb128 0xb
 2379 0030 3E       		.uleb128 0x3e
 2380 0031 0B       		.uleb128 0xb
 2381 0032 03       		.uleb128 0x3
 2382 0033 08       		.uleb128 0x8
 2383 0034 00       		.byte	0
 2384 0035 00       		.byte	0
 2385 0036 05       		.uleb128 0x5
 2386 0037 0F       		.uleb128 0xf
 2387 0038 00       		.byte	0
 2388 0039 0B       		.uleb128 0xb
 2389 003a 0B       		.uleb128 0xb
 2390 003b 49       		.uleb128 0x49
 2391 003c 13       		.uleb128 0x13
 2392 003d 00       		.byte	0
 2393 003e 00       		.byte	0
 2394 003f 06       		.uleb128 0x6
 2395 0040 01       		.uleb128 0x1
 2396 0041 01       		.byte	0x1
 2397 0042 49       		.uleb128 0x49
 2398 0043 13       		.uleb128 0x13
 2399 0044 01       		.uleb128 0x1
 2400 0045 13       		.uleb128 0x13
 2401 0046 00       		.byte	0
 2402 0047 00       		.byte	0
 2403 0048 07       		.uleb128 0x7
 2404 0049 21       		.uleb128 0x21
 2405 004a 00       		.byte	0
 2406 004b 49       		.uleb128 0x49
 2407 004c 13       		.uleb128 0x13
 2408 004d 2F       		.uleb128 0x2f
 2409 004e 0B       		.uleb128 0xb
 2410 004f 00       		.byte	0
 2411 0050 00       		.byte	0
 2412 0051 08       		.uleb128 0x8
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 52


 2413 0052 16       		.uleb128 0x16
 2414 0053 00       		.byte	0
 2415 0054 03       		.uleb128 0x3
 2416 0055 0E       		.uleb128 0xe
 2417 0056 3A       		.uleb128 0x3a
 2418 0057 0B       		.uleb128 0xb
 2419 0058 3B       		.uleb128 0x3b
 2420 0059 05       		.uleb128 0x5
 2421 005a 49       		.uleb128 0x49
 2422 005b 13       		.uleb128 0x13
 2423 005c 00       		.byte	0
 2424 005d 00       		.byte	0
 2425 005e 09       		.uleb128 0x9
 2426 005f 13       		.uleb128 0x13
 2427 0060 01       		.byte	0x1
 2428 0061 03       		.uleb128 0x3
 2429 0062 0E       		.uleb128 0xe
 2430 0063 0B       		.uleb128 0xb
 2431 0064 0B       		.uleb128 0xb
 2432 0065 3A       		.uleb128 0x3a
 2433 0066 0B       		.uleb128 0xb
 2434 0067 3B       		.uleb128 0x3b
 2435 0068 0B       		.uleb128 0xb
 2436 0069 01       		.uleb128 0x1
 2437 006a 13       		.uleb128 0x13
 2438 006b 00       		.byte	0
 2439 006c 00       		.byte	0
 2440 006d 0A       		.uleb128 0xa
 2441 006e 0D       		.uleb128 0xd
 2442 006f 00       		.byte	0
 2443 0070 03       		.uleb128 0x3
 2444 0071 0E       		.uleb128 0xe
 2445 0072 3A       		.uleb128 0x3a
 2446 0073 0B       		.uleb128 0xb
 2447 0074 3B       		.uleb128 0x3b
 2448 0075 0B       		.uleb128 0xb
 2449 0076 49       		.uleb128 0x49
 2450 0077 13       		.uleb128 0x13
 2451 0078 38       		.uleb128 0x38
 2452 0079 0B       		.uleb128 0xb
 2453 007a 00       		.byte	0
 2454 007b 00       		.byte	0
 2455 007c 0B       		.uleb128 0xb
 2456 007d 2E       		.uleb128 0x2e
 2457 007e 00       		.byte	0
 2458 007f 3F       		.uleb128 0x3f
 2459 0080 19       		.uleb128 0x19
 2460 0081 03       		.uleb128 0x3
 2461 0082 08       		.uleb128 0x8
 2462 0083 3A       		.uleb128 0x3a
 2463 0084 0B       		.uleb128 0xb
 2464 0085 3B       		.uleb128 0x3b
 2465 0086 0B       		.uleb128 0xb
 2466 0087 27       		.uleb128 0x27
 2467 0088 19       		.uleb128 0x19
 2468 0089 11       		.uleb128 0x11
 2469 008a 01       		.uleb128 0x1
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 53


 2470 008b 12       		.uleb128 0x12
 2471 008c 06       		.uleb128 0x6
 2472 008d 40       		.uleb128 0x40
 2473 008e 18       		.uleb128 0x18
 2474 008f 9742     		.uleb128 0x2117
 2475 0091 19       		.uleb128 0x19
 2476 0092 00       		.byte	0
 2477 0093 00       		.byte	0
 2478 0094 0C       		.uleb128 0xc
 2479 0095 2E       		.uleb128 0x2e
 2480 0096 01       		.byte	0x1
 2481 0097 3F       		.uleb128 0x3f
 2482 0098 19       		.uleb128 0x19
 2483 0099 03       		.uleb128 0x3
 2484 009a 0E       		.uleb128 0xe
 2485 009b 3A       		.uleb128 0x3a
 2486 009c 0B       		.uleb128 0xb
 2487 009d 3B       		.uleb128 0x3b
 2488 009e 0B       		.uleb128 0xb
 2489 009f 49       		.uleb128 0x49
 2490 00a0 13       		.uleb128 0x13
 2491 00a1 11       		.uleb128 0x11
 2492 00a2 01       		.uleb128 0x1
 2493 00a3 12       		.uleb128 0x12
 2494 00a4 06       		.uleb128 0x6
 2495 00a5 40       		.uleb128 0x40
 2496 00a6 18       		.uleb128 0x18
 2497 00a7 9642     		.uleb128 0x2116
 2498 00a9 19       		.uleb128 0x19
 2499 00aa 01       		.uleb128 0x1
 2500 00ab 13       		.uleb128 0x13
 2501 00ac 00       		.byte	0
 2502 00ad 00       		.byte	0
 2503 00ae 0D       		.uleb128 0xd
 2504 00af 0B       		.uleb128 0xb
 2505 00b0 01       		.byte	0x1
 2506 00b1 11       		.uleb128 0x11
 2507 00b2 01       		.uleb128 0x1
 2508 00b3 12       		.uleb128 0x12
 2509 00b4 06       		.uleb128 0x6
 2510 00b5 01       		.uleb128 0x1
 2511 00b6 13       		.uleb128 0x13
 2512 00b7 00       		.byte	0
 2513 00b8 00       		.byte	0
 2514 00b9 0E       		.uleb128 0xe
 2515 00ba 34       		.uleb128 0x34
 2516 00bb 00       		.byte	0
 2517 00bc 03       		.uleb128 0x3
 2518 00bd 08       		.uleb128 0x8
 2519 00be 3A       		.uleb128 0x3a
 2520 00bf 0B       		.uleb128 0xb
 2521 00c0 3B       		.uleb128 0x3b
 2522 00c1 0B       		.uleb128 0xb
 2523 00c2 49       		.uleb128 0x49
 2524 00c3 13       		.uleb128 0x13
 2525 00c4 02       		.uleb128 0x2
 2526 00c5 18       		.uleb128 0x18
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 54


 2527 00c6 00       		.byte	0
 2528 00c7 00       		.byte	0
 2529 00c8 0F       		.uleb128 0xf
 2530 00c9 0B       		.uleb128 0xb
 2531 00ca 01       		.byte	0x1
 2532 00cb 11       		.uleb128 0x11
 2533 00cc 01       		.uleb128 0x1
 2534 00cd 12       		.uleb128 0x12
 2535 00ce 06       		.uleb128 0x6
 2536 00cf 00       		.byte	0
 2537 00d0 00       		.byte	0
 2538 00d1 10       		.uleb128 0x10
 2539 00d2 34       		.uleb128 0x34
 2540 00d3 00       		.byte	0
 2541 00d4 03       		.uleb128 0x3
 2542 00d5 0E       		.uleb128 0xe
 2543 00d6 3A       		.uleb128 0x3a
 2544 00d7 0B       		.uleb128 0xb
 2545 00d8 3B       		.uleb128 0x3b
 2546 00d9 0B       		.uleb128 0xb
 2547 00da 49       		.uleb128 0x49
 2548 00db 13       		.uleb128 0x13
 2549 00dc 02       		.uleb128 0x2
 2550 00dd 18       		.uleb128 0x18
 2551 00de 00       		.byte	0
 2552 00df 00       		.byte	0
 2553 00e0 11       		.uleb128 0x11
 2554 00e1 34       		.uleb128 0x34
 2555 00e2 00       		.byte	0
 2556 00e3 03       		.uleb128 0x3
 2557 00e4 0E       		.uleb128 0xe
 2558 00e5 3A       		.uleb128 0x3a
 2559 00e6 0B       		.uleb128 0xb
 2560 00e7 3B       		.uleb128 0x3b
 2561 00e8 05       		.uleb128 0x5
 2562 00e9 49       		.uleb128 0x49
 2563 00ea 13       		.uleb128 0x13
 2564 00eb 02       		.uleb128 0x2
 2565 00ec 18       		.uleb128 0x18
 2566 00ed 00       		.byte	0
 2567 00ee 00       		.byte	0
 2568 00ef 12       		.uleb128 0x12
 2569 00f0 2E       		.uleb128 0x2e
 2570 00f1 01       		.byte	0x1
 2571 00f2 3F       		.uleb128 0x3f
 2572 00f3 19       		.uleb128 0x19
 2573 00f4 03       		.uleb128 0x3
 2574 00f5 0E       		.uleb128 0xe
 2575 00f6 3A       		.uleb128 0x3a
 2576 00f7 0B       		.uleb128 0xb
 2577 00f8 3B       		.uleb128 0x3b
 2578 00f9 05       		.uleb128 0x5
 2579 00fa 27       		.uleb128 0x27
 2580 00fb 19       		.uleb128 0x19
 2581 00fc 11       		.uleb128 0x11
 2582 00fd 01       		.uleb128 0x1
 2583 00fe 12       		.uleb128 0x12
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 55


 2584 00ff 06       		.uleb128 0x6
 2585 0100 40       		.uleb128 0x40
 2586 0101 18       		.uleb128 0x18
 2587 0102 9642     		.uleb128 0x2116
 2588 0104 19       		.uleb128 0x19
 2589 0105 01       		.uleb128 0x1
 2590 0106 13       		.uleb128 0x13
 2591 0107 00       		.byte	0
 2592 0108 00       		.byte	0
 2593 0109 13       		.uleb128 0x13
 2594 010a 05       		.uleb128 0x5
 2595 010b 00       		.byte	0
 2596 010c 03       		.uleb128 0x3
 2597 010d 08       		.uleb128 0x8
 2598 010e 3A       		.uleb128 0x3a
 2599 010f 0B       		.uleb128 0xb
 2600 0110 3B       		.uleb128 0x3b
 2601 0111 05       		.uleb128 0x5
 2602 0112 49       		.uleb128 0x49
 2603 0113 13       		.uleb128 0x13
 2604 0114 02       		.uleb128 0x2
 2605 0115 18       		.uleb128 0x18
 2606 0116 00       		.byte	0
 2607 0117 00       		.byte	0
 2608 0118 14       		.uleb128 0x14
 2609 0119 34       		.uleb128 0x34
 2610 011a 00       		.byte	0
 2611 011b 03       		.uleb128 0x3
 2612 011c 0E       		.uleb128 0xe
 2613 011d 3A       		.uleb128 0x3a
 2614 011e 0B       		.uleb128 0xb
 2615 011f 3B       		.uleb128 0x3b
 2616 0120 05       		.uleb128 0x5
 2617 0121 49       		.uleb128 0x49
 2618 0122 13       		.uleb128 0x13
 2619 0123 3F       		.uleb128 0x3f
 2620 0124 19       		.uleb128 0x19
 2621 0125 3C       		.uleb128 0x3c
 2622 0126 19       		.uleb128 0x19
 2623 0127 00       		.byte	0
 2624 0128 00       		.byte	0
 2625 0129 15       		.uleb128 0x15
 2626 012a 35       		.uleb128 0x35
 2627 012b 00       		.byte	0
 2628 012c 49       		.uleb128 0x49
 2629 012d 13       		.uleb128 0x13
 2630 012e 00       		.byte	0
 2631 012f 00       		.byte	0
 2632 0130 16       		.uleb128 0x16
 2633 0131 34       		.uleb128 0x34
 2634 0132 00       		.byte	0
 2635 0133 03       		.uleb128 0x3
 2636 0134 08       		.uleb128 0x8
 2637 0135 3A       		.uleb128 0x3a
 2638 0136 0B       		.uleb128 0xb
 2639 0137 3B       		.uleb128 0x3b
 2640 0138 0B       		.uleb128 0xb
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 56


 2641 0139 49       		.uleb128 0x49
 2642 013a 13       		.uleb128 0x13
 2643 013b 3F       		.uleb128 0x3f
 2644 013c 19       		.uleb128 0x19
 2645 013d 02       		.uleb128 0x2
 2646 013e 18       		.uleb128 0x18
 2647 013f 00       		.byte	0
 2648 0140 00       		.byte	0
 2649 0141 17       		.uleb128 0x17
 2650 0142 34       		.uleb128 0x34
 2651 0143 00       		.byte	0
 2652 0144 03       		.uleb128 0x3
 2653 0145 0E       		.uleb128 0xe
 2654 0146 3A       		.uleb128 0x3a
 2655 0147 0B       		.uleb128 0xb
 2656 0148 3B       		.uleb128 0x3b
 2657 0149 0B       		.uleb128 0xb
 2658 014a 49       		.uleb128 0x49
 2659 014b 13       		.uleb128 0x13
 2660 014c 3F       		.uleb128 0x3f
 2661 014d 19       		.uleb128 0x19
 2662 014e 02       		.uleb128 0x2
 2663 014f 18       		.uleb128 0x18
 2664 0150 00       		.byte	0
 2665 0151 00       		.byte	0
 2666 0152 18       		.uleb128 0x18
 2667 0153 21       		.uleb128 0x21
 2668 0154 00       		.byte	0
 2669 0155 49       		.uleb128 0x49
 2670 0156 13       		.uleb128 0x13
 2671 0157 2F       		.uleb128 0x2f
 2672 0158 05       		.uleb128 0x5
 2673 0159 00       		.byte	0
 2674 015a 00       		.byte	0
 2675 015b 00       		.byte	0
 2676              		.section	.debug_aranges,"",%progbits
 2677 0000 34000000 		.4byte	0x34
 2678 0004 0200     		.2byte	0x2
 2679 0006 00000000 		.4byte	.Ldebug_info0
 2680 000a 04       		.byte	0x4
 2681 000b 00       		.byte	0
 2682 000c 0000     		.2byte	0
 2683 000e 0000     		.2byte	0
 2684 0010 00000000 		.4byte	.LFB64
 2685 0014 18000000 		.4byte	.LFE64-.LFB64
 2686 0018 00000000 		.4byte	.LFB65
 2687 001c 1C080000 		.4byte	.LFE65-.LFB65
 2688 0020 00000000 		.4byte	.LFB66
 2689 0024 3E000000 		.4byte	.LFE66-.LFB66
 2690 0028 00000000 		.4byte	.LFB67
 2691 002c 26000000 		.4byte	.LFE67-.LFB67
 2692 0030 00000000 		.4byte	0
 2693 0034 00000000 		.4byte	0
 2694              		.section	.debug_ranges,"",%progbits
 2695              	.Ldebug_ranges0:
 2696 0000 00000000 		.4byte	.LFB64
 2697 0004 18000000 		.4byte	.LFE64
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 57


 2698 0008 00000000 		.4byte	.LFB65
 2699 000c 1C080000 		.4byte	.LFE65
 2700 0010 00000000 		.4byte	.LFB66
 2701 0014 3E000000 		.4byte	.LFE66
 2702 0018 00000000 		.4byte	.LFB67
 2703 001c 26000000 		.4byte	.LFE67
 2704 0020 00000000 		.4byte	0
 2705 0024 00000000 		.4byte	0
 2706              		.section	.debug_line,"",%progbits
 2707              	.Ldebug_line0:
 2708 0000 5B030000 		.section	.debug_str,"MS",%progbits,1
 2708      02005601 
 2708      00000201 
 2708      FB0E0D00 
 2708      01010101 
 2709              	.LASF56:
 2710 0000 75736250 		.ascii	"usbPutChar\000"
 2710      75744368 
 2710      617200
 2711              	.LASF37:
 2712 000b 68696768 		.ascii	"highCountLeftIntersection\000"
 2712      436F756E 
 2712      744C6566 
 2712      74496E74 
 2712      65727365 
 2713              	.LASF99:
 2714 0025 73717561 		.ascii	"squares\000"
 2714      72657300 
 2715              	.LASF98:
 2716 002d 6C617374 		.ascii	"lastAdjustDirection\000"
 2716      41646A75 
 2716      73744469 
 2716      72656374 
 2716      696F6E00 
 2717              	.LASF67:
 2718 0041 666C6167 		.ascii	"flag_packet\000"
 2718      5F706163 
 2718      6B657400 
 2719              	.LASF104:
 2720 004d 483A5C44 		.ascii	"H:\\Desktop\\Team 14\\team14\\301_lab_tasks\\psoc s"
 2720      65736B74 
 2720      6F705C54 
 2720      65616D20 
 2720      31345C74 
 2721 007b 74756465 		.ascii	"tudent pack\\psoc_code_base\\CS301_Class.cydsn\000"
 2721      6E742070 
 2721      61636B5C 
 2721      70736F63 
 2721      5F636F64 
 2722              	.LASF81:
 2723 00a8 76616C75 		.ascii	"valuesLeftLine\000"
 2723      65734C65 
 2723      66744C69 
 2723      6E6500
 2724              	.LASF64:
 2725 00b7 666C6167 		.ascii	"flag_ts_speed\000"
 2725      5F74735F 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 58


 2725      73706565 
 2725      6400
 2726              	.LASF33:
 2727 00c5 67325F78 		.ascii	"g2_xpos\000"
 2727      706F7300 
 2728              	.LASF2:
 2729 00cd 73686F72 		.ascii	"short int\000"
 2729      7420696E 
 2729      7400
 2730              	.LASF83:
 2731 00d7 76616C75 		.ascii	"valuesTurnComplete\000"
 2731      65735475 
 2731      726E436F 
 2731      6D706C65 
 2731      746500
 2732              	.LASF75:
 2733 00ea 73797374 		.ascii	"system_state\000"
 2733      656D5F73 
 2733      74617465 
 2733      00
 2734              	.LASF10:
 2735 00f7 73697A65 		.ascii	"sizetype\000"
 2735      74797065 
 2735      00
 2736              	.LASF93:
 2737 0100 7475726E 		.ascii	"turnComplete\000"
 2737      436F6D70 
 2737      6C657465 
 2737      00
 2738              	.LASF74:
 2739 010d 75736242 		.ascii	"usbBuffer\000"
 2739      75666665 
 2739      7200
 2740              	.LASF102:
 2741 0117 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2741      43313120 
 2741      352E342E 
 2741      31203230 
 2741      31363036 
 2742 014a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2742      20726576 
 2742      6973696F 
 2742      6E203233 
 2742      37373135 
 2743 017d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2743      66756E63 
 2743      74696F6E 
 2743      2D736563 
 2743      74696F6E 
 2744              	.LASF54:
 2745 01a5 6D61696E 		.ascii	"main\000"
 2745      00
 2746              	.LASF84:
 2747 01aa 76616C75 		.ascii	"valuesRightLine\000"
 2747      65735269 
 2747      6768744C 
 2747      696E6500 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 59


 2748              	.LASF36:
 2749 01ba 67325F64 		.ascii	"g2_direction\000"
 2749      69726563 
 2749      74696F6E 
 2749      00
 2750              	.LASF15:
 2751 01c7 75696E74 		.ascii	"uint16\000"
 2751      313600
 2752              	.LASF21:
 2753 01ce 696E6465 		.ascii	"index\000"
 2753      7800
 2754              	.LASF17:
 2755 01d4 696E7431 		.ascii	"int16\000"
 2755      3600
 2756              	.LASF14:
 2757 01da 75696E74 		.ascii	"uint8\000"
 2757      3800
 2758              	.LASF32:
 2759 01e0 67315F64 		.ascii	"g1_direction\000"
 2759      69726563 
 2759      74696F6E 
 2759      00
 2760              	.LASF85:
 2761 01ed 76616C75 		.ascii	"valuesRightIntersection\000"
 2761      65735269 
 2761      67687449 
 2761      6E746572 
 2761      73656374 
 2762              	.LASF94:
 2763 0205 70756C73 		.ascii	"pulsesTravelled\000"
 2763      65735472 
 2763      6176656C 
 2763      6C656400 
 2764              	.LASF72:
 2765 0215 6C696E65 		.ascii	"line\000"
 2765      00
 2766              	.LASF0:
 2767 021a 7369676E 		.ascii	"signed char\000"
 2767      65642063 
 2767      68617200 
 2768              	.LASF18:
 2769 0226 666C6F61 		.ascii	"float\000"
 2769      7400
 2770              	.LASF77:
 2771 022c 73746172 		.ascii	"started\000"
 2771      74656400 
 2772              	.LASF6:
 2773 0234 6C6F6E67 		.ascii	"long long int\000"
 2773      206C6F6E 
 2773      6720696E 
 2773      7400
 2774              	.LASF55:
 2775 0242 75736250 		.ascii	"usbPutString\000"
 2775      75745374 
 2775      72696E67 
 2775      00
 2776              	.LASF16:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 60


 2777 024f 696E7438 		.ascii	"int8\000"
 2777      00
 2778              	.LASF63:
 2779 0254 666C6167 		.ascii	"flag_ts_update\000"
 2779      5F74735F 
 2779      75706461 
 2779      746500
 2780              	.LASF34:
 2781 0263 67325F79 		.ascii	"g2_ypos\000"
 2781      706F7300 
 2782              	.LASF28:
 2783 026b 67305F64 		.ascii	"g0_direction\000"
 2783      69726563 
 2783      74696F6E 
 2783      00
 2784              	.LASF25:
 2785 0278 67305F78 		.ascii	"g0_xpos\000"
 2785      706F7300 
 2786              	.LASF4:
 2787 0280 6C6F6E67 		.ascii	"long int\000"
 2787      20696E74 
 2787      00
 2788              	.LASF88:
 2789 0289 6C617374 		.ascii	"lastVeerDirection\000"
 2789      56656572 
 2789      44697265 
 2789      6374696F 
 2789      6E00
 2790              	.LASF97:
 2791 029b 696E7465 		.ascii	"interruptFlag\000"
 2791      72727570 
 2791      74466C61 
 2791      6700
 2792              	.LASF65:
 2793 02a9 666C6167 		.ascii	"flag_ts_display\000"
 2793      5F74735F 
 2793      64697370 
 2793      6C617900 
 2794              	.LASF46:
 2795 02b9 63757272 		.ascii	"currentInst\000"
 2795      656E7449 
 2795      6E737400 
 2796              	.LASF95:
 2797 02c5 63686563 		.ascii	"checkDistance\000"
 2797      6B446973 
 2797      74616E63 
 2797      6500
 2798              	.LASF42:
 2799 02d3 68696768 		.ascii	"highCountRightIntersection\000"
 2799      436F756E 
 2799      74526967 
 2799      6874496E 
 2799      74657273 
 2800              	.LASF1:
 2801 02ee 756E7369 		.ascii	"unsigned char\000"
 2801      676E6564 
 2801      20636861 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 61


 2801      7200
 2802              	.LASF30:
 2803 02fc 67315F79 		.ascii	"g1_ypos\000"
 2803      706F7300 
 2804              	.LASF9:
 2805 0304 6C6F6E67 		.ascii	"long double\000"
 2805      20646F75 
 2805      626C6500 
 2806              	.LASF73:
 2807 0310 656E7472 		.ascii	"entry\000"
 2807      7900
 2808              	.LASF43:
 2809 0316 72657375 		.ascii	"result1\000"
 2809      6C743100 
 2810              	.LASF44:
 2811 031e 72657375 		.ascii	"result2\000"
 2811      6C743200 
 2812              	.LASF45:
 2813 0326 66697273 		.ascii	"firstNonZeroIndex\000"
 2813      744E6F6E 
 2813      5A65726F 
 2813      496E6465 
 2813      7800
 2814              	.LASF27:
 2815 0338 67305F73 		.ascii	"g0_speed\000"
 2815      70656564 
 2815      00
 2816              	.LASF31:
 2817 0341 67315F73 		.ascii	"g1_speed\000"
 2817      70656564 
 2817      00
 2818              	.LASF41:
 2819 034a 68696768 		.ascii	"highCountRightLine\000"
 2819      436F756E 
 2819      74526967 
 2819      68744C69 
 2819      6E6500
 2820              	.LASF69:
 2821 035d 64617461 		.ascii	"dataready_flag\000"
 2821      72656164 
 2821      795F666C 
 2821      616700
 2822              	.LASF66:
 2823 036c 666C6167 		.ascii	"flag_rx\000"
 2823      5F727800 
 2824              	.LASF51:
 2825 0374 7365636F 		.ascii	"second\000"
 2825      6E6400
 2826              	.LASF7:
 2827 037b 6C6F6E67 		.ascii	"long long unsigned int\000"
 2827      206C6F6E 
 2827      6720756E 
 2827      7369676E 
 2827      65642069 
 2828              	.LASF8:
 2829 0392 756E7369 		.ascii	"unsigned int\000"
 2829      676E6564 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 62


 2829      20696E74 
 2829      00
 2830              	.LASF68:
 2831 039f 666C6167 		.ascii	"flag_KB_string\000"
 2831      5F4B425F 
 2831      73747269 
 2831      6E6700
 2832              	.LASF76:
 2833 03ae 636F6E73 		.ascii	"consecStops\000"
 2833      65635374 
 2833      6F707300 
 2834              	.LASF35:
 2835 03ba 67325F73 		.ascii	"g2_speed\000"
 2835      70656564 
 2835      00
 2836              	.LASF48:
 2837 03c3 64697374 		.ascii	"dist\000"
 2837      00
 2838              	.LASF29:
 2839 03c8 67315F78 		.ascii	"g1_xpos\000"
 2839      706F7300 
 2840              	.LASF3:
 2841 03d0 73686F72 		.ascii	"short unsigned int\000"
 2841      7420756E 
 2841      7369676E 
 2841      65642069 
 2841      6E7400
 2842              	.LASF39:
 2843 03e3 68696768 		.ascii	"highCountMiddleLine\000"
 2843      436F756E 
 2843      744D6964 
 2843      646C654C 
 2843      696E6500 
 2844              	.LASF82:
 2845 03f7 76616C75 		.ascii	"valuesMiddleLine\000"
 2845      65734D69 
 2845      64646C65 
 2845      4C696E65 
 2845      00
 2846              	.LASF105:
 2847 0408 64617461 		.ascii	"data_main\000"
 2847      5F6D6169 
 2847      6E00
 2848              	.LASF11:
 2849 0412 63686172 		.ascii	"char\000"
 2849      00
 2850              	.LASF101:
 2851 0417 64697374 		.ascii	"distance\000"
 2851      616E6365 
 2851      00
 2852              	.LASF22:
 2853 0420 726F626F 		.ascii	"robot_xpos\000"
 2853      745F7870 
 2853      6F7300
 2854              	.LASF13:
 2855 042b 696E7433 		.ascii	"int32_t\000"
 2855      325F7400 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 63


 2856              	.LASF79:
 2857 0433 666C6167 		.ascii	"flag\000"
 2857      00
 2858              	.LASF12:
 2859 0438 5F5F696E 		.ascii	"__int32_t\000"
 2859      7433325F 
 2859      7400
 2860              	.LASF49:
 2861 0442 70756C73 		.ascii	"pulses\000"
 2861      657300
 2862              	.LASF53:
 2863 0449 6356616C 		.ascii	"cVal\000"
 2863      00
 2864              	.LASF80:
 2865 044e 76616C75 		.ascii	"valuesLeftIntersection\000"
 2865      65734C65 
 2865      6674496E 
 2865      74657273 
 2865      65637469 
 2866              	.LASF71:
 2867 0465 64697370 		.ascii	"displaystring\000"
 2867      6C617973 
 2867      7472696E 
 2867      6700
 2868              	.LASF91:
 2869 0473 76324D31 		.ascii	"v2M1\000"
 2869      00
 2870              	.LASF92:
 2871 0478 76324D32 		.ascii	"v2M2\000"
 2871      00
 2872              	.LASF38:
 2873 047d 68696768 		.ascii	"highCountLeftLine\000"
 2873      436F756E 
 2873      744C6566 
 2873      744C696E 
 2873      6500
 2874              	.LASF103:
 2875 048f 6D61696E 		.ascii	"main.c\000"
 2875      2E6300
 2876              	.LASF5:
 2877 0496 6C6F6E67 		.ascii	"long unsigned int\000"
 2877      20756E73 
 2877      69676E65 
 2877      6420696E 
 2877      7400
 2878              	.LASF19:
 2879 04a8 646F7562 		.ascii	"double\000"
 2879      6C6500
 2880              	.LASF57:
 2881 04af 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2881      52784275 
 2881      66666572 
 2881      00
 2882              	.LASF78:
 2883 04bc 696E7374 		.ascii	"instCounter\000"
 2883      436F756E 
 2883      74657200 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 64


 2884              	.LASF86:
 2885 04c8 636F756E 		.ascii	"count\000"
 2885      7400
 2886              	.LASF62:
 2887 04ce 666C6167 		.ascii	"flag_ts_enc\000"
 2887      5F74735F 
 2887      656E6300 
 2888              	.LASF89:
 2889 04da 76314D31 		.ascii	"v1M1\000"
 2889      00
 2890              	.LASF90:
 2891 04df 76314D32 		.ascii	"v1M2\000"
 2891      00
 2892              	.LASF87:
 2893 04e4 6D6F746F 		.ascii	"motorUpdateCount\000"
 2893      72557064 
 2893      61746543 
 2893      6F756E74 
 2893      00
 2894              	.LASF26:
 2895 04f5 67305F79 		.ascii	"g0_ypos\000"
 2895      706F7300 
 2896              	.LASF61:
 2897 04fd 74735F64 		.ascii	"ts_display\000"
 2897      6973706C 
 2897      617900
 2898              	.LASF60:
 2899 0508 74735F73 		.ascii	"ts_speed\000"
 2899      70656564 
 2899      00
 2900              	.LASF58:
 2901 0511 74735F65 		.ascii	"ts_enc\000"
 2901      6E6300
 2902              	.LASF59:
 2903 0518 74735F75 		.ascii	"ts_update\000"
 2903      70646174 
 2903      6500
 2904              	.LASF70:
 2905 0522 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2905      5F72665F 
 2905      7472616E 
 2905      736D6973 
 2905      73696F6E 
 2906              	.LASF23:
 2907 053e 726F626F 		.ascii	"robot_ypos\000"
 2907      745F7970 
 2907      6F7300
 2908              	.LASF52:
 2909 0549 696E7374 		.ascii	"instStr\000"
 2909      53747200 
 2910              	.LASF100:
 2911 0551 696E7374 		.ascii	"instruction\000"
 2911      72756374 
 2911      696F6E00 
 2912              	.LASF40:
 2913 055d 68696768 		.ascii	"highCountTurnComplete\000"
 2913      436F756E 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cc55mw80.s 			page 65


 2913      74547572 
 2913      6E436F6D 
 2913      706C6574 
 2914              	.LASF96:
 2915 0573 73746570 		.ascii	"step\000"
 2915      00
 2916              	.LASF20:
 2917 0578 72737369 		.ascii	"rssi\000"
 2917      00
 2918              	.LASF24:
 2919 057d 726F626F 		.ascii	"robot_orientation\000"
 2919      745F6F72 
 2919      69656E74 
 2919      6174696F 
 2919      6E00
 2920              	.LASF50:
 2921 058f 66697273 		.ascii	"first\000"
 2921      7400
 2922              	.LASF47:
 2923 0595 6E657874 		.ascii	"nextInst\000"
 2923      496E7374 
 2923      00
 2924              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
