ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	TARGET_SPEED
 107              		.align	2
 108              		.type	TARGET_SPEED, %object
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 3


 109              		.size	TARGET_SPEED, 4
 110              	TARGET_SPEED:
 111 0044 0A000000 		.word	10
 112              		.global	restoring
 113              		.align	2
 114              		.type	restoring, %object
 115              		.size	restoring, 4
 116              	restoring:
 117 0048 1E000000 		.word	30
 118              		.global	turningDirection
 119              		.bss
 120 0012 0000     		.align	2
 121              		.type	turningDirection, %object
 122              		.size	turningDirection, 4
 123              	turningDirection:
 124 0014 00000000 		.space	4
 125              		.global	turningCount
 126              		.data
 127              		.align	2
 128              		.type	turningCount, %object
 129              		.size	turningCount, 4
 130              	turningCount:
 131 004c 1E000000 		.word	30
 132              		.global	shouldUpdate
 133              		.align	2
 134              		.type	shouldUpdate, %object
 135              		.size	shouldUpdate, 4
 136              	shouldUpdate:
 137 0050 01000000 		.word	1
 138              		.global	dotsTravelled
 139              		.bss
 140              		.align	2
 141              		.type	dotsTravelled, %object
 142              		.size	dotsTravelled, 4
 143              	dotsTravelled:
 144 0018 00000000 		.space	4
 145              		.global	flag
 146              		.align	2
 147              		.type	flag, %object
 148              		.size	flag, 4
 149              	flag:
 150 001c 00000000 		.space	4
 151              		.comm	valuesLeftIntersection,4000,4
 152              		.comm	valuesLeftLine,4000,4
 153              		.comm	valuesMiddleLine,4000,4
 154              		.comm	valuesTurnComplete,4000,4
 155              		.comm	valuesRightLine,4000,4
 156              		.comm	valuesRightIntersection,4000,4
 157              		.global	count
 158              		.align	2
 159              		.type	count, %object
 160              		.size	count, 4
 161              	count:
 162 0020 00000000 		.space	4
 163              		.global	lastVeerDirection
 164              		.align	2
 165              		.type	lastVeerDirection, %object
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 4


 166              		.size	lastVeerDirection, 4
 167              	lastVeerDirection:
 168 0024 00000000 		.space	4
 169              		.global	motorFlag
 170              		.align	2
 171              		.type	motorFlag, %object
 172              		.size	motorFlag, 4
 173              	motorFlag:
 174 0028 00000000 		.space	4
 175              		.global	step
 176              		.align	2
 177              		.type	step, %object
 178              		.size	step, 4
 179              	step:
 180 002c 00000000 		.space	4
 181              		.comm	v1L,4,4
 182              		.comm	v2L,4,4
 183              		.comm	v1R,4,4
 184              		.comm	v2R,4,4
 185              		.comm	numRotationsL,4,4
 186              		.comm	numRotationsR,4,4
 187              		.global	distanceTravelled
 188              		.align	2
 189              		.type	distanceTravelled, %object
 190              		.size	distanceTravelled, 4
 191              	distanceTravelled:
 192 0030 00000000 		.space	4
 193              		.global	distancePerSecondL
 194              		.align	2
 195              		.type	distancePerSecondL, %object
 196              		.size	distancePerSecondL, 4
 197              	distancePerSecondL:
 198 0034 00000000 		.space	4
 199              		.global	distancePerSecondR
 200              		.align	2
 201              		.type	distancePerSecondR, %object
 202              		.size	distancePerSecondR, 4
 203              	distancePerSecondR:
 204 0038 00000000 		.space	4
 205              		.global	lastAdjustDirection
 206              		.align	2
 207              		.type	lastAdjustDirection, %object
 208              		.size	lastAdjustDirection, 4
 209              	lastAdjustDirection:
 210 003c 00000000 		.space	4
 211              		.section	.text.eoc,"ax",%progbits
 212              		.align	2
 213              		.global	eoc
 214              		.thumb
 215              		.thumb_func
 216              		.type	eoc, %function
 217              	eoc:
 218              	.LFB64:
 219              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 5


   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** 
  30:main.c        **** #include "vars.h"
  31:main.c        **** 
  32:main.c        **** #define ADC_COUNT 1000
  33:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 150
  34:main.c        **** #define R_INT_BLACK highCountRightIntersection < 150
  35:main.c        **** #define L_LINE_BLACK highCountLeftLine < 150
  36:main.c        **** #define R_LINE_BLACK highCountRightLine < 150
  37:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 150
  38:main.c        **** #define TC_BLACK highCountTurnComplete < 150
  39:main.c        **** int TARGET_SPEED = 10;
  40:main.c        **** int restoring = 30;
  41:main.c        **** int turningDirection = 0;
  42:main.c        **** int turningCount = 30;
  43:main.c        **** volatile int shouldUpdate = 1;
  44:main.c        **** #define MOVE_DISTANCE 999999999 //cm
  45:main.c        **** volatile int dotsTravelled = 0;
  46:main.c        **** //* ========================================
  47:main.c        **** void usbPutString(char * s);
  48:main.c        **** void usbPutChar(char c);
  49:main.c        **** void printSensorDebug(int highCountLeftIntersection, int highCountLeftLine, int highCountMiddleLine
  50:main.c        **** //* ========================================
  51:main.c        **** 
  52:main.c        **** volatile int flag = 0;
  53:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  54:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  55:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  56:main.c        **** volatile int valuesTurnComplete[ADC_COUNT];
  57:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  58:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  59:main.c        **** volatile int count = 0;
  60:main.c        **** volatile int lastVeerDirection = 0;
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 6


  61:main.c        **** 
  62:main.c        **** volatile int motorFlag = 0;
  63:main.c        **** volatile int step = 0; // are we on first measuring step or second step?
  64:main.c        **** volatile int v1L; // allocating storage for measure number of holes (ahead) - LEFT WHEEL
  65:main.c        **** volatile int v2L; // allocating storage for measure number of holes (behind) - LEFT WHEEL
  66:main.c        **** volatile int v1R; // allocating storage for measure number of holes (ahead) - RIGHT WHEEL
  67:main.c        **** volatile int v2R; // allocating storage for measure number of holes (behind) - RIGHT WHEEL
  68:main.c        **** volatile int numRotationsL; //
  69:main.c        **** volatile int numRotationsR; //
  70:main.c        **** volatile int distanceTravelled = 0;
  71:main.c        **** volatile int distancePerSecondL = 0;
  72:main.c        **** volatile int distancePerSecondR = 0;
  73:main.c        **** int lastAdjustDirection = 0;
  74:main.c        **** 
  75:main.c        **** CY_ISR(eoc) {
 220              		.loc 1 75 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 1, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225 0000 80B4     		push	{r7}
 226              		.cfi_def_cfa_offset 4
 227              		.cfi_offset 7, -4
 228 0002 00AF     		add	r7, sp, #0
 229              		.cfi_def_cfa_register 7
  76:main.c        ****   flag = 1;
 230              		.loc 1 76 0
 231 0004 034B     		ldr	r3, .L2
 232 0006 0122     		movs	r2, #1
 233 0008 1A60     		str	r2, [r3]
  77:main.c        **** }
 234              		.loc 1 77 0
 235 000a 00BF     		nop
 236 000c BD46     		mov	sp, r7
 237              		.cfi_def_cfa_register 13
 238              		@ sp needed
 239 000e 80BC     		pop	{r7}
 240              		.cfi_restore 7
 241              		.cfi_def_cfa_offset 0
 242 0010 7047     		bx	lr
 243              	.L3:
 244 0012 00BF     		.align	2
 245              	.L2:
 246 0014 00000000 		.word	flag
 247              		.cfi_endproc
 248              	.LFE64:
 249              		.size	eoc, .-eoc
 250              		.section	.text.MyISR,"ax",%progbits
 251              		.align	2
 252              		.global	MyISR
 253              		.thumb
 254              		.thumb_func
 255              		.type	MyISR, %function
 256              	MyISR:
 257              	.LFB65:
  78:main.c        **** 
  79:main.c        **** CY_ISR(MyISR) {
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 7


 258              		.loc 1 79 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 1, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263 0000 80B4     		push	{r7}
 264              		.cfi_def_cfa_offset 4
 265              		.cfi_offset 7, -4
 266 0002 00AF     		add	r7, sp, #0
 267              		.cfi_def_cfa_register 7
  80:main.c        ****   motorFlag = 1;
 268              		.loc 1 80 0
 269 0004 034B     		ldr	r3, .L5
 270 0006 0122     		movs	r2, #1
 271 0008 1A60     		str	r2, [r3]
  81:main.c        **** }
 272              		.loc 1 81 0
 273 000a 00BF     		nop
 274 000c BD46     		mov	sp, r7
 275              		.cfi_def_cfa_register 13
 276              		@ sp needed
 277 000e 80BC     		pop	{r7}
 278              		.cfi_restore 7
 279              		.cfi_def_cfa_offset 0
 280 0010 7047     		bx	lr
 281              	.L6:
 282 0012 00BF     		.align	2
 283              	.L5:
 284 0014 00000000 		.word	motorFlag
 285              		.cfi_endproc
 286              	.LFE65:
 287              		.size	MyISR, .-MyISR
 288              		.global	__aeabi_i2d
 289              		.global	__aeabi_dmul
 290              		.global	__aeabi_ddiv
 291              		.global	__aeabi_d2iz
 292              		.section	.text.main,"ax",%progbits
 293              		.align	2
 294              		.global	main
 295              		.thumb
 296              		.thumb_func
 297              		.type	main, %function
 298              	main:
 299              	.LFB66:
  82:main.c        **** 
  83:main.c        **** int main() {
 300              		.loc 1 83 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 112
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 0000 90B5     		push	{r4, r7, lr}
 305              		.cfi_def_cfa_offset 12
 306              		.cfi_offset 4, -12
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 9FB0     		sub	sp, sp, #124
 310              		.cfi_def_cfa_offset 136
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 8


 311 0004 02AF     		add	r7, sp, #8
 312              		.cfi_def_cfa 7, 128
  84:main.c        **** 
  85:main.c        ****   // --------------------------------    
  86:main.c        ****   // ----- INITIALIZATIONS ----------
  87:main.c        ****   CYGlobalIntEnable;
 313              		.loc 1 87 0
 314              		.syntax unified
 315              	@ 87 "main.c" 1
 316 0006 62B6     		CPSIE   i
 317              	@ 0 "" 2
  88:main.c        **** 
  89:main.c        ****   // ------USB SETUP ----------------    
  90:main.c        **** 
  91:main.c        ****   USBUART_Start(0, USBUART_5V_OPERATION);
 318              		.loc 1 91 0
 319              		.thumb
 320              		.syntax unified
 321 0008 0121     		movs	r1, #1
 322 000a 0020     		movs	r0, #0
 323 000c FFF7FEFF 		bl	USBUART_Start
  92:main.c        ****   UART_Start();
 324              		.loc 1 92 0
 325 0010 FFF7FEFF 		bl	UART_Start
  93:main.c        **** 
  94:main.c        ****   QuadDec_M1_Start();
 326              		.loc 1 94 0
 327 0014 FFF7FEFF 		bl	QuadDec_M1_Start
  95:main.c        ****   QuadDec_M2_Start();
 328              		.loc 1 95 0
 329 0018 FFF7FEFF 		bl	QuadDec_M2_Start
  96:main.c        **** 
  97:main.c        ****   RF_BT_SELECT_Write(1);
 330              		.loc 1 97 0
 331 001c 0120     		movs	r0, #1
 332 001e FFF7FEFF 		bl	RF_BT_SELECT_Write
  98:main.c        **** 
  99:main.c        ****   ADC_Start();
 333              		.loc 1 99 0
 334 0022 FFF7FEFF 		bl	ADC_Start
 100:main.c        ****   ADC_StartConvert();
 335              		.loc 1 100 0
 336 0026 FFF7FEFF 		bl	ADC_StartConvert
 101:main.c        ****   eoc_StartEx(eoc);
 337              		.loc 1 101 0
 338 002a A748     		ldr	r0, .L50
 339 002c FFF7FEFF 		bl	eoc_StartEx
 102:main.c        **** 
 103:main.c        ****   initMotors();
 340              		.loc 1 103 0
 341 0030 FFF7FEFF 		bl	initMotors
 104:main.c        **** 
 105:main.c        ****   stop();
 342              		.loc 1 105 0
 343 0034 FFF7FEFF 		bl	stop
 106:main.c        **** 
 107:main.c        ****   isr_TS_StartEx(MyISR);
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 9


 344              		.loc 1 107 0
 345 0038 A448     		ldr	r0, .L50+4
 346 003a FFF7FEFF 		bl	isr_TS_StartEx
 108:main.c        ****   Timer_TS_Start();
 347              		.loc 1 108 0
 348 003e FFF7FEFF 		bl	Timer_TS_Start
 349              	.L49:
 109:main.c        **** 
 110:main.c        ****   for (;;) {
 111:main.c        **** 
 112:main.c        ****     if (distanceTravelled > MOVE_DISTANCE) {
 350              		.loc 1 112 0
 351 0042 A34B     		ldr	r3, .L50+8
 352 0044 1B68     		ldr	r3, [r3]
 353 0046 A34A     		ldr	r2, .L50+12
 354 0048 9342     		cmp	r3, r2
 355 004a 02DD     		ble	.L8
 113:main.c        ****       stop();
 356              		.loc 1 113 0
 357 004c FFF7FEFF 		bl	stop
 358 0050 F7E7     		b	.L49
 359              	.L8:
 114:main.c        ****     } else {
 115:main.c        ****       LED_PIN_4_Write(0);
 360              		.loc 1 115 0
 361 0052 0020     		movs	r0, #0
 362 0054 FFF7FEFF 		bl	LED_PIN_4_Write
 116:main.c        ****       if (flag == 1) {
 363              		.loc 1 116 0
 364 0058 9F4B     		ldr	r3, .L50+16
 365 005a 1B68     		ldr	r3, [r3]
 366 005c 012B     		cmp	r3, #1
 367 005e 40F0AD81 		bne	.L10
 117:main.c        **** 
 118:main.c        ****         ADC_IRQ_Disable();
 368              		.loc 1 118 0
 369 0062 FFF7FEFF 		bl	ADC_IRQ_Disable
 119:main.c        ****         valuesLeftIntersection[count] = ADC_GetResult16(0);
 370              		.loc 1 119 0
 371 0066 9D4B     		ldr	r3, .L50+20
 372 0068 1C68     		ldr	r4, [r3]
 373 006a 0020     		movs	r0, #0
 374 006c FFF7FEFF 		bl	ADC_GetResult16
 375 0070 0346     		mov	r3, r0
 376 0072 1A46     		mov	r2, r3
 377 0074 9A4B     		ldr	r3, .L50+24
 378 0076 43F82420 		str	r2, [r3, r4, lsl #2]
 120:main.c        ****         valuesLeftLine[count] = ADC_GetResult16(1);
 379              		.loc 1 120 0
 380 007a 984B     		ldr	r3, .L50+20
 381 007c 1C68     		ldr	r4, [r3]
 382 007e 0120     		movs	r0, #1
 383 0080 FFF7FEFF 		bl	ADC_GetResult16
 384 0084 0346     		mov	r3, r0
 385 0086 1A46     		mov	r2, r3
 386 0088 964B     		ldr	r3, .L50+28
 387 008a 43F82420 		str	r2, [r3, r4, lsl #2]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 10


 121:main.c        ****         valuesMiddleLine[count] = ADC_GetResult16(2);
 388              		.loc 1 121 0
 389 008e 934B     		ldr	r3, .L50+20
 390 0090 1C68     		ldr	r4, [r3]
 391 0092 0220     		movs	r0, #2
 392 0094 FFF7FEFF 		bl	ADC_GetResult16
 393 0098 0346     		mov	r3, r0
 394 009a 1A46     		mov	r2, r3
 395 009c 924B     		ldr	r3, .L50+32
 396 009e 43F82420 		str	r2, [r3, r4, lsl #2]
 122:main.c        ****         valuesTurnComplete[count] = ADC_GetResult16(3);
 397              		.loc 1 122 0
 398 00a2 8E4B     		ldr	r3, .L50+20
 399 00a4 1C68     		ldr	r4, [r3]
 400 00a6 0320     		movs	r0, #3
 401 00a8 FFF7FEFF 		bl	ADC_GetResult16
 402 00ac 0346     		mov	r3, r0
 403 00ae 1A46     		mov	r2, r3
 404 00b0 8E4B     		ldr	r3, .L50+36
 405 00b2 43F82420 		str	r2, [r3, r4, lsl #2]
 123:main.c        ****         valuesRightLine[count] = ADC_GetResult16(4);
 406              		.loc 1 123 0
 407 00b6 894B     		ldr	r3, .L50+20
 408 00b8 1C68     		ldr	r4, [r3]
 409 00ba 0420     		movs	r0, #4
 410 00bc FFF7FEFF 		bl	ADC_GetResult16
 411 00c0 0346     		mov	r3, r0
 412 00c2 1A46     		mov	r2, r3
 413 00c4 8A4B     		ldr	r3, .L50+40
 414 00c6 43F82420 		str	r2, [r3, r4, lsl #2]
 124:main.c        ****         valuesRightIntersection[count] = ADC_GetResult16(5);
 415              		.loc 1 124 0
 416 00ca 844B     		ldr	r3, .L50+20
 417 00cc 1C68     		ldr	r4, [r3]
 418 00ce 0520     		movs	r0, #5
 419 00d0 FFF7FEFF 		bl	ADC_GetResult16
 420 00d4 0346     		mov	r3, r0
 421 00d6 1A46     		mov	r2, r3
 422 00d8 864B     		ldr	r3, .L50+44
 423 00da 43F82420 		str	r2, [r3, r4, lsl #2]
 125:main.c        **** 
 126:main.c        ****         count++;
 424              		.loc 1 126 0
 425 00de 7F4B     		ldr	r3, .L50+20
 426 00e0 1B68     		ldr	r3, [r3]
 427 00e2 0133     		adds	r3, r3, #1
 428 00e4 7D4A     		ldr	r2, .L50+20
 429 00e6 1360     		str	r3, [r2]
 127:main.c        ****         if (count == ADC_COUNT) {
 430              		.loc 1 127 0
 431 00e8 7C4B     		ldr	r3, .L50+20
 432 00ea 1B68     		ldr	r3, [r3]
 433 00ec B3F57A7F 		cmp	r3, #1000
 434 00f0 40F05F81 		bne	.L11
 435              	.LBB2:
 128:main.c        ****           LED_PIN_4_Write(1);
 436              		.loc 1 128 0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 11


 437 00f4 0120     		movs	r0, #1
 438 00f6 FFF7FEFF 		bl	LED_PIN_4_Write
 129:main.c        ****           count = 0;
 439              		.loc 1 129 0
 440 00fa 784B     		ldr	r3, .L50+20
 441 00fc 0022     		movs	r2, #0
 442 00fe 1A60     		str	r2, [r3]
 130:main.c        ****           int highCountLeftIntersection = 0;
 443              		.loc 1 130 0
 444 0100 0023     		movs	r3, #0
 445 0102 FB66     		str	r3, [r7, #108]
 131:main.c        ****           int highCountLeftLine = 0;
 446              		.loc 1 131 0
 447 0104 0023     		movs	r3, #0
 448 0106 BB66     		str	r3, [r7, #104]
 132:main.c        ****           int highCountMiddleLine = 0;
 449              		.loc 1 132 0
 450 0108 0023     		movs	r3, #0
 451 010a 7B66     		str	r3, [r7, #100]
 133:main.c        ****           int highCountTurnComplete = 0;
 452              		.loc 1 133 0
 453 010c 0023     		movs	r3, #0
 454 010e 3B66     		str	r3, [r7, #96]
 134:main.c        ****           int highCountRightLine = 0;
 455              		.loc 1 134 0
 456 0110 0023     		movs	r3, #0
 457 0112 FB65     		str	r3, [r7, #92]
 135:main.c        ****           int highCountRightIntersection = 0;
 458              		.loc 1 135 0
 459 0114 0023     		movs	r3, #0
 460 0116 BB65     		str	r3, [r7, #88]
 461              	.LBB3:
 136:main.c        ****           for (int i = 0; i < ADC_COUNT; i++) {
 462              		.loc 1 136 0
 463 0118 0023     		movs	r3, #0
 464 011a 7B65     		str	r3, [r7, #84]
 465 011c 44E0     		b	.L12
 466              	.L19:
 137:main.c        **** 
 138:main.c        ****             if (valuesLeftIntersection[i] > 3000) {
 467              		.loc 1 138 0
 468 011e 704A     		ldr	r2, .L50+24
 469 0120 7B6D     		ldr	r3, [r7, #84]
 470 0122 52F82330 		ldr	r3, [r2, r3, lsl #2]
 471 0126 40F6B832 		movw	r2, #3000
 472 012a 9342     		cmp	r3, r2
 473 012c 02DD     		ble	.L13
 139:main.c        ****               highCountLeftIntersection++;
 474              		.loc 1 139 0
 475 012e FB6E     		ldr	r3, [r7, #108]
 476 0130 0133     		adds	r3, r3, #1
 477 0132 FB66     		str	r3, [r7, #108]
 478              	.L13:
 140:main.c        **** 
 141:main.c        ****             }
 142:main.c        **** 
 143:main.c        ****             if (valuesLeftLine[i] > 3000) {
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 12


 479              		.loc 1 143 0
 480 0134 6B4A     		ldr	r2, .L50+28
 481 0136 7B6D     		ldr	r3, [r7, #84]
 482 0138 52F82330 		ldr	r3, [r2, r3, lsl #2]
 483 013c 40F6B832 		movw	r2, #3000
 484 0140 9342     		cmp	r3, r2
 485 0142 02DD     		ble	.L14
 144:main.c        ****               highCountLeftLine++;
 486              		.loc 1 144 0
 487 0144 BB6E     		ldr	r3, [r7, #104]
 488 0146 0133     		adds	r3, r3, #1
 489 0148 BB66     		str	r3, [r7, #104]
 490              	.L14:
 145:main.c        **** 
 146:main.c        ****             }
 147:main.c        **** 
 148:main.c        ****             if (valuesMiddleLine[i] > 3000) {
 491              		.loc 1 148 0
 492 014a 674A     		ldr	r2, .L50+32
 493 014c 7B6D     		ldr	r3, [r7, #84]
 494 014e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 495 0152 40F6B832 		movw	r2, #3000
 496 0156 9342     		cmp	r3, r2
 497 0158 02DD     		ble	.L15
 149:main.c        ****               highCountMiddleLine++;
 498              		.loc 1 149 0
 499 015a 7B6E     		ldr	r3, [r7, #100]
 500 015c 0133     		adds	r3, r3, #1
 501 015e 7B66     		str	r3, [r7, #100]
 502              	.L15:
 150:main.c        **** 
 151:main.c        ****             }
 152:main.c        **** 
 153:main.c        ****             if (valuesTurnComplete[i] > 3000) {
 503              		.loc 1 153 0
 504 0160 624A     		ldr	r2, .L50+36
 505 0162 7B6D     		ldr	r3, [r7, #84]
 506 0164 52F82330 		ldr	r3, [r2, r3, lsl #2]
 507 0168 40F6B832 		movw	r2, #3000
 508 016c 9342     		cmp	r3, r2
 509 016e 02DD     		ble	.L16
 154:main.c        ****               highCountTurnComplete++;
 510              		.loc 1 154 0
 511 0170 3B6E     		ldr	r3, [r7, #96]
 512 0172 0133     		adds	r3, r3, #1
 513 0174 3B66     		str	r3, [r7, #96]
 514              	.L16:
 155:main.c        **** 
 156:main.c        ****             }
 157:main.c        **** 
 158:main.c        ****             if (valuesRightLine[i] > 3000) {
 515              		.loc 1 158 0
 516 0176 5E4A     		ldr	r2, .L50+40
 517 0178 7B6D     		ldr	r3, [r7, #84]
 518 017a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 519 017e 40F6B832 		movw	r2, #3000
 520 0182 9342     		cmp	r3, r2
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 13


 521 0184 02DD     		ble	.L17
 159:main.c        ****               highCountRightLine++;
 522              		.loc 1 159 0
 523 0186 FB6D     		ldr	r3, [r7, #92]
 524 0188 0133     		adds	r3, r3, #1
 525 018a FB65     		str	r3, [r7, #92]
 526              	.L17:
 160:main.c        **** 
 161:main.c        ****             }
 162:main.c        **** 
 163:main.c        ****             if (valuesRightIntersection[i] >= 3000) {
 527              		.loc 1 163 0
 528 018c 594A     		ldr	r2, .L50+44
 529 018e 7B6D     		ldr	r3, [r7, #84]
 530 0190 52F82330 		ldr	r3, [r2, r3, lsl #2]
 531 0194 40F6B732 		movw	r2, #2999
 532 0198 9342     		cmp	r3, r2
 533 019a 02DD     		ble	.L18
 164:main.c        ****               highCountRightIntersection++;
 534              		.loc 1 164 0
 535 019c BB6D     		ldr	r3, [r7, #88]
 536 019e 0133     		adds	r3, r3, #1
 537 01a0 BB65     		str	r3, [r7, #88]
 538              	.L18:
 136:main.c        **** 
 539              		.loc 1 136 0 discriminator 2
 540 01a2 7B6D     		ldr	r3, [r7, #84]
 541 01a4 0133     		adds	r3, r3, #1
 542 01a6 7B65     		str	r3, [r7, #84]
 543              	.L12:
 136:main.c        **** 
 544              		.loc 1 136 0 is_stmt 0 discriminator 1
 545 01a8 7B6D     		ldr	r3, [r7, #84]
 546 01aa B3F57A7F 		cmp	r3, #1000
 547 01ae B6DB     		blt	.L19
 548              	.LBE3:
 165:main.c        **** 
 166:main.c        ****             }
 167:main.c        **** 
 168:main.c        ****           }
 169:main.c        **** 
 170:main.c        ****           if (L_LINE_BLACK) {
 549              		.loc 1 170 0 is_stmt 1
 550 01b0 BB6E     		ldr	r3, [r7, #104]
 551 01b2 952B     		cmp	r3, #149
 552 01b4 03DC     		bgt	.L20
 171:main.c        ****             LED_PIN_1_Write(0);
 553              		.loc 1 171 0
 554 01b6 0020     		movs	r0, #0
 555 01b8 FFF7FEFF 		bl	LED_PIN_1_Write
 556 01bc 02E0     		b	.L21
 557              	.L20:
 172:main.c        ****           } else {
 173:main.c        ****             LED_PIN_1_Write(1);
 558              		.loc 1 173 0
 559 01be 0120     		movs	r0, #1
 560 01c0 FFF7FEFF 		bl	LED_PIN_1_Write
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 14


 561              	.L21:
 174:main.c        ****           }
 175:main.c        **** 
 176:main.c        ****           if (M_LINE_BLACK) {
 562              		.loc 1 176 0
 563 01c4 7B6E     		ldr	r3, [r7, #100]
 564 01c6 952B     		cmp	r3, #149
 565 01c8 03DC     		bgt	.L22
 177:main.c        ****             LED_PIN_2_Write(0);
 566              		.loc 1 177 0
 567 01ca 0020     		movs	r0, #0
 568 01cc FFF7FEFF 		bl	LED_PIN_2_Write
 569 01d0 02E0     		b	.L23
 570              	.L22:
 178:main.c        ****           } else {
 179:main.c        ****             LED_PIN_2_Write(1);
 571              		.loc 1 179 0
 572 01d2 0120     		movs	r0, #1
 573 01d4 FFF7FEFF 		bl	LED_PIN_2_Write
 574              	.L23:
 180:main.c        ****           }
 181:main.c        **** 
 182:main.c        ****           if (R_LINE_BLACK) {
 575              		.loc 1 182 0
 576 01d8 FB6D     		ldr	r3, [r7, #92]
 577 01da 952B     		cmp	r3, #149
 578 01dc 03DC     		bgt	.L24
 183:main.c        ****             LED_PIN_3_Write(0);
 579              		.loc 1 183 0
 580 01de 0020     		movs	r0, #0
 581 01e0 FFF7FEFF 		bl	LED_PIN_3_Write
 582 01e4 02E0     		b	.L25
 583              	.L24:
 184:main.c        ****           } else {
 185:main.c        ****             LED_PIN_3_Write(1);
 584              		.loc 1 185 0
 585 01e6 0120     		movs	r0, #1
 586 01e8 FFF7FEFF 		bl	LED_PIN_3_Write
 587              	.L25:
 186:main.c        ****           }
 187:main.c        ****         
 188:main.c        ****         if (turningCount > 4 && turningCount <= 9) {
 588              		.loc 1 188 0
 589 01ec 424B     		ldr	r3, .L50+48
 590 01ee 1B68     		ldr	r3, [r3]
 591 01f0 042B     		cmp	r3, #4
 592 01f2 12DD     		ble	.L26
 593              		.loc 1 188 0 is_stmt 0 discriminator 1
 594 01f4 404B     		ldr	r3, .L50+48
 595 01f6 1B68     		ldr	r3, [r3]
 596 01f8 092B     		cmp	r3, #9
 597 01fa 0EDC     		bgt	.L26
 189:main.c        ****             //Phase 2 of turning count
 190:main.c        ****             turningCount++;
 598              		.loc 1 190 0 is_stmt 1
 599 01fc 3E4B     		ldr	r3, .L50+48
 600 01fe 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 15


 601 0200 0133     		adds	r3, r3, #1
 602 0202 3D4A     		ldr	r2, .L50+48
 603 0204 1360     		str	r3, [r2]
 191:main.c        ****             driveForward(distancePerSecondL, distancePerSecondR, TARGET_SPEED);
 604              		.loc 1 191 0
 605 0206 3D4B     		ldr	r3, .L50+52
 606 0208 1868     		ldr	r0, [r3]
 607 020a 3D4B     		ldr	r3, .L50+56
 608 020c 1968     		ldr	r1, [r3]
 609 020e 3D4B     		ldr	r3, .L50+60
 610 0210 1B68     		ldr	r3, [r3]
 611 0212 1A46     		mov	r2, r3
 612 0214 FFF7FEFF 		bl	driveForward
 613 0218 C1E0     		b	.L27
 614              	.L26:
 192:main.c        ****         } else if (restoring > 3 && restoring <= 5) {
 615              		.loc 1 192 0
 616 021a 3B4B     		ldr	r3, .L50+64
 617 021c 1B68     		ldr	r3, [r3]
 618 021e 032B     		cmp	r3, #3
 619 0220 12DD     		ble	.L28
 620              		.loc 1 192 0 is_stmt 0 discriminator 1
 621 0222 394B     		ldr	r3, .L50+64
 622 0224 1B68     		ldr	r3, [r3]
 623 0226 052B     		cmp	r3, #5
 624 0228 0EDC     		bgt	.L28
 193:main.c        ****             //Phase 2 of restoring
 194:main.c        ****             if (lastAdjustDirection == 0) {
 625              		.loc 1 194 0 is_stmt 1
 626 022a 384B     		ldr	r3, .L50+68
 627 022c 1B68     		ldr	r3, [r3]
 628 022e 002B     		cmp	r3, #0
 629 0230 02D1     		bne	.L29
 195:main.c        ****                 turnLeft();
 630              		.loc 1 195 0
 631 0232 FFF7FEFF 		bl	turnLeft
 632 0236 01E0     		b	.L30
 633              	.L29:
 196:main.c        ****             } else {
 197:main.c        ****                 turnRight();
 634              		.loc 1 197 0
 635 0238 FFF7FEFF 		bl	turnRight
 636              	.L30:
 198:main.c        ****             }
 199:main.c        ****             restoring++;
 637              		.loc 1 199 0
 638 023c 324B     		ldr	r3, .L50+64
 639 023e 1B68     		ldr	r3, [r3]
 640 0240 0133     		adds	r3, r3, #1
 641 0242 314A     		ldr	r2, .L50+64
 642 0244 1360     		str	r3, [r2]
 643 0246 AAE0     		b	.L27
 644              	.L28:
 200:main.c        ****         } else if (turningCount > 9 && restoring > 5) {
 645              		.loc 1 200 0
 646 0248 2B4B     		ldr	r3, .L50+48
 647 024a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 16


 648 024c 092B     		cmp	r3, #9
 649 024e 40F38980 		ble	.L31
 650              		.loc 1 200 0 is_stmt 0 discriminator 1
 651 0252 2D4B     		ldr	r3, .L50+64
 652 0254 1B68     		ldr	r3, [r3]
 653 0256 052B     		cmp	r3, #5
 654 0258 40F38480 		ble	.L31
 201:main.c        ****             // normal opperation
 202:main.c        ****             if (L_INT_BLACK && (M_LINE_BLACK || L_LINE_BLACK)) {
 655              		.loc 1 202 0 is_stmt 1
 656 025c FB6E     		ldr	r3, [r7, #108]
 657 025e 952B     		cmp	r3, #149
 658 0260 0BDC     		bgt	.L32
 659              		.loc 1 202 0 is_stmt 0 discriminator 1
 660 0262 7B6E     		ldr	r3, [r7, #100]
 661 0264 952B     		cmp	r3, #149
 662 0266 02DD     		ble	.L33
 663              		.loc 1 202 0 discriminator 2
 664 0268 BB6E     		ldr	r3, [r7, #104]
 665 026a 952B     		cmp	r3, #149
 666 026c 05DC     		bgt	.L32
 667              	.L33:
 203:main.c        ****               turnLeft();
 668              		.loc 1 203 0 is_stmt 1
 669 026e FFF7FEFF 		bl	turnLeft
 204:main.c        ****               turningCount = 0;
 670              		.loc 1 204 0
 671 0272 214B     		ldr	r3, .L50+48
 672 0274 0022     		movs	r2, #0
 673 0276 1A60     		str	r2, [r3]
 674 0278 73E0     		b	.L34
 675              	.L32:
 205:main.c        ****             } else if (R_INT_BLACK && (M_LINE_BLACK || R_LINE_BLACK)) {
 676              		.loc 1 205 0
 677 027a BB6D     		ldr	r3, [r7, #88]
 678 027c 952B     		cmp	r3, #149
 679 027e 0BDC     		bgt	.L35
 680              		.loc 1 205 0 is_stmt 0 discriminator 1
 681 0280 7B6E     		ldr	r3, [r7, #100]
 682 0282 952B     		cmp	r3, #149
 683 0284 02DD     		ble	.L36
 684              		.loc 1 205 0 discriminator 2
 685 0286 FB6D     		ldr	r3, [r7, #92]
 686 0288 952B     		cmp	r3, #149
 687 028a 05DC     		bgt	.L35
 688              	.L36:
 206:main.c        ****               turnRight();
 689              		.loc 1 206 0 is_stmt 1
 690 028c FFF7FEFF 		bl	turnRight
 207:main.c        ****               turningCount = 0;
 691              		.loc 1 207 0
 692 0290 194B     		ldr	r3, .L50+48
 693 0292 0022     		movs	r2, #0
 694 0294 1A60     		str	r2, [r3]
 695 0296 64E0     		b	.L34
 696              	.L35:
 208:main.c        ****             } else if (L_LINE_BLACK) {
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 17


 697              		.loc 1 208 0
 698 0298 BB6E     		ldr	r3, [r7, #104]
 699 029a 952B     		cmp	r3, #149
 700 029c 08DC     		bgt	.L37
 209:main.c        ****               shouldUpdate = 0;
 701              		.loc 1 209 0
 702 029e 1C4B     		ldr	r3, .L50+72
 703 02a0 0022     		movs	r2, #0
 704 02a2 1A60     		str	r2, [r3]
 210:main.c        ****               adjustLeft();
 705              		.loc 1 210 0
 706 02a4 FFF7FEFF 		bl	adjustLeft
 211:main.c        ****               lastAdjustDirection = 0;
 707              		.loc 1 211 0
 708 02a8 184B     		ldr	r3, .L50+68
 709 02aa 0022     		movs	r2, #0
 710 02ac 1A60     		str	r2, [r3]
 202:main.c        ****               turnLeft();
 711              		.loc 1 202 0
 712 02ae 76E0     		b	.L27
 713              	.L37:
 212:main.c        ****             } else if (R_LINE_BLACK) {
 714              		.loc 1 212 0
 715 02b0 FB6D     		ldr	r3, [r7, #92]
 716 02b2 952B     		cmp	r3, #149
 717 02b4 2EDC     		bgt	.L38
 213:main.c        ****               shouldUpdate = 0;
 718              		.loc 1 213 0
 719 02b6 164B     		ldr	r3, .L50+72
 720 02b8 0022     		movs	r2, #0
 721 02ba 1A60     		str	r2, [r3]
 214:main.c        ****               adjustRight();
 722              		.loc 1 214 0
 723 02bc FFF7FEFF 		bl	adjustRight
 215:main.c        ****               lastAdjustDirection = 2;
 724              		.loc 1 215 0
 725 02c0 124B     		ldr	r3, .L50+68
 726 02c2 0222     		movs	r2, #2
 727 02c4 1A60     		str	r2, [r3]
 202:main.c        ****               turnLeft();
 728              		.loc 1 202 0
 729 02c6 6AE0     		b	.L27
 730              	.L51:
 731              		.align	2
 732              	.L50:
 733 02c8 00000000 		.word	eoc
 734 02cc 00000000 		.word	MyISR
 735 02d0 00000000 		.word	distanceTravelled
 736 02d4 FFC99A3B 		.word	999999999
 737 02d8 00000000 		.word	flag
 738 02dc 00000000 		.word	count
 739 02e0 00000000 		.word	valuesLeftIntersection
 740 02e4 00000000 		.word	valuesLeftLine
 741 02e8 00000000 		.word	valuesMiddleLine
 742 02ec 00000000 		.word	valuesTurnComplete
 743 02f0 00000000 		.word	valuesRightLine
 744 02f4 00000000 		.word	valuesRightIntersection
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 18


 745 02f8 00000000 		.word	turningCount
 746 02fc 00000000 		.word	distancePerSecondL
 747 0300 00000000 		.word	distancePerSecondR
 748 0304 00000000 		.word	TARGET_SPEED
 749 0308 00000000 		.word	restoring
 750 030c 00000000 		.word	lastAdjustDirection
 751 0310 00000000 		.word	shouldUpdate
 752              	.L38:
 216:main.c        ****             } else if (M_LINE_BLACK) {
 753              		.loc 1 216 0
 754 0314 7B6E     		ldr	r3, [r7, #100]
 755 0316 952B     		cmp	r3, #149
 756 0318 0CDC     		bgt	.L39
 217:main.c        ****               lastAdjustDirection = 1;
 757              		.loc 1 217 0
 758 031a B14B     		ldr	r3, .L52+8
 759 031c 0122     		movs	r2, #1
 760 031e 1A60     		str	r2, [r3]
 218:main.c        ****               driveForward(distancePerSecondL, distancePerSecondR, TARGET_SPEED);
 761              		.loc 1 218 0
 762 0320 B04B     		ldr	r3, .L52+12
 763 0322 1868     		ldr	r0, [r3]
 764 0324 B04B     		ldr	r3, .L52+16
 765 0326 1968     		ldr	r1, [r3]
 766 0328 B04B     		ldr	r3, .L52+20
 767 032a 1B68     		ldr	r3, [r3]
 768 032c 1A46     		mov	r2, r3
 769 032e FFF7FEFF 		bl	driveForward
 202:main.c        ****               turnLeft();
 770              		.loc 1 202 0
 771 0332 34E0     		b	.L27
 772              	.L39:
 219:main.c        ****             } else {
 220:main.c        ****               shouldUpdate = 0;
 773              		.loc 1 220 0
 774 0334 AE4B     		ldr	r3, .L52+24
 775 0336 0022     		movs	r2, #0
 776 0338 1A60     		str	r2, [r3]
 221:main.c        ****               restoring = 0;
 777              		.loc 1 221 0
 778 033a AE4B     		ldr	r3, .L52+28
 779 033c 0022     		movs	r2, #0
 780 033e 1A60     		str	r2, [r3]
 222:main.c        ****               if (lastAdjustDirection == 0) {
 781              		.loc 1 222 0
 782 0340 A74B     		ldr	r3, .L52+8
 783 0342 1B68     		ldr	r3, [r3]
 784 0344 002B     		cmp	r3, #0
 785 0346 02D1     		bne	.L40
 223:main.c        ****                 restoreLeft();
 786              		.loc 1 223 0
 787 0348 FFF7FEFF 		bl	restoreLeft
 202:main.c        ****               turnLeft();
 788              		.loc 1 202 0
 789 034c 27E0     		b	.L27
 790              	.L40:
 224:main.c        ****               } else if (lastAdjustDirection == 1) {
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 19


 791              		.loc 1 224 0
 792 034e A44B     		ldr	r3, .L52+8
 793 0350 1B68     		ldr	r3, [r3]
 794 0352 012B     		cmp	r3, #1
 795 0354 02D1     		bne	.L41
 225:main.c        ****                 stop();
 796              		.loc 1 225 0
 797 0356 FFF7FEFF 		bl	stop
 202:main.c        ****               turnLeft();
 798              		.loc 1 202 0
 799 035a 20E0     		b	.L27
 800              	.L41:
 226:main.c        ****               } else {
 227:main.c        ****                 restoreRight();
 801              		.loc 1 227 0
 802 035c FFF7FEFF 		bl	restoreRight
 202:main.c        ****               turnLeft();
 803              		.loc 1 202 0
 804 0360 1DE0     		b	.L27
 805              	.L34:
 806 0362 1CE0     		b	.L27
 807              	.L31:
 228:main.c        ****               }
 229:main.c        ****             }
 230:main.c        ****           } else if (turningCount <= 4){
 808              		.loc 1 230 0
 809 0364 A44B     		ldr	r3, .L52+32
 810 0366 1B68     		ldr	r3, [r3]
 811 0368 042B     		cmp	r3, #4
 812 036a 05DC     		bgt	.L42
 231:main.c        ****             //phase 1 of turning
 232:main.c        ****             turningCount++;
 813              		.loc 1 232 0
 814 036c A24B     		ldr	r3, .L52+32
 815 036e 1B68     		ldr	r3, [r3]
 816 0370 0133     		adds	r3, r3, #1
 817 0372 A14A     		ldr	r2, .L52+32
 818 0374 1360     		str	r3, [r2]
 819 0376 12E0     		b	.L27
 820              	.L42:
 233:main.c        ****           } else {
 234:main.c        ****             //phase 1 of restoring
 235:main.c        ****             restoring++;
 821              		.loc 1 235 0
 822 0378 9E4B     		ldr	r3, .L52+28
 823 037a 1B68     		ldr	r3, [r3]
 824 037c 0133     		adds	r3, r3, #1
 825 037e 9D4A     		ldr	r2, .L52+28
 826 0380 1360     		str	r3, [r2]
 236:main.c        ****             if(M_LINE_BLACK || R_LINE_BLACK || L_LINE_BLACK || TC_BLACK) {
 827              		.loc 1 236 0
 828 0382 7B6E     		ldr	r3, [r7, #100]
 829 0384 952B     		cmp	r3, #149
 830 0386 08DD     		ble	.L43
 831              		.loc 1 236 0 is_stmt 0 discriminator 1
 832 0388 FB6D     		ldr	r3, [r7, #92]
 833 038a 952B     		cmp	r3, #149
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 20


 834 038c 05DD     		ble	.L43
 835              		.loc 1 236 0 discriminator 2
 836 038e BB6E     		ldr	r3, [r7, #104]
 837 0390 952B     		cmp	r3, #149
 838 0392 02DD     		ble	.L43
 839              		.loc 1 236 0 discriminator 3
 840 0394 3B6E     		ldr	r3, [r7, #96]
 841 0396 952B     		cmp	r3, #149
 842 0398 01DC     		bgt	.L27
 843              	.L43:
 237:main.c        ****                 stop();
 844              		.loc 1 237 0 is_stmt 1
 845 039a FFF7FEFF 		bl	stop
 846              	.L27:
 238:main.c        ****             }
 239:main.c        ****           }
 240:main.c        **** 
 241:main.c        ****           printSensorDebug(highCountLeftIntersection, highCountLeftLine, highCountMiddleLine, highC
 847              		.loc 1 241 0
 848 039e 3B6E     		ldr	r3, [r7, #96]
 849 03a0 0193     		str	r3, [sp, #4]
 850 03a2 BB6D     		ldr	r3, [r7, #88]
 851 03a4 0093     		str	r3, [sp]
 852 03a6 FB6D     		ldr	r3, [r7, #92]
 853 03a8 7A6E     		ldr	r2, [r7, #100]
 854 03aa B96E     		ldr	r1, [r7, #104]
 855 03ac F86E     		ldr	r0, [r7, #108]
 856 03ae FFF7FEFF 		bl	printSensorDebug
 857              	.L11:
 858              	.LBE2:
 242:main.c        **** 
 243:main.c        ****         }
 244:main.c        **** 
 245:main.c        ****         flag = 0;
 859              		.loc 1 245 0
 860 03b2 924B     		ldr	r3, .L52+36
 861 03b4 0022     		movs	r2, #0
 862 03b6 1A60     		str	r2, [r3]
 246:main.c        ****         ADC_IRQ_Enable();
 863              		.loc 1 246 0
 864 03b8 FFF7FEFF 		bl	ADC_IRQ_Enable
 865              	.L10:
 247:main.c        ****       }
 248:main.c        ****       //    
 249:main.c        ****       if (motorFlag == 1) { // timer has counted 1s 
 866              		.loc 1 249 0
 867 03bc 904B     		ldr	r3, .L52+40
 868 03be 1B68     		ldr	r3, [r3]
 869 03c0 012B     		cmp	r3, #1
 870 03c2 7FF43EAE 		bne	.L49
 250:main.c        **** 
 251:main.c        ****         //        char distanceTravelledChar[8];
 252:main.c        ****         //        itoa(distanceTravelled, distanceTravelledChar,10);
 253:main.c        ****         //        usbPutString(distanceTravelledChar);
 254:main.c        ****         //        usbPutString("\r\n");
 255:main.c        **** 
 256:main.c        ****         isr_TS_Disable(); // disabling the interrupts
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 21


 871              		.loc 1 256 0
 872 03c6 FFF7FEFF 		bl	isr_TS_Disable
 257:main.c        ****         if (step == 0) { //takes the first measurement, sets steps to 2, the next time the timer go
 873              		.loc 1 257 0
 874 03ca 8E4B     		ldr	r3, .L52+44
 875 03cc 1B68     		ldr	r3, [r3]
 876 03ce 002B     		cmp	r3, #0
 877 03d0 11D1     		bne	.L44
 258:main.c        ****           v1L = QuadDec_M1_GetCounter(); // first measurement taken - LEFT
 878              		.loc 1 258 0
 879 03d2 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 880 03d6 0346     		mov	r3, r0
 881 03d8 1A46     		mov	r2, r3
 882 03da 8B4B     		ldr	r3, .L52+48
 883 03dc 1A60     		str	r2, [r3]
 259:main.c        ****           v1R = QuadDec_M2_GetCounter(); // first measurement taken - RIGHT
 884              		.loc 1 259 0
 885 03de FFF7FEFF 		bl	QuadDec_M2_GetCounter
 886 03e2 0346     		mov	r3, r0
 887 03e4 1A46     		mov	r2, r3
 888 03e6 894B     		ldr	r3, .L52+52
 889 03e8 1A60     		str	r2, [r3]
 260:main.c        ****           step++;
 890              		.loc 1 260 0
 891 03ea 864B     		ldr	r3, .L52+44
 892 03ec 1B68     		ldr	r3, [r3]
 893 03ee 0133     		adds	r3, r3, #1
 894 03f0 844A     		ldr	r2, .L52+44
 895 03f2 1360     		str	r3, [r2]
 896 03f4 E9E0     		b	.L45
 897              	.L44:
 898              	.LBB4:
 261:main.c        ****           //LED_PIN_4_Write(1);
 262:main.c        ****         } else { // second measure and sending out to UART
 263:main.c        ****           step = 0;
 899              		.loc 1 263 0
 900 03f6 834B     		ldr	r3, .L52+44
 901 03f8 0022     		movs	r2, #0
 902 03fa 1A60     		str	r2, [r3]
 264:main.c        ****           //LED_PIN_4_Write(0);
 265:main.c        ****           // Allocating space for debugging and speed values
 266:main.c        ****           char numRotationsLText[24];
 267:main.c        ****           char numRotationsRText[24];
 268:main.c        **** 
 269:main.c        ****           v2L = QuadDec_M1_GetCounter(); // second measurement taken - LEFT
 903              		.loc 1 269 0
 904 03fc FFF7FEFF 		bl	QuadDec_M1_GetCounter
 905 0400 0346     		mov	r3, r0
 906 0402 1A46     		mov	r2, r3
 907 0404 824B     		ldr	r3, .L52+56
 908 0406 1A60     		str	r2, [r3]
 270:main.c        ****           v2R = QuadDec_M2_GetCounter(); // second measurement taken - RIGHT
 909              		.loc 1 270 0
 910 0408 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 911 040c 0346     		mov	r3, r0
 912 040e 1A46     		mov	r2, r3
 913 0410 804B     		ldr	r3, .L52+60
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 22


 914 0412 1A60     		str	r2, [r3]
 271:main.c        **** 
 272:main.c        ****           numRotationsL = (v2L - v1L);
 915              		.loc 1 272 0
 916 0414 7E4B     		ldr	r3, .L52+56
 917 0416 1A68     		ldr	r2, [r3]
 918 0418 7B4B     		ldr	r3, .L52+48
 919 041a 1B68     		ldr	r3, [r3]
 920 041c D31A     		subs	r3, r2, r3
 921 041e 7E4A     		ldr	r2, .L52+64
 922 0420 1360     		str	r3, [r2]
 273:main.c        ****           numRotationsR = (v2R - v1R);
 923              		.loc 1 273 0
 924 0422 7C4B     		ldr	r3, .L52+60
 925 0424 1A68     		ldr	r2, [r3]
 926 0426 794B     		ldr	r3, .L52+52
 927 0428 1B68     		ldr	r3, [r3]
 928 042a D31A     		subs	r3, r2, r3
 929 042c 7B4A     		ldr	r2, .L52+68
 930 042e 1360     		str	r3, [r2]
 274:main.c        **** 
 275:main.c        ****           itoa(v2L, numRotationsLText, 10);
 931              		.loc 1 275 0
 932 0430 774B     		ldr	r3, .L52+56
 933 0432 1B68     		ldr	r3, [r3]
 934 0434 07F13C01 		add	r1, r7, #60
 935 0438 0A22     		movs	r2, #10
 936 043a 1846     		mov	r0, r3
 937 043c FFF7FEFF 		bl	itoa
 276:main.c        ****           itoa(v2L, numRotationsRText, 10);
 938              		.loc 1 276 0
 939 0440 734B     		ldr	r3, .L52+56
 940 0442 1B68     		ldr	r3, [r3]
 941 0444 07F12401 		add	r1, r7, #36
 942 0448 0A22     		movs	r2, #10
 943 044a 1846     		mov	r0, r3
 944 044c FFF7FEFF 		bl	itoa
 277:main.c        ****             
 278:main.c        ****             if (numRotationsL > numRotationsR) {
 945              		.loc 1 278 0
 946 0450 714B     		ldr	r3, .L52+64
 947 0452 1A68     		ldr	r2, [r3]
 948 0454 714B     		ldr	r3, .L52+68
 949 0456 1B68     		ldr	r3, [r3]
 950 0458 9A42     		cmp	r2, r3
 951 045a 0BDD     		ble	.L46
 279:main.c        ****                 dotsTravelled = abs(numRotationsL) + dotsTravelled;
 952              		.loc 1 279 0
 953 045c 6E4B     		ldr	r3, .L52+64
 954 045e 1B68     		ldr	r3, [r3]
 955 0460 83EAE372 		eor	r2, r3, r3, asr #31
 956 0464 A2EBE372 		sub	r2, r2, r3, asr #31
 957 0468 6D4B     		ldr	r3, .L52+72
 958 046a 1B68     		ldr	r3, [r3]
 959 046c 1344     		add	r3, r3, r2
 960 046e 6C4A     		ldr	r2, .L52+72
 961 0470 1360     		str	r3, [r2]
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 23


 962 0472 0AE0     		b	.L47
 963              	.L46:
 280:main.c        ****             } else {
 281:main.c        ****                 dotsTravelled = abs(numRotationsR) + dotsTravelled;
 964              		.loc 1 281 0
 965 0474 694B     		ldr	r3, .L52+68
 966 0476 1B68     		ldr	r3, [r3]
 967 0478 83EAE372 		eor	r2, r3, r3, asr #31
 968 047c A2EBE372 		sub	r2, r2, r3, asr #31
 969 0480 674B     		ldr	r3, .L52+72
 970 0482 1B68     		ldr	r3, [r3]
 971 0484 1344     		add	r3, r3, r2
 972 0486 664A     		ldr	r2, .L52+72
 973 0488 1360     		str	r3, [r2]
 974              	.L47:
 282:main.c        ****             }
 283:main.c        ****           
 284:main.c        **** 
 285:main.c        ****           distanceTravelled = dotsTravelled * 0.358 * (float)3/5;
 975              		.loc 1 285 0
 976 048a 654B     		ldr	r3, .L52+72
 977 048c 1B68     		ldr	r3, [r3]
 978 048e 1846     		mov	r0, r3
 979 0490 FFF7FEFF 		bl	__aeabi_i2d
 980 0494 50A3     		adr	r3, .L52
 981 0496 D3E90023 		ldrd	r2, [r3]
 982 049a FFF7FEFF 		bl	__aeabi_dmul
 983 049e 0346     		mov	r3, r0
 984 04a0 0C46     		mov	r4, r1
 985 04a2 1846     		mov	r0, r3
 986 04a4 2146     		mov	r1, r4
 987 04a6 4FF00002 		mov	r2, #0
 988 04aa 5E4B     		ldr	r3, .L52+76
 989 04ac FFF7FEFF 		bl	__aeabi_dmul
 990 04b0 0346     		mov	r3, r0
 991 04b2 0C46     		mov	r4, r1
 992 04b4 1846     		mov	r0, r3
 993 04b6 2146     		mov	r1, r4
 994 04b8 4FF00002 		mov	r2, #0
 995 04bc 5A4B     		ldr	r3, .L52+80
 996 04be FFF7FEFF 		bl	__aeabi_ddiv
 997 04c2 0346     		mov	r3, r0
 998 04c4 0C46     		mov	r4, r1
 999 04c6 1846     		mov	r0, r3
 1000 04c8 2146     		mov	r1, r4
 1001 04ca FFF7FEFF 		bl	__aeabi_d2iz
 1002 04ce 0246     		mov	r2, r0
 1003 04d0 564B     		ldr	r3, .L52+84
 1004 04d2 1A60     		str	r2, [r3]
 286:main.c        ****           distancePerSecondL = (abs(numRotationsL) * 5) * 0.358 / 3; // averaged the shafts because
 1005              		.loc 1 286 0
 1006 04d4 504B     		ldr	r3, .L52+64
 1007 04d6 1B68     		ldr	r3, [r3]
 1008 04d8 83EAE372 		eor	r2, r3, r3, asr #31
 1009 04dc A2EBE372 		sub	r2, r2, r3, asr #31
 1010 04e0 1346     		mov	r3, r2
 1011 04e2 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 24


 1012 04e4 1344     		add	r3, r3, r2
 1013 04e6 1846     		mov	r0, r3
 1014 04e8 FFF7FEFF 		bl	__aeabi_i2d
 1015 04ec 3AA3     		adr	r3, .L52
 1016 04ee D3E90023 		ldrd	r2, [r3]
 1017 04f2 FFF7FEFF 		bl	__aeabi_dmul
 1018 04f6 0346     		mov	r3, r0
 1019 04f8 0C46     		mov	r4, r1
 1020 04fa 1846     		mov	r0, r3
 1021 04fc 2146     		mov	r1, r4
 1022 04fe 4FF00002 		mov	r2, #0
 1023 0502 484B     		ldr	r3, .L52+76
 1024 0504 FFF7FEFF 		bl	__aeabi_ddiv
 1025 0508 0346     		mov	r3, r0
 1026 050a 0C46     		mov	r4, r1
 1027 050c 1846     		mov	r0, r3
 1028 050e 2146     		mov	r1, r4
 1029 0510 FFF7FEFF 		bl	__aeabi_d2iz
 1030 0514 0246     		mov	r2, r0
 1031 0516 334B     		ldr	r3, .L52+12
 1032 0518 1A60     		str	r2, [r3]
 287:main.c        ****           distancePerSecondR = (abs(numRotationsR) * 5) * 0.358 / 3; // averaged the shafts because
 1033              		.loc 1 287 0
 1034 051a 404B     		ldr	r3, .L52+68
 1035 051c 1B68     		ldr	r3, [r3]
 1036 051e 83EAE372 		eor	r2, r3, r3, asr #31
 1037 0522 A2EBE372 		sub	r2, r2, r3, asr #31
 1038 0526 1346     		mov	r3, r2
 1039 0528 9B00     		lsls	r3, r3, #2
 1040 052a 1344     		add	r3, r3, r2
 1041 052c 1846     		mov	r0, r3
 1042 052e FFF7FEFF 		bl	__aeabi_i2d
 1043 0532 29A3     		adr	r3, .L52
 1044 0534 D3E90023 		ldrd	r2, [r3]
 1045 0538 FFF7FEFF 		bl	__aeabi_dmul
 1046 053c 0346     		mov	r3, r0
 1047 053e 0C46     		mov	r4, r1
 1048 0540 1846     		mov	r0, r3
 1049 0542 2146     		mov	r1, r4
 1050 0544 4FF00002 		mov	r2, #0
 1051 0548 364B     		ldr	r3, .L52+76
 1052 054a FFF7FEFF 		bl	__aeabi_ddiv
 1053 054e 0346     		mov	r3, r0
 1054 0550 0C46     		mov	r4, r1
 1055 0552 1846     		mov	r0, r3
 1056 0554 2146     		mov	r1, r4
 1057 0556 FFF7FEFF 		bl	__aeabi_d2iz
 1058 055a 0246     		mov	r2, r0
 1059 055c 224B     		ldr	r3, .L52+16
 1060 055e 1A60     		str	r2, [r3]
 288:main.c        **** 
 289:main.c        ****           // integer to string conversion, base 10, storing, hardwaretask2 sheet for more info
 290:main.c        ****           // converting to rad/s (v2-v1/360)*(360/16) for the left wheel
 291:main.c        **** 
 292:main.c        ****           char distancePerSecondLChar[8];
 293:main.c        ****           char distancePerSecondRChar[8];
 294:main.c        ****           itoa(distancePerSecondR, distancePerSecondRChar, 10);
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 25


 1061              		.loc 1 294 0
 1062 0560 214B     		ldr	r3, .L52+16
 1063 0562 1B68     		ldr	r3, [r3]
 1064 0564 07F11401 		add	r1, r7, #20
 1065 0568 0A22     		movs	r2, #10
 1066 056a 1846     		mov	r0, r3
 1067 056c FFF7FEFF 		bl	itoa
 295:main.c        ****           itoa(distancePerSecondL, distancePerSecondLChar, 10);
 1068              		.loc 1 295 0
 1069 0570 1C4B     		ldr	r3, .L52+12
 1070 0572 1B68     		ldr	r3, [r3]
 1071 0574 07F11C01 		add	r1, r7, #28
 1072 0578 0A22     		movs	r2, #10
 1073 057a 1846     		mov	r0, r3
 1074 057c FFF7FEFF 		bl	itoa
 296:main.c        **** 
 297:main.c        ****           char leftPWMChar[8];
 298:main.c        ****           char rightPWMChar[8];
 299:main.c        ****           itoa(getLeftPWM(), leftPWMChar, 10);
 1075              		.loc 1 299 0
 1076 0580 FFF7FEFF 		bl	getLeftPWM
 1077 0584 07F10C03 		add	r3, r7, #12
 1078 0588 0A22     		movs	r2, #10
 1079 058a 1946     		mov	r1, r3
 1080 058c FFF7FEFF 		bl	itoa
 300:main.c        ****           itoa(getRightPWM(), rightPWMChar, 10);
 1081              		.loc 1 300 0
 1082 0590 FFF7FEFF 		bl	getRightPWM
 1083 0594 3B1D     		adds	r3, r7, #4
 1084 0596 0A22     		movs	r2, #10
 1085 0598 1946     		mov	r1, r3
 1086 059a FFF7FEFF 		bl	itoa
 301:main.c        **** 
 302:main.c        ****           /*usbPutString(distancePerSecondLChar);
 303:main.c        ****           usbPutString("  <LeftCount  RightCount> ");
 304:main.c        ****           usbPutString(distancePerSecondRChar);
 305:main.c        ****           usbPutString("\r\n");
 306:main.c        ****           usbPutString(leftPWMChar);
 307:main.c        ****           usbPutString("  <LeftPWM  Right PWM> ");
 308:main.c        ****           usbPutString(rightPWMChar);
 309:main.c        ****           usbPutString("\r\n\r\n");*/
 310:main.c        **** 
 311:main.c        ****           QuadDec_M1_SetCounter(0); // set quad counter to 0 to avoid overflow
 1087              		.loc 1 311 0
 1088 059e 0020     		movs	r0, #0
 1089 05a0 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 312:main.c        ****           QuadDec_M2_SetCounter(0); // set quad counter to 0 to avoid overflow 
 1090              		.loc 1 312 0
 1091 05a4 0020     		movs	r0, #0
 1092 05a6 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 313:main.c        ****           if (shouldUpdate) {
 1093              		.loc 1 313 0
 1094 05aa 114B     		ldr	r3, .L52+24
 1095 05ac 1B68     		ldr	r3, [r3]
 1096 05ae 002B     		cmp	r3, #0
 1097 05b0 08D0     		beq	.L48
 314:main.c        ****             updateForwardSpeed(distancePerSecondL, distancePerSecondR, TARGET_SPEED);
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 26


 1098              		.loc 1 314 0
 1099 05b2 0C4B     		ldr	r3, .L52+12
 1100 05b4 1868     		ldr	r0, [r3]
 1101 05b6 0C4B     		ldr	r3, .L52+16
 1102 05b8 1968     		ldr	r1, [r3]
 1103 05ba 0C4B     		ldr	r3, .L52+20
 1104 05bc 1B68     		ldr	r3, [r3]
 1105 05be 1A46     		mov	r2, r3
 1106 05c0 FFF7FEFF 		bl	updateForwardSpeed
 1107              	.L48:
 315:main.c        ****           }
 316:main.c        ****         shouldUpdate = 1;
 1108              		.loc 1 316 0
 1109 05c4 0A4B     		ldr	r3, .L52+24
 1110 05c6 0122     		movs	r2, #1
 1111 05c8 1A60     		str	r2, [r3]
 1112              	.L45:
 1113              	.LBE4:
 317:main.c        ****         }
 318:main.c        ****         motorFlag = 0; // interrupt flag is back to 0
 1114              		.loc 1 318 0
 1115 05ca 0D4B     		ldr	r3, .L52+40
 1116 05cc 0022     		movs	r2, #0
 1117 05ce 1A60     		str	r2, [r3]
 319:main.c        ****         isr_TS_Enable(); // interrupt enabled
 1118              		.loc 1 319 0
 1119 05d0 FFF7FEFF 		bl	isr_TS_Enable
 320:main.c        **** 
 321:main.c        ****       }
 322:main.c        ****     }
 323:main.c        ****   }
 1120              		.loc 1 323 0
 1121 05d4 35E5     		b	.L49
 1122              	.L53:
 1123 05d6 00BF     		.align	3
 1124              	.L52:
 1125 05d8 B6F3FDD4 		.word	-721554506
 1126 05dc 78E9D63F 		.word	1071049080
 1127 05e0 00000000 		.word	lastAdjustDirection
 1128 05e4 00000000 		.word	distancePerSecondL
 1129 05e8 00000000 		.word	distancePerSecondR
 1130 05ec 00000000 		.word	TARGET_SPEED
 1131 05f0 00000000 		.word	shouldUpdate
 1132 05f4 00000000 		.word	restoring
 1133 05f8 00000000 		.word	turningCount
 1134 05fc 00000000 		.word	flag
 1135 0600 00000000 		.word	motorFlag
 1136 0604 00000000 		.word	step
 1137 0608 00000000 		.word	v1L
 1138 060c 00000000 		.word	v1R
 1139 0610 00000000 		.word	v2L
 1140 0614 00000000 		.word	v2R
 1141 0618 00000000 		.word	numRotationsL
 1142 061c 00000000 		.word	numRotationsR
 1143 0620 00000000 		.word	dotsTravelled
 1144 0624 00000840 		.word	1074266112
 1145 0628 00001440 		.word	1075052544
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 27


 1146 062c 00000000 		.word	distanceTravelled
 1147              		.cfi_endproc
 1148              	.LFE66:
 1149              		.size	main, .-main
 1150              		.section	.text.usbPutString,"ax",%progbits
 1151              		.align	2
 1152              		.global	usbPutString
 1153              		.thumb
 1154              		.thumb_func
 1155              		.type	usbPutString, %function
 1156              	usbPutString:
 1157              	.LFB67:
 324:main.c        **** 
 325:main.c        **** }
 326:main.c        **** // }
 327:main.c        **** //* ========================================
 328:main.c        **** void usbPutString(char * s) {
 1158              		.loc 1 328 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 8
 1161              		@ frame_needed = 1, uses_anonymous_args = 0
 1162 0000 80B5     		push	{r7, lr}
 1163              		.cfi_def_cfa_offset 8
 1164              		.cfi_offset 7, -8
 1165              		.cfi_offset 14, -4
 1166 0002 82B0     		sub	sp, sp, #8
 1167              		.cfi_def_cfa_offset 16
 1168 0004 00AF     		add	r7, sp, #0
 1169              		.cfi_def_cfa_register 7
 1170 0006 7860     		str	r0, [r7, #4]
 329:main.c        ****   // !! Assumes that *s is a string with allocated space >=64 chars     
 330:main.c        ****   //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 331:main.c        ****   //  length to 62 char (63rd char is a '!')
 332:main.c        **** 
 333:main.c        ****   #ifdef USE_USB
 334:main.c        ****   while (USBUART_CDCIsReady() == 0);
 1171              		.loc 1 334 0
 1172 0008 00BF     		nop
 1173              	.L55:
 1174              		.loc 1 334 0 is_stmt 0 discriminator 1
 1175 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1176 000e 0346     		mov	r3, r0
 1177 0010 002B     		cmp	r3, #0
 1178 0012 FAD0     		beq	.L55
 335:main.c        ****   s[63] = '\0';
 1179              		.loc 1 335 0 is_stmt 1
 1180 0014 7B68     		ldr	r3, [r7, #4]
 1181 0016 3F33     		adds	r3, r3, #63
 1182 0018 0022     		movs	r2, #0
 1183 001a 1A70     		strb	r2, [r3]
 336:main.c        ****   s[62] = '!';
 1184              		.loc 1 336 0
 1185 001c 7B68     		ldr	r3, [r7, #4]
 1186 001e 3E33     		adds	r3, r3, #62
 1187 0020 2122     		movs	r2, #33
 1188 0022 1A70     		strb	r2, [r3]
 337:main.c        ****   USBUART_PutData((uint8 * ) s, strlen(s));
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 28


 1189              		.loc 1 337 0
 1190 0024 7868     		ldr	r0, [r7, #4]
 1191 0026 FFF7FEFF 		bl	strlen
 1192 002a 0346     		mov	r3, r0
 1193 002c 9BB2     		uxth	r3, r3
 1194 002e 1946     		mov	r1, r3
 1195 0030 7868     		ldr	r0, [r7, #4]
 1196 0032 FFF7FEFF 		bl	USBUART_PutData
 338:main.c        ****   #endif
 339:main.c        **** }
 1197              		.loc 1 339 0
 1198 0036 00BF     		nop
 1199 0038 0837     		adds	r7, r7, #8
 1200              		.cfi_def_cfa_offset 8
 1201 003a BD46     		mov	sp, r7
 1202              		.cfi_def_cfa_register 13
 1203              		@ sp needed
 1204 003c 80BD     		pop	{r7, pc}
 1205              		.cfi_endproc
 1206              	.LFE67:
 1207              		.size	usbPutString, .-usbPutString
 1208 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1209              		.align	2
 1210              		.global	usbPutChar
 1211              		.thumb
 1212              		.thumb_func
 1213              		.type	usbPutChar, %function
 1214              	usbPutChar:
 1215              	.LFB68:
 340:main.c        **** //* ========================================
 341:main.c        **** void usbPutChar(char c) {
 1216              		.loc 1 341 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 8
 1219              		@ frame_needed = 1, uses_anonymous_args = 0
 1220 0000 80B5     		push	{r7, lr}
 1221              		.cfi_def_cfa_offset 8
 1222              		.cfi_offset 7, -8
 1223              		.cfi_offset 14, -4
 1224 0002 82B0     		sub	sp, sp, #8
 1225              		.cfi_def_cfa_offset 16
 1226 0004 00AF     		add	r7, sp, #0
 1227              		.cfi_def_cfa_register 7
 1228 0006 0346     		mov	r3, r0
 1229 0008 FB71     		strb	r3, [r7, #7]
 342:main.c        ****   #ifdef USE_USB
 343:main.c        ****   while (USBUART_CDCIsReady() == 0);
 1230              		.loc 1 343 0
 1231 000a 00BF     		nop
 1232              	.L57:
 1233              		.loc 1 343 0 is_stmt 0 discriminator 1
 1234 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1235 0010 0346     		mov	r3, r0
 1236 0012 002B     		cmp	r3, #0
 1237 0014 FAD0     		beq	.L57
 344:main.c        ****   USBUART_PutChar(c);
 1238              		.loc 1 344 0 is_stmt 1
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 29


 1239 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1240 0018 1846     		mov	r0, r3
 1241 001a FFF7FEFF 		bl	USBUART_PutChar
 345:main.c        ****   #endif
 346:main.c        **** }
 1242              		.loc 1 346 0
 1243 001e 00BF     		nop
 1244 0020 0837     		adds	r7, r7, #8
 1245              		.cfi_def_cfa_offset 8
 1246 0022 BD46     		mov	sp, r7
 1247              		.cfi_def_cfa_register 13
 1248              		@ sp needed
 1249 0024 80BD     		pop	{r7, pc}
 1250              		.cfi_endproc
 1251              	.LFE68:
 1252              		.size	usbPutChar, .-usbPutChar
 1253 0026 00BF     		.section	.rodata
 1254              		.align	2
 1255              	.LC0:
 1256 0000 5331202D 		.ascii	"S1 - 0\015\012\000"
 1256      20300D0A 
 1256      00
 1257 0009 000000   		.align	2
 1258              	.LC1:
 1259 000c 5331202D 		.ascii	"S1 - 1\015\012\000"
 1259      20310D0A 
 1259      00
 1260 0015 000000   		.align	2
 1261              	.LC2:
 1262 0018 5335202D 		.ascii	"S5 - 0\015\012\000"
 1262      20300D0A 
 1262      00
 1263 0021 000000   		.align	2
 1264              	.LC3:
 1265 0024 5335202D 		.ascii	"S5 - 1\015\012\000"
 1265      20310D0A 
 1265      00
 1266 002d 000000   		.align	2
 1267              	.LC4:
 1268 0030 5332202D 		.ascii	"S2 - 0\015\012\000"
 1268      20300D0A 
 1268      00
 1269 0039 000000   		.align	2
 1270              	.LC5:
 1271 003c 5332202D 		.ascii	"S2 - 1\015\012\000"
 1271      20310D0A 
 1271      00
 1272 0045 000000   		.align	2
 1273              	.LC6:
 1274 0048 5334202D 		.ascii	"S4 - 0\015\012\000"
 1274      20300D0A 
 1274      00
 1275 0051 000000   		.align	2
 1276              	.LC7:
 1277 0054 5334202D 		.ascii	"S4 - 1\015\012\000"
 1277      20310D0A 
 1277      00
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 30


 1278 005d 000000   		.align	2
 1279              	.LC8:
 1280 0060 74657374 		.ascii	"test\000"
 1280      00
 1281 0065 000000   		.align	2
 1282              	.LC9:
 1283 0068 5333202D 		.ascii	"S3 - 0\015\012\000"
 1283      20300D0A 
 1283      00
 1284 0071 000000   		.align	2
 1285              	.LC10:
 1286 0074 5333202D 		.ascii	"S3 - 1\015\012\000"
 1286      20310D0A 
 1286      00
 1287              		.section	.text.printSensorDebug,"ax",%progbits
 1288              		.align	2
 1289              		.global	printSensorDebug
 1290              		.thumb
 1291              		.thumb_func
 1292              		.type	printSensorDebug, %function
 1293              	printSensorDebug:
 1294              	.LFB69:
 347:main.c        **** //* ========================================
 348:main.c        **** 
 349:main.c        **** void printSensorDebug(int highCountLeftIntersection, int highCountLeftLine, int highCountMiddleLine
 1295              		.loc 1 349 0
 1296              		.cfi_startproc
 1297              		@ args = 8, pretend = 0, frame = 88
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299              		@ link register save eliminated.
 1300 0000 80B4     		push	{r7}
 1301              		.cfi_def_cfa_offset 4
 1302              		.cfi_offset 7, -4
 1303 0002 97B0     		sub	sp, sp, #92
 1304              		.cfi_def_cfa_offset 96
 1305 0004 00AF     		add	r7, sp, #0
 1306              		.cfi_def_cfa_register 7
 1307 0006 F860     		str	r0, [r7, #12]
 1308 0008 B960     		str	r1, [r7, #8]
 1309 000a 7A60     		str	r2, [r7, #4]
 1310 000c 3B60     		str	r3, [r7]
 350:main.c        ****   char leftLineText[11];
 351:main.c        ****   char rightIntText[11];
 352:main.c        ****   char leftIntText[11];
 353:main.c        ****   char rightLineText[11];
 354:main.c        ****   char turnCompleteText[11];
 355:main.c        ****   char middleLineText[11];
 356:main.c        **** 
 357:main.c        ****   if (L_INT_BLACK) {
 1311              		.loc 1 357 0
 1312 000e FB68     		ldr	r3, [r7, #12]
 1313 0010 952B     		cmp	r3, #149
 1314 0012 06DC     		bgt	.L59
 358:main.c        ****     //LED_PIN_2_Write(0);
 359:main.c        ****     strcpy(leftIntText, "S1 - 0\r\n");
 1315              		.loc 1 359 0
 1316 0014 07F13403 		add	r3, r7, #52
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 31


 1317 0018 314A     		ldr	r2, .L72
 1318 001a 07CA     		ldmia	r2, {r0, r1, r2}
 1319 001c 03C3     		stmia	r3!, {r0, r1}
 1320 001e 1A70     		strb	r2, [r3]
 1321 0020 05E0     		b	.L60
 1322              	.L59:
 360:main.c        ****   } else {
 361:main.c        ****     //LED_PIN_2_Write(1);
 362:main.c        ****     strcpy(leftIntText, "S1 - 1\r\n");
 1323              		.loc 1 362 0
 1324 0022 07F13403 		add	r3, r7, #52
 1325 0026 2F4A     		ldr	r2, .L72+4
 1326 0028 07CA     		ldmia	r2, {r0, r1, r2}
 1327 002a 03C3     		stmia	r3!, {r0, r1}
 1328 002c 1A70     		strb	r2, [r3]
 1329              	.L60:
 363:main.c        ****   }
 364:main.c        **** 
 365:main.c        ****   if (R_INT_BLACK) {
 1330              		.loc 1 365 0
 1331 002e 3B6E     		ldr	r3, [r7, #96]
 1332 0030 952B     		cmp	r3, #149
 1333 0032 06DC     		bgt	.L61
 366:main.c        ****     strcpy(rightIntText, "S5 - 0\r\n");
 1334              		.loc 1 366 0
 1335 0034 07F14003 		add	r3, r7, #64
 1336 0038 2B4A     		ldr	r2, .L72+8
 1337 003a 07CA     		ldmia	r2, {r0, r1, r2}
 1338 003c 03C3     		stmia	r3!, {r0, r1}
 1339 003e 1A70     		strb	r2, [r3]
 1340 0040 05E0     		b	.L62
 1341              	.L61:
 367:main.c        ****   } else {
 368:main.c        ****     strcpy(rightIntText, "S5 - 1\r\n");
 1342              		.loc 1 368 0
 1343 0042 07F14003 		add	r3, r7, #64
 1344 0046 294A     		ldr	r2, .L72+12
 1345 0048 07CA     		ldmia	r2, {r0, r1, r2}
 1346 004a 03C3     		stmia	r3!, {r0, r1}
 1347 004c 1A70     		strb	r2, [r3]
 1348              	.L62:
 369:main.c        ****   }
 370:main.c        **** 
 371:main.c        ****   if (L_LINE_BLACK) {
 1349              		.loc 1 371 0
 1350 004e BB68     		ldr	r3, [r7, #8]
 1351 0050 952B     		cmp	r3, #149
 1352 0052 06DC     		bgt	.L63
 372:main.c        ****     strcpy(leftLineText, "S2 - 0\r\n");
 1353              		.loc 1 372 0
 1354 0054 07F14C03 		add	r3, r7, #76
 1355 0058 254A     		ldr	r2, .L72+16
 1356 005a 07CA     		ldmia	r2, {r0, r1, r2}
 1357 005c 03C3     		stmia	r3!, {r0, r1}
 1358 005e 1A70     		strb	r2, [r3]
 1359 0060 05E0     		b	.L64
 1360              	.L63:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 32


 373:main.c        ****   } else {
 374:main.c        ****     strcpy(leftLineText, "S2 - 1\r\n");
 1361              		.loc 1 374 0
 1362 0062 07F14C03 		add	r3, r7, #76
 1363 0066 234A     		ldr	r2, .L72+20
 1364 0068 07CA     		ldmia	r2, {r0, r1, r2}
 1365 006a 03C3     		stmia	r3!, {r0, r1}
 1366 006c 1A70     		strb	r2, [r3]
 1367              	.L64:
 375:main.c        ****   }
 376:main.c        **** 
 377:main.c        ****   if (R_LINE_BLACK) {
 1368              		.loc 1 377 0
 1369 006e 3B68     		ldr	r3, [r7]
 1370 0070 952B     		cmp	r3, #149
 1371 0072 06DC     		bgt	.L65
 378:main.c        ****     strcpy(rightLineText, "S4 - 0\r\n");
 1372              		.loc 1 378 0
 1373 0074 07F12803 		add	r3, r7, #40
 1374 0078 1F4A     		ldr	r2, .L72+24
 1375 007a 07CA     		ldmia	r2, {r0, r1, r2}
 1376 007c 03C3     		stmia	r3!, {r0, r1}
 1377 007e 1A70     		strb	r2, [r3]
 1378 0080 05E0     		b	.L66
 1379              	.L65:
 379:main.c        ****   } else {
 380:main.c        ****     strcpy(rightLineText, "S4 - 1\r\n");
 1380              		.loc 1 380 0
 1381 0082 07F12803 		add	r3, r7, #40
 1382 0086 1D4A     		ldr	r2, .L72+28
 1383 0088 07CA     		ldmia	r2, {r0, r1, r2}
 1384 008a 03C3     		stmia	r3!, {r0, r1}
 1385 008c 1A70     		strb	r2, [r3]
 1386              	.L66:
 381:main.c        ****   }
 382:main.c        **** 
 383:main.c        ****   if (TC_BLACK) {
 1387              		.loc 1 383 0
 1388 008e 7B6E     		ldr	r3, [r7, #100]
 1389 0090 952B     		cmp	r3, #149
 1390 0092 08DC     		bgt	.L67
 384:main.c        ****     strcpy(turnCompleteText, "test");
 1391              		.loc 1 384 0
 1392 0094 07F11C03 		add	r3, r7, #28
 1393 0098 194A     		ldr	r2, .L72+32
 1394 009a 92E80300 		ldmia	r2, {r0, r1}
 1395 009e 1860     		str	r0, [r3]
 1396 00a0 0433     		adds	r3, r3, #4
 1397 00a2 1970     		strb	r1, [r3]
 1398 00a4 07E0     		b	.L68
 1399              	.L67:
 385:main.c        ****   } else {
 386:main.c        ****     strcpy(turnCompleteText, "test");
 1400              		.loc 1 386 0
 1401 00a6 07F11C03 		add	r3, r7, #28
 1402 00aa 154A     		ldr	r2, .L72+32
 1403 00ac 92E80300 		ldmia	r2, {r0, r1}
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 33


 1404 00b0 1860     		str	r0, [r3]
 1405 00b2 0433     		adds	r3, r3, #4
 1406 00b4 1970     		strb	r1, [r3]
 1407              	.L68:
 387:main.c        ****   }
 388:main.c        **** 
 389:main.c        ****   if (M_LINE_BLACK) {
 1408              		.loc 1 389 0
 1409 00b6 7B68     		ldr	r3, [r7, #4]
 1410 00b8 952B     		cmp	r3, #149
 1411 00ba 06DC     		bgt	.L69
 390:main.c        ****     strcpy(middleLineText, "S3 - 0\r\n");
 1412              		.loc 1 390 0
 1413 00bc 07F11003 		add	r3, r7, #16
 1414 00c0 104A     		ldr	r2, .L72+36
 1415 00c2 07CA     		ldmia	r2, {r0, r1, r2}
 1416 00c4 03C3     		stmia	r3!, {r0, r1}
 1417 00c6 1A70     		strb	r2, [r3]
 391:main.c        ****   } else {
 392:main.c        ****     strcpy(middleLineText, "S3 - 1\r\n");
 393:main.c        ****   }
 394:main.c        **** 
 395:main.c        ****   /*usbPutString(leftIntText);
 396:main.c        ****   usbPutString(leftLineText);
 397:main.c        ****   usbPutString(middleLineText);
 398:main.c        ****   usbPutString(rightLineText);
 399:main.c        ****   usbPutString(rightIntText);*/
 400:main.c        **** 
 401:main.c        ****   //usbPutString(turnCompleteText);
 402:main.c        **** 
 403:main.c        ****   //usbPutString("-------------\r\n");
 404:main.c        **** }
 1418              		.loc 1 404 0
 1419 00c8 05E0     		b	.L71
 1420              	.L69:
 392:main.c        ****   }
 1421              		.loc 1 392 0
 1422 00ca 07F11003 		add	r3, r7, #16
 1423 00ce 0E4A     		ldr	r2, .L72+40
 1424 00d0 07CA     		ldmia	r2, {r0, r1, r2}
 1425 00d2 03C3     		stmia	r3!, {r0, r1}
 1426 00d4 1A70     		strb	r2, [r3]
 1427              	.L71:
 1428              		.loc 1 404 0
 1429 00d6 00BF     		nop
 1430 00d8 5C37     		adds	r7, r7, #92
 1431              		.cfi_def_cfa_offset 4
 1432 00da BD46     		mov	sp, r7
 1433              		.cfi_def_cfa_register 13
 1434              		@ sp needed
 1435 00dc 80BC     		pop	{r7}
 1436              		.cfi_restore 7
 1437              		.cfi_def_cfa_offset 0
 1438 00de 7047     		bx	lr
 1439              	.L73:
 1440              		.align	2
 1441              	.L72:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 34


 1442 00e0 00000000 		.word	.LC0
 1443 00e4 0C000000 		.word	.LC1
 1444 00e8 18000000 		.word	.LC2
 1445 00ec 24000000 		.word	.LC3
 1446 00f0 30000000 		.word	.LC4
 1447 00f4 3C000000 		.word	.LC5
 1448 00f8 48000000 		.word	.LC6
 1449 00fc 54000000 		.word	.LC7
 1450 0100 60000000 		.word	.LC8
 1451 0104 68000000 		.word	.LC9
 1452 0108 74000000 		.word	.LC10
 1453              		.cfi_endproc
 1454              	.LFE69:
 1455              		.size	printSensorDebug, .-printSensorDebug
 1456              		.text
 1457              	.Letext0:
 1458              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1459              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1460              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1461              		.file 5 "vars.h"
 1462              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1463              		.section	.debug_info,"",%progbits
 1464              	.Ldebug_info0:
 1465 0000 89070000 		.4byte	0x789
 1466 0004 0400     		.2byte	0x4
 1467 0006 00000000 		.4byte	.Ldebug_abbrev0
 1468 000a 04       		.byte	0x4
 1469 000b 01       		.uleb128 0x1
 1470 000c F8000000 		.4byte	.LASF102
 1471 0010 0C       		.byte	0xc
 1472 0011 EE040000 		.4byte	.LASF103
 1473 0015 93000000 		.4byte	.LASF104
 1474 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1475 001d 00000000 		.4byte	0
 1476 0021 00000000 		.4byte	.Ldebug_line0
 1477 0025 02       		.uleb128 0x2
 1478 0026 01       		.byte	0x1
 1479 0027 06       		.byte	0x6
 1480 0028 6E030000 		.4byte	.LASF0
 1481 002c 02       		.uleb128 0x2
 1482 002d 01       		.byte	0x1
 1483 002e 08       		.byte	0x8
 1484 002f 35030000 		.4byte	.LASF1
 1485 0033 02       		.uleb128 0x2
 1486 0034 02       		.byte	0x2
 1487 0035 05       		.byte	0x5
 1488 0036 60000000 		.4byte	.LASF2
 1489 003a 02       		.uleb128 0x2
 1490 003b 02       		.byte	0x2
 1491 003c 07       		.byte	0x7
 1492 003d 58040000 		.4byte	.LASF3
 1493 0041 03       		.uleb128 0x3
 1494 0042 45050000 		.4byte	.LASF12
 1495 0046 02       		.byte	0x2
 1496 0047 3F       		.byte	0x3f
 1497 0048 4C000000 		.4byte	0x4c
 1498 004c 02       		.uleb128 0x2
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 35


 1499 004d 04       		.byte	0x4
 1500 004e 05       		.byte	0x5
 1501 004f 27040000 		.4byte	.LASF4
 1502 0053 02       		.uleb128 0x2
 1503 0054 04       		.byte	0x4
 1504 0055 07       		.byte	0x7
 1505 0056 F5040000 		.4byte	.LASF5
 1506 005a 02       		.uleb128 0x2
 1507 005b 08       		.byte	0x8
 1508 005c 05       		.byte	0x5
 1509 005d 34020000 		.4byte	.LASF6
 1510 0061 02       		.uleb128 0x2
 1511 0062 08       		.byte	0x8
 1512 0063 07       		.byte	0x7
 1513 0064 7A030000 		.4byte	.LASF7
 1514 0068 04       		.uleb128 0x4
 1515 0069 04       		.byte	0x4
 1516 006a 05       		.byte	0x5
 1517 006b 696E7400 		.ascii	"int\000"
 1518 006f 02       		.uleb128 0x2
 1519 0070 04       		.byte	0x4
 1520 0071 07       		.byte	0x7
 1521 0072 91030000 		.4byte	.LASF8
 1522 0076 02       		.uleb128 0x2
 1523 0077 08       		.byte	0x8
 1524 0078 04       		.byte	0x4
 1525 0079 0C030000 		.4byte	.LASF9
 1526 007d 02       		.uleb128 0x2
 1527 007e 04       		.byte	0x4
 1528 007f 07       		.byte	0x7
 1529 0080 8A000000 		.4byte	.LASF10
 1530 0084 05       		.uleb128 0x5
 1531 0085 04       		.byte	0x4
 1532 0086 8A000000 		.4byte	0x8a
 1533 008a 02       		.uleb128 0x2
 1534 008b 01       		.byte	0x1
 1535 008c 08       		.byte	0x8
 1536 008d 22040000 		.4byte	.LASF11
 1537 0091 06       		.uleb128 0x6
 1538 0092 8A000000 		.4byte	0x8a
 1539 0096 A1000000 		.4byte	0xa1
 1540 009a 07       		.uleb128 0x7
 1541 009b 7D000000 		.4byte	0x7d
 1542 009f 07       		.byte	0x7
 1543 00a0 00       		.byte	0
 1544 00a1 06       		.uleb128 0x6
 1545 00a2 8A000000 		.4byte	0x8a
 1546 00a6 B1000000 		.4byte	0xb1
 1547 00aa 07       		.uleb128 0x7
 1548 00ab 7D000000 		.4byte	0x7d
 1549 00af 17       		.byte	0x17
 1550 00b0 00       		.byte	0
 1551 00b1 03       		.uleb128 0x3
 1552 00b2 3B040000 		.4byte	.LASF13
 1553 00b6 03       		.byte	0x3
 1554 00b7 2C       		.byte	0x2c
 1555 00b8 41000000 		.4byte	0x41
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 36


 1556 00bc 08       		.uleb128 0x8
 1557 00bd 6B040000 		.4byte	.LASF14
 1558 00c1 04       		.byte	0x4
 1559 00c2 E701     		.2byte	0x1e7
 1560 00c4 2C000000 		.4byte	0x2c
 1561 00c8 08       		.uleb128 0x8
 1562 00c9 AC010000 		.4byte	.LASF15
 1563 00cd 04       		.byte	0x4
 1564 00ce E801     		.2byte	0x1e8
 1565 00d0 3A000000 		.4byte	0x3a
 1566 00d4 08       		.uleb128 0x8
 1567 00d5 4F020000 		.4byte	.LASF16
 1568 00d9 04       		.byte	0x4
 1569 00da EA01     		.2byte	0x1ea
 1570 00dc 25000000 		.4byte	0x25
 1571 00e0 08       		.uleb128 0x8
 1572 00e1 CC010000 		.4byte	.LASF17
 1573 00e5 04       		.byte	0x4
 1574 00e6 EB01     		.2byte	0x1eb
 1575 00e8 33000000 		.4byte	0x33
 1576 00ec 02       		.uleb128 0x2
 1577 00ed 04       		.byte	0x4
 1578 00ee 04       		.byte	0x4
 1579 00ef 1D020000 		.4byte	.LASF18
 1580 00f3 02       		.uleb128 0x2
 1581 00f4 08       		.byte	0x8
 1582 00f5 04       		.byte	0x4
 1583 00f6 07050000 		.4byte	.LASF19
 1584 00fa 09       		.uleb128 0x9
 1585 00fb 0B040000 		.4byte	.LASF105
 1586 00ff 20       		.byte	0x20
 1587 0100 05       		.byte	0x5
 1588 0101 29       		.byte	0x29
 1589 0102 D3010000 		.4byte	0x1d3
 1590 0106 0A       		.uleb128 0xa
 1591 0107 13060000 		.4byte	.LASF20
 1592 010b 05       		.byte	0x5
 1593 010c 2A       		.byte	0x2a
 1594 010d D4000000 		.4byte	0xd4
 1595 0111 00       		.byte	0
 1596 0112 0A       		.uleb128 0xa
 1597 0113 C6010000 		.4byte	.LASF21
 1598 0117 05       		.byte	0x5
 1599 0118 2B       		.byte	0x2b
 1600 0119 BC000000 		.4byte	0xbc
 1601 011d 01       		.byte	0x1
 1602 011e 0A       		.uleb128 0xa
 1603 011f 30040000 		.4byte	.LASF22
 1604 0123 05       		.byte	0x5
 1605 0124 2C       		.byte	0x2c
 1606 0125 E0000000 		.4byte	0xe0
 1607 0129 02       		.byte	0x2
 1608 012a 0A       		.uleb128 0xa
 1609 012b 8F050000 		.4byte	.LASF23
 1610 012f 05       		.byte	0x5
 1611 0130 2D       		.byte	0x2d
 1612 0131 E0000000 		.4byte	0xe0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 37


 1613 0135 04       		.byte	0x4
 1614 0136 0A       		.uleb128 0xa
 1615 0137 18060000 		.4byte	.LASF24
 1616 013b 05       		.byte	0x5
 1617 013c 2E       		.byte	0x2e
 1618 013d E0000000 		.4byte	0xe0
 1619 0141 06       		.byte	0x6
 1620 0142 0A       		.uleb128 0xa
 1621 0143 82020000 		.4byte	.LASF25
 1622 0147 05       		.byte	0x5
 1623 0148 2F       		.byte	0x2f
 1624 0149 E0000000 		.4byte	0xe0
 1625 014d 08       		.byte	0x8
 1626 014e 0A       		.uleb128 0xa
 1627 014f 4F050000 		.4byte	.LASF26
 1628 0153 05       		.byte	0x5
 1629 0154 30       		.byte	0x30
 1630 0155 E0000000 		.4byte	0xe0
 1631 0159 0A       		.byte	0xa
 1632 015a 0A       		.uleb128 0xa
 1633 015b 43030000 		.4byte	.LASF27
 1634 015f 05       		.byte	0x5
 1635 0160 31       		.byte	0x31
 1636 0161 E0000000 		.4byte	0xe0
 1637 0165 0C       		.byte	0xc
 1638 0166 0A       		.uleb128 0xa
 1639 0167 75020000 		.4byte	.LASF28
 1640 016b 05       		.byte	0x5
 1641 016c 32       		.byte	0x32
 1642 016d E0000000 		.4byte	0xe0
 1643 0171 0E       		.byte	0xe
 1644 0172 0A       		.uleb128 0xa
 1645 0173 D4030000 		.4byte	.LASF29
 1646 0177 05       		.byte	0x5
 1647 0178 33       		.byte	0x33
 1648 0179 E0000000 		.4byte	0xe0
 1649 017d 10       		.byte	0x10
 1650 017e 0A       		.uleb128 0xa
 1651 017f 43040000 		.4byte	.LASF30
 1652 0183 05       		.byte	0x5
 1653 0184 34       		.byte	0x34
 1654 0185 E0000000 		.4byte	0xe0
 1655 0189 12       		.byte	0x12
 1656 018a 0A       		.uleb128 0xa
 1657 018b 2B020000 		.4byte	.LASF31
 1658 018f 05       		.byte	0x5
 1659 0190 35       		.byte	0x35
 1660 0191 E0000000 		.4byte	0xe0
 1661 0195 14       		.byte	0x14
 1662 0196 0A       		.uleb128 0xa
 1663 0197 E5010000 		.4byte	.LASF32
 1664 019b 05       		.byte	0x5
 1665 019c 36       		.byte	0x36
 1666 019d E0000000 		.4byte	0xe0
 1667 01a1 16       		.byte	0x16
 1668 01a2 0A       		.uleb128 0xa
 1669 01a3 58000000 		.4byte	.LASF33
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 38


 1670 01a7 05       		.byte	0x5
 1671 01a8 37       		.byte	0x37
 1672 01a9 E0000000 		.4byte	0xe0
 1673 01ad 18       		.byte	0x18
 1674 01ae 0A       		.uleb128 0xa
 1675 01af 23020000 		.4byte	.LASF34
 1676 01b3 05       		.byte	0x5
 1677 01b4 38       		.byte	0x38
 1678 01b5 E0000000 		.4byte	0xe0
 1679 01b9 1A       		.byte	0x1a
 1680 01ba 0A       		.uleb128 0xa
 1681 01bb CB030000 		.4byte	.LASF35
 1682 01bf 05       		.byte	0x5
 1683 01c0 39       		.byte	0x39
 1684 01c1 E0000000 		.4byte	0xe0
 1685 01c5 1C       		.byte	0x1c
 1686 01c6 0A       		.uleb128 0xa
 1687 01c7 4B040000 		.4byte	.LASF36
 1688 01cb 05       		.byte	0x5
 1689 01cc 3A       		.byte	0x3a
 1690 01cd E0000000 		.4byte	0xe0
 1691 01d1 1E       		.byte	0x1e
 1692 01d2 00       		.byte	0
 1693 01d3 0B       		.uleb128 0xb
 1694 01d4 656F6300 		.ascii	"eoc\000"
 1695 01d8 01       		.byte	0x1
 1696 01d9 4B       		.byte	0x4b
 1697 01da 00000000 		.4byte	.LFB64
 1698 01de 18000000 		.4byte	.LFE64-.LFB64
 1699 01e2 01       		.uleb128 0x1
 1700 01e3 9C       		.byte	0x9c
 1701 01e4 0C       		.uleb128 0xc
 1702 01e5 D9020000 		.4byte	.LASF37
 1703 01e9 01       		.byte	0x1
 1704 01ea 4F       		.byte	0x4f
 1705 01eb 00000000 		.4byte	.LFB65
 1706 01ef 18000000 		.4byte	.LFE65-.LFB65
 1707 01f3 01       		.uleb128 0x1
 1708 01f4 9C       		.byte	0x9c
 1709 01f5 0D       		.uleb128 0xd
 1710 01f6 86010000 		.4byte	.LASF50
 1711 01fa 01       		.byte	0x1
 1712 01fb 53       		.byte	0x53
 1713 01fc 68000000 		.4byte	0x68
 1714 0200 00000000 		.4byte	.LFB66
 1715 0204 30060000 		.4byte	.LFE66-.LFB66
 1716 0208 01       		.uleb128 0x1
 1717 0209 9C       		.byte	0x9c
 1718 020a F1020000 		.4byte	0x2f1
 1719 020e 0E       		.uleb128 0xe
 1720 020f F4000000 		.4byte	.LBB2
 1721 0213 BE020000 		.4byte	.LBE2-.LBB2
 1722 0217 86020000 		.4byte	0x286
 1723 021b 0F       		.uleb128 0xf
 1724 021c F9050000 		.4byte	.LASF38
 1725 0220 01       		.byte	0x1
 1726 0221 82       		.byte	0x82
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 39


 1727 0222 68000000 		.4byte	0x68
 1728 0226 02       		.uleb128 0x2
 1729 0227 91       		.byte	0x91
 1730 0228 6C       		.sleb128 -20
 1731 0229 0F       		.uleb128 0xf
 1732 022a BB040000 		.4byte	.LASF39
 1733 022e 01       		.byte	0x1
 1734 022f 83       		.byte	0x83
 1735 0230 68000000 		.4byte	0x68
 1736 0234 02       		.uleb128 0x2
 1737 0235 91       		.byte	0x91
 1738 0236 68       		.sleb128 -24
 1739 0237 0F       		.uleb128 0xf
 1740 0238 E6030000 		.4byte	.LASF40
 1741 023c 01       		.byte	0x1
 1742 023d 84       		.byte	0x84
 1743 023e 68000000 		.4byte	0x68
 1744 0242 02       		.uleb128 0x2
 1745 0243 91       		.byte	0x91
 1746 0244 64       		.sleb128 -28
 1747 0245 0F       		.uleb128 0xf
 1748 0246 B4050000 		.4byte	.LASF41
 1749 024a 01       		.byte	0x1
 1750 024b 85       		.byte	0x85
 1751 024c 68000000 		.4byte	0x68
 1752 0250 02       		.uleb128 0x2
 1753 0251 91       		.byte	0x91
 1754 0252 60       		.sleb128 -32
 1755 0253 0F       		.uleb128 0xf
 1756 0254 4C030000 		.4byte	.LASF42
 1757 0258 01       		.byte	0x1
 1758 0259 86       		.byte	0x86
 1759 025a 68000000 		.4byte	0x68
 1760 025e 02       		.uleb128 0x2
 1761 025f 91       		.byte	0x91
 1762 0260 5C       		.sleb128 -36
 1763 0261 0F       		.uleb128 0xf
 1764 0262 DF020000 		.4byte	.LASF43
 1765 0266 01       		.byte	0x1
 1766 0267 87       		.byte	0x87
 1767 0268 68000000 		.4byte	0x68
 1768 026c 02       		.uleb128 0x2
 1769 026d 91       		.byte	0x91
 1770 026e 58       		.sleb128 -40
 1771 026f 10       		.uleb128 0x10
 1772 0270 18010000 		.4byte	.LBB3
 1773 0274 98000000 		.4byte	.LBE3-.LBB3
 1774 0278 11       		.uleb128 0x11
 1775 0279 6900     		.ascii	"i\000"
 1776 027b 01       		.byte	0x1
 1777 027c 88       		.byte	0x88
 1778 027d 68000000 		.4byte	0x68
 1779 0281 02       		.uleb128 0x2
 1780 0282 91       		.byte	0x91
 1781 0283 54       		.sleb128 -44
 1782 0284 00       		.byte	0
 1783 0285 00       		.byte	0
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 40


 1784 0286 10       		.uleb128 0x10
 1785 0287 F6030000 		.4byte	.LBB4
 1786 028b D4010000 		.4byte	.LBE4-.LBB4
 1787 028f 12       		.uleb128 0x12
 1788 0290 FA020000 		.4byte	.LASF44
 1789 0294 01       		.byte	0x1
 1790 0295 0A01     		.2byte	0x10a
 1791 0297 A1000000 		.4byte	0xa1
 1792 029b 03       		.uleb128 0x3
 1793 029c 91       		.byte	0x91
 1794 029d BC7F     		.sleb128 -68
 1795 029f 12       		.uleb128 0x12
 1796 02a0 DC040000 		.4byte	.LASF45
 1797 02a4 01       		.byte	0x1
 1798 02a5 0B01     		.2byte	0x10b
 1799 02a7 A1000000 		.4byte	0xa1
 1800 02ab 03       		.uleb128 0x3
 1801 02ac 91       		.byte	0x91
 1802 02ad A47F     		.sleb128 -92
 1803 02af 12       		.uleb128 0x12
 1804 02b0 8A020000 		.4byte	.LASF46
 1805 02b4 01       		.byte	0x1
 1806 02b5 2401     		.2byte	0x124
 1807 02b7 91000000 		.4byte	0x91
 1808 02bb 03       		.uleb128 0x3
 1809 02bc 91       		.byte	0x91
 1810 02bd 9C7F     		.sleb128 -100
 1811 02bf 12       		.uleb128 0x12
 1812 02c0 18030000 		.4byte	.LASF47
 1813 02c4 01       		.byte	0x1
 1814 02c5 2501     		.2byte	0x125
 1815 02c7 91000000 		.4byte	0x91
 1816 02cb 03       		.uleb128 0x3
 1817 02cc 91       		.byte	0x91
 1818 02cd 947F     		.sleb128 -108
 1819 02cf 12       		.uleb128 0x12
 1820 02d0 A1040000 		.4byte	.LASF48
 1821 02d4 01       		.byte	0x1
 1822 02d5 2901     		.2byte	0x129
 1823 02d7 91000000 		.4byte	0x91
 1824 02db 03       		.uleb128 0x3
 1825 02dc 91       		.byte	0x91
 1826 02dd 8C7F     		.sleb128 -116
 1827 02df 12       		.uleb128 0x12
 1828 02e0 0B000000 		.4byte	.LASF49
 1829 02e4 01       		.byte	0x1
 1830 02e5 2A01     		.2byte	0x12a
 1831 02e7 91000000 		.4byte	0x91
 1832 02eb 03       		.uleb128 0x3
 1833 02ec 91       		.byte	0x91
 1834 02ed 847F     		.sleb128 -124
 1835 02ef 00       		.byte	0
 1836 02f0 00       		.byte	0
 1837 02f1 13       		.uleb128 0x13
 1838 02f2 42020000 		.4byte	.LASF51
 1839 02f6 01       		.byte	0x1
 1840 02f7 4801     		.2byte	0x148
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 41


 1841 02f9 00000000 		.4byte	.LFB67
 1842 02fd 3E000000 		.4byte	.LFE67-.LFB67
 1843 0301 01       		.uleb128 0x1
 1844 0302 9C       		.byte	0x9c
 1845 0303 15030000 		.4byte	0x315
 1846 0307 14       		.uleb128 0x14
 1847 0308 7300     		.ascii	"s\000"
 1848 030a 01       		.byte	0x1
 1849 030b 4801     		.2byte	0x148
 1850 030d 84000000 		.4byte	0x84
 1851 0311 02       		.uleb128 0x2
 1852 0312 91       		.byte	0x91
 1853 0313 74       		.sleb128 -12
 1854 0314 00       		.byte	0
 1855 0315 13       		.uleb128 0x13
 1856 0316 00000000 		.4byte	.LASF52
 1857 031a 01       		.byte	0x1
 1858 031b 5501     		.2byte	0x155
 1859 031d 00000000 		.4byte	.LFB68
 1860 0321 26000000 		.4byte	.LFE68-.LFB68
 1861 0325 01       		.uleb128 0x1
 1862 0326 9C       		.byte	0x9c
 1863 0327 39030000 		.4byte	0x339
 1864 032b 14       		.uleb128 0x14
 1865 032c 6300     		.ascii	"c\000"
 1866 032e 01       		.byte	0x1
 1867 032f 5501     		.2byte	0x155
 1868 0331 8A000000 		.4byte	0x8a
 1869 0335 02       		.uleb128 0x2
 1870 0336 91       		.byte	0x91
 1871 0337 77       		.sleb128 -9
 1872 0338 00       		.byte	0
 1873 0339 15       		.uleb128 0x15
 1874 033a AD030000 		.4byte	.LASF53
 1875 033e 01       		.byte	0x1
 1876 033f 5D01     		.2byte	0x15d
 1877 0341 00000000 		.4byte	.LFB69
 1878 0345 0C010000 		.4byte	.LFE69-.LFB69
 1879 0349 01       		.uleb128 0x1
 1880 034a 9C       		.byte	0x9c
 1881 034b 0A040000 		.4byte	0x40a
 1882 034f 16       		.uleb128 0x16
 1883 0350 F9050000 		.4byte	.LASF38
 1884 0354 01       		.byte	0x1
 1885 0355 5D01     		.2byte	0x15d
 1886 0357 68000000 		.4byte	0x68
 1887 035b 03       		.uleb128 0x3
 1888 035c 91       		.byte	0x91
 1889 035d AC7F     		.sleb128 -84
 1890 035f 16       		.uleb128 0x16
 1891 0360 BB040000 		.4byte	.LASF39
 1892 0364 01       		.byte	0x1
 1893 0365 5D01     		.2byte	0x15d
 1894 0367 68000000 		.4byte	0x68
 1895 036b 03       		.uleb128 0x3
 1896 036c 91       		.byte	0x91
 1897 036d A87F     		.sleb128 -88
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 42


 1898 036f 16       		.uleb128 0x16
 1899 0370 E6030000 		.4byte	.LASF40
 1900 0374 01       		.byte	0x1
 1901 0375 5D01     		.2byte	0x15d
 1902 0377 68000000 		.4byte	0x68
 1903 037b 03       		.uleb128 0x3
 1904 037c 91       		.byte	0x91
 1905 037d A47F     		.sleb128 -92
 1906 037f 16       		.uleb128 0x16
 1907 0380 4C030000 		.4byte	.LASF42
 1908 0384 01       		.byte	0x1
 1909 0385 5D01     		.2byte	0x15d
 1910 0387 68000000 		.4byte	0x68
 1911 038b 03       		.uleb128 0x3
 1912 038c 91       		.byte	0x91
 1913 038d A07F     		.sleb128 -96
 1914 038f 16       		.uleb128 0x16
 1915 0390 DF020000 		.4byte	.LASF43
 1916 0394 01       		.byte	0x1
 1917 0395 5D01     		.2byte	0x15d
 1918 0397 68000000 		.4byte	0x68
 1919 039b 02       		.uleb128 0x2
 1920 039c 91       		.byte	0x91
 1921 039d 00       		.sleb128 0
 1922 039e 16       		.uleb128 0x16
 1923 039f B4050000 		.4byte	.LASF41
 1924 03a3 01       		.byte	0x1
 1925 03a4 5D01     		.2byte	0x15d
 1926 03a6 68000000 		.4byte	0x68
 1927 03aa 02       		.uleb128 0x2
 1928 03ab 91       		.byte	0x91
 1929 03ac 04       		.sleb128 4
 1930 03ad 12       		.uleb128 0x12
 1931 03ae 71040000 		.4byte	.LASF54
 1932 03b2 01       		.byte	0x1
 1933 03b3 5E01     		.2byte	0x15e
 1934 03b5 0A040000 		.4byte	0x40a
 1935 03b9 02       		.uleb128 0x2
 1936 03ba 91       		.byte	0x91
 1937 03bb 6C       		.sleb128 -20
 1938 03bc 12       		.uleb128 0x12
 1939 03bd 15040000 		.4byte	.LASF55
 1940 03c1 01       		.byte	0x1
 1941 03c2 5F01     		.2byte	0x15f
 1942 03c4 0A040000 		.4byte	0x40a
 1943 03c8 02       		.uleb128 0x2
 1944 03c9 91       		.byte	0x91
 1945 03ca 60       		.sleb128 -32
 1946 03cb 12       		.uleb128 0x12
 1947 03cc 7E040000 		.4byte	.LASF56
 1948 03d0 01       		.byte	0x1
 1949 03d1 6001     		.2byte	0x160
 1950 03d3 0A040000 		.4byte	0x40a
 1951 03d7 02       		.uleb128 0x2
 1952 03d8 91       		.byte	0x91
 1953 03d9 54       		.sleb128 -44
 1954 03da 12       		.uleb128 0x12
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 43


 1955 03db D8050000 		.4byte	.LASF57
 1956 03df 01       		.byte	0x1
 1957 03e0 6101     		.2byte	0x161
 1958 03e2 0A040000 		.4byte	0x40a
 1959 03e6 02       		.uleb128 0x2
 1960 03e7 91       		.byte	0x91
 1961 03e8 48       		.sleb128 -56
 1962 03e9 12       		.uleb128 0x12
 1963 03ea 47000000 		.4byte	.LASF58
 1964 03ee 01       		.byte	0x1
 1965 03ef 6201     		.2byte	0x162
 1966 03f1 0A040000 		.4byte	0x40a
 1967 03f5 03       		.uleb128 0x3
 1968 03f6 91       		.byte	0x91
 1969 03f7 BC7F     		.sleb128 -68
 1970 03f9 12       		.uleb128 0x12
 1971 03fa CD040000 		.4byte	.LASF59
 1972 03fe 01       		.byte	0x1
 1973 03ff 6301     		.2byte	0x163
 1974 0401 0A040000 		.4byte	0x40a
 1975 0405 03       		.uleb128 0x3
 1976 0406 91       		.byte	0x91
 1977 0407 B07F     		.sleb128 -80
 1978 0409 00       		.byte	0
 1979 040a 06       		.uleb128 0x6
 1980 040b 8A000000 		.4byte	0x8a
 1981 040f 1A040000 		.4byte	0x41a
 1982 0413 07       		.uleb128 0x7
 1983 0414 7D000000 		.4byte	0x7d
 1984 0418 0A       		.byte	0xa
 1985 0419 00       		.byte	0
 1986 041a 17       		.uleb128 0x17
 1987 041b A7050000 		.4byte	.LASF60
 1988 041f 06       		.byte	0x6
 1989 0420 1207     		.2byte	0x712
 1990 0422 26040000 		.4byte	0x426
 1991 0426 18       		.uleb128 0x18
 1992 0427 B1000000 		.4byte	0xb1
 1993 042b 19       		.uleb128 0x19
 1994 042c 747300   		.ascii	"ts\000"
 1995 042f 05       		.byte	0x5
 1996 0430 10       		.byte	0x10
 1997 0431 BC000000 		.4byte	0xbc
 1998 0435 05       		.uleb128 0x5
 1999 0436 03       		.byte	0x3
 2000 0437 00000000 		.4byte	ts
 2001 043b 1A       		.uleb128 0x1a
 2002 043c 62050000 		.4byte	.LASF61
 2003 0440 05       		.byte	0x5
 2004 0441 11       		.byte	0x11
 2005 0442 C8000000 		.4byte	0xc8
 2006 0446 05       		.uleb128 0x5
 2007 0447 03       		.byte	0x3
 2008 0448 00000000 		.4byte	ts_enc
 2009 044c 1A       		.uleb128 0x1a
 2010 044d 69050000 		.4byte	.LASF62
 2011 0451 05       		.byte	0x5
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 44


 2012 0452 12       		.byte	0x12
 2013 0453 C8000000 		.4byte	0xc8
 2014 0457 05       		.uleb128 0x5
 2015 0458 03       		.byte	0x3
 2016 0459 00000000 		.4byte	ts_update
 2017 045d 1A       		.uleb128 0x1a
 2018 045e 2A050000 		.4byte	.LASF63
 2019 0462 05       		.byte	0x5
 2020 0463 13       		.byte	0x13
 2021 0464 C8000000 		.4byte	0xc8
 2022 0468 05       		.uleb128 0x5
 2023 0469 03       		.byte	0x3
 2024 046a 00000000 		.4byte	ts_speed
 2025 046e 1A       		.uleb128 0x1a
 2026 046f 57050000 		.4byte	.LASF64
 2027 0473 05       		.byte	0x5
 2028 0474 14       		.byte	0x14
 2029 0475 C8000000 		.4byte	0xc8
 2030 0479 05       		.uleb128 0x5
 2031 047a 03       		.byte	0x3
 2032 047b 00000000 		.4byte	ts_display
 2033 047f 1A       		.uleb128 0x1a
 2034 0480 39050000 		.4byte	.LASF65
 2035 0484 05       		.byte	0x5
 2036 0485 16       		.byte	0x16
 2037 0486 BC000000 		.4byte	0xbc
 2038 048a 05       		.uleb128 0x5
 2039 048b 03       		.byte	0x3
 2040 048c 00000000 		.4byte	flag_ts_enc
 2041 0490 1A       		.uleb128 0x1a
 2042 0491 54020000 		.4byte	.LASF66
 2043 0495 05       		.byte	0x5
 2044 0496 17       		.byte	0x17
 2045 0497 BC000000 		.4byte	0xbc
 2046 049b 05       		.uleb128 0x5
 2047 049c 03       		.byte	0x3
 2048 049d 00000000 		.4byte	flag_ts_update
 2049 04a1 1A       		.uleb128 0x1a
 2050 04a2 AD040000 		.4byte	.LASF67
 2051 04a6 05       		.byte	0x5
 2052 04a7 18       		.byte	0x18
 2053 04a8 BC000000 		.4byte	0xbc
 2054 04ac 05       		.uleb128 0x5
 2055 04ad 03       		.byte	0x3
 2056 04ae 00000000 		.4byte	flag_ts_speed
 2057 04b2 1A       		.uleb128 0x1a
 2058 04b3 C1020000 		.4byte	.LASF68
 2059 04b7 05       		.byte	0x5
 2060 04b8 19       		.byte	0x19
 2061 04b9 BC000000 		.4byte	0xbc
 2062 04bd 05       		.uleb128 0x5
 2063 04be 03       		.byte	0x3
 2064 04bf 00000000 		.4byte	flag_ts_display
 2065 04c3 1A       		.uleb128 0x1a
 2066 04c4 D1020000 		.4byte	.LASF69
 2067 04c8 05       		.byte	0x5
 2068 04c9 1C       		.byte	0x1c
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 45


 2069 04ca BC000000 		.4byte	0xbc
 2070 04ce 05       		.uleb128 0x5
 2071 04cf 03       		.byte	0x3
 2072 04d0 00000000 		.4byte	flag_rx
 2073 04d4 1A       		.uleb128 0x1a
 2074 04d5 2C000000 		.4byte	.LASF70
 2075 04d9 05       		.byte	0x5
 2076 04da 1D       		.byte	0x1d
 2077 04db BC000000 		.4byte	0xbc
 2078 04df 05       		.uleb128 0x5
 2079 04e0 03       		.byte	0x3
 2080 04e1 00000000 		.4byte	flag_packet
 2081 04e5 1A       		.uleb128 0x1a
 2082 04e6 9E030000 		.4byte	.LASF71
 2083 04ea 05       		.byte	0x5
 2084 04eb 1E       		.byte	0x1e
 2085 04ec BC000000 		.4byte	0xbc
 2086 04f0 05       		.uleb128 0x5
 2087 04f1 03       		.byte	0x3
 2088 04f2 00000000 		.4byte	flag_KB_string
 2089 04f6 1A       		.uleb128 0x1a
 2090 04f7 5F030000 		.4byte	.LASF72
 2091 04fb 05       		.byte	0x5
 2092 04fc 20       		.byte	0x20
 2093 04fd BC000000 		.4byte	0xbc
 2094 0501 05       		.uleb128 0x5
 2095 0502 03       		.byte	0x3
 2096 0503 00000000 		.4byte	dataready_flag
 2097 0507 1A       		.uleb128 0x1a
 2098 0508 73050000 		.4byte	.LASF73
 2099 050c 05       		.byte	0x5
 2100 050d 22       		.byte	0x22
 2101 050e BC000000 		.4byte	0xbc
 2102 0512 05       		.uleb128 0x5
 2103 0513 03       		.byte	0x3
 2104 0514 00000000 		.4byte	flag_rf_transmission_active
 2105 0518 06       		.uleb128 0x6
 2106 0519 8A000000 		.4byte	0x8a
 2107 051d 28050000 		.4byte	0x528
 2108 0521 07       		.uleb128 0x7
 2109 0522 7D000000 		.4byte	0x7d
 2110 0526 3F       		.byte	0x3f
 2111 0527 00       		.byte	0
 2112 0528 1A       		.uleb128 0x1a
 2113 0529 CA050000 		.4byte	.LASF74
 2114 052d 05       		.byte	0x5
 2115 052e 25       		.byte	0x25
 2116 052f 18050000 		.4byte	0x518
 2117 0533 05       		.uleb128 0x5
 2118 0534 03       		.byte	0x3
 2119 0535 00000000 		.4byte	displaystring
 2120 0539 1A       		.uleb128 0x1a
 2121 053a 0A020000 		.4byte	.LASF75
 2122 053e 05       		.byte	0x5
 2123 053f 26       		.byte	0x26
 2124 0540 18050000 		.4byte	0x518
 2125 0544 05       		.uleb128 0x5
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 46


 2126 0545 03       		.byte	0x3
 2127 0546 00000000 		.4byte	line
 2128 054a 1A       		.uleb128 0x1a
 2129 054b 2F030000 		.4byte	.LASF76
 2130 054f 05       		.byte	0x5
 2131 0550 26       		.byte	0x26
 2132 0551 18050000 		.4byte	0x518
 2133 0555 05       		.uleb128 0x5
 2134 0556 03       		.byte	0x3
 2135 0557 00000000 		.4byte	entry
 2136 055b 06       		.uleb128 0x6
 2137 055c BC000000 		.4byte	0xbc
 2138 0560 6B050000 		.4byte	0x56b
 2139 0564 07       		.uleb128 0x7
 2140 0565 7D000000 		.4byte	0x7d
 2141 0569 3F       		.byte	0x3f
 2142 056a 00       		.byte	0
 2143 056b 1A       		.uleb128 0x1a
 2144 056c EE000000 		.4byte	.LASF77
 2145 0570 05       		.byte	0x5
 2146 0571 27       		.byte	0x27
 2147 0572 5B050000 		.4byte	0x55b
 2148 0576 05       		.uleb128 0x5
 2149 0577 03       		.byte	0x3
 2150 0578 00000000 		.4byte	usbBuffer
 2151 057c 1A       		.uleb128 0x1a
 2152 057d 7D000000 		.4byte	.LASF78
 2153 0581 05       		.byte	0x5
 2154 0582 3C       		.byte	0x3c
 2155 0583 FA000000 		.4byte	0xfa
 2156 0587 05       		.uleb128 0x5
 2157 0588 03       		.byte	0x3
 2158 0589 00000000 		.4byte	system_state
 2159 058d 1A       		.uleb128 0x1a
 2160 058e 9A050000 		.4byte	.LASF79
 2161 0592 01       		.byte	0x1
 2162 0593 27       		.byte	0x27
 2163 0594 68000000 		.4byte	0x68
 2164 0598 05       		.uleb128 0x5
 2165 0599 03       		.byte	0x3
 2166 059a 00000000 		.4byte	TARGET_SPEED
 2167 059e 1A       		.uleb128 0x1a
 2168 059f DC030000 		.4byte	.LASF80
 2169 05a3 01       		.byte	0x1
 2170 05a4 28       		.byte	0x28
 2171 05a5 68000000 		.4byte	0x68
 2172 05a9 05       		.uleb128 0x5
 2173 05aa 03       		.byte	0x3
 2174 05ab 00000000 		.4byte	restoring
 2175 05af 1A       		.uleb128 0x1a
 2176 05b0 9B010000 		.4byte	.LASF81
 2177 05b4 01       		.byte	0x1
 2178 05b5 29       		.byte	0x29
 2179 05b6 68000000 		.4byte	0x68
 2180 05ba 05       		.uleb128 0x5
 2181 05bb 03       		.byte	0x3
 2182 05bc 00000000 		.4byte	turningDirection
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 47


 2183 05c0 1A       		.uleb128 0x1a
 2184 05c1 1D050000 		.4byte	.LASF82
 2185 05c5 01       		.byte	0x1
 2186 05c6 2A       		.byte	0x2a
 2187 05c7 68000000 		.4byte	0x68
 2188 05cb 05       		.uleb128 0x5
 2189 05cc 03       		.byte	0x3
 2190 05cd 00000000 		.4byte	turningCount
 2191 05d1 1A       		.uleb128 0x1a
 2192 05d2 BE030000 		.4byte	.LASF83
 2193 05d6 01       		.byte	0x1
 2194 05d7 2B       		.byte	0x2b
 2195 05d8 E2050000 		.4byte	0x5e2
 2196 05dc 05       		.uleb128 0x5
 2197 05dd 03       		.byte	0x3
 2198 05de 00000000 		.4byte	shouldUpdate
 2199 05e2 18       		.uleb128 0x18
 2200 05e3 68000000 		.4byte	0x68
 2201 05e7 1A       		.uleb128 0x1a
 2202 05e8 B3020000 		.4byte	.LASF84
 2203 05ec 01       		.byte	0x1
 2204 05ed 2D       		.byte	0x2d
 2205 05ee E2050000 		.4byte	0x5e2
 2206 05f2 05       		.uleb128 0x5
 2207 05f3 03       		.byte	0x3
 2208 05f4 00000000 		.4byte	dotsTravelled
 2209 05f8 1A       		.uleb128 0x1a
 2210 05f9 0E050000 		.4byte	.LASF85
 2211 05fd 01       		.byte	0x1
 2212 05fe 34       		.byte	0x34
 2213 05ff E2050000 		.4byte	0x5e2
 2214 0603 05       		.uleb128 0x5
 2215 0604 03       		.byte	0x3
 2216 0605 00000000 		.4byte	flag
 2217 0609 06       		.uleb128 0x6
 2218 060a E2050000 		.4byte	0x5e2
 2219 060e 1A060000 		.4byte	0x61a
 2220 0612 1B       		.uleb128 0x1b
 2221 0613 7D000000 		.4byte	0x7d
 2222 0617 E703     		.2byte	0x3e7
 2223 0619 00       		.byte	0
 2224 061a 1A       		.uleb128 0x1a
 2225 061b 8A040000 		.4byte	.LASF86
 2226 061f 01       		.byte	0x1
 2227 0620 35       		.byte	0x35
 2228 0621 2B060000 		.4byte	0x62b
 2229 0625 05       		.uleb128 0x5
 2230 0626 03       		.byte	0x3
 2231 0627 00000000 		.4byte	valuesLeftIntersection
 2232 062b 18       		.uleb128 0x18
 2233 062c 09060000 		.4byte	0x609
 2234 0630 1A       		.uleb128 0x1a
 2235 0631 38000000 		.4byte	.LASF87
 2236 0635 01       		.byte	0x1
 2237 0636 36       		.byte	0x36
 2238 0637 41060000 		.4byte	0x641
 2239 063b 05       		.uleb128 0x5
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 48


 2240 063c 03       		.byte	0x3
 2241 063d 00000000 		.4byte	valuesLeftLine
 2242 0641 18       		.uleb128 0x18
 2243 0642 09060000 		.4byte	0x609
 2244 0646 1A       		.uleb128 0x1a
 2245 0647 FA030000 		.4byte	.LASF88
 2246 064b 01       		.byte	0x1
 2247 064c 37       		.byte	0x37
 2248 064d 57060000 		.4byte	0x657
 2249 0651 05       		.uleb128 0x5
 2250 0652 03       		.byte	0x3
 2251 0653 00000000 		.4byte	valuesMiddleLine
 2252 0657 18       		.uleb128 0x18
 2253 0658 09060000 		.4byte	0x609
 2254 065c 1A       		.uleb128 0x1a
 2255 065d 6A000000 		.4byte	.LASF89
 2256 0661 01       		.byte	0x1
 2257 0662 38       		.byte	0x38
 2258 0663 6D060000 		.4byte	0x66d
 2259 0667 05       		.uleb128 0x5
 2260 0668 03       		.byte	0x3
 2261 0669 00000000 		.4byte	valuesTurnComplete
 2262 066d 18       		.uleb128 0x18
 2263 066e 09060000 		.4byte	0x609
 2264 0672 1A       		.uleb128 0x1a
 2265 0673 8B010000 		.4byte	.LASF90
 2266 0677 01       		.byte	0x1
 2267 0678 39       		.byte	0x39
 2268 0679 83060000 		.4byte	0x683
 2269 067d 05       		.uleb128 0x5
 2270 067e 03       		.byte	0x3
 2271 067f 00000000 		.4byte	valuesRightLine
 2272 0683 18       		.uleb128 0x18
 2273 0684 09060000 		.4byte	0x609
 2274 0688 1A       		.uleb128 0x1a
 2275 0689 F2010000 		.4byte	.LASF91
 2276 068d 01       		.byte	0x1
 2277 068e 3A       		.byte	0x3a
 2278 068f 99060000 		.4byte	0x699
 2279 0693 05       		.uleb128 0x5
 2280 0694 03       		.byte	0x3
 2281 0695 00000000 		.4byte	valuesRightIntersection
 2282 0699 18       		.uleb128 0x18
 2283 069a 09060000 		.4byte	0x609
 2284 069e 1A       		.uleb128 0x1a
 2285 069f 33050000 		.4byte	.LASF92
 2286 06a3 01       		.byte	0x1
 2287 06a4 3B       		.byte	0x3b
 2288 06a5 E2050000 		.4byte	0x5e2
 2289 06a9 05       		.uleb128 0x5
 2290 06aa 03       		.byte	0x3
 2291 06ab 00000000 		.4byte	count
 2292 06af 1A       		.uleb128 0x1a
 2293 06b0 A1020000 		.4byte	.LASF93
 2294 06b4 01       		.byte	0x1
 2295 06b5 3C       		.byte	0x3c
 2296 06b6 E2050000 		.4byte	0x5e2
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 49


 2297 06ba 05       		.uleb128 0x5
 2298 06bb 03       		.byte	0x3
 2299 06bc 00000000 		.4byte	lastVeerDirection
 2300 06c0 1A       		.uleb128 0x1a
 2301 06c1 13050000 		.4byte	.LASF94
 2302 06c5 01       		.byte	0x1
 2303 06c6 3E       		.byte	0x3e
 2304 06c7 E2050000 		.4byte	0x5e2
 2305 06cb 05       		.uleb128 0x5
 2306 06cc 03       		.byte	0x3
 2307 06cd 00000000 		.4byte	motorFlag
 2308 06d1 1A       		.uleb128 0x1a
 2309 06d2 F4050000 		.4byte	.LASF95
 2310 06d6 01       		.byte	0x1
 2311 06d7 3F       		.byte	0x3f
 2312 06d8 E2050000 		.4byte	0x5e2
 2313 06dc 05       		.uleb128 0x5
 2314 06dd 03       		.byte	0x3
 2315 06de 00000000 		.4byte	step
 2316 06e2 19       		.uleb128 0x19
 2317 06e3 76314C00 		.ascii	"v1L\000"
 2318 06e7 01       		.byte	0x1
 2319 06e8 40       		.byte	0x40
 2320 06e9 E2050000 		.4byte	0x5e2
 2321 06ed 05       		.uleb128 0x5
 2322 06ee 03       		.byte	0x3
 2323 06ef 00000000 		.4byte	v1L
 2324 06f3 19       		.uleb128 0x19
 2325 06f4 76324C00 		.ascii	"v2L\000"
 2326 06f8 01       		.byte	0x1
 2327 06f9 41       		.byte	0x41
 2328 06fa E2050000 		.4byte	0x5e2
 2329 06fe 05       		.uleb128 0x5
 2330 06ff 03       		.byte	0x3
 2331 0700 00000000 		.4byte	v2L
 2332 0704 19       		.uleb128 0x19
 2333 0705 76315200 		.ascii	"v1R\000"
 2334 0709 01       		.byte	0x1
 2335 070a 42       		.byte	0x42
 2336 070b E2050000 		.4byte	0x5e2
 2337 070f 05       		.uleb128 0x5
 2338 0710 03       		.byte	0x3
 2339 0711 00000000 		.4byte	v1R
 2340 0715 19       		.uleb128 0x19
 2341 0716 76325200 		.ascii	"v2R\000"
 2342 071a 01       		.byte	0x1
 2343 071b 43       		.byte	0x43
 2344 071c E2050000 		.4byte	0x5e2
 2345 0720 05       		.uleb128 0x5
 2346 0721 03       		.byte	0x3
 2347 0722 00000000 		.4byte	v2R
 2348 0726 1A       		.uleb128 0x1a
 2349 0727 0F020000 		.4byte	.LASF96
 2350 072b 01       		.byte	0x1
 2351 072c 44       		.byte	0x44
 2352 072d E2050000 		.4byte	0x5e2
 2353 0731 05       		.uleb128 0x5
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 50


 2354 0732 03       		.byte	0x3
 2355 0733 00000000 		.4byte	numRotationsL
 2356 0737 1A       		.uleb128 0x1a
 2357 0738 E6050000 		.4byte	.LASF97
 2358 073c 01       		.byte	0x1
 2359 073d 45       		.byte	0x45
 2360 073e E2050000 		.4byte	0x5e2
 2361 0742 05       		.uleb128 0x5
 2362 0743 03       		.byte	0x3
 2363 0744 00000000 		.4byte	numRotationsR
 2364 0748 1A       		.uleb128 0x1a
 2365 0749 63020000 		.4byte	.LASF98
 2366 074d 01       		.byte	0x1
 2367 074e 46       		.byte	0x46
 2368 074f E2050000 		.4byte	0x5e2
 2369 0753 05       		.uleb128 0x5
 2370 0754 03       		.byte	0x3
 2371 0755 00000000 		.4byte	distanceTravelled
 2372 0759 1A       		.uleb128 0x1a
 2373 075a B3010000 		.4byte	.LASF99
 2374 075e 01       		.byte	0x1
 2375 075f 47       		.byte	0x47
 2376 0760 E2050000 		.4byte	0x5e2
 2377 0764 05       		.uleb128 0x5
 2378 0765 03       		.byte	0x3
 2379 0766 00000000 		.4byte	distancePerSecondL
 2380 076a 1A       		.uleb128 0x1a
 2381 076b D2010000 		.4byte	.LASF100
 2382 076f 01       		.byte	0x1
 2383 0770 48       		.byte	0x48
 2384 0771 E2050000 		.4byte	0x5e2
 2385 0775 05       		.uleb128 0x5
 2386 0776 03       		.byte	0x3
 2387 0777 00000000 		.4byte	distancePerSecondR
 2388 077b 1A       		.uleb128 0x1a
 2389 077c 18000000 		.4byte	.LASF101
 2390 0780 01       		.byte	0x1
 2391 0781 49       		.byte	0x49
 2392 0782 68000000 		.4byte	0x68
 2393 0786 05       		.uleb128 0x5
 2394 0787 03       		.byte	0x3
 2395 0788 00000000 		.4byte	lastAdjustDirection
 2396 078c 00       		.byte	0
 2397              		.section	.debug_abbrev,"",%progbits
 2398              	.Ldebug_abbrev0:
 2399 0000 01       		.uleb128 0x1
 2400 0001 11       		.uleb128 0x11
 2401 0002 01       		.byte	0x1
 2402 0003 25       		.uleb128 0x25
 2403 0004 0E       		.uleb128 0xe
 2404 0005 13       		.uleb128 0x13
 2405 0006 0B       		.uleb128 0xb
 2406 0007 03       		.uleb128 0x3
 2407 0008 0E       		.uleb128 0xe
 2408 0009 1B       		.uleb128 0x1b
 2409 000a 0E       		.uleb128 0xe
 2410 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 51


 2411 000c 17       		.uleb128 0x17
 2412 000d 11       		.uleb128 0x11
 2413 000e 01       		.uleb128 0x1
 2414 000f 10       		.uleb128 0x10
 2415 0010 17       		.uleb128 0x17
 2416 0011 00       		.byte	0
 2417 0012 00       		.byte	0
 2418 0013 02       		.uleb128 0x2
 2419 0014 24       		.uleb128 0x24
 2420 0015 00       		.byte	0
 2421 0016 0B       		.uleb128 0xb
 2422 0017 0B       		.uleb128 0xb
 2423 0018 3E       		.uleb128 0x3e
 2424 0019 0B       		.uleb128 0xb
 2425 001a 03       		.uleb128 0x3
 2426 001b 0E       		.uleb128 0xe
 2427 001c 00       		.byte	0
 2428 001d 00       		.byte	0
 2429 001e 03       		.uleb128 0x3
 2430 001f 16       		.uleb128 0x16
 2431 0020 00       		.byte	0
 2432 0021 03       		.uleb128 0x3
 2433 0022 0E       		.uleb128 0xe
 2434 0023 3A       		.uleb128 0x3a
 2435 0024 0B       		.uleb128 0xb
 2436 0025 3B       		.uleb128 0x3b
 2437 0026 0B       		.uleb128 0xb
 2438 0027 49       		.uleb128 0x49
 2439 0028 13       		.uleb128 0x13
 2440 0029 00       		.byte	0
 2441 002a 00       		.byte	0
 2442 002b 04       		.uleb128 0x4
 2443 002c 24       		.uleb128 0x24
 2444 002d 00       		.byte	0
 2445 002e 0B       		.uleb128 0xb
 2446 002f 0B       		.uleb128 0xb
 2447 0030 3E       		.uleb128 0x3e
 2448 0031 0B       		.uleb128 0xb
 2449 0032 03       		.uleb128 0x3
 2450 0033 08       		.uleb128 0x8
 2451 0034 00       		.byte	0
 2452 0035 00       		.byte	0
 2453 0036 05       		.uleb128 0x5
 2454 0037 0F       		.uleb128 0xf
 2455 0038 00       		.byte	0
 2456 0039 0B       		.uleb128 0xb
 2457 003a 0B       		.uleb128 0xb
 2458 003b 49       		.uleb128 0x49
 2459 003c 13       		.uleb128 0x13
 2460 003d 00       		.byte	0
 2461 003e 00       		.byte	0
 2462 003f 06       		.uleb128 0x6
 2463 0040 01       		.uleb128 0x1
 2464 0041 01       		.byte	0x1
 2465 0042 49       		.uleb128 0x49
 2466 0043 13       		.uleb128 0x13
 2467 0044 01       		.uleb128 0x1
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 52


 2468 0045 13       		.uleb128 0x13
 2469 0046 00       		.byte	0
 2470 0047 00       		.byte	0
 2471 0048 07       		.uleb128 0x7
 2472 0049 21       		.uleb128 0x21
 2473 004a 00       		.byte	0
 2474 004b 49       		.uleb128 0x49
 2475 004c 13       		.uleb128 0x13
 2476 004d 2F       		.uleb128 0x2f
 2477 004e 0B       		.uleb128 0xb
 2478 004f 00       		.byte	0
 2479 0050 00       		.byte	0
 2480 0051 08       		.uleb128 0x8
 2481 0052 16       		.uleb128 0x16
 2482 0053 00       		.byte	0
 2483 0054 03       		.uleb128 0x3
 2484 0055 0E       		.uleb128 0xe
 2485 0056 3A       		.uleb128 0x3a
 2486 0057 0B       		.uleb128 0xb
 2487 0058 3B       		.uleb128 0x3b
 2488 0059 05       		.uleb128 0x5
 2489 005a 49       		.uleb128 0x49
 2490 005b 13       		.uleb128 0x13
 2491 005c 00       		.byte	0
 2492 005d 00       		.byte	0
 2493 005e 09       		.uleb128 0x9
 2494 005f 13       		.uleb128 0x13
 2495 0060 01       		.byte	0x1
 2496 0061 03       		.uleb128 0x3
 2497 0062 0E       		.uleb128 0xe
 2498 0063 0B       		.uleb128 0xb
 2499 0064 0B       		.uleb128 0xb
 2500 0065 3A       		.uleb128 0x3a
 2501 0066 0B       		.uleb128 0xb
 2502 0067 3B       		.uleb128 0x3b
 2503 0068 0B       		.uleb128 0xb
 2504 0069 01       		.uleb128 0x1
 2505 006a 13       		.uleb128 0x13
 2506 006b 00       		.byte	0
 2507 006c 00       		.byte	0
 2508 006d 0A       		.uleb128 0xa
 2509 006e 0D       		.uleb128 0xd
 2510 006f 00       		.byte	0
 2511 0070 03       		.uleb128 0x3
 2512 0071 0E       		.uleb128 0xe
 2513 0072 3A       		.uleb128 0x3a
 2514 0073 0B       		.uleb128 0xb
 2515 0074 3B       		.uleb128 0x3b
 2516 0075 0B       		.uleb128 0xb
 2517 0076 49       		.uleb128 0x49
 2518 0077 13       		.uleb128 0x13
 2519 0078 38       		.uleb128 0x38
 2520 0079 0B       		.uleb128 0xb
 2521 007a 00       		.byte	0
 2522 007b 00       		.byte	0
 2523 007c 0B       		.uleb128 0xb
 2524 007d 2E       		.uleb128 0x2e
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 53


 2525 007e 00       		.byte	0
 2526 007f 3F       		.uleb128 0x3f
 2527 0080 19       		.uleb128 0x19
 2528 0081 03       		.uleb128 0x3
 2529 0082 08       		.uleb128 0x8
 2530 0083 3A       		.uleb128 0x3a
 2531 0084 0B       		.uleb128 0xb
 2532 0085 3B       		.uleb128 0x3b
 2533 0086 0B       		.uleb128 0xb
 2534 0087 27       		.uleb128 0x27
 2535 0088 19       		.uleb128 0x19
 2536 0089 11       		.uleb128 0x11
 2537 008a 01       		.uleb128 0x1
 2538 008b 12       		.uleb128 0x12
 2539 008c 06       		.uleb128 0x6
 2540 008d 40       		.uleb128 0x40
 2541 008e 18       		.uleb128 0x18
 2542 008f 9742     		.uleb128 0x2117
 2543 0091 19       		.uleb128 0x19
 2544 0092 00       		.byte	0
 2545 0093 00       		.byte	0
 2546 0094 0C       		.uleb128 0xc
 2547 0095 2E       		.uleb128 0x2e
 2548 0096 00       		.byte	0
 2549 0097 3F       		.uleb128 0x3f
 2550 0098 19       		.uleb128 0x19
 2551 0099 03       		.uleb128 0x3
 2552 009a 0E       		.uleb128 0xe
 2553 009b 3A       		.uleb128 0x3a
 2554 009c 0B       		.uleb128 0xb
 2555 009d 3B       		.uleb128 0x3b
 2556 009e 0B       		.uleb128 0xb
 2557 009f 27       		.uleb128 0x27
 2558 00a0 19       		.uleb128 0x19
 2559 00a1 11       		.uleb128 0x11
 2560 00a2 01       		.uleb128 0x1
 2561 00a3 12       		.uleb128 0x12
 2562 00a4 06       		.uleb128 0x6
 2563 00a5 40       		.uleb128 0x40
 2564 00a6 18       		.uleb128 0x18
 2565 00a7 9742     		.uleb128 0x2117
 2566 00a9 19       		.uleb128 0x19
 2567 00aa 00       		.byte	0
 2568 00ab 00       		.byte	0
 2569 00ac 0D       		.uleb128 0xd
 2570 00ad 2E       		.uleb128 0x2e
 2571 00ae 01       		.byte	0x1
 2572 00af 3F       		.uleb128 0x3f
 2573 00b0 19       		.uleb128 0x19
 2574 00b1 03       		.uleb128 0x3
 2575 00b2 0E       		.uleb128 0xe
 2576 00b3 3A       		.uleb128 0x3a
 2577 00b4 0B       		.uleb128 0xb
 2578 00b5 3B       		.uleb128 0x3b
 2579 00b6 0B       		.uleb128 0xb
 2580 00b7 49       		.uleb128 0x49
 2581 00b8 13       		.uleb128 0x13
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 54


 2582 00b9 11       		.uleb128 0x11
 2583 00ba 01       		.uleb128 0x1
 2584 00bb 12       		.uleb128 0x12
 2585 00bc 06       		.uleb128 0x6
 2586 00bd 40       		.uleb128 0x40
 2587 00be 18       		.uleb128 0x18
 2588 00bf 9642     		.uleb128 0x2116
 2589 00c1 19       		.uleb128 0x19
 2590 00c2 01       		.uleb128 0x1
 2591 00c3 13       		.uleb128 0x13
 2592 00c4 00       		.byte	0
 2593 00c5 00       		.byte	0
 2594 00c6 0E       		.uleb128 0xe
 2595 00c7 0B       		.uleb128 0xb
 2596 00c8 01       		.byte	0x1
 2597 00c9 11       		.uleb128 0x11
 2598 00ca 01       		.uleb128 0x1
 2599 00cb 12       		.uleb128 0x12
 2600 00cc 06       		.uleb128 0x6
 2601 00cd 01       		.uleb128 0x1
 2602 00ce 13       		.uleb128 0x13
 2603 00cf 00       		.byte	0
 2604 00d0 00       		.byte	0
 2605 00d1 0F       		.uleb128 0xf
 2606 00d2 34       		.uleb128 0x34
 2607 00d3 00       		.byte	0
 2608 00d4 03       		.uleb128 0x3
 2609 00d5 0E       		.uleb128 0xe
 2610 00d6 3A       		.uleb128 0x3a
 2611 00d7 0B       		.uleb128 0xb
 2612 00d8 3B       		.uleb128 0x3b
 2613 00d9 0B       		.uleb128 0xb
 2614 00da 49       		.uleb128 0x49
 2615 00db 13       		.uleb128 0x13
 2616 00dc 02       		.uleb128 0x2
 2617 00dd 18       		.uleb128 0x18
 2618 00de 00       		.byte	0
 2619 00df 00       		.byte	0
 2620 00e0 10       		.uleb128 0x10
 2621 00e1 0B       		.uleb128 0xb
 2622 00e2 01       		.byte	0x1
 2623 00e3 11       		.uleb128 0x11
 2624 00e4 01       		.uleb128 0x1
 2625 00e5 12       		.uleb128 0x12
 2626 00e6 06       		.uleb128 0x6
 2627 00e7 00       		.byte	0
 2628 00e8 00       		.byte	0
 2629 00e9 11       		.uleb128 0x11
 2630 00ea 34       		.uleb128 0x34
 2631 00eb 00       		.byte	0
 2632 00ec 03       		.uleb128 0x3
 2633 00ed 08       		.uleb128 0x8
 2634 00ee 3A       		.uleb128 0x3a
 2635 00ef 0B       		.uleb128 0xb
 2636 00f0 3B       		.uleb128 0x3b
 2637 00f1 0B       		.uleb128 0xb
 2638 00f2 49       		.uleb128 0x49
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 55


 2639 00f3 13       		.uleb128 0x13
 2640 00f4 02       		.uleb128 0x2
 2641 00f5 18       		.uleb128 0x18
 2642 00f6 00       		.byte	0
 2643 00f7 00       		.byte	0
 2644 00f8 12       		.uleb128 0x12
 2645 00f9 34       		.uleb128 0x34
 2646 00fa 00       		.byte	0
 2647 00fb 03       		.uleb128 0x3
 2648 00fc 0E       		.uleb128 0xe
 2649 00fd 3A       		.uleb128 0x3a
 2650 00fe 0B       		.uleb128 0xb
 2651 00ff 3B       		.uleb128 0x3b
 2652 0100 05       		.uleb128 0x5
 2653 0101 49       		.uleb128 0x49
 2654 0102 13       		.uleb128 0x13
 2655 0103 02       		.uleb128 0x2
 2656 0104 18       		.uleb128 0x18
 2657 0105 00       		.byte	0
 2658 0106 00       		.byte	0
 2659 0107 13       		.uleb128 0x13
 2660 0108 2E       		.uleb128 0x2e
 2661 0109 01       		.byte	0x1
 2662 010a 3F       		.uleb128 0x3f
 2663 010b 19       		.uleb128 0x19
 2664 010c 03       		.uleb128 0x3
 2665 010d 0E       		.uleb128 0xe
 2666 010e 3A       		.uleb128 0x3a
 2667 010f 0B       		.uleb128 0xb
 2668 0110 3B       		.uleb128 0x3b
 2669 0111 05       		.uleb128 0x5
 2670 0112 27       		.uleb128 0x27
 2671 0113 19       		.uleb128 0x19
 2672 0114 11       		.uleb128 0x11
 2673 0115 01       		.uleb128 0x1
 2674 0116 12       		.uleb128 0x12
 2675 0117 06       		.uleb128 0x6
 2676 0118 40       		.uleb128 0x40
 2677 0119 18       		.uleb128 0x18
 2678 011a 9642     		.uleb128 0x2116
 2679 011c 19       		.uleb128 0x19
 2680 011d 01       		.uleb128 0x1
 2681 011e 13       		.uleb128 0x13
 2682 011f 00       		.byte	0
 2683 0120 00       		.byte	0
 2684 0121 14       		.uleb128 0x14
 2685 0122 05       		.uleb128 0x5
 2686 0123 00       		.byte	0
 2687 0124 03       		.uleb128 0x3
 2688 0125 08       		.uleb128 0x8
 2689 0126 3A       		.uleb128 0x3a
 2690 0127 0B       		.uleb128 0xb
 2691 0128 3B       		.uleb128 0x3b
 2692 0129 05       		.uleb128 0x5
 2693 012a 49       		.uleb128 0x49
 2694 012b 13       		.uleb128 0x13
 2695 012c 02       		.uleb128 0x2
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 56


 2696 012d 18       		.uleb128 0x18
 2697 012e 00       		.byte	0
 2698 012f 00       		.byte	0
 2699 0130 15       		.uleb128 0x15
 2700 0131 2E       		.uleb128 0x2e
 2701 0132 01       		.byte	0x1
 2702 0133 3F       		.uleb128 0x3f
 2703 0134 19       		.uleb128 0x19
 2704 0135 03       		.uleb128 0x3
 2705 0136 0E       		.uleb128 0xe
 2706 0137 3A       		.uleb128 0x3a
 2707 0138 0B       		.uleb128 0xb
 2708 0139 3B       		.uleb128 0x3b
 2709 013a 05       		.uleb128 0x5
 2710 013b 27       		.uleb128 0x27
 2711 013c 19       		.uleb128 0x19
 2712 013d 11       		.uleb128 0x11
 2713 013e 01       		.uleb128 0x1
 2714 013f 12       		.uleb128 0x12
 2715 0140 06       		.uleb128 0x6
 2716 0141 40       		.uleb128 0x40
 2717 0142 18       		.uleb128 0x18
 2718 0143 9742     		.uleb128 0x2117
 2719 0145 19       		.uleb128 0x19
 2720 0146 01       		.uleb128 0x1
 2721 0147 13       		.uleb128 0x13
 2722 0148 00       		.byte	0
 2723 0149 00       		.byte	0
 2724 014a 16       		.uleb128 0x16
 2725 014b 05       		.uleb128 0x5
 2726 014c 00       		.byte	0
 2727 014d 03       		.uleb128 0x3
 2728 014e 0E       		.uleb128 0xe
 2729 014f 3A       		.uleb128 0x3a
 2730 0150 0B       		.uleb128 0xb
 2731 0151 3B       		.uleb128 0x3b
 2732 0152 05       		.uleb128 0x5
 2733 0153 49       		.uleb128 0x49
 2734 0154 13       		.uleb128 0x13
 2735 0155 02       		.uleb128 0x2
 2736 0156 18       		.uleb128 0x18
 2737 0157 00       		.byte	0
 2738 0158 00       		.byte	0
 2739 0159 17       		.uleb128 0x17
 2740 015a 34       		.uleb128 0x34
 2741 015b 00       		.byte	0
 2742 015c 03       		.uleb128 0x3
 2743 015d 0E       		.uleb128 0xe
 2744 015e 3A       		.uleb128 0x3a
 2745 015f 0B       		.uleb128 0xb
 2746 0160 3B       		.uleb128 0x3b
 2747 0161 05       		.uleb128 0x5
 2748 0162 49       		.uleb128 0x49
 2749 0163 13       		.uleb128 0x13
 2750 0164 3F       		.uleb128 0x3f
 2751 0165 19       		.uleb128 0x19
 2752 0166 3C       		.uleb128 0x3c
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 57


 2753 0167 19       		.uleb128 0x19
 2754 0168 00       		.byte	0
 2755 0169 00       		.byte	0
 2756 016a 18       		.uleb128 0x18
 2757 016b 35       		.uleb128 0x35
 2758 016c 00       		.byte	0
 2759 016d 49       		.uleb128 0x49
 2760 016e 13       		.uleb128 0x13
 2761 016f 00       		.byte	0
 2762 0170 00       		.byte	0
 2763 0171 19       		.uleb128 0x19
 2764 0172 34       		.uleb128 0x34
 2765 0173 00       		.byte	0
 2766 0174 03       		.uleb128 0x3
 2767 0175 08       		.uleb128 0x8
 2768 0176 3A       		.uleb128 0x3a
 2769 0177 0B       		.uleb128 0xb
 2770 0178 3B       		.uleb128 0x3b
 2771 0179 0B       		.uleb128 0xb
 2772 017a 49       		.uleb128 0x49
 2773 017b 13       		.uleb128 0x13
 2774 017c 3F       		.uleb128 0x3f
 2775 017d 19       		.uleb128 0x19
 2776 017e 02       		.uleb128 0x2
 2777 017f 18       		.uleb128 0x18
 2778 0180 00       		.byte	0
 2779 0181 00       		.byte	0
 2780 0182 1A       		.uleb128 0x1a
 2781 0183 34       		.uleb128 0x34
 2782 0184 00       		.byte	0
 2783 0185 03       		.uleb128 0x3
 2784 0186 0E       		.uleb128 0xe
 2785 0187 3A       		.uleb128 0x3a
 2786 0188 0B       		.uleb128 0xb
 2787 0189 3B       		.uleb128 0x3b
 2788 018a 0B       		.uleb128 0xb
 2789 018b 49       		.uleb128 0x49
 2790 018c 13       		.uleb128 0x13
 2791 018d 3F       		.uleb128 0x3f
 2792 018e 19       		.uleb128 0x19
 2793 018f 02       		.uleb128 0x2
 2794 0190 18       		.uleb128 0x18
 2795 0191 00       		.byte	0
 2796 0192 00       		.byte	0
 2797 0193 1B       		.uleb128 0x1b
 2798 0194 21       		.uleb128 0x21
 2799 0195 00       		.byte	0
 2800 0196 49       		.uleb128 0x49
 2801 0197 13       		.uleb128 0x13
 2802 0198 2F       		.uleb128 0x2f
 2803 0199 05       		.uleb128 0x5
 2804 019a 00       		.byte	0
 2805 019b 00       		.byte	0
 2806 019c 00       		.byte	0
 2807              		.section	.debug_aranges,"",%progbits
 2808 0000 44000000 		.4byte	0x44
 2809 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 58


 2810 0006 00000000 		.4byte	.Ldebug_info0
 2811 000a 04       		.byte	0x4
 2812 000b 00       		.byte	0
 2813 000c 0000     		.2byte	0
 2814 000e 0000     		.2byte	0
 2815 0010 00000000 		.4byte	.LFB64
 2816 0014 18000000 		.4byte	.LFE64-.LFB64
 2817 0018 00000000 		.4byte	.LFB65
 2818 001c 18000000 		.4byte	.LFE65-.LFB65
 2819 0020 00000000 		.4byte	.LFB66
 2820 0024 30060000 		.4byte	.LFE66-.LFB66
 2821 0028 00000000 		.4byte	.LFB67
 2822 002c 3E000000 		.4byte	.LFE67-.LFB67
 2823 0030 00000000 		.4byte	.LFB68
 2824 0034 26000000 		.4byte	.LFE68-.LFB68
 2825 0038 00000000 		.4byte	.LFB69
 2826 003c 0C010000 		.4byte	.LFE69-.LFB69
 2827 0040 00000000 		.4byte	0
 2828 0044 00000000 		.4byte	0
 2829              		.section	.debug_ranges,"",%progbits
 2830              	.Ldebug_ranges0:
 2831 0000 00000000 		.4byte	.LFB64
 2832 0004 18000000 		.4byte	.LFE64
 2833 0008 00000000 		.4byte	.LFB65
 2834 000c 18000000 		.4byte	.LFE65
 2835 0010 00000000 		.4byte	.LFB66
 2836 0014 30060000 		.4byte	.LFE66
 2837 0018 00000000 		.4byte	.LFB67
 2838 001c 3E000000 		.4byte	.LFE67
 2839 0020 00000000 		.4byte	.LFB68
 2840 0024 26000000 		.4byte	.LFE68
 2841 0028 00000000 		.4byte	.LFB69
 2842 002c 0C010000 		.4byte	.LFE69
 2843 0030 00000000 		.4byte	0
 2844 0034 00000000 		.4byte	0
 2845              		.section	.debug_line,"",%progbits
 2846              	.Ldebug_line0:
 2847 0000 E6020000 		.section	.debug_str,"MS",%progbits,1
 2847      02005601 
 2847      00000201 
 2847      FB0E0D00 
 2847      01010101 
 2848              	.LASF52:
 2849 0000 75736250 		.ascii	"usbPutChar\000"
 2849      75744368 
 2849      617200
 2850              	.LASF49:
 2851 000b 72696768 		.ascii	"rightPWMChar\000"
 2851      7450574D 
 2851      43686172 
 2851      00
 2852              	.LASF101:
 2853 0018 6C617374 		.ascii	"lastAdjustDirection\000"
 2853      41646A75 
 2853      73744469 
 2853      72656374 
 2853      696F6E00 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 59


 2854              	.LASF70:
 2855 002c 666C6167 		.ascii	"flag_packet\000"
 2855      5F706163 
 2855      6B657400 
 2856              	.LASF87:
 2857 0038 76616C75 		.ascii	"valuesLeftLine\000"
 2857      65734C65 
 2857      66744C69 
 2857      6E6500
 2858              	.LASF58:
 2859 0047 7475726E 		.ascii	"turnCompleteText\000"
 2859      436F6D70 
 2859      6C657465 
 2859      54657874 
 2859      00
 2860              	.LASF33:
 2861 0058 67325F78 		.ascii	"g2_xpos\000"
 2861      706F7300 
 2862              	.LASF2:
 2863 0060 73686F72 		.ascii	"short int\000"
 2863      7420696E 
 2863      7400
 2864              	.LASF89:
 2865 006a 76616C75 		.ascii	"valuesTurnComplete\000"
 2865      65735475 
 2865      726E436F 
 2865      6D706C65 
 2865      746500
 2866              	.LASF78:
 2867 007d 73797374 		.ascii	"system_state\000"
 2867      656D5F73 
 2867      74617465 
 2867      00
 2868              	.LASF10:
 2869 008a 73697A65 		.ascii	"sizetype\000"
 2869      74797065 
 2869      00
 2870              	.LASF104:
 2871 0093 483A5C44 		.ascii	"H:\\Desktop\\Team 14\\team14\\301_lab_tasks\\psoc s"
 2871      65736B74 
 2871      6F705C54 
 2871      65616D20 
 2871      31345C74 
 2872 00c1 74756465 		.ascii	"tudent pack\\psoc_code_base\\CS301_Class.cydsn\000"
 2872      6E742070 
 2872      61636B5C 
 2872      70736F63 
 2872      5F636F64 
 2873              	.LASF77:
 2874 00ee 75736242 		.ascii	"usbBuffer\000"
 2874      75666665 
 2874      7200
 2875              	.LASF102:
 2876 00f8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2876      43313120 
 2876      352E342E 
 2876      31203230 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 60


 2876      31363036 
 2877 012b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2877      20726576 
 2877      6973696F 
 2877      6E203233 
 2877      37373135 
 2878 015e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2878      66756E63 
 2878      74696F6E 
 2878      2D736563 
 2878      74696F6E 
 2879              	.LASF50:
 2880 0186 6D61696E 		.ascii	"main\000"
 2880      00
 2881              	.LASF90:
 2882 018b 76616C75 		.ascii	"valuesRightLine\000"
 2882      65735269 
 2882      6768744C 
 2882      696E6500 
 2883              	.LASF81:
 2884 019b 7475726E 		.ascii	"turningDirection\000"
 2884      696E6744 
 2884      69726563 
 2884      74696F6E 
 2884      00
 2885              	.LASF15:
 2886 01ac 75696E74 		.ascii	"uint16\000"
 2886      313600
 2887              	.LASF99:
 2888 01b3 64697374 		.ascii	"distancePerSecondL\000"
 2888      616E6365 
 2888      50657253 
 2888      65636F6E 
 2888      644C00
 2889              	.LASF21:
 2890 01c6 696E6465 		.ascii	"index\000"
 2890      7800
 2891              	.LASF17:
 2892 01cc 696E7431 		.ascii	"int16\000"
 2892      3600
 2893              	.LASF100:
 2894 01d2 64697374 		.ascii	"distancePerSecondR\000"
 2894      616E6365 
 2894      50657253 
 2894      65636F6E 
 2894      645200
 2895              	.LASF32:
 2896 01e5 67315F64 		.ascii	"g1_direction\000"
 2896      69726563 
 2896      74696F6E 
 2896      00
 2897              	.LASF91:
 2898 01f2 76616C75 		.ascii	"valuesRightIntersection\000"
 2898      65735269 
 2898      67687449 
 2898      6E746572 
 2898      73656374 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 61


 2899              	.LASF75:
 2900 020a 6C696E65 		.ascii	"line\000"
 2900      00
 2901              	.LASF96:
 2902 020f 6E756D52 		.ascii	"numRotationsL\000"
 2902      6F746174 
 2902      696F6E73 
 2902      4C00
 2903              	.LASF18:
 2904 021d 666C6F61 		.ascii	"float\000"
 2904      7400
 2905              	.LASF34:
 2906 0223 67325F79 		.ascii	"g2_ypos\000"
 2906      706F7300 
 2907              	.LASF31:
 2908 022b 67315F73 		.ascii	"g1_speed\000"
 2908      70656564 
 2908      00
 2909              	.LASF6:
 2910 0234 6C6F6E67 		.ascii	"long long int\000"
 2910      206C6F6E 
 2910      6720696E 
 2910      7400
 2911              	.LASF51:
 2912 0242 75736250 		.ascii	"usbPutString\000"
 2912      75745374 
 2912      72696E67 
 2912      00
 2913              	.LASF16:
 2914 024f 696E7438 		.ascii	"int8\000"
 2914      00
 2915              	.LASF66:
 2916 0254 666C6167 		.ascii	"flag_ts_update\000"
 2916      5F74735F 
 2916      75706461 
 2916      746500
 2917              	.LASF98:
 2918 0263 64697374 		.ascii	"distanceTravelled\000"
 2918      616E6365 
 2918      54726176 
 2918      656C6C65 
 2918      6400
 2919              	.LASF28:
 2920 0275 67305F64 		.ascii	"g0_direction\000"
 2920      69726563 
 2920      74696F6E 
 2920      00
 2921              	.LASF25:
 2922 0282 67305F78 		.ascii	"g0_xpos\000"
 2922      706F7300 
 2923              	.LASF46:
 2924 028a 64697374 		.ascii	"distancePerSecondLChar\000"
 2924      616E6365 
 2924      50657253 
 2924      65636F6E 
 2924      644C4368 
 2925              	.LASF93:
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 62


 2926 02a1 6C617374 		.ascii	"lastVeerDirection\000"
 2926      56656572 
 2926      44697265 
 2926      6374696F 
 2926      6E00
 2927              	.LASF84:
 2928 02b3 646F7473 		.ascii	"dotsTravelled\000"
 2928      54726176 
 2928      656C6C65 
 2928      6400
 2929              	.LASF68:
 2930 02c1 666C6167 		.ascii	"flag_ts_display\000"
 2930      5F74735F 
 2930      64697370 
 2930      6C617900 
 2931              	.LASF69:
 2932 02d1 666C6167 		.ascii	"flag_rx\000"
 2932      5F727800 
 2933              	.LASF37:
 2934 02d9 4D794953 		.ascii	"MyISR\000"
 2934      5200
 2935              	.LASF43:
 2936 02df 68696768 		.ascii	"highCountRightIntersection\000"
 2936      436F756E 
 2936      74526967 
 2936      6874496E 
 2936      74657273 
 2937              	.LASF44:
 2938 02fa 6E756D52 		.ascii	"numRotationsLText\000"
 2938      6F746174 
 2938      696F6E73 
 2938      4C546578 
 2938      7400
 2939              	.LASF9:
 2940 030c 6C6F6E67 		.ascii	"long double\000"
 2940      20646F75 
 2940      626C6500 
 2941              	.LASF47:
 2942 0318 64697374 		.ascii	"distancePerSecondRChar\000"
 2942      616E6365 
 2942      50657253 
 2942      65636F6E 
 2942      64524368 
 2943              	.LASF76:
 2944 032f 656E7472 		.ascii	"entry\000"
 2944      7900
 2945              	.LASF1:
 2946 0335 756E7369 		.ascii	"unsigned char\000"
 2946      676E6564 
 2946      20636861 
 2946      7200
 2947              	.LASF27:
 2948 0343 67305F73 		.ascii	"g0_speed\000"
 2948      70656564 
 2948      00
 2949              	.LASF42:
 2950 034c 68696768 		.ascii	"highCountRightLine\000"
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 63


 2950      436F756E 
 2950      74526967 
 2950      68744C69 
 2950      6E6500
 2951              	.LASF72:
 2952 035f 64617461 		.ascii	"dataready_flag\000"
 2952      72656164 
 2952      795F666C 
 2952      616700
 2953              	.LASF0:
 2954 036e 7369676E 		.ascii	"signed char\000"
 2954      65642063 
 2954      68617200 
 2955              	.LASF7:
 2956 037a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2956      206C6F6E 
 2956      6720756E 
 2956      7369676E 
 2956      65642069 
 2957              	.LASF8:
 2958 0391 756E7369 		.ascii	"unsigned int\000"
 2958      676E6564 
 2958      20696E74 
 2958      00
 2959              	.LASF71:
 2960 039e 666C6167 		.ascii	"flag_KB_string\000"
 2960      5F4B425F 
 2960      73747269 
 2960      6E6700
 2961              	.LASF53:
 2962 03ad 7072696E 		.ascii	"printSensorDebug\000"
 2962      7453656E 
 2962      736F7244 
 2962      65627567 
 2962      00
 2963              	.LASF83:
 2964 03be 73686F75 		.ascii	"shouldUpdate\000"
 2964      6C645570 
 2964      64617465 
 2964      00
 2965              	.LASF35:
 2966 03cb 67325F73 		.ascii	"g2_speed\000"
 2966      70656564 
 2966      00
 2967              	.LASF29:
 2968 03d4 67315F78 		.ascii	"g1_xpos\000"
 2968      706F7300 
 2969              	.LASF80:
 2970 03dc 72657374 		.ascii	"restoring\000"
 2970      6F72696E 
 2970      6700
 2971              	.LASF40:
 2972 03e6 68696768 		.ascii	"highCountMiddleLine\000"
 2972      436F756E 
 2972      744D6964 
 2972      646C654C 
 2972      696E6500 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 64


 2973              	.LASF88:
 2974 03fa 76616C75 		.ascii	"valuesMiddleLine\000"
 2974      65734D69 
 2974      64646C65 
 2974      4C696E65 
 2974      00
 2975              	.LASF105:
 2976 040b 64617461 		.ascii	"data_main\000"
 2976      5F6D6169 
 2976      6E00
 2977              	.LASF55:
 2978 0415 72696768 		.ascii	"rightIntText\000"
 2978      74496E74 
 2978      54657874 
 2978      00
 2979              	.LASF11:
 2980 0422 63686172 		.ascii	"char\000"
 2980      00
 2981              	.LASF4:
 2982 0427 6C6F6E67 		.ascii	"long int\000"
 2982      20696E74 
 2982      00
 2983              	.LASF22:
 2984 0430 726F626F 		.ascii	"robot_xpos\000"
 2984      745F7870 
 2984      6F7300
 2985              	.LASF13:
 2986 043b 696E7433 		.ascii	"int32_t\000"
 2986      325F7400 
 2987              	.LASF30:
 2988 0443 67315F79 		.ascii	"g1_ypos\000"
 2988      706F7300 
 2989              	.LASF36:
 2990 044b 67325F64 		.ascii	"g2_direction\000"
 2990      69726563 
 2990      74696F6E 
 2990      00
 2991              	.LASF3:
 2992 0458 73686F72 		.ascii	"short unsigned int\000"
 2992      7420756E 
 2992      7369676E 
 2992      65642069 
 2992      6E7400
 2993              	.LASF14:
 2994 046b 75696E74 		.ascii	"uint8\000"
 2994      3800
 2995              	.LASF54:
 2996 0471 6C656674 		.ascii	"leftLineText\000"
 2996      4C696E65 
 2996      54657874 
 2996      00
 2997              	.LASF56:
 2998 047e 6C656674 		.ascii	"leftIntText\000"
 2998      496E7454 
 2998      65787400 
 2999              	.LASF86:
 3000 048a 76616C75 		.ascii	"valuesLeftIntersection\000"
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 65


 3000      65734C65 
 3000      6674496E 
 3000      74657273 
 3000      65637469 
 3001              	.LASF48:
 3002 04a1 6C656674 		.ascii	"leftPWMChar\000"
 3002      50574D43 
 3002      68617200 
 3003              	.LASF67:
 3004 04ad 666C6167 		.ascii	"flag_ts_speed\000"
 3004      5F74735F 
 3004      73706565 
 3004      6400
 3005              	.LASF39:
 3006 04bb 68696768 		.ascii	"highCountLeftLine\000"
 3006      436F756E 
 3006      744C6566 
 3006      744C696E 
 3006      6500
 3007              	.LASF59:
 3008 04cd 6D696464 		.ascii	"middleLineText\000"
 3008      6C654C69 
 3008      6E655465 
 3008      787400
 3009              	.LASF45:
 3010 04dc 6E756D52 		.ascii	"numRotationsRText\000"
 3010      6F746174 
 3010      696F6E73 
 3010      52546578 
 3010      7400
 3011              	.LASF103:
 3012 04ee 6D61696E 		.ascii	"main.c\000"
 3012      2E6300
 3013              	.LASF5:
 3014 04f5 6C6F6E67 		.ascii	"long unsigned int\000"
 3014      20756E73 
 3014      69676E65 
 3014      6420696E 
 3014      7400
 3015              	.LASF19:
 3016 0507 646F7562 		.ascii	"double\000"
 3016      6C6500
 3017              	.LASF85:
 3018 050e 666C6167 		.ascii	"flag\000"
 3018      00
 3019              	.LASF94:
 3020 0513 6D6F746F 		.ascii	"motorFlag\000"
 3020      72466C61 
 3020      6700
 3021              	.LASF82:
 3022 051d 7475726E 		.ascii	"turningCount\000"
 3022      696E6743 
 3022      6F756E74 
 3022      00
 3023              	.LASF63:
 3024 052a 74735F73 		.ascii	"ts_speed\000"
 3024      70656564 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 66


 3024      00
 3025              	.LASF92:
 3026 0533 636F756E 		.ascii	"count\000"
 3026      7400
 3027              	.LASF65:
 3028 0539 666C6167 		.ascii	"flag_ts_enc\000"
 3028      5F74735F 
 3028      656E6300 
 3029              	.LASF12:
 3030 0545 5F5F696E 		.ascii	"__int32_t\000"
 3030      7433325F 
 3030      7400
 3031              	.LASF26:
 3032 054f 67305F79 		.ascii	"g0_ypos\000"
 3032      706F7300 
 3033              	.LASF64:
 3034 0557 74735F64 		.ascii	"ts_display\000"
 3034      6973706C 
 3034      617900
 3035              	.LASF61:
 3036 0562 74735F65 		.ascii	"ts_enc\000"
 3036      6E6300
 3037              	.LASF62:
 3038 0569 74735F75 		.ascii	"ts_update\000"
 3038      70646174 
 3038      6500
 3039              	.LASF73:
 3040 0573 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3040      5F72665F 
 3040      7472616E 
 3040      736D6973 
 3040      73696F6E 
 3041              	.LASF23:
 3042 058f 726F626F 		.ascii	"robot_ypos\000"
 3042      745F7970 
 3042      6F7300
 3043              	.LASF79:
 3044 059a 54415247 		.ascii	"TARGET_SPEED\000"
 3044      45545F53 
 3044      50454544 
 3044      00
 3045              	.LASF60:
 3046 05a7 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3046      52784275 
 3046      66666572 
 3046      00
 3047              	.LASF41:
 3048 05b4 68696768 		.ascii	"highCountTurnComplete\000"
 3048      436F756E 
 3048      74547572 
 3048      6E436F6D 
 3048      706C6574 
 3049              	.LASF74:
 3050 05ca 64697370 		.ascii	"displaystring\000"
 3050      6C617973 
 3050      7472696E 
 3050      6700
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cccLURxV.s 			page 67


 3051              	.LASF57:
 3052 05d8 72696768 		.ascii	"rightLineText\000"
 3052      744C696E 
 3052      65546578 
 3052      7400
 3053              	.LASF97:
 3054 05e6 6E756D52 		.ascii	"numRotationsR\000"
 3054      6F746174 
 3054      696F6E73 
 3054      5200
 3055              	.LASF95:
 3056 05f4 73746570 		.ascii	"step\000"
 3056      00
 3057              	.LASF38:
 3058 05f9 68696768 		.ascii	"highCountLeftIntersection\000"
 3058      436F756E 
 3058      744C6566 
 3058      74496E74 
 3058      65727365 
 3059              	.LASF20:
 3060 0613 72737369 		.ascii	"rssi\000"
 3060      00
 3061              	.LASF24:
 3062 0618 726F626F 		.ascii	"robot_orientation\000"
 3062      745F6F72 
 3062      69656E74 
 3062      6174696F 
 3062      6E00
 3063              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
