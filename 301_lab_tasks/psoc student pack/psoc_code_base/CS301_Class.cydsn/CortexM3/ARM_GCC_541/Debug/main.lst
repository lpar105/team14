ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	consecStops
 107              		.bss
 108 0012 0000     		.align	2
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 3


 109              		.type	consecStops, %object
 110              		.size	consecStops, 4
 111              	consecStops:
 112 0014 00000000 		.space	4
 113              		.global	started
 114              		.align	2
 115              		.type	started, %object
 116              		.size	started, 4
 117              	started:
 118 0018 00000000 		.space	4
 119              		.global	instCounter
 120              		.align	2
 121              		.type	instCounter, %object
 122              		.size	instCounter, 4
 123              	instCounter:
 124 001c 00000000 		.space	4
 125              		.global	flag
 126              		.align	2
 127              		.type	flag, %object
 128              		.size	flag, 4
 129              	flag:
 130 0020 00000000 		.space	4
 131              		.comm	valuesLeftIntersection,2000,4
 132              		.comm	valuesLeftLine,2000,4
 133              		.comm	valuesMiddleLine,2000,4
 134              		.comm	valuesRightLine,2000,4
 135              		.comm	valuesRightIntersection,2000,4
 136              		.global	count
 137              		.align	2
 138              		.type	count, %object
 139              		.size	count, 4
 140              	count:
 141 0024 00000000 		.space	4
 142              		.global	motorUpdateCount
 143              		.align	2
 144              		.type	motorUpdateCount, %object
 145              		.size	motorUpdateCount, 4
 146              	motorUpdateCount:
 147 0028 00000000 		.space	4
 148              		.global	lastVeerDirection
 149              		.align	2
 150              		.type	lastVeerDirection, %object
 151              		.size	lastVeerDirection, 4
 152              	lastVeerDirection:
 153 002c 00000000 		.space	4
 154              		.comm	v1M1,4,4
 155              		.comm	v1M2,4,4
 156              		.comm	v2M1,4,4
 157              		.comm	v2M2,4,4
 158              		.global	turnComplete
 159              		.data
 160              		.align	2
 161              		.type	turnComplete, %object
 162              		.size	turnComplete, 4
 163              	turnComplete:
 164 0044 FFFFFFFF 		.word	-1
 165              		.global	pulsesTravelled
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 4


 166              		.bss
 167              		.align	2
 168              		.type	pulsesTravelled, %object
 169              		.size	pulsesTravelled, 4
 170              	pulsesTravelled:
 171 0030 00000000 		.space	4
 172              		.global	checkDistance
 173              		.align	2
 174              		.type	checkDistance, %object
 175              		.size	checkDistance, 4
 176              	checkDistance:
 177 0034 00000000 		.space	4
 178              		.global	step
 179              		.align	2
 180              		.type	step, %object
 181              		.size	step, 4
 182              	step:
 183 0038 00000000 		.space	4
 184              		.global	interruptFlag
 185              		.align	2
 186              		.type	interruptFlag, %object
 187              		.size	interruptFlag, 4
 188              	interruptFlag:
 189 003c 00000000 		.space	4
 190              		.global	lastAdjustDirection
 191              		.align	2
 192              		.type	lastAdjustDirection, %object
 193              		.size	lastAdjustDirection, 4
 194              	lastAdjustDirection:
 195 0040 00000000 		.space	4
 196              		.comm	squares,1000,4
 197              		.comm	instruction,500,4
 198              		.comm	distance,500,4
 199              		.section	.text.eoc,"ax",%progbits
 200              		.align	2
 201              		.global	eoc
 202              		.thumb
 203              		.thumb_func
 204              		.type	eoc, %function
 205              	eoc:
 206              	.LFB64:
 207              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 5


  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** 
  30:main.c        **** #include "pathfind.h"
  31:main.c        **** 
  32:main.c        **** #include "vars.h"
  33:main.c        **** 
  34:main.c        **** #define ADC_COUNT 500
  35:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 75
  36:main.c        **** #define R_INT_BLACK highCountRightIntersection < 75
  37:main.c        **** #define L_LINE_BLACK highCountLeftLine < 75
  38:main.c        **** #define R_LINE_BLACK highCountRightLine < 75
  39:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 75
  40:main.c        **** #define TC_BLACK highCountTurnComplete < 75
  41:main.c        **** 
  42:main.c        **** int consecStops = 0;
  43:main.c        **** int started = 0;
  44:main.c        **** int instCounter = 0;
  45:main.c        **** //* ========================================
  46:main.c        **** void usbPutString(char * s);
  47:main.c        **** void usbPutChar(char c);
  48:main.c        **** //* ========================================
  49:main.c        **** 
  50:main.c        **** volatile int flag = 0;
  51:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  52:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  53:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  54:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  55:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  56:main.c        **** volatile int count = 0;
  57:main.c        **** volatile int motorUpdateCount = 0;
  58:main.c        **** volatile int lastVeerDirection = 0;
  59:main.c        **** 
  60:main.c        **** volatile int v1M1;
  61:main.c        **** volatile int v1M2;
  62:main.c        **** volatile int v2M1;
  63:main.c        **** volatile int v2M2;
  64:main.c        **** volatile int turnComplete = -1;
  65:main.c        **** int pulsesTravelled = 0;
  66:main.c        **** volatile int checkDistance = 0;
  67:main.c        **** volatile int step = 0;
  68:main.c        **** volatile int interruptFlag = 0;
  69:main.c        **** 
  70:main.c        **** int lastAdjustDirection = 0;
  71:main.c        **** unsigned char squares[500][2];
  72:main.c        **** unsigned char instruction[500];
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 6


  73:main.c        **** unsigned char distance[500];
  74:main.c        **** 
  75:main.c        **** CY_ISR(eoc) {
 208              		.loc 1 75 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213 0000 80B4     		push	{r7}
 214              		.cfi_def_cfa_offset 4
 215              		.cfi_offset 7, -4
 216 0002 00AF     		add	r7, sp, #0
 217              		.cfi_def_cfa_register 7
  76:main.c        ****     flag = 1;
 218              		.loc 1 76 0
 219 0004 034B     		ldr	r3, .L2
 220 0006 0122     		movs	r2, #1
 221 0008 1A60     		str	r2, [r3]
  77:main.c        **** }
 222              		.loc 1 77 0
 223 000a 00BF     		nop
 224 000c BD46     		mov	sp, r7
 225              		.cfi_def_cfa_register 13
 226              		@ sp needed
 227 000e 80BC     		pop	{r7}
 228              		.cfi_restore 7
 229              		.cfi_def_cfa_offset 0
 230 0010 7047     		bx	lr
 231              	.L3:
 232 0012 00BF     		.align	2
 233              	.L2:
 234 0014 00000000 		.word	flag
 235              		.cfi_endproc
 236              	.LFE64:
 237              		.size	eoc, .-eoc
 238              		.global	__aeabi_i2d
 239              		.global	__aeabi_dmul
 240              		.global	__aeabi_dcmpgt
 241              		.section	.rodata
 242              		.align	2
 243              	.LC0:
 244 0000 00000000 		.word	0
 245 0004 3E000000 		.word	62
 246 0008 7B000000 		.word	123
 247 000c 96000000 		.word	150
 248 0010 12020000 		.word	530
 249 0014 BC020000 		.word	700
 250 0018 BC020000 		.word	700
 251 001c E8030000 		.word	1000
 252 0020 3A020000 		.word	570
 253              		.section	.text.main,"ax",%progbits
 254              		.align	2
 255              		.global	main
 256              		.thumb
 257              		.thumb_func
 258              		.type	main, %function
 259              	main:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 7


 260              	.LFB65:
  78:main.c        **** 
  79:main.c        **** int main() {
 261              		.loc 1 79 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 328
 264              		@ frame_needed = 1, uses_anonymous_args = 0
 265 0000 B0B5     		push	{r4, r5, r7, lr}
 266              		.cfi_def_cfa_offset 16
 267              		.cfi_offset 4, -16
 268              		.cfi_offset 5, -12
 269              		.cfi_offset 7, -8
 270              		.cfi_offset 14, -4
 271 0002 D2B0     		sub	sp, sp, #328
 272              		.cfi_def_cfa_offset 344
 273 0004 00AF     		add	r7, sp, #0
 274              		.cfi_def_cfa_register 7
  80:main.c        ****     CYGlobalIntEnable;
 275              		.loc 1 80 0
 276              		.syntax unified
 277              	@ 80 "main.c" 1
 278 0006 62B6     		CPSIE   i
 279              	@ 0 "" 2
  81:main.c        ****     USBUART_Start(0, USBUART_5V_OPERATION);
 280              		.loc 1 81 0
 281              		.thumb
 282              		.syntax unified
 283 0008 0121     		movs	r1, #1
 284 000a 0020     		movs	r0, #0
 285 000c FFF7FEFF 		bl	USBUART_Start
  82:main.c        ****     //UART_Start();
  83:main.c        **** 
  84:main.c        ****     QuadDec_M1_Start();
 286              		.loc 1 84 0
 287 0010 FFF7FEFF 		bl	QuadDec_M1_Start
  85:main.c        ****     QuadDec_M2_Start();
 288              		.loc 1 85 0
 289 0014 FFF7FEFF 		bl	QuadDec_M2_Start
  86:main.c        **** 
  87:main.c        ****     //isr_TS_StartEx(MyISR);
  88:main.c        **** 
  89:main.c        ****     RF_BT_SELECT_Write(1);
 290              		.loc 1 89 0
 291 0018 0120     		movs	r0, #1
 292 001a FFF7FEFF 		bl	RF_BT_SELECT_Write
  90:main.c        ****     //ADC1_IRQ_Enable();
  91:main.c        ****     ADC1_Start();
 293              		.loc 1 91 0
 294 001e FFF7FEFF 		bl	ADC1_Start
  92:main.c        **** 
  93:main.c        ****     ADC1_StartConvert();
 295              		.loc 1 93 0
 296 0022 FFF7FEFF 		bl	ADC1_StartConvert
  94:main.c        **** 
  95:main.c        ****     eoc_StartEx(eoc);
 297              		.loc 1 95 0
 298 0026 B248     		ldr	r0, .L70
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 8


 299 0028 FFF7FEFF 		bl	eoc_StartEx
  96:main.c        **** 
  97:main.c        ****     initMotors();
 300              		.loc 1 97 0
 301 002c FFF7FEFF 		bl	initMotors
  98:main.c        **** 
  99:main.c        ****     stop();
 302              		.loc 1 99 0
 303 0030 FFF7FEFF 		bl	stop
 304              	.LBB2:
 100:main.c        ****     //isr_TS_StartEx(MyISR);
 101:main.c        ****     //Timer_TS_Start();
 102:main.c        **** 
 103:main.c        ****     // Loop through the arrays and set each element to 55 or 0
 104:main.c        ****     for (int i = 0; i < 500; i++) {
 305              		.loc 1 104 0
 306 0034 0023     		movs	r3, #0
 307 0036 C7F84431 		str	r3, [r7, #324]
 308 003a 23E0     		b	.L5
 309              	.L6:
 105:main.c        ****         squares[i][0] = 55;
 310              		.loc 1 105 0 discriminator 3
 311 003c AD4A     		ldr	r2, .L70+4
 312 003e D7F84431 		ldr	r3, [r7, #324]
 313 0042 3721     		movs	r1, #55
 314 0044 02F81310 		strb	r1, [r2, r3, lsl #1]
 106:main.c        ****         squares[i][1] = 55;
 315              		.loc 1 106 0 discriminator 3
 316 0048 AA4A     		ldr	r2, .L70+4
 317 004a D7F84431 		ldr	r3, [r7, #324]
 318 004e 5B00     		lsls	r3, r3, #1
 319 0050 1344     		add	r3, r3, r2
 320 0052 3722     		movs	r2, #55
 321 0054 5A70     		strb	r2, [r3, #1]
 107:main.c        ****         instruction[i] = 0;
 322              		.loc 1 107 0 discriminator 3
 323 0056 A84A     		ldr	r2, .L70+8
 324 0058 D7F84431 		ldr	r3, [r7, #324]
 325 005c 1344     		add	r3, r3, r2
 326 005e 0022     		movs	r2, #0
 327 0060 1A70     		strb	r2, [r3]
 108:main.c        ****         distance[i] = 0;
 328              		.loc 1 108 0 discriminator 3
 329 0062 A64A     		ldr	r2, .L70+12
 330 0064 D7F84431 		ldr	r3, [r7, #324]
 331 0068 1344     		add	r3, r3, r2
 332 006a 0022     		movs	r2, #0
 333 006c 1A70     		strb	r2, [r3]
 109:main.c        ****         distance[i] = 55;
 334              		.loc 1 109 0 discriminator 3
 335 006e A34A     		ldr	r2, .L70+12
 336 0070 D7F84431 		ldr	r3, [r7, #324]
 337 0074 1344     		add	r3, r3, r2
 338 0076 3722     		movs	r2, #55
 339 0078 1A70     		strb	r2, [r3]
 104:main.c        ****         squares[i][0] = 55;
 340              		.loc 1 104 0 discriminator 3
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 9


 341 007a D7F84431 		ldr	r3, [r7, #324]
 342 007e 0133     		adds	r3, r3, #1
 343 0080 C7F84431 		str	r3, [r7, #324]
 344              	.L5:
 104:main.c        ****         squares[i][0] = 55;
 345              		.loc 1 104 0 is_stmt 0 discriminator 1
 346 0084 D7F84431 		ldr	r3, [r7, #324]
 347 0088 B3F5FA7F 		cmp	r3, #500
 348 008c D6DB     		blt	.L6
 349              	.LBE2:
 110:main.c        ****     }
 111:main.c        ****     pathfind(instruction, distance, squares);
 350              		.loc 1 111 0 is_stmt 1
 351 008e 994A     		ldr	r2, .L70+4
 352 0090 9A49     		ldr	r1, .L70+12
 353 0092 9948     		ldr	r0, .L70+8
 354 0094 FFF7FEFF 		bl	pathfind
 355              	.LBB3:
 112:main.c        ****     for (int i = 0; i < 500; i++) {
 356              		.loc 1 112 0
 357 0098 0023     		movs	r3, #0
 358 009a C7F84031 		str	r3, [r7, #320]
 359 009e 04E0     		b	.L7
 360              	.L8:
 361              		.loc 1 112 0 is_stmt 0 discriminator 3
 362 00a0 D7F84031 		ldr	r3, [r7, #320]
 363 00a4 0133     		adds	r3, r3, #1
 364 00a6 C7F84031 		str	r3, [r7, #320]
 365              	.L7:
 366              		.loc 1 112 0 discriminator 1
 367 00aa D7F84031 		ldr	r3, [r7, #320]
 368 00ae B3F5FA7F 		cmp	r3, #500
 369 00b2 F5DB     		blt	.L8
 370              	.L69:
 371              	.LBE3:
 113:main.c        **** 
 114:main.c        ****                         char instStr[24];
 115:main.c        **** 
 116:main.c        ****                         //snprintf(instStr, sizeof(instStr), "%u %u \r\n", (unsigned char) instruct
 117:main.c        **** 
 118:main.c        ****                         //usbPutString(instStr);
 119:main.c        ****                     }
 120:main.c        **** 
 121:main.c        ****     //CyDelay(2000);
 122:main.c        ****     for (;;) {
 123:main.c        **** 
 124:main.c        ****         if (flag == 1) {
 372              		.loc 1 124 0 is_stmt 1
 373 00b4 924B     		ldr	r3, .L70+16
 374 00b6 1B68     		ldr	r3, [r3]
 375 00b8 012B     		cmp	r3, #1
 376 00ba FBD1     		bne	.L69
 125:main.c        **** 
 126:main.c        ****             ADC1_IRQ_Disable();
 377              		.loc 1 126 0
 378 00bc FFF7FEFF 		bl	ADC1_IRQ_Disable
 127:main.c        ****             valuesLeftIntersection[count] = ADC1_GetResult16(0);
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 10


 379              		.loc 1 127 0
 380 00c0 904B     		ldr	r3, .L70+20
 381 00c2 1C68     		ldr	r4, [r3]
 382 00c4 0020     		movs	r0, #0
 383 00c6 FFF7FEFF 		bl	ADC1_GetResult16
 384 00ca 0346     		mov	r3, r0
 385 00cc 1A46     		mov	r2, r3
 386 00ce 8E4B     		ldr	r3, .L70+24
 387 00d0 43F82420 		str	r2, [r3, r4, lsl #2]
 128:main.c        ****             valuesLeftLine[count] = ADC1_GetResult16(1);
 388              		.loc 1 128 0
 389 00d4 8B4B     		ldr	r3, .L70+20
 390 00d6 1C68     		ldr	r4, [r3]
 391 00d8 0120     		movs	r0, #1
 392 00da FFF7FEFF 		bl	ADC1_GetResult16
 393 00de 0346     		mov	r3, r0
 394 00e0 1A46     		mov	r2, r3
 395 00e2 8A4B     		ldr	r3, .L70+28
 396 00e4 43F82420 		str	r2, [r3, r4, lsl #2]
 129:main.c        ****             valuesMiddleLine[count] = ADC1_GetResult16(2);
 397              		.loc 1 129 0
 398 00e8 864B     		ldr	r3, .L70+20
 399 00ea 1C68     		ldr	r4, [r3]
 400 00ec 0220     		movs	r0, #2
 401 00ee FFF7FEFF 		bl	ADC1_GetResult16
 402 00f2 0346     		mov	r3, r0
 403 00f4 1A46     		mov	r2, r3
 404 00f6 864B     		ldr	r3, .L70+32
 405 00f8 43F82420 		str	r2, [r3, r4, lsl #2]
 130:main.c        ****             valuesRightLine[count] = ADC1_GetResult16(3);
 406              		.loc 1 130 0
 407 00fc 814B     		ldr	r3, .L70+20
 408 00fe 1C68     		ldr	r4, [r3]
 409 0100 0320     		movs	r0, #3
 410 0102 FFF7FEFF 		bl	ADC1_GetResult16
 411 0106 0346     		mov	r3, r0
 412 0108 1A46     		mov	r2, r3
 413 010a 824B     		ldr	r3, .L70+36
 414 010c 43F82420 		str	r2, [r3, r4, lsl #2]
 131:main.c        ****             valuesRightIntersection[count] = ADC1_GetResult16(4);
 415              		.loc 1 131 0
 416 0110 7C4B     		ldr	r3, .L70+20
 417 0112 1C68     		ldr	r4, [r3]
 418 0114 0420     		movs	r0, #4
 419 0116 FFF7FEFF 		bl	ADC1_GetResult16
 420 011a 0346     		mov	r3, r0
 421 011c 1A46     		mov	r2, r3
 422 011e 7E4B     		ldr	r3, .L70+40
 423 0120 43F82420 		str	r2, [r3, r4, lsl #2]
 132:main.c        **** 
 133:main.c        ****             count++;
 424              		.loc 1 133 0
 425 0124 774B     		ldr	r3, .L70+20
 426 0126 1B68     		ldr	r3, [r3]
 427 0128 0133     		adds	r3, r3, #1
 428 012a 764A     		ldr	r2, .L70+20
 429 012c 1360     		str	r3, [r2]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 11


 134:main.c        ****             if (count == ADC_COUNT) {
 430              		.loc 1 134 0
 431 012e 754B     		ldr	r3, .L70+20
 432 0130 1B68     		ldr	r3, [r3]
 433 0132 B3F5FA7F 		cmp	r3, #500
 434 0136 40F0A083 		bne	.L10
 435              	.LBB4:
 135:main.c        **** 
 136:main.c        ****                 count = 0;
 436              		.loc 1 136 0
 437 013a 724B     		ldr	r3, .L70+20
 438 013c 0022     		movs	r2, #0
 439 013e 1A60     		str	r2, [r3]
 137:main.c        ****                 motorUpdateCount++;
 440              		.loc 1 137 0
 441 0140 764B     		ldr	r3, .L70+44
 442 0142 1B68     		ldr	r3, [r3]
 443 0144 0133     		adds	r3, r3, #1
 444 0146 754A     		ldr	r2, .L70+44
 445 0148 1360     		str	r3, [r2]
 138:main.c        ****                 int highCountLeftIntersection = 0;
 446              		.loc 1 138 0
 447 014a 0023     		movs	r3, #0
 448 014c C7F83C31 		str	r3, [r7, #316]
 139:main.c        ****                 int highCountLeftLine = 0;
 449              		.loc 1 139 0
 450 0150 0023     		movs	r3, #0
 451 0152 C7F83831 		str	r3, [r7, #312]
 140:main.c        ****                 int highCountMiddleLine = 0;
 452              		.loc 1 140 0
 453 0156 0023     		movs	r3, #0
 454 0158 C7F83431 		str	r3, [r7, #308]
 141:main.c        ****                 int highCountTurnComplete = 0;
 455              		.loc 1 141 0
 456 015c 0023     		movs	r3, #0
 457 015e C7F81831 		str	r3, [r7, #280]
 142:main.c        ****                 int highCountRightLine = 0;
 458              		.loc 1 142 0
 459 0162 0023     		movs	r3, #0
 460 0164 C7F83031 		str	r3, [r7, #304]
 143:main.c        ****                 int highCountRightIntersection = 0;
 461              		.loc 1 143 0
 462 0168 0023     		movs	r3, #0
 463 016a C7F82C31 		str	r3, [r7, #300]
 464              	.LBB5:
 144:main.c        ****                 for (int i = 0; i < ADC_COUNT; i++) {
 465              		.loc 1 144 0
 466 016e 0023     		movs	r3, #0
 467 0170 C7F82831 		str	r3, [r7, #296]
 468 0174 8AE0     		b	.L11
 469              	.L20:
 470              	.LBB6:
 145:main.c        ****                     step = 0;
 471              		.loc 1 145 0
 472 0176 6A4B     		ldr	r3, .L70+48
 473 0178 0022     		movs	r2, #0
 474 017a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 12


 146:main.c        ****                     char result1[24];
 147:main.c        ****                     char result2[24];
 148:main.c        ****                     if (motorUpdateCount == 1) {
 475              		.loc 1 148 0
 476 017c 674B     		ldr	r3, .L70+44
 477 017e 1B68     		ldr	r3, [r3]
 478 0180 012B     		cmp	r3, #1
 479 0182 3DD1     		bne	.L12
 149:main.c        ****                         if (turnComplete == -1 || turnComplete == 1) {
 480              		.loc 1 149 0
 481 0184 674B     		ldr	r3, .L70+52
 482 0186 1B68     		ldr	r3, [r3]
 483 0188 B3F1FF3F 		cmp	r3, #-1
 484 018c 03D0     		beq	.L13
 485              		.loc 1 149 0 is_stmt 0 discriminator 1
 486 018e 654B     		ldr	r3, .L70+52
 487 0190 1B68     		ldr	r3, [r3]
 488 0192 012B     		cmp	r3, #1
 489 0194 2BD1     		bne	.L14
 490              	.L13:
 150:main.c        ****                             v2M1 = QuadDec_M1_GetCounter() * -1;
 491              		.loc 1 150 0 is_stmt 1
 492 0196 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 493 019a 0346     		mov	r3, r0
 494 019c 5B42     		negs	r3, r3
 495 019e 624A     		ldr	r2, .L70+56
 496 01a0 1360     		str	r3, [r2]
 151:main.c        ****                             v2M2 = QuadDec_M2_GetCounter() * -1;
 497              		.loc 1 151 0
 498 01a2 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 499 01a6 0346     		mov	r3, r0
 500 01a8 5B42     		negs	r3, r3
 501 01aa 604A     		ldr	r2, .L70+60
 502 01ac 1360     		str	r3, [r2]
 152:main.c        ****                             pulsesTravelled = pulsesTravelled + v2M1 + v2M2;
 503              		.loc 1 152 0
 504 01ae 604B     		ldr	r3, .L70+64
 505 01b0 1A68     		ldr	r2, [r3]
 506 01b2 5D4B     		ldr	r3, .L70+56
 507 01b4 1B68     		ldr	r3, [r3]
 508 01b6 1A44     		add	r2, r2, r3
 509 01b8 5C4B     		ldr	r3, .L70+60
 510 01ba 1B68     		ldr	r3, [r3]
 511 01bc 1344     		add	r3, r3, r2
 512 01be 5C4A     		ldr	r2, .L70+64
 513 01c0 1360     		str	r3, [r2]
 153:main.c        ****                             itoa((v2M1 - v1M1), result1, 10);
 514              		.loc 1 153 0
 515 01c2 594B     		ldr	r3, .L70+56
 516 01c4 1A68     		ldr	r2, [r3]
 517 01c6 5B4B     		ldr	r3, .L70+68
 518 01c8 1B68     		ldr	r3, [r3]
 519 01ca D31A     		subs	r3, r2, r3
 520 01cc 07F1E401 		add	r1, r7, #228
 521 01d0 0A22     		movs	r2, #10
 522 01d2 1846     		mov	r0, r3
 523 01d4 FFF7FEFF 		bl	itoa
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 13


 154:main.c        ****                             itoa((v2M2 - v1M2), result2, 10);
 524              		.loc 1 154 0
 525 01d8 544B     		ldr	r3, .L70+60
 526 01da 1A68     		ldr	r2, [r3]
 527 01dc 564B     		ldr	r3, .L70+72
 528 01de 1B68     		ldr	r3, [r3]
 529 01e0 D31A     		subs	r3, r2, r3
 530 01e2 07F1CC01 		add	r1, r7, #204
 531 01e6 0A22     		movs	r2, #10
 532 01e8 1846     		mov	r0, r3
 533 01ea FFF7FEFF 		bl	itoa
 534              	.L14:
 155:main.c        ****                         }
 156:main.c        ****                         QuadDec_M1_SetCounter(0);
 535              		.loc 1 156 0
 536 01ee 0020     		movs	r0, #0
 537 01f0 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 157:main.c        ****                         QuadDec_M2_SetCounter(0);
 538              		.loc 1 157 0
 539 01f4 0020     		movs	r0, #0
 540 01f6 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 158:main.c        ****                         motorUpdateCount = 0;
 541              		.loc 1 158 0
 542 01fa 484B     		ldr	r3, .L70+44
 543 01fc 0022     		movs	r2, #0
 544 01fe 1A60     		str	r2, [r3]
 545              	.L12:
 159:main.c        ****                     }
 160:main.c        ****                     if (valuesLeftIntersection[i] > 2000) {
 546              		.loc 1 160 0
 547 0200 414A     		ldr	r2, .L70+24
 548 0202 D7F82831 		ldr	r3, [r7, #296]
 549 0206 52F82330 		ldr	r3, [r2, r3, lsl #2]
 550 020a B3F5FA6F 		cmp	r3, #2000
 551 020e 04DD     		ble	.L15
 161:main.c        ****                         highCountLeftIntersection++;
 552              		.loc 1 161 0
 553 0210 D7F83C31 		ldr	r3, [r7, #316]
 554 0214 0133     		adds	r3, r3, #1
 555 0216 C7F83C31 		str	r3, [r7, #316]
 556              	.L15:
 162:main.c        **** 
 163:main.c        ****                     }
 164:main.c        **** 
 165:main.c        ****                     if (valuesLeftLine[i] > 2000) {
 557              		.loc 1 165 0
 558 021a 3C4A     		ldr	r2, .L70+28
 559 021c D7F82831 		ldr	r3, [r7, #296]
 560 0220 52F82330 		ldr	r3, [r2, r3, lsl #2]
 561 0224 B3F5FA6F 		cmp	r3, #2000
 562 0228 04DD     		ble	.L16
 166:main.c        ****                         highCountLeftLine++;
 563              		.loc 1 166 0
 564 022a D7F83831 		ldr	r3, [r7, #312]
 565 022e 0133     		adds	r3, r3, #1
 566 0230 C7F83831 		str	r3, [r7, #312]
 567              	.L16:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 14


 167:main.c        **** 
 168:main.c        ****                     }
 169:main.c        **** 
 170:main.c        ****                     if (valuesMiddleLine[i] > 2000) {
 568              		.loc 1 170 0
 569 0234 364A     		ldr	r2, .L70+32
 570 0236 D7F82831 		ldr	r3, [r7, #296]
 571 023a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 572 023e B3F5FA6F 		cmp	r3, #2000
 573 0242 04DD     		ble	.L17
 171:main.c        ****                         highCountMiddleLine++;
 574              		.loc 1 171 0
 575 0244 D7F83431 		ldr	r3, [r7, #308]
 576 0248 0133     		adds	r3, r3, #1
 577 024a C7F83431 		str	r3, [r7, #308]
 578              	.L17:
 172:main.c        **** 
 173:main.c        ****                     }
 174:main.c        **** 
 175:main.c        ****                     if (valuesRightLine[i] > 2000) {
 579              		.loc 1 175 0
 580 024e 314A     		ldr	r2, .L70+36
 581 0250 D7F82831 		ldr	r3, [r7, #296]
 582 0254 52F82330 		ldr	r3, [r2, r3, lsl #2]
 583 0258 B3F5FA6F 		cmp	r3, #2000
 584 025c 04DD     		ble	.L18
 176:main.c        ****                         highCountRightLine++;
 585              		.loc 1 176 0
 586 025e D7F83031 		ldr	r3, [r7, #304]
 587 0262 0133     		adds	r3, r3, #1
 588 0264 C7F83031 		str	r3, [r7, #304]
 589              	.L18:
 177:main.c        **** 
 178:main.c        ****                     }
 179:main.c        **** 
 180:main.c        ****                     if (valuesRightIntersection[i] > 2000) {
 590              		.loc 1 180 0
 591 0268 2B4A     		ldr	r2, .L70+40
 592 026a D7F82831 		ldr	r3, [r7, #296]
 593 026e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 594 0272 B3F5FA6F 		cmp	r3, #2000
 595 0276 04DD     		ble	.L19
 181:main.c        ****                         highCountRightIntersection++;
 596              		.loc 1 181 0
 597 0278 D7F82C31 		ldr	r3, [r7, #300]
 598 027c 0133     		adds	r3, r3, #1
 599 027e C7F82C31 		str	r3, [r7, #300]
 600              	.L19:
 601              	.LBE6:
 144:main.c        ****                     step = 0;
 602              		.loc 1 144 0 discriminator 2
 603 0282 D7F82831 		ldr	r3, [r7, #296]
 604 0286 0133     		adds	r3, r3, #1
 605 0288 C7F82831 		str	r3, [r7, #296]
 606              	.L11:
 144:main.c        ****                     step = 0;
 607              		.loc 1 144 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 15


 608 028c D7F82831 		ldr	r3, [r7, #296]
 609 0290 B3F5FA7F 		cmp	r3, #500
 610 0294 FFF66FAF 		blt	.L20
 611              	.LBE5:
 182:main.c        **** 
 183:main.c        ****                     }
 184:main.c        **** 
 185:main.c        ****                 }
 186:main.c        **** 
 187:main.c        ****                 if (started == 0) {
 612              		.loc 1 187 0 is_stmt 1
 613 0298 284B     		ldr	r3, .L70+76
 614 029a 1B68     		ldr	r3, [r3]
 615 029c 002B     		cmp	r3, #0
 616 029e 40F0AC80 		bne	.L21
 617              	.LBB7:
 188:main.c        ****                    
 189:main.c        ****                     int i, firstNonZeroIndex = -1;
 618              		.loc 1 189 0
 619 02a2 4FF0FF33 		mov	r3, #-1
 620 02a6 C7F82031 		str	r3, [r7, #288]
 190:main.c        ****                     for (i = 0; i < 500; i++) {
 621              		.loc 1 190 0
 622 02aa 0023     		movs	r3, #0
 623 02ac C7F82431 		str	r3, [r7, #292]
 624 02b0 10E0     		b	.L22
 625              	.L25:
 191:main.c        ****                         if (instruction[i] != 0) {
 626              		.loc 1 191 0
 627 02b2 114A     		ldr	r2, .L70+8
 628 02b4 D7F82431 		ldr	r3, [r7, #292]
 629 02b8 1344     		add	r3, r3, r2
 630 02ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 631 02bc 002B     		cmp	r3, #0
 632 02be 04D0     		beq	.L23
 192:main.c        ****                             firstNonZeroIndex = i;
 633              		.loc 1 192 0
 634 02c0 D7F82431 		ldr	r3, [r7, #292]
 635 02c4 C7F82031 		str	r3, [r7, #288]
 193:main.c        ****                             break;
 636              		.loc 1 193 0
 637 02c8 09E0     		b	.L24
 638              	.L23:
 190:main.c        ****                         if (instruction[i] != 0) {
 639              		.loc 1 190 0 discriminator 2
 640 02ca D7F82431 		ldr	r3, [r7, #292]
 641 02ce 0133     		adds	r3, r3, #1
 642 02d0 C7F82431 		str	r3, [r7, #292]
 643              	.L22:
 190:main.c        ****                         if (instruction[i] != 0) {
 644              		.loc 1 190 0 is_stmt 0 discriminator 1
 645 02d4 D7F82431 		ldr	r3, [r7, #292]
 646 02d8 B3F5FA7F 		cmp	r3, #500
 647 02dc E9DB     		blt	.L25
 648              	.L24:
 194:main.c        ****                         }
 195:main.c        ****                     }
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 16


 196:main.c        **** 
 197:main.c        ****                     if (firstNonZeroIndex != -1) {
 649              		.loc 1 197 0 is_stmt 1
 650 02de D7F82031 		ldr	r3, [r7, #288]
 651 02e2 B3F1FF3F 		cmp	r3, #-1
 652 02e6 6FD0     		beq	.L26
 198:main.c        ****                         // Shift the array to start with the first non-zero element
 199:main.c        ****                         for (i = 0; i < 500 - firstNonZeroIndex; i++) {
 653              		.loc 1 199 0
 654 02e8 0023     		movs	r3, #0
 655 02ea C7F82431 		str	r3, [r7, #292]
 656 02ee 46E0     		b	.L27
 657              	.L71:
 658              		.align	2
 659              	.L70:
 660 02f0 00000000 		.word	eoc
 661 02f4 00000000 		.word	squares
 662 02f8 00000000 		.word	instruction
 663 02fc 00000000 		.word	distance
 664 0300 00000000 		.word	flag
 665 0304 00000000 		.word	count
 666 0308 00000000 		.word	valuesLeftIntersection
 667 030c 00000000 		.word	valuesLeftLine
 668 0310 00000000 		.word	valuesMiddleLine
 669 0314 00000000 		.word	valuesRightLine
 670 0318 00000000 		.word	valuesRightIntersection
 671 031c 00000000 		.word	motorUpdateCount
 672 0320 00000000 		.word	step
 673 0324 00000000 		.word	turnComplete
 674 0328 00000000 		.word	v2M1
 675 032c 00000000 		.word	v2M2
 676 0330 00000000 		.word	pulsesTravelled
 677 0334 00000000 		.word	v1M1
 678 0338 00000000 		.word	v1M2
 679 033c 00000000 		.word	started
 680              	.L28:
 200:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 681              		.loc 1 200 0 discriminator 3
 682 0340 D7F82421 		ldr	r2, [r7, #292]
 683 0344 D7F82031 		ldr	r3, [r7, #288]
 684 0348 1344     		add	r3, r3, r2
 685 034a AB4A     		ldr	r2, .L72
 686 034c D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 687 034e AA4A     		ldr	r2, .L72
 688 0350 D7F82431 		ldr	r3, [r7, #292]
 689 0354 1344     		add	r3, r3, r2
 690 0356 0A46     		mov	r2, r1
 691 0358 1A70     		strb	r2, [r3]
 201:main.c        ****                             distance[i] = distance[i + firstNonZeroIndex];
 692              		.loc 1 201 0 discriminator 3
 693 035a D7F82421 		ldr	r2, [r7, #292]
 694 035e D7F82031 		ldr	r3, [r7, #288]
 695 0362 1344     		add	r3, r3, r2
 696 0364 A54A     		ldr	r2, .L72+4
 697 0366 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 698 0368 A44A     		ldr	r2, .L72+4
 699 036a D7F82431 		ldr	r3, [r7, #292]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 17


 700 036e 1344     		add	r3, r3, r2
 701 0370 0A46     		mov	r2, r1
 702 0372 1A70     		strb	r2, [r3]
 199:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 703              		.loc 1 199 0 discriminator 3
 704 0374 D7F82431 		ldr	r3, [r7, #292]
 705 0378 0133     		adds	r3, r3, #1
 706 037a C7F82431 		str	r3, [r7, #292]
 707              	.L27:
 199:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 708              		.loc 1 199 0 is_stmt 0 discriminator 1
 709 037e D7F82031 		ldr	r3, [r7, #288]
 710 0382 C3F5FA72 		rsb	r2, r3, #500
 711 0386 D7F82431 		ldr	r3, [r7, #292]
 712 038a 9A42     		cmp	r2, r3
 713 038c D8DC     		bgt	.L28
 202:main.c        ****                         }
 203:main.c        **** 
 204:main.c        ****                         // Zero out the remaining elements
 205:main.c        ****                         for (i = 500 - firstNonZeroIndex; i < 500; i++) {
 714              		.loc 1 205 0 is_stmt 1
 715 038e D7F82031 		ldr	r3, [r7, #288]
 716 0392 C3F5FA73 		rsb	r3, r3, #500
 717 0396 C7F82431 		str	r3, [r7, #292]
 718 039a 10E0     		b	.L29
 719              	.L30:
 206:main.c        ****                             instruction[i] = 0;
 720              		.loc 1 206 0 discriminator 3
 721 039c 964A     		ldr	r2, .L72
 722 039e D7F82431 		ldr	r3, [r7, #292]
 723 03a2 1344     		add	r3, r3, r2
 724 03a4 0022     		movs	r2, #0
 725 03a6 1A70     		strb	r2, [r3]
 207:main.c        ****                             distance[i] = 0;
 726              		.loc 1 207 0 discriminator 3
 727 03a8 944A     		ldr	r2, .L72+4
 728 03aa D7F82431 		ldr	r3, [r7, #292]
 729 03ae 1344     		add	r3, r3, r2
 730 03b0 0022     		movs	r2, #0
 731 03b2 1A70     		strb	r2, [r3]
 205:main.c        ****                             instruction[i] = 0;
 732              		.loc 1 205 0 discriminator 3
 733 03b4 D7F82431 		ldr	r3, [r7, #292]
 734 03b8 0133     		adds	r3, r3, #1
 735 03ba C7F82431 		str	r3, [r7, #292]
 736              	.L29:
 205:main.c        ****                             instruction[i] = 0;
 737              		.loc 1 205 0 is_stmt 0 discriminator 1
 738 03be D7F82431 		ldr	r3, [r7, #292]
 739 03c2 B3F5FA7F 		cmp	r3, #500
 740 03c6 E9DB     		blt	.L30
 741              	.L26:
 742              	.LBB8:
 208:main.c        ****                         }
 209:main.c        **** 
 210:main.c        ****                     } else {
 211:main.c        ****                         // The array contains all zeros
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 18


 212:main.c        **** 
 213:main.c        ****                     }
 214:main.c        ****                     
 215:main.c        ****                     for (int i = 0; i < 500; i++) {
 743              		.loc 1 215 0 is_stmt 1
 744 03c8 0023     		movs	r3, #0
 745 03ca C7F81C31 		str	r3, [r7, #284]
 746 03ce 04E0     		b	.L31
 747              	.L32:
 748              		.loc 1 215 0 is_stmt 0 discriminator 3
 749 03d0 D7F81C31 		ldr	r3, [r7, #284]
 750 03d4 0133     		adds	r3, r3, #1
 751 03d6 C7F81C31 		str	r3, [r7, #284]
 752              	.L31:
 753              		.loc 1 215 0 discriminator 1
 754 03da D7F81C31 		ldr	r3, [r7, #284]
 755 03de B3F5FA7F 		cmp	r3, #500
 756 03e2 F5DB     		blt	.L32
 757              	.LBE8:
 216:main.c        **** 
 217:main.c        ****                         char instStr[24];
 218:main.c        **** 
 219:main.c        ****                          //snprintf(instStr, sizeof(instStr), "%u - %u \r\n", (unsigned char) instr
 220:main.c        **** 
 221:main.c        ****                          //usbPutString(instStr);
 222:main.c        ****                     }
 223:main.c        ****                     started = 1;
 758              		.loc 1 223 0 is_stmt 1
 759 03e4 864B     		ldr	r3, .L72+8
 760 03e6 0122     		movs	r2, #1
 761 03e8 1A60     		str	r2, [r3]
 224:main.c        ****                     turnComplete = -1; //let the robot travel forward first
 762              		.loc 1 224 0
 763 03ea 864B     		ldr	r3, .L72+12
 764 03ec 4FF0FF32 		mov	r2, #-1
 765 03f0 1A60     		str	r2, [r3]
 225:main.c        ****                     checkDistance = 0; //robot checks/stops distance when this is on
 766              		.loc 1 225 0
 767 03f2 854B     		ldr	r3, .L72+16
 768 03f4 0022     		movs	r2, #0
 769 03f6 1A60     		str	r2, [r3]
 770              	.LBE7:
 771 03f8 3FE2     		b	.L10
 772              	.L21:
 773              	.LBB9:
 226:main.c        ****                     
 227:main.c        ****                 } else {
 228:main.c        ****                     started = 1;
 774              		.loc 1 228 0
 775 03fa 814B     		ldr	r3, .L72+8
 776 03fc 0122     		movs	r2, #1
 777 03fe 1A60     		str	r2, [r3]
 229:main.c        **** 
 230:main.c        ****                     char currentInst = instruction[instCounter];
 778              		.loc 1 230 0
 779 0400 824B     		ldr	r3, .L72+20
 780 0402 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 19


 781 0404 7C4A     		ldr	r2, .L72
 782 0406 D35C     		ldrb	r3, [r2, r3]
 783 0408 87F81731 		strb	r3, [r7, #279]
 231:main.c        ****                     char nextInst = instruction[instCounter + 1];
 784              		.loc 1 231 0
 785 040c 7F4B     		ldr	r3, .L72+20
 786 040e 1B68     		ldr	r3, [r3]
 787 0410 0133     		adds	r3, r3, #1
 788 0412 794A     		ldr	r2, .L72
 789 0414 D35C     		ldrb	r3, [r2, r3]
 790 0416 87F81631 		strb	r3, [r7, #278]
 232:main.c        ****                     if (currentInst == 0) {
 791              		.loc 1 232 0
 792 041a 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 793 041e 002B     		cmp	r3, #0
 794 0420 1AD1     		bne	.L33
 233:main.c        ****                         LED_PIN_1_Write(0);
 795              		.loc 1 233 0
 796 0422 0020     		movs	r0, #0
 797 0424 FFF7FEFF 		bl	LED_PIN_1_Write
 234:main.c        ****                         LED_PIN_6_Write(0);
 798              		.loc 1 234 0
 799 0428 0020     		movs	r0, #0
 800 042a FFF7FEFF 		bl	LED_PIN_6_Write
 235:main.c        ****                         stop();
 801              		.loc 1 235 0
 802 042e FFF7FEFF 		bl	stop
 236:main.c        ****                         // Stop
 237:main.c        ****                         CyDelay(1000);
 803              		.loc 1 237 0
 804 0432 4FF47A70 		mov	r0, #1000
 805 0436 FFF7FEFF 		bl	CyDelay
 238:main.c        ****                         if (nextInst == 1 || nextInst == 5) {
 806              		.loc 1 238 0
 807 043a 97F81631 		ldrb	r3, [r7, #278]	@ zero_extendqisi2
 808 043e 012B     		cmp	r3, #1
 809 0440 04D0     		beq	.L34
 810              		.loc 1 238 0 is_stmt 0 discriminator 1
 811 0442 97F81631 		ldrb	r3, [r7, #278]	@ zero_extendqisi2
 812 0446 052B     		cmp	r3, #5
 813 0448 40F01181 		bne	.L36
 814              	.L34:
 239:main.c        ****                             turnLeft();
 815              		.loc 1 239 0 is_stmt 1
 816 044c FFF7FEFF 		bl	turnLeft
 240:main.c        ****                             CyDelay(50);
 817              		.loc 1 240 0
 818 0450 3220     		movs	r0, #50
 819 0452 FFF7FEFF 		bl	CyDelay
 820 0456 0AE1     		b	.L36
 821              	.L33:
 241:main.c        ****                         }
 242:main.c        ****                     } else if ((currentInst == 1 || currentInst == 5)&& turnComplete == -1) {
 822              		.loc 1 242 0
 823 0458 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 824 045c 012B     		cmp	r3, #1
 825 045e 03D0     		beq	.L37
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 20


 826              		.loc 1 242 0 is_stmt 0 discriminator 2
 827 0460 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 828 0464 052B     		cmp	r3, #5
 829 0466 17D1     		bne	.L38
 830              	.L37:
 831              		.loc 1 242 0 discriminator 3
 832 0468 664B     		ldr	r3, .L72+12
 833 046a 1B68     		ldr	r3, [r3]
 834 046c B3F1FF3F 		cmp	r3, #-1
 835 0470 12D1     		bne	.L38
 243:main.c        ****                         LED_PIN_6_Write(0);
 836              		.loc 1 243 0 is_stmt 1
 837 0472 0020     		movs	r0, #0
 838 0474 FFF7FEFF 		bl	LED_PIN_6_Write
 244:main.c        ****                         turnComplete = 0;
 839              		.loc 1 244 0
 840 0478 624B     		ldr	r3, .L72+12
 841 047a 0022     		movs	r2, #0
 842 047c 1A60     		str	r2, [r3]
 245:main.c        ****                         turnLeft();
 843              		.loc 1 245 0
 844 047e FFF7FEFF 		bl	turnLeft
 246:main.c        ****                         LED_PIN_4_Write(0);
 845              		.loc 1 246 0
 846 0482 0020     		movs	r0, #0
 847 0484 FFF7FEFF 		bl	LED_PIN_4_Write
 247:main.c        ****                         CyDelay(350);
 848              		.loc 1 247 0
 849 0488 4FF4AF70 		mov	r0, #350
 850 048c FFF7FEFF 		bl	CyDelay
 248:main.c        ****                         pulsesTravelled = 0;
 851              		.loc 1 248 0
 852 0490 5F4B     		ldr	r3, .L72+24
 853 0492 0022     		movs	r2, #0
 854 0494 1A60     		str	r2, [r3]
 855 0496 EAE0     		b	.L36
 856              	.L38:
 249:main.c        ****                         // Complete a left turn, then follow line
 250:main.c        **** 
 251:main.c        ****                     } else if ((currentInst == 1 || currentInst == 5) && turnComplete == 0) {
 857              		.loc 1 251 0
 858 0498 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 859 049c 012B     		cmp	r3, #1
 860 049e 03D0     		beq	.L39
 861              		.loc 1 251 0 is_stmt 0 discriminator 2
 862 04a0 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 863 04a4 052B     		cmp	r3, #5
 864 04a6 23D1     		bne	.L40
 865              	.L39:
 866              		.loc 1 251 0 discriminator 3
 867 04a8 564B     		ldr	r3, .L72+12
 868 04aa 1B68     		ldr	r3, [r3]
 869 04ac 002B     		cmp	r3, #0
 870 04ae 1FD1     		bne	.L40
 252:main.c        ****                         lastAdjustDirection = 0;
 871              		.loc 1 252 0 is_stmt 1
 872 04b0 584B     		ldr	r3, .L72+28
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 21


 873 04b2 0022     		movs	r2, #0
 874 04b4 1A60     		str	r2, [r3]
 253:main.c        ****                         if (R_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 875              		.loc 1 253 0
 876 04b6 D7F83031 		ldr	r3, [r7, #304]
 877 04ba 4A2B     		cmp	r3, #74
 878 04bc 14DC     		bgt	.L41
 254:main.c        ****                             LED_PIN_6_Write(1);
 879              		.loc 1 254 0
 880 04be 0120     		movs	r0, #1
 881 04c0 FFF7FEFF 		bl	LED_PIN_6_Write
 255:main.c        ****                             turnComplete = 1;
 882              		.loc 1 255 0
 883 04c4 4F4B     		ldr	r3, .L72+12
 884 04c6 0122     		movs	r2, #1
 885 04c8 1A60     		str	r2, [r3]
 256:main.c        ****                             stop();
 886              		.loc 1 256 0
 887 04ca FFF7FEFF 		bl	stop
 257:main.c        ****                             CyDelay(200);
 888              		.loc 1 257 0
 889 04ce C820     		movs	r0, #200
 890 04d0 FFF7FEFF 		bl	CyDelay
 258:main.c        ****                             
 259:main.c        ****                             adjustRight();
 891              		.loc 1 259 0
 892 04d4 FFF7FEFF 		bl	adjustRight
 260:main.c        ****                             CyDelay(225);
 893              		.loc 1 260 0
 894 04d8 E120     		movs	r0, #225
 895 04da FFF7FEFF 		bl	CyDelay
 261:main.c        ****                             
 262:main.c        ****                             stop();
 896              		.loc 1 262 0
 897 04de FFF7FEFF 		bl	stop
 263:main.c        ****                             CyDelay(200);
 898              		.loc 1 263 0
 899 04e2 C820     		movs	r0, #200
 900 04e4 FFF7FEFF 		bl	CyDelay
 901              	.L41:
 264:main.c        ****                         }
 265:main.c        ****                         pulsesTravelled = 0;
 902              		.loc 1 265 0
 903 04e8 494B     		ldr	r3, .L72+24
 904 04ea 0022     		movs	r2, #0
 905 04ec 1A60     		str	r2, [r3]
 906 04ee BEE0     		b	.L36
 907              	.L40:
 266:main.c        ****                     } else if (currentInst == 2 || currentInst == 6) {
 908              		.loc 1 266 0
 909 04f0 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 910 04f4 022B     		cmp	r3, #2
 911 04f6 03D0     		beq	.L42
 912              		.loc 1 266 0 is_stmt 0 discriminator 1
 913 04f8 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 914 04fc 062B     		cmp	r3, #6
 915 04fe 03D1     		bne	.L43
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 22


 916              	.L42:
 267:main.c        ****                         LED_PIN_6_Write(1);
 917              		.loc 1 267 0 is_stmt 1
 918 0500 0120     		movs	r0, #1
 919 0502 FFF7FEFF 		bl	LED_PIN_6_Write
 920 0506 B2E0     		b	.L36
 921              	.L43:
 268:main.c        ****                         // Drive straight
 269:main.c        ****                         
 270:main.c        ****                         
 271:main.c        ****                     } else if ((currentInst == 3||currentInst == 7) && turnComplete == -1) {
 922              		.loc 1 271 0
 923 0508 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 924 050c 032B     		cmp	r3, #3
 925 050e 03D0     		beq	.L44
 926              		.loc 1 271 0 is_stmt 0 discriminator 2
 927 0510 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 928 0514 072B     		cmp	r3, #7
 929 0516 17D1     		bne	.L45
 930              	.L44:
 931              		.loc 1 271 0 discriminator 3
 932 0518 3A4B     		ldr	r3, .L72+12
 933 051a 1B68     		ldr	r3, [r3]
 934 051c B3F1FF3F 		cmp	r3, #-1
 935 0520 12D1     		bne	.L45
 272:main.c        ****                         LED_PIN_1_Write(0);
 936              		.loc 1 272 0 is_stmt 1
 937 0522 0020     		movs	r0, #0
 938 0524 FFF7FEFF 		bl	LED_PIN_1_Write
 273:main.c        ****                         turnComplete = 0;
 939              		.loc 1 273 0
 940 0528 364B     		ldr	r3, .L72+12
 941 052a 0022     		movs	r2, #0
 942 052c 1A60     		str	r2, [r3]
 274:main.c        ****                         turnRight();
 943              		.loc 1 274 0
 944 052e FFF7FEFF 		bl	turnRight
 275:main.c        ****                         LED_PIN_4_Write(0);
 945              		.loc 1 275 0
 946 0532 0020     		movs	r0, #0
 947 0534 FFF7FEFF 		bl	LED_PIN_4_Write
 276:main.c        ****                         CyDelay(350);
 948              		.loc 1 276 0
 949 0538 4FF4AF70 		mov	r0, #350
 950 053c FFF7FEFF 		bl	CyDelay
 277:main.c        ****                         pulsesTravelled = 0;
 951              		.loc 1 277 0
 952 0540 334B     		ldr	r3, .L72+24
 953 0542 0022     		movs	r2, #0
 954 0544 1A60     		str	r2, [r3]
 955 0546 92E0     		b	.L36
 956              	.L45:
 278:main.c        **** 
 279:main.c        ****                     } else if ((currentInst == 3||currentInst == 7) && turnComplete == 0) {
 957              		.loc 1 279 0
 958 0548 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 959 054c 032B     		cmp	r3, #3
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 23


 960 054e 03D0     		beq	.L46
 961              		.loc 1 279 0 is_stmt 0 discriminator 2
 962 0550 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 963 0554 072B     		cmp	r3, #7
 964 0556 2CD1     		bne	.L47
 965              	.L46:
 966              		.loc 1 279 0 discriminator 3
 967 0558 2A4B     		ldr	r3, .L72+12
 968 055a 1B68     		ldr	r3, [r3]
 969 055c 002B     		cmp	r3, #0
 970 055e 28D1     		bne	.L47
 280:main.c        ****                         lastAdjustDirection = 2;
 971              		.loc 1 280 0 is_stmt 1
 972 0560 2C4B     		ldr	r3, .L72+28
 973 0562 0222     		movs	r2, #2
 974 0564 1A60     		str	r2, [r3]
 281:main.c        ****                         if (L_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 975              		.loc 1 281 0
 976 0566 D7F83831 		ldr	r3, [r7, #312]
 977 056a 4A2B     		cmp	r3, #74
 978 056c 1DDC     		bgt	.L48
 282:main.c        ****                             LED_PIN_1_Write(1);
 979              		.loc 1 282 0
 980 056e 0120     		movs	r0, #1
 981 0570 FFF7FEFF 		bl	LED_PIN_1_Write
 283:main.c        ****                             turnComplete = 1;
 982              		.loc 1 283 0
 983 0574 234B     		ldr	r3, .L72+12
 984 0576 0122     		movs	r2, #1
 985 0578 1A60     		str	r2, [r3]
 284:main.c        ****                             stop();
 986              		.loc 1 284 0
 987 057a FFF7FEFF 		bl	stop
 285:main.c        ****                             CyDelay(200);
 988              		.loc 1 285 0
 989 057e C820     		movs	r0, #200
 990 0580 FFF7FEFF 		bl	CyDelay
 286:main.c        ****                             pulsesTravelled = 0;
 991              		.loc 1 286 0
 992 0584 224B     		ldr	r3, .L72+24
 993 0586 0022     		movs	r2, #0
 994 0588 1A60     		str	r2, [r3]
 287:main.c        ****                             
 288:main.c        ****                             adjustLeft();
 995              		.loc 1 288 0
 996 058a FFF7FEFF 		bl	adjustLeft
 289:main.c        ****                             CyDelay(225);
 997              		.loc 1 289 0
 998 058e E120     		movs	r0, #225
 999 0590 FFF7FEFF 		bl	CyDelay
 290:main.c        ****                             pulsesTravelled = 0;
 1000              		.loc 1 290 0
 1001 0594 1E4B     		ldr	r3, .L72+24
 1002 0596 0022     		movs	r2, #0
 1003 0598 1A60     		str	r2, [r3]
 291:main.c        ****                             
 292:main.c        ****                             stop();
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 24


 1004              		.loc 1 292 0
 1005 059a FFF7FEFF 		bl	stop
 293:main.c        ****                             CyDelay(200);
 1006              		.loc 1 293 0
 1007 059e C820     		movs	r0, #200
 1008 05a0 FFF7FEFF 		bl	CyDelay
 294:main.c        ****                             pulsesTravelled = 0;
 1009              		.loc 1 294 0
 1010 05a4 1A4B     		ldr	r3, .L72+24
 1011 05a6 0022     		movs	r2, #0
 1012 05a8 1A60     		str	r2, [r3]
 1013              	.L48:
 295:main.c        ****                         }
 296:main.c        ****                         pulsesTravelled = 0;
 1014              		.loc 1 296 0
 1015 05aa 194B     		ldr	r3, .L72+24
 1016 05ac 0022     		movs	r2, #0
 1017 05ae 1A60     		str	r2, [r3]
 1018 05b0 5DE0     		b	.L36
 1019              	.L47:
 297:main.c        ****                     } else if ((currentInst == 4||currentInst == 8) && turnComplete == -1) {
 1020              		.loc 1 297 0
 1021 05b2 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1022 05b6 042B     		cmp	r3, #4
 1023 05b8 03D0     		beq	.L49
 1024              		.loc 1 297 0 is_stmt 0 discriminator 2
 1025 05ba 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1026 05be 082B     		cmp	r3, #8
 1027 05c0 2AD1     		bne	.L50
 1028              	.L49:
 1029              		.loc 1 297 0 discriminator 3
 1030 05c2 104B     		ldr	r3, .L72+12
 1031 05c4 1B68     		ldr	r3, [r3]
 1032 05c6 B3F1FF3F 		cmp	r3, #-1
 1033 05ca 25D1     		bne	.L50
 298:main.c        ****                         LED_PIN_1_Write(0);
 1034              		.loc 1 298 0 is_stmt 1
 1035 05cc 0020     		movs	r0, #0
 1036 05ce FFF7FEFF 		bl	LED_PIN_1_Write
 299:main.c        ****                         LED_PIN_6_Write(0);
 1037              		.loc 1 299 0
 1038 05d2 0020     		movs	r0, #0
 1039 05d4 FFF7FEFF 		bl	LED_PIN_6_Write
 300:main.c        ****                         turnComplete = 0;
 1040              		.loc 1 300 0
 1041 05d8 0A4B     		ldr	r3, .L72+12
 1042 05da 0022     		movs	r2, #0
 1043 05dc 1A60     		str	r2, [r3]
 301:main.c        ****                         turnLeft();
 1044              		.loc 1 301 0
 1045 05de FFF7FEFF 		bl	turnLeft
 302:main.c        ****                         LED_PIN_4_Write(0);
 1046              		.loc 1 302 0
 1047 05e2 0020     		movs	r0, #0
 1048 05e4 FFF7FEFF 		bl	LED_PIN_4_Write
 303:main.c        ****                         CyDelay(600);
 1049              		.loc 1 303 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 25


 1050 05e8 4FF41670 		mov	r0, #600
 1051 05ec FFF7FEFF 		bl	CyDelay
 304:main.c        ****                         pulsesTravelled = 0;
 1052              		.loc 1 304 0
 1053 05f0 074B     		ldr	r3, .L72+24
 1054 05f2 0022     		movs	r2, #0
 1055 05f4 1A60     		str	r2, [r3]
 1056 05f6 3AE0     		b	.L36
 1057              	.L73:
 1058              		.align	2
 1059              	.L72:
 1060 05f8 00000000 		.word	instruction
 1061 05fc 00000000 		.word	distance
 1062 0600 00000000 		.word	started
 1063 0604 00000000 		.word	turnComplete
 1064 0608 00000000 		.word	checkDistance
 1065 060c 00000000 		.word	instCounter
 1066 0610 00000000 		.word	pulsesTravelled
 1067 0614 00000000 		.word	lastAdjustDirection
 1068              	.L50:
 305:main.c        **** 
 306:main.c        ****                     } else if ((currentInst == 4||currentInst == 8) && turnComplete == 0) {
 1069              		.loc 1 306 0
 1070 0618 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1071 061c 042B     		cmp	r3, #4
 1072 061e 03D0     		beq	.L51
 1073              		.loc 1 306 0 is_stmt 0 discriminator 2
 1074 0620 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1075 0624 082B     		cmp	r3, #8
 1076 0626 22D1     		bne	.L36
 1077              	.L51:
 1078              		.loc 1 306 0 discriminator 3
 1079 0628 994B     		ldr	r3, .L74+8
 1080 062a 1B68     		ldr	r3, [r3]
 1081 062c 002B     		cmp	r3, #0
 1082 062e 1ED1     		bne	.L36
 307:main.c        ****                         LED_PIN_1_Write(0);
 1083              		.loc 1 307 0 is_stmt 1
 1084 0630 0020     		movs	r0, #0
 1085 0632 FFF7FEFF 		bl	LED_PIN_1_Write
 308:main.c        ****                         LED_PIN_6_Write(0);
 1086              		.loc 1 308 0
 1087 0636 0020     		movs	r0, #0
 1088 0638 FFF7FEFF 		bl	LED_PIN_6_Write
 309:main.c        ****                         // Do a 180, then follow line
 310:main.c        ****                         if (R_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 1089              		.loc 1 310 0
 1090 063c D7F83031 		ldr	r3, [r7, #304]
 1091 0640 4A2B     		cmp	r3, #74
 1092 0642 11DC     		bgt	.L52
 311:main.c        ****                             turnComplete = 1;
 1093              		.loc 1 311 0
 1094 0644 924B     		ldr	r3, .L74+8
 1095 0646 0122     		movs	r2, #1
 1096 0648 1A60     		str	r2, [r3]
 312:main.c        ****                             stop();
 1097              		.loc 1 312 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 26


 1098 064a FFF7FEFF 		bl	stop
 313:main.c        ****                             CyDelay(200);
 1099              		.loc 1 313 0
 1100 064e C820     		movs	r0, #200
 1101 0650 FFF7FEFF 		bl	CyDelay
 314:main.c        ****                             
 315:main.c        ****                             adjustRight();
 1102              		.loc 1 315 0
 1103 0654 FFF7FEFF 		bl	adjustRight
 316:main.c        ****                             CyDelay(225);
 1104              		.loc 1 316 0
 1105 0658 E120     		movs	r0, #225
 1106 065a FFF7FEFF 		bl	CyDelay
 317:main.c        ****                             
 318:main.c        ****                             stop();
 1107              		.loc 1 318 0
 1108 065e FFF7FEFF 		bl	stop
 319:main.c        ****                             CyDelay(200);
 1109              		.loc 1 319 0
 1110 0662 C820     		movs	r0, #200
 1111 0664 FFF7FEFF 		bl	CyDelay
 1112              	.L52:
 320:main.c        ****                         }
 321:main.c        ****                         pulsesTravelled = 0;
 1113              		.loc 1 321 0
 1114 0668 8A4B     		ldr	r3, .L74+12
 1115 066a 0022     		movs	r2, #0
 1116 066c 1A60     		str	r2, [r3]
 1117              	.L36:
 322:main.c        ****                    
 323:main.c        ****                     }
 324:main.c        **** 
 325:main.c        ****                     //only allow code to straighten if turn is complete
 326:main.c        ****                     if (turnComplete != 0 ) {
 1118              		.loc 1 326 0
 1119 066e 884B     		ldr	r3, .L74+8
 1120 0670 1B68     		ldr	r3, [r3]
 1121 0672 002B     		cmp	r3, #0
 1122 0674 00F0F380 		beq	.L53
 1123              	.LBB10:
 327:main.c        ****                         if ((M_LINE_BLACK && L_LINE_BLACK)) { // if robot slightly too far right
 1124              		.loc 1 327 0
 1125 0678 D7F83431 		ldr	r3, [r7, #308]
 1126 067c 4A2B     		cmp	r3, #74
 1127 067e 09DC     		bgt	.L54
 1128              		.loc 1 327 0 is_stmt 0 discriminator 1
 1129 0680 D7F83831 		ldr	r3, [r7, #312]
 1130 0684 4A2B     		cmp	r3, #74
 1131 0686 05DC     		bgt	.L54
 328:main.c        ****                             adjustLeft();
 1132              		.loc 1 328 0 is_stmt 1
 1133 0688 FFF7FEFF 		bl	adjustLeft
 329:main.c        ****                             lastAdjustDirection = 0;
 1134              		.loc 1 329 0
 1135 068c 824B     		ldr	r3, .L74+16
 1136 068e 0022     		movs	r2, #0
 1137 0690 1A60     		str	r2, [r3]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 27


 1138 0692 3DE0     		b	.L55
 1139              	.L54:
 330:main.c        **** 
 331:main.c        ****                         } else if (M_LINE_BLACK && R_LINE_BLACK) { //  if robot slightly too far le
 1140              		.loc 1 331 0
 1141 0694 D7F83431 		ldr	r3, [r7, #308]
 1142 0698 4A2B     		cmp	r3, #74
 1143 069a 09DC     		bgt	.L56
 1144              		.loc 1 331 0 is_stmt 0 discriminator 1
 1145 069c D7F83031 		ldr	r3, [r7, #304]
 1146 06a0 4A2B     		cmp	r3, #74
 1147 06a2 05DC     		bgt	.L56
 332:main.c        ****                             adjustRight();
 1148              		.loc 1 332 0 is_stmt 1
 1149 06a4 FFF7FEFF 		bl	adjustRight
 333:main.c        ****                             lastAdjustDirection = 2;
 1150              		.loc 1 333 0
 1151 06a8 7B4B     		ldr	r3, .L74+16
 1152 06aa 0222     		movs	r2, #2
 1153 06ac 1A60     		str	r2, [r3]
 1154 06ae 2FE0     		b	.L55
 1155              	.L56:
 334:main.c        **** 
 335:main.c        ****                         } else if (M_LINE_BLACK) { // if robot in the center keep moving straight
 1156              		.loc 1 335 0
 1157 06b0 D7F83431 		ldr	r3, [r7, #308]
 1158 06b4 4A2B     		cmp	r3, #74
 1159 06b6 07DC     		bgt	.L57
 336:main.c        ****                             lastAdjustDirection = 1;
 1160              		.loc 1 336 0
 1161 06b8 774B     		ldr	r3, .L74+16
 1162 06ba 0122     		movs	r2, #1
 1163 06bc 1A60     		str	r2, [r3]
 337:main.c        ****                             driveForward(0, 0);
 1164              		.loc 1 337 0
 1165 06be 0021     		movs	r1, #0
 1166 06c0 0020     		movs	r0, #0
 1167 06c2 FFF7FEFF 		bl	driveForward
 1168 06c6 23E0     		b	.L55
 1169              	.L57:
 338:main.c        **** 
 339:main.c        ****                         } else if (R_LINE_BLACK) { // if robot too far left
 1170              		.loc 1 339 0
 1171 06c8 D7F83031 		ldr	r3, [r7, #304]
 1172 06cc 4A2B     		cmp	r3, #74
 1173 06ce 05DC     		bgt	.L58
 340:main.c        ****                             adjustRight();
 1174              		.loc 1 340 0
 1175 06d0 FFF7FEFF 		bl	adjustRight
 341:main.c        ****                             lastAdjustDirection = 2;
 1176              		.loc 1 341 0
 1177 06d4 704B     		ldr	r3, .L74+16
 1178 06d6 0222     		movs	r2, #2
 1179 06d8 1A60     		str	r2, [r3]
 1180 06da 19E0     		b	.L55
 1181              	.L58:
 342:main.c        **** 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 28


 343:main.c        ****                         } else if (L_LINE_BLACK) { // if robot too far right
 1182              		.loc 1 343 0
 1183 06dc D7F83831 		ldr	r3, [r7, #312]
 1184 06e0 4A2B     		cmp	r3, #74
 1185 06e2 05DC     		bgt	.L59
 344:main.c        ****                             adjustLeft();
 1186              		.loc 1 344 0
 1187 06e4 FFF7FEFF 		bl	adjustLeft
 345:main.c        ****                             lastAdjustDirection = 0;
 1188              		.loc 1 345 0
 1189 06e8 6B4B     		ldr	r3, .L74+16
 1190 06ea 0022     		movs	r2, #0
 1191 06ec 1A60     		str	r2, [r3]
 1192 06ee 0FE0     		b	.L55
 1193              	.L59:
 346:main.c        ****                         
 347:main.c        **** 
 348:main.c        ****                         } else { // completely lost find way
 349:main.c        ****                             if (lastAdjustDirection == 0) {
 1194              		.loc 1 349 0
 1195 06f0 694B     		ldr	r3, .L74+16
 1196 06f2 1B68     		ldr	r3, [r3]
 1197 06f4 002B     		cmp	r3, #0
 1198 06f6 02D1     		bne	.L60
 350:main.c        ****                                 adjustLeft();
 1199              		.loc 1 350 0
 1200 06f8 FFF7FEFF 		bl	adjustLeft
 1201 06fc 08E0     		b	.L55
 1202              	.L60:
 351:main.c        ****                             } else if (lastAdjustDirection == 1) { // last movement was forward (mi
 1203              		.loc 1 351 0
 1204 06fe 664B     		ldr	r3, .L74+16
 1205 0700 1B68     		ldr	r3, [r3]
 1206 0702 012B     		cmp	r3, #1
 1207 0704 02D1     		bne	.L61
 352:main.c        ****                                 //hardAdjustLeft();
 353:main.c        ****                                 adjustRight();
 1208              		.loc 1 353 0
 1209 0706 FFF7FEFF 		bl	adjustRight
 1210 070a 01E0     		b	.L55
 1211              	.L61:
 354:main.c        ****                             } else {
 355:main.c        ****                                 adjustRight();
 1212              		.loc 1 355 0
 1213 070c FFF7FEFF 		bl	adjustRight
 1214              	.L55:
 356:main.c        ****                             }
 357:main.c        **** 
 358:main.c        ****                         }
 359:main.c        ****                         
 360:main.c        **** 
 361:main.c        ****                         // UPDATE INSTRUCTION LOGIC GOES HERE
 362:main.c        ****                         LED_PIN_2_Write(0);
 1215              		.loc 1 362 0
 1216 0710 0020     		movs	r0, #0
 1217 0712 FFF7FEFF 		bl	LED_PIN_2_Write
 363:main.c        ****                         LED_PIN_3_Write(0);
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 29


 1218              		.loc 1 363 0
 1219 0716 0020     		movs	r0, #0
 1220 0718 FFF7FEFF 		bl	LED_PIN_3_Write
 364:main.c        ****                         LED_PIN_4_Write(0);
 1221              		.loc 1 364 0
 1222 071c 0020     		movs	r0, #0
 1223 071e FFF7FEFF 		bl	LED_PIN_4_Write
 365:main.c        ****                         char dist[24];
 366:main.c        ****                         char pulses[24];
 367:main.c        ****                         char first[24];
 368:main.c        ****                         char second[24];
 369:main.c        ****                         //57 pulses on 1 motor = 20.42 cm
 370:main.c        ****                         char instStr[24];
 371:main.c        ****                         char cVal[24];
 372:main.c        **** 
 373:main.c        **** 
 374:main.c        ****                         //if distance has been covered and ready to switch
 375:main.c        ****                         // if stop instruction or not turning and distance has been travelled
 376:main.c        ****                         int pulsesToTravel[] = {0, 62, 123, 150, 530, 700, 700, 1000, 570}; //
 1224              		.loc 1 376 0
 1225 0722 3B46     		mov	r3, r7
 1226 0724 5D4A     		ldr	r2, .L74+20
 1227 0726 1C46     		mov	r4, r3
 1228 0728 1546     		mov	r5, r2
 1229 072a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1230 072c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1231 072e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1232 0730 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1233 0732 2B68     		ldr	r3, [r5]
 1234 0734 2360     		str	r3, [r4]
 377:main.c        ****                         //                                   g    g        
 378:main.c        ****                         if (turnComplete != 0 && (pulsesTravelled * 0.7 > pulsesToTravel[distance[i
 1235              		.loc 1 378 0
 1236 0736 564B     		ldr	r3, .L74+8
 1237 0738 1B68     		ldr	r3, [r3]
 1238 073a 002B     		cmp	r3, #0
 1239 073c 00F08F80 		beq	.L53
 1240              		.loc 1 378 0 is_stmt 0 discriminator 1
 1241 0740 544B     		ldr	r3, .L74+12
 1242 0742 1B68     		ldr	r3, [r3]
 1243 0744 1846     		mov	r0, r3
 1244 0746 FFF7FEFF 		bl	__aeabi_i2d
 1245 074a 4FA3     		adr	r3, .L74
 1246 074c D3E90023 		ldrd	r2, [r3]
 1247 0750 FFF7FEFF 		bl	__aeabi_dmul
 1248 0754 0346     		mov	r3, r0
 1249 0756 0C46     		mov	r4, r1
 1250 0758 2546     		mov	r5, r4
 1251 075a 1C46     		mov	r4, r3
 1252 075c 504B     		ldr	r3, .L74+24
 1253 075e 1B68     		ldr	r3, [r3]
 1254 0760 504A     		ldr	r2, .L74+28
 1255 0762 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1256 0764 1A46     		mov	r2, r3
 1257 0766 3B46     		mov	r3, r7
 1258 0768 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1259 076c 1846     		mov	r0, r3
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 30


 1260 076e FFF7FEFF 		bl	__aeabi_i2d
 1261 0772 0246     		mov	r2, r0
 1262 0774 0B46     		mov	r3, r1
 1263 0776 2046     		mov	r0, r4
 1264 0778 2946     		mov	r1, r5
 1265 077a FFF7FEFF 		bl	__aeabi_dcmpgt
 1266 077e 0346     		mov	r3, r0
 1267 0780 002B     		cmp	r3, #0
 1268 0782 03D1     		bne	.L63
 1269              		.loc 1 378 0 discriminator 2
 1270 0784 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1271 0788 002B     		cmp	r3, #0
 1272 078a 68D1     		bne	.L53
 1273              	.L63:
 379:main.c        ****                             // if distance reached then stop
 380:main.c        ****                             if (currentInst == 0 || currentInst == 6 || currentInst == 7 || current
 1274              		.loc 1 380 0 is_stmt 1
 1275 078c 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1276 0790 002B     		cmp	r3, #0
 1277 0792 0FD0     		beq	.L64
 1278              		.loc 1 380 0 is_stmt 0 discriminator 1
 1279 0794 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1280 0798 062B     		cmp	r3, #6
 1281 079a 0BD0     		beq	.L64
 1282              		.loc 1 380 0 discriminator 2
 1283 079c 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1284 07a0 072B     		cmp	r3, #7
 1285 07a2 07D0     		beq	.L64
 1286              		.loc 1 380 0 discriminator 3
 1287 07a4 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1288 07a8 082B     		cmp	r3, #8
 1289 07aa 03D0     		beq	.L64
 1290              		.loc 1 380 0 discriminator 4
 1291 07ac 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1292 07b0 052B     		cmp	r3, #5
 1293 07b2 1DD1     		bne	.L65
 1294              	.L64:
 381:main.c        ****                                 LED_PIN_4_Write(1);
 1295              		.loc 1 381 0 is_stmt 1
 1296 07b4 0120     		movs	r0, #1
 1297 07b6 FFF7FEFF 		bl	LED_PIN_4_Write
 382:main.c        ****                                 instCounter++;
 1298              		.loc 1 382 0
 1299 07ba 394B     		ldr	r3, .L74+24
 1300 07bc 1B68     		ldr	r3, [r3]
 1301 07be 0133     		adds	r3, r3, #1
 1302 07c0 374A     		ldr	r2, .L74+24
 1303 07c2 1360     		str	r3, [r2]
 383:main.c        ****                                 turnComplete = -1;
 1304              		.loc 1 383 0
 1305 07c4 324B     		ldr	r3, .L74+8
 1306 07c6 4FF0FF32 		mov	r2, #-1
 1307 07ca 1A60     		str	r2, [r3]
 384:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 385:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 386:main.c        ****                                 //                            //usbPutString(instStr);
 387:main.c        ****                                 pulsesTravelled = 0;
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 31


 1308              		.loc 1 387 0
 1309 07cc 314B     		ldr	r3, .L74+12
 1310 07ce 0022     		movs	r2, #0
 1311 07d0 1A60     		str	r2, [r3]
 388:main.c        ****                                 if (currentInst != 0) {
 1312              		.loc 1 388 0
 1313 07d2 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1314 07d6 002B     		cmp	r3, #0
 1315 07d8 41D0     		beq	.L53
 389:main.c        ****                                     CyDelay(500);
 1316              		.loc 1 389 0
 1317 07da 4FF4FA70 		mov	r0, #500
 1318 07de FFF7FEFF 		bl	CyDelay
 390:main.c        ****                                     stop();
 1319              		.loc 1 390 0
 1320 07e2 FFF7FEFF 		bl	stop
 391:main.c        ****                                     CyDelay(1000);
 1321              		.loc 1 391 0
 1322 07e6 4FF47A70 		mov	r0, #1000
 1323 07ea FFF7FEFF 		bl	CyDelay
 388:main.c        ****                                     CyDelay(500);
 1324              		.loc 1 388 0
 1325 07ee 36E0     		b	.L53
 1326              	.L65:
 392:main.c        ****                                 }
 393:main.c        ****                                 //
 394:main.c        ****                             } 
 395:main.c        ****                             // ignoring if right sensor sensed when the next instruction doesnt mak
 396:main.c        ****                             else if (R_INT_BLACK && (nextInst != 1 && nextInst != 5)) { //reached a
 1327              		.loc 1 396 0
 1328 07f0 D7F82C31 		ldr	r3, [r7, #300]
 1329 07f4 4A2B     		cmp	r3, #74
 1330 07f6 17DC     		bgt	.L67
 1331              		.loc 1 396 0 is_stmt 0 discriminator 1
 1332 07f8 97F81631 		ldrb	r3, [r7, #278]	@ zero_extendqisi2
 1333 07fc 012B     		cmp	r3, #1
 1334 07fe 13D0     		beq	.L67
 1335              		.loc 1 396 0 discriminator 2
 1336 0800 97F81631 		ldrb	r3, [r7, #278]	@ zero_extendqisi2
 1337 0804 052B     		cmp	r3, #5
 1338 0806 0FD0     		beq	.L67
 397:main.c        ****                                 //
 398:main.c        ****                                 LED_PIN_4_Write(1);
 1339              		.loc 1 398 0 is_stmt 1
 1340 0808 0120     		movs	r0, #1
 1341 080a FFF7FEFF 		bl	LED_PIN_4_Write
 399:main.c        ****                                 instCounter++;
 1342              		.loc 1 399 0
 1343 080e 244B     		ldr	r3, .L74+24
 1344 0810 1B68     		ldr	r3, [r3]
 1345 0812 0133     		adds	r3, r3, #1
 1346 0814 224A     		ldr	r2, .L74+24
 1347 0816 1360     		str	r3, [r2]
 400:main.c        ****                                 turnComplete = -1;
 1348              		.loc 1 400 0
 1349 0818 1D4B     		ldr	r3, .L74+8
 1350 081a 4FF0FF32 		mov	r2, #-1
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 32


 1351 081e 1A60     		str	r2, [r3]
 401:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 402:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 403:main.c        ****                                 //                            //usbPutString(instStr);
 404:main.c        ****                                 pulsesTravelled = 0;
 1352              		.loc 1 404 0
 1353 0820 1C4B     		ldr	r3, .L74+12
 1354 0822 0022     		movs	r2, #0
 1355 0824 1A60     		str	r2, [r3]
 1356 0826 1AE0     		b	.L53
 1357              	.L67:
 405:main.c        ****                             }
 406:main.c        ****                             // ignoring if left sensor sensed when the next instruction doesnt make
 407:main.c        ****                             else if (L_INT_BLACK && (nextInst != 3 && nextInst != 5)) { //reached a
 1358              		.loc 1 407 0
 1359 0828 D7F83C31 		ldr	r3, [r7, #316]
 1360 082c 4A2B     		cmp	r3, #74
 1361 082e 16DC     		bgt	.L53
 1362              		.loc 1 407 0 is_stmt 0 discriminator 1
 1363 0830 97F81631 		ldrb	r3, [r7, #278]	@ zero_extendqisi2
 1364 0834 032B     		cmp	r3, #3
 1365 0836 12D0     		beq	.L53
 1366              		.loc 1 407 0 discriminator 2
 1367 0838 97F81631 		ldrb	r3, [r7, #278]	@ zero_extendqisi2
 1368 083c 052B     		cmp	r3, #5
 1369 083e 0ED0     		beq	.L53
 408:main.c        ****                                 LED_PIN_4_Write(1);
 1370              		.loc 1 408 0 is_stmt 1
 1371 0840 0120     		movs	r0, #1
 1372 0842 FFF7FEFF 		bl	LED_PIN_4_Write
 409:main.c        ****                                 instCounter++;
 1373              		.loc 1 409 0
 1374 0846 164B     		ldr	r3, .L74+24
 1375 0848 1B68     		ldr	r3, [r3]
 1376 084a 0133     		adds	r3, r3, #1
 1377 084c 144A     		ldr	r2, .L74+24
 1378 084e 1360     		str	r3, [r2]
 410:main.c        ****                                 turnComplete = -1;
 1379              		.loc 1 410 0
 1380 0850 0F4B     		ldr	r3, .L74+8
 1381 0852 4FF0FF32 		mov	r2, #-1
 1382 0856 1A60     		str	r2, [r3]
 411:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 412:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 413:main.c        ****                                 //                            //usbPutString(instStr);
 414:main.c        ****                                 pulsesTravelled = 0;
 1383              		.loc 1 414 0
 1384 0858 0E4B     		ldr	r3, .L74+12
 1385 085a 0022     		movs	r2, #0
 1386 085c 1A60     		str	r2, [r3]
 1387              	.L53:
 1388              	.LBE10:
 415:main.c        ****                             } else {
 416:main.c        **** 
 417:main.c        ****                             }
 418:main.c        ****                         }
 419:main.c        ****                     }
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 33


 420:main.c        **** 
 421:main.c        ****                     if (L_INT_BLACK) {
 1389              		.loc 1 421 0
 1390 085e D7F83C31 		ldr	r3, [r7, #316]
 1391 0862 4A2B     		cmp	r3, #74
 1392 0864 02DC     		bgt	.L68
 422:main.c        ****                         LED_PIN_2_Write(1);
 1393              		.loc 1 422 0
 1394 0866 0120     		movs	r0, #1
 1395 0868 FFF7FEFF 		bl	LED_PIN_2_Write
 1396              	.L68:
 423:main.c        ****                     }
 424:main.c        **** 
 425:main.c        ****                     if (R_INT_BLACK) {
 1397              		.loc 1 425 0
 1398 086c D7F82C31 		ldr	r3, [r7, #300]
 1399 0870 4A2B     		cmp	r3, #74
 1400 0872 02DC     		bgt	.L10
 426:main.c        ****                         LED_PIN_3_Write(1);
 1401              		.loc 1 426 0
 1402 0874 0120     		movs	r0, #1
 1403 0876 FFF7FEFF 		bl	LED_PIN_3_Write
 1404              	.L10:
 1405              	.LBE9:
 1406              	.LBE4:
 427:main.c        ****                     }
 428:main.c        ****                 }
 429:main.c        ****             }
 430:main.c        **** 
 431:main.c        ****             flag = 0;
 1407              		.loc 1 431 0
 1408 087a 0B4B     		ldr	r3, .L74+32
 1409 087c 0022     		movs	r2, #0
 1410 087e 1A60     		str	r2, [r3]
 432:main.c        ****             ADC1_IRQ_Enable();
 1411              		.loc 1 432 0
 1412 0880 FFF7FEFF 		bl	ADC1_IRQ_Enable
 433:main.c        ****         }
 434:main.c        **** 
 435:main.c        ****     }
 1413              		.loc 1 435 0
 1414 0884 16E4     		b	.L69
 1415              	.L75:
 1416 0886 00BF     		.align	3
 1417              	.L74:
 1418 0888 66666666 		.word	1717986918
 1419 088c 6666E63F 		.word	1072064102
 1420 0890 00000000 		.word	turnComplete
 1421 0894 00000000 		.word	pulsesTravelled
 1422 0898 00000000 		.word	lastAdjustDirection
 1423 089c 00000000 		.word	.LC0
 1424 08a0 00000000 		.word	instCounter
 1425 08a4 00000000 		.word	distance
 1426 08a8 00000000 		.word	flag
 1427              		.cfi_endproc
 1428              	.LFE65:
 1429              		.size	main, .-main
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 34


 1430              		.section	.text.usbPutString,"ax",%progbits
 1431              		.align	2
 1432              		.global	usbPutString
 1433              		.thumb
 1434              		.thumb_func
 1435              		.type	usbPutString, %function
 1436              	usbPutString:
 1437              	.LFB66:
 436:main.c        **** }
 437:main.c        **** //* ========================================
 438:main.c        **** void usbPutString(char * s) {
 1438              		.loc 1 438 0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 8
 1441              		@ frame_needed = 1, uses_anonymous_args = 0
 1442 0000 80B5     		push	{r7, lr}
 1443              		.cfi_def_cfa_offset 8
 1444              		.cfi_offset 7, -8
 1445              		.cfi_offset 14, -4
 1446 0002 82B0     		sub	sp, sp, #8
 1447              		.cfi_def_cfa_offset 16
 1448 0004 00AF     		add	r7, sp, #0
 1449              		.cfi_def_cfa_register 7
 1450 0006 7860     		str	r0, [r7, #4]
 439:main.c        ****     // !! Assumes that *s is a string with allocated space >=64 chars    
 440:main.c        ****     //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 441:main.c        ****     //  length to 62 char (63rd char is a '!')
 442:main.c        **** 
 443:main.c        ****     #ifdef USE_USB
 444:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1451              		.loc 1 444 0
 1452 0008 00BF     		nop
 1453              	.L77:
 1454              		.loc 1 444 0 is_stmt 0 discriminator 1
 1455 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1456 000e 0346     		mov	r3, r0
 1457 0010 002B     		cmp	r3, #0
 1458 0012 FAD0     		beq	.L77
 445:main.c        ****     s[63] = '\0';
 1459              		.loc 1 445 0 is_stmt 1
 1460 0014 7B68     		ldr	r3, [r7, #4]
 1461 0016 3F33     		adds	r3, r3, #63
 1462 0018 0022     		movs	r2, #0
 1463 001a 1A70     		strb	r2, [r3]
 446:main.c        ****     s[62] = '!';
 1464              		.loc 1 446 0
 1465 001c 7B68     		ldr	r3, [r7, #4]
 1466 001e 3E33     		adds	r3, r3, #62
 1467 0020 2122     		movs	r2, #33
 1468 0022 1A70     		strb	r2, [r3]
 447:main.c        ****     USBUART_PutData((uint8 * ) s, strlen(s));
 1469              		.loc 1 447 0
 1470 0024 7868     		ldr	r0, [r7, #4]
 1471 0026 FFF7FEFF 		bl	strlen
 1472 002a 0346     		mov	r3, r0
 1473 002c 9BB2     		uxth	r3, r3
 1474 002e 1946     		mov	r1, r3
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 35


 1475 0030 7868     		ldr	r0, [r7, #4]
 1476 0032 FFF7FEFF 		bl	USBUART_PutData
 448:main.c        ****     #endif
 449:main.c        **** }
 1477              		.loc 1 449 0
 1478 0036 00BF     		nop
 1479 0038 0837     		adds	r7, r7, #8
 1480              		.cfi_def_cfa_offset 8
 1481 003a BD46     		mov	sp, r7
 1482              		.cfi_def_cfa_register 13
 1483              		@ sp needed
 1484 003c 80BD     		pop	{r7, pc}
 1485              		.cfi_endproc
 1486              	.LFE66:
 1487              		.size	usbPutString, .-usbPutString
 1488 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1489              		.align	2
 1490              		.global	usbPutChar
 1491              		.thumb
 1492              		.thumb_func
 1493              		.type	usbPutChar, %function
 1494              	usbPutChar:
 1495              	.LFB67:
 450:main.c        **** //* ========================================
 451:main.c        **** void usbPutChar(char c) {
 1496              		.loc 1 451 0
 1497              		.cfi_startproc
 1498              		@ args = 0, pretend = 0, frame = 8
 1499              		@ frame_needed = 1, uses_anonymous_args = 0
 1500 0000 80B5     		push	{r7, lr}
 1501              		.cfi_def_cfa_offset 8
 1502              		.cfi_offset 7, -8
 1503              		.cfi_offset 14, -4
 1504 0002 82B0     		sub	sp, sp, #8
 1505              		.cfi_def_cfa_offset 16
 1506 0004 00AF     		add	r7, sp, #0
 1507              		.cfi_def_cfa_register 7
 1508 0006 0346     		mov	r3, r0
 1509 0008 FB71     		strb	r3, [r7, #7]
 452:main.c        ****     #ifdef USE_USB
 453:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1510              		.loc 1 453 0
 1511 000a 00BF     		nop
 1512              	.L79:
 1513              		.loc 1 453 0 is_stmt 0 discriminator 1
 1514 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1515 0010 0346     		mov	r3, r0
 1516 0012 002B     		cmp	r3, #0
 1517 0014 FAD0     		beq	.L79
 454:main.c        ****     USBUART_PutChar(c);
 1518              		.loc 1 454 0 is_stmt 1
 1519 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1520 0018 1846     		mov	r0, r3
 1521 001a FFF7FEFF 		bl	USBUART_PutChar
 455:main.c        ****     #endif
 456:main.c        **** }...
 1522              		.loc 1 456 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 36


 1523 001e 00BF     		nop
 1524 0020 0837     		adds	r7, r7, #8
 1525              		.cfi_def_cfa_offset 8
 1526 0022 BD46     		mov	sp, r7
 1527              		.cfi_def_cfa_register 13
 1528              		@ sp needed
 1529 0024 80BD     		pop	{r7, pc}
 1530              		.cfi_endproc
 1531              	.LFE67:
 1532              		.size	usbPutChar, .-usbPutChar
 1533 0026 00BF     		.text
 1534              	.Letext0:
 1535              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1536              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1537              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1538              		.file 5 "vars.h"
 1539              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1540              		.section	.debug_info,"",%progbits
 1541              	.Ldebug_info0:
 1542 0000 6A070000 		.4byte	0x76a
 1543 0004 0400     		.2byte	0x4
 1544 0006 00000000 		.4byte	.Ldebug_abbrev0
 1545 000a 04       		.byte	0x4
 1546 000b 01       		.uleb128 0x1
 1547 000c A9000000 		.4byte	.LASF102
 1548 0010 0C       		.byte	0xc
 1549 0011 8C040000 		.4byte	.LASF103
 1550 0015 3C010000 		.4byte	.LASF104
 1551 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1552 001d 00000000 		.4byte	0
 1553 0021 00000000 		.4byte	.Ldebug_line0
 1554 0025 02       		.uleb128 0x2
 1555 0026 01       		.byte	0x1
 1556 0027 06       		.byte	0x6
 1557 0028 08020000 		.4byte	.LASF0
 1558 002c 02       		.uleb128 0x2
 1559 002d 01       		.byte	0x1
 1560 002e 08       		.byte	0x8
 1561 002f DC020000 		.4byte	.LASF1
 1562 0033 02       		.uleb128 0x2
 1563 0034 02       		.byte	0x2
 1564 0035 05       		.byte	0x5
 1565 0036 72000000 		.4byte	.LASF2
 1566 003a 02       		.uleb128 0x2
 1567 003b 02       		.byte	0x2
 1568 003c 07       		.byte	0x7
 1569 003d BE030000 		.4byte	.LASF3
 1570 0041 03       		.uleb128 0x3
 1571 0042 35040000 		.4byte	.LASF12
 1572 0046 02       		.byte	0x2
 1573 0047 3F       		.byte	0x3f
 1574 0048 4C000000 		.4byte	0x4c
 1575 004c 02       		.uleb128 0x2
 1576 004d 04       		.byte	0x4
 1577 004e 05       		.byte	0x5
 1578 004f 6E020000 		.4byte	.LASF4
 1579 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 37


 1580 0054 04       		.byte	0x4
 1581 0055 07       		.byte	0x7
 1582 0056 93040000 		.4byte	.LASF5
 1583 005a 02       		.uleb128 0x2
 1584 005b 08       		.byte	0x8
 1585 005c 05       		.byte	0x5
 1586 005d 22020000 		.4byte	.LASF6
 1587 0061 02       		.uleb128 0x2
 1588 0062 08       		.byte	0x8
 1589 0063 07       		.byte	0x7
 1590 0064 69030000 		.4byte	.LASF7
 1591 0068 04       		.uleb128 0x4
 1592 0069 04       		.byte	0x4
 1593 006a 05       		.byte	0x5
 1594 006b 696E7400 		.ascii	"int\000"
 1595 006f 02       		.uleb128 0x2
 1596 0070 04       		.byte	0x4
 1597 0071 07       		.byte	0x7
 1598 0072 80030000 		.4byte	.LASF8
 1599 0076 02       		.uleb128 0x2
 1600 0077 08       		.byte	0x8
 1601 0078 04       		.byte	0x4
 1602 0079 F2020000 		.4byte	.LASF9
 1603 007d 02       		.uleb128 0x2
 1604 007e 04       		.byte	0x4
 1605 007f 07       		.byte	0x7
 1606 0080 89000000 		.4byte	.LASF10
 1607 0084 05       		.uleb128 0x5
 1608 0085 04       		.byte	0x4
 1609 0086 8A000000 		.4byte	0x8a
 1610 008a 02       		.uleb128 0x2
 1611 008b 01       		.byte	0x1
 1612 008c 08       		.byte	0x8
 1613 008d 00040000 		.4byte	.LASF11
 1614 0091 06       		.uleb128 0x6
 1615 0092 8A000000 		.4byte	0x8a
 1616 0096 A1000000 		.4byte	0xa1
 1617 009a 07       		.uleb128 0x7
 1618 009b 7D000000 		.4byte	0x7d
 1619 009f 17       		.byte	0x17
 1620 00a0 00       		.byte	0
 1621 00a1 03       		.uleb128 0x3
 1622 00a2 28040000 		.4byte	.LASF13
 1623 00a6 03       		.byte	0x3
 1624 00a7 2C       		.byte	0x2c
 1625 00a8 41000000 		.4byte	0x41
 1626 00ac 08       		.uleb128 0x8
 1627 00ad C8010000 		.4byte	.LASF14
 1628 00b1 04       		.byte	0x4
 1629 00b2 E701     		.2byte	0x1e7
 1630 00b4 2C000000 		.4byte	0x2c
 1631 00b8 08       		.uleb128 0x8
 1632 00b9 B5010000 		.4byte	.LASF15
 1633 00bd 04       		.byte	0x4
 1634 00be E801     		.2byte	0x1e8
 1635 00c0 3A000000 		.4byte	0x3a
 1636 00c4 08       		.uleb128 0x8
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 38


 1637 00c5 3D020000 		.4byte	.LASF16
 1638 00c9 04       		.byte	0x4
 1639 00ca EA01     		.2byte	0x1ea
 1640 00cc 25000000 		.4byte	0x25
 1641 00d0 08       		.uleb128 0x8
 1642 00d1 C2010000 		.4byte	.LASF17
 1643 00d5 04       		.byte	0x4
 1644 00d6 EB01     		.2byte	0x1eb
 1645 00d8 33000000 		.4byte	0x33
 1646 00dc 02       		.uleb128 0x2
 1647 00dd 04       		.byte	0x4
 1648 00de 04       		.byte	0x4
 1649 00df 14020000 		.4byte	.LASF18
 1650 00e3 02       		.uleb128 0x2
 1651 00e4 08       		.byte	0x8
 1652 00e5 04       		.byte	0x4
 1653 00e6 A5040000 		.4byte	.LASF19
 1654 00ea 09       		.uleb128 0x9
 1655 00eb F6030000 		.4byte	.LASF105
 1656 00ef 20       		.byte	0x20
 1657 00f0 05       		.byte	0x5
 1658 00f1 29       		.byte	0x29
 1659 00f2 C3010000 		.4byte	0x1c3
 1660 00f6 0A       		.uleb128 0xa
 1661 00f7 75050000 		.4byte	.LASF20
 1662 00fb 05       		.byte	0x5
 1663 00fc 2A       		.byte	0x2a
 1664 00fd C4000000 		.4byte	0xc4
 1665 0101 00       		.byte	0
 1666 0102 0A       		.uleb128 0xa
 1667 0103 BC010000 		.4byte	.LASF21
 1668 0107 05       		.byte	0x5
 1669 0108 2B       		.byte	0x2b
 1670 0109 AC000000 		.4byte	0xac
 1671 010d 01       		.byte	0x1
 1672 010e 0A       		.uleb128 0xa
 1673 010f 1D040000 		.4byte	.LASF22
 1674 0113 05       		.byte	0x5
 1675 0114 2C       		.byte	0x2c
 1676 0115 D0000000 		.4byte	0xd0
 1677 0119 02       		.byte	0x2
 1678 011a 0A       		.uleb128 0xa
 1679 011b 3B050000 		.4byte	.LASF23
 1680 011f 05       		.byte	0x5
 1681 0120 2D       		.byte	0x2d
 1682 0121 D0000000 		.4byte	0xd0
 1683 0125 04       		.byte	0x4
 1684 0126 0A       		.uleb128 0xa
 1685 0127 7A050000 		.4byte	.LASF24
 1686 012b 05       		.byte	0x5
 1687 012c 2E       		.byte	0x2e
 1688 012d D0000000 		.4byte	0xd0
 1689 0131 06       		.byte	0x6
 1690 0132 0A       		.uleb128 0xa
 1691 0133 66020000 		.4byte	.LASF25
 1692 0137 05       		.byte	0x5
 1693 0138 2F       		.byte	0x2f
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 39


 1694 0139 D0000000 		.4byte	0xd0
 1695 013d 08       		.byte	0x8
 1696 013e 0A       		.uleb128 0xa
 1697 013f F2040000 		.4byte	.LASF26
 1698 0143 05       		.byte	0x5
 1699 0144 30       		.byte	0x30
 1700 0145 D0000000 		.4byte	0xd0
 1701 0149 0A       		.byte	0xa
 1702 014a 0A       		.uleb128 0xa
 1703 014b 26030000 		.4byte	.LASF27
 1704 014f 05       		.byte	0x5
 1705 0150 31       		.byte	0x31
 1706 0151 D0000000 		.4byte	0xd0
 1707 0155 0C       		.byte	0xc
 1708 0156 0A       		.uleb128 0xa
 1709 0157 59020000 		.4byte	.LASF28
 1710 015b 05       		.byte	0x5
 1711 015c 32       		.byte	0x32
 1712 015d D0000000 		.4byte	0xd0
 1713 0161 0E       		.byte	0xe
 1714 0162 0A       		.uleb128 0xa
 1715 0163 B6030000 		.4byte	.LASF29
 1716 0167 05       		.byte	0x5
 1717 0168 33       		.byte	0x33
 1718 0169 D0000000 		.4byte	0xd0
 1719 016d 10       		.byte	0x10
 1720 016e 0A       		.uleb128 0xa
 1721 016f EA020000 		.4byte	.LASF30
 1722 0173 05       		.byte	0x5
 1723 0174 34       		.byte	0x34
 1724 0175 D0000000 		.4byte	0xd0
 1725 0179 12       		.byte	0x12
 1726 017a 0A       		.uleb128 0xa
 1727 017b 2F030000 		.4byte	.LASF31
 1728 017f 05       		.byte	0x5
 1729 0180 35       		.byte	0x35
 1730 0181 D0000000 		.4byte	0xd0
 1731 0185 14       		.byte	0x14
 1732 0186 0A       		.uleb128 0xa
 1733 0187 CE010000 		.4byte	.LASF32
 1734 018b 05       		.byte	0x5
 1735 018c 36       		.byte	0x36
 1736 018d D0000000 		.4byte	0xd0
 1737 0191 16       		.byte	0x16
 1738 0192 0A       		.uleb128 0xa
 1739 0193 6A000000 		.4byte	.LASF33
 1740 0197 05       		.byte	0x5
 1741 0198 37       		.byte	0x37
 1742 0199 D0000000 		.4byte	0xd0
 1743 019d 18       		.byte	0x18
 1744 019e 0A       		.uleb128 0xa
 1745 019f 51020000 		.4byte	.LASF34
 1746 01a3 05       		.byte	0x5
 1747 01a4 38       		.byte	0x38
 1748 01a5 D0000000 		.4byte	0xd0
 1749 01a9 1A       		.byte	0x1a
 1750 01aa 0A       		.uleb128 0xa
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 40


 1751 01ab A8030000 		.4byte	.LASF35
 1752 01af 05       		.byte	0x5
 1753 01b0 39       		.byte	0x39
 1754 01b1 D0000000 		.4byte	0xd0
 1755 01b5 1C       		.byte	0x1c
 1756 01b6 0A       		.uleb128 0xa
 1757 01b7 A8010000 		.4byte	.LASF36
 1758 01bb 05       		.byte	0x5
 1759 01bc 3A       		.byte	0x3a
 1760 01bd D0000000 		.4byte	0xd0
 1761 01c1 1E       		.byte	0x1e
 1762 01c2 00       		.byte	0
 1763 01c3 0B       		.uleb128 0xb
 1764 01c4 656F6300 		.ascii	"eoc\000"
 1765 01c8 01       		.byte	0x1
 1766 01c9 4B       		.byte	0x4b
 1767 01ca 00000000 		.4byte	.LFB64
 1768 01ce 18000000 		.4byte	.LFE64-.LFB64
 1769 01d2 01       		.uleb128 0x1
 1770 01d3 9C       		.byte	0x9c
 1771 01d4 0C       		.uleb128 0xc
 1772 01d5 37010000 		.4byte	.LASF55
 1773 01d9 01       		.byte	0x1
 1774 01da 4F       		.byte	0x4f
 1775 01db 68000000 		.4byte	0x68
 1776 01df 00000000 		.4byte	.LFB65
 1777 01e3 AC080000 		.4byte	.LFE65-.LFB65
 1778 01e7 01       		.uleb128 0x1
 1779 01e8 9C       		.byte	0x9c
 1780 01e9 A2030000 		.4byte	0x3a2
 1781 01ed 0D       		.uleb128 0xd
 1782 01ee 34000000 		.4byte	.LBB2
 1783 01f2 5A000000 		.4byte	.LBE2-.LBB2
 1784 01f6 07020000 		.4byte	0x207
 1785 01fa 0E       		.uleb128 0xe
 1786 01fb 6900     		.ascii	"i\000"
 1787 01fd 01       		.byte	0x1
 1788 01fe 68       		.byte	0x68
 1789 01ff 68000000 		.4byte	0x68
 1790 0203 02       		.uleb128 0x2
 1791 0204 91       		.byte	0x91
 1792 0205 6C       		.sleb128 -20
 1793 0206 00       		.byte	0
 1794 0207 0D       		.uleb128 0xd
 1795 0208 98000000 		.4byte	.LBB3
 1796 020c 1C000000 		.4byte	.LBE3-.LBB3
 1797 0210 21020000 		.4byte	0x221
 1798 0214 0E       		.uleb128 0xe
 1799 0215 6900     		.ascii	"i\000"
 1800 0217 01       		.byte	0x1
 1801 0218 70       		.byte	0x70
 1802 0219 68000000 		.4byte	0x68
 1803 021d 02       		.uleb128 0x2
 1804 021e 91       		.byte	0x91
 1805 021f 68       		.sleb128 -24
 1806 0220 00       		.byte	0
 1807 0221 0F       		.uleb128 0xf
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 41


 1808 0222 3A010000 		.4byte	.LBB4
 1809 0226 40070000 		.4byte	.LBE4-.LBB4
 1810 022a 10       		.uleb128 0x10
 1811 022b 0B000000 		.4byte	.LASF37
 1812 022f 01       		.byte	0x1
 1813 0230 8A       		.byte	0x8a
 1814 0231 68000000 		.4byte	0x68
 1815 0235 02       		.uleb128 0x2
 1816 0236 91       		.byte	0x91
 1817 0237 64       		.sleb128 -28
 1818 0238 10       		.uleb128 0x10
 1819 0239 7A040000 		.4byte	.LASF38
 1820 023d 01       		.byte	0x1
 1821 023e 8B       		.byte	0x8b
 1822 023f 68000000 		.4byte	0x68
 1823 0243 02       		.uleb128 0x2
 1824 0244 91       		.byte	0x91
 1825 0245 60       		.sleb128 -32
 1826 0246 10       		.uleb128 0x10
 1827 0247 D1030000 		.4byte	.LASF39
 1828 024b 01       		.byte	0x1
 1829 024c 8C       		.byte	0x8c
 1830 024d 68000000 		.4byte	0x68
 1831 0251 02       		.uleb128 0x2
 1832 0252 91       		.byte	0x91
 1833 0253 5C       		.sleb128 -36
 1834 0254 10       		.uleb128 0x10
 1835 0255 5A050000 		.4byte	.LASF40
 1836 0259 01       		.byte	0x1
 1837 025a 8D       		.byte	0x8d
 1838 025b 68000000 		.4byte	0x68
 1839 025f 02       		.uleb128 0x2
 1840 0260 91       		.byte	0x91
 1841 0261 40       		.sleb128 -64
 1842 0262 10       		.uleb128 0x10
 1843 0263 38030000 		.4byte	.LASF41
 1844 0267 01       		.byte	0x1
 1845 0268 8E       		.byte	0x8e
 1846 0269 68000000 		.4byte	0x68
 1847 026d 02       		.uleb128 0x2
 1848 026e 91       		.byte	0x91
 1849 026f 58       		.sleb128 -40
 1850 0270 10       		.uleb128 0x10
 1851 0271 C1020000 		.4byte	.LASF42
 1852 0275 01       		.byte	0x1
 1853 0276 8F       		.byte	0x8f
 1854 0277 68000000 		.4byte	0x68
 1855 027b 02       		.uleb128 0x2
 1856 027c 91       		.byte	0x91
 1857 027d 54       		.sleb128 -44
 1858 027e 0D       		.uleb128 0xd
 1859 027f 6E010000 		.4byte	.LBB5
 1860 0283 2A010000 		.4byte	.LBE5-.LBB5
 1861 0287 C0020000 		.4byte	0x2c0
 1862 028b 0E       		.uleb128 0xe
 1863 028c 6900     		.ascii	"i\000"
 1864 028e 01       		.byte	0x1
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 42


 1865 028f 90       		.byte	0x90
 1866 0290 68000000 		.4byte	0x68
 1867 0294 02       		.uleb128 0x2
 1868 0295 91       		.byte	0x91
 1869 0296 50       		.sleb128 -48
 1870 0297 0F       		.uleb128 0xf
 1871 0298 76010000 		.4byte	.LBB6
 1872 029c 0C010000 		.4byte	.LBE6-.LBB6
 1873 02a0 10       		.uleb128 0x10
 1874 02a1 04030000 		.4byte	.LASF43
 1875 02a5 01       		.byte	0x1
 1876 02a6 92       		.byte	0x92
 1877 02a7 91000000 		.4byte	0x91
 1878 02ab 03       		.uleb128 0x3
 1879 02ac 91       		.byte	0x91
 1880 02ad 8C7F     		.sleb128 -116
 1881 02af 10       		.uleb128 0x10
 1882 02b0 0C030000 		.4byte	.LASF44
 1883 02b4 01       		.byte	0x1
 1884 02b5 93       		.byte	0x93
 1885 02b6 91000000 		.4byte	0x91
 1886 02ba 03       		.uleb128 0x3
 1887 02bb 91       		.byte	0x91
 1888 02bc F47E     		.sleb128 -140
 1889 02be 00       		.byte	0
 1890 02bf 00       		.byte	0
 1891 02c0 0D       		.uleb128 0xd
 1892 02c1 A2020000 		.4byte	.LBB7
 1893 02c5 56010000 		.4byte	.LBE7-.LBB7
 1894 02c9 FE020000 		.4byte	0x2fe
 1895 02cd 0E       		.uleb128 0xe
 1896 02ce 6900     		.ascii	"i\000"
 1897 02d0 01       		.byte	0x1
 1898 02d1 BD       		.byte	0xbd
 1899 02d2 68000000 		.4byte	0x68
 1900 02d6 02       		.uleb128 0x2
 1901 02d7 91       		.byte	0x91
 1902 02d8 4C       		.sleb128 -52
 1903 02d9 10       		.uleb128 0x10
 1904 02da 14030000 		.4byte	.LASF45
 1905 02de 01       		.byte	0x1
 1906 02df BD       		.byte	0xbd
 1907 02e0 68000000 		.4byte	0x68
 1908 02e4 02       		.uleb128 0x2
 1909 02e5 91       		.byte	0x91
 1910 02e6 48       		.sleb128 -56
 1911 02e7 0F       		.uleb128 0xf
 1912 02e8 C8030000 		.4byte	.LBB8
 1913 02ec 1C000000 		.4byte	.LBE8-.LBB8
 1914 02f0 0E       		.uleb128 0xe
 1915 02f1 6900     		.ascii	"i\000"
 1916 02f3 01       		.byte	0x1
 1917 02f4 D7       		.byte	0xd7
 1918 02f5 68000000 		.4byte	0x68
 1919 02f9 02       		.uleb128 0x2
 1920 02fa 91       		.byte	0x91
 1921 02fb 44       		.sleb128 -60
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 43


 1922 02fc 00       		.byte	0
 1923 02fd 00       		.byte	0
 1924 02fe 0F       		.uleb128 0xf
 1925 02ff FA030000 		.4byte	.LBB9
 1926 0303 80040000 		.4byte	.LBE9-.LBB9
 1927 0307 10       		.uleb128 0x10
 1928 0308 A7020000 		.4byte	.LASF46
 1929 030c 01       		.byte	0x1
 1930 030d E6       		.byte	0xe6
 1931 030e 8A000000 		.4byte	0x8a
 1932 0312 03       		.uleb128 0x3
 1933 0313 91       		.byte	0x91
 1934 0314 BF7F     		.sleb128 -65
 1935 0316 10       		.uleb128 0x10
 1936 0317 92050000 		.4byte	.LASF47
 1937 031b 01       		.byte	0x1
 1938 031c E7       		.byte	0xe7
 1939 031d 8A000000 		.4byte	0x8a
 1940 0321 03       		.uleb128 0x3
 1941 0322 91       		.byte	0x91
 1942 0323 BE7F     		.sleb128 -66
 1943 0325 0F       		.uleb128 0xf
 1944 0326 78060000 		.4byte	.LBB10
 1945 032a E6010000 		.4byte	.LBE10-.LBB10
 1946 032e 11       		.uleb128 0x11
 1947 032f B1030000 		.4byte	.LASF48
 1948 0333 01       		.byte	0x1
 1949 0334 6D01     		.2byte	0x16d
 1950 0336 91000000 		.4byte	0x91
 1951 033a 03       		.uleb128 0x3
 1952 033b 91       		.byte	0x91
 1953 033c C47E     		.sleb128 -188
 1954 033e 11       		.uleb128 0x11
 1955 033f 3F040000 		.4byte	.LASF49
 1956 0343 01       		.byte	0x1
 1957 0344 6E01     		.2byte	0x16e
 1958 0346 91000000 		.4byte	0x91
 1959 034a 03       		.uleb128 0x3
 1960 034b 91       		.byte	0x91
 1961 034c AC7E     		.sleb128 -212
 1962 034e 11       		.uleb128 0x11
 1963 034f 8C050000 		.4byte	.LASF50
 1964 0353 01       		.byte	0x1
 1965 0354 6F01     		.2byte	0x16f
 1966 0356 91000000 		.4byte	0x91
 1967 035a 03       		.uleb128 0x3
 1968 035b 91       		.byte	0x91
 1969 035c 947E     		.sleb128 -236
 1970 035e 11       		.uleb128 0x11
 1971 035f 62030000 		.4byte	.LASF51
 1972 0363 01       		.byte	0x1
 1973 0364 7001     		.2byte	0x170
 1974 0366 91000000 		.4byte	0x91
 1975 036a 03       		.uleb128 0x3
 1976 036b 91       		.byte	0x91
 1977 036c FC7D     		.sleb128 -260
 1978 036e 11       		.uleb128 0x11
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 44


 1979 036f 46050000 		.4byte	.LASF52
 1980 0373 01       		.byte	0x1
 1981 0374 7201     		.2byte	0x172
 1982 0376 91000000 		.4byte	0x91
 1983 037a 03       		.uleb128 0x3
 1984 037b 91       		.byte	0x91
 1985 037c E47D     		.sleb128 -284
 1986 037e 11       		.uleb128 0x11
 1987 037f 46040000 		.4byte	.LASF53
 1988 0383 01       		.byte	0x1
 1989 0384 7301     		.2byte	0x173
 1990 0386 91000000 		.4byte	0x91
 1991 038a 03       		.uleb128 0x3
 1992 038b 91       		.byte	0x91
 1993 038c CC7D     		.sleb128 -308
 1994 038e 11       		.uleb128 0x11
 1995 038f 0E040000 		.4byte	.LASF54
 1996 0393 01       		.byte	0x1
 1997 0394 7801     		.2byte	0x178
 1998 0396 A2030000 		.4byte	0x3a2
 1999 039a 03       		.uleb128 0x3
 2000 039b 91       		.byte	0x91
 2001 039c A87D     		.sleb128 -344
 2002 039e 00       		.byte	0
 2003 039f 00       		.byte	0
 2004 03a0 00       		.byte	0
 2005 03a1 00       		.byte	0
 2006 03a2 06       		.uleb128 0x6
 2007 03a3 68000000 		.4byte	0x68
 2008 03a7 B2030000 		.4byte	0x3b2
 2009 03ab 07       		.uleb128 0x7
 2010 03ac 7D000000 		.4byte	0x7d
 2011 03b0 08       		.byte	0x8
 2012 03b1 00       		.byte	0
 2013 03b2 12       		.uleb128 0x12
 2014 03b3 30020000 		.4byte	.LASF56
 2015 03b7 01       		.byte	0x1
 2016 03b8 B601     		.2byte	0x1b6
 2017 03ba 00000000 		.4byte	.LFB66
 2018 03be 3E000000 		.4byte	.LFE66-.LFB66
 2019 03c2 01       		.uleb128 0x1
 2020 03c3 9C       		.byte	0x9c
 2021 03c4 D6030000 		.4byte	0x3d6
 2022 03c8 13       		.uleb128 0x13
 2023 03c9 7300     		.ascii	"s\000"
 2024 03cb 01       		.byte	0x1
 2025 03cc B601     		.2byte	0x1b6
 2026 03ce 84000000 		.4byte	0x84
 2027 03d2 02       		.uleb128 0x2
 2028 03d3 91       		.byte	0x91
 2029 03d4 74       		.sleb128 -12
 2030 03d5 00       		.byte	0
 2031 03d6 12       		.uleb128 0x12
 2032 03d7 00000000 		.4byte	.LASF57
 2033 03db 01       		.byte	0x1
 2034 03dc C301     		.2byte	0x1c3
 2035 03de 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 45


 2036 03e2 26000000 		.4byte	.LFE67-.LFB67
 2037 03e6 01       		.uleb128 0x1
 2038 03e7 9C       		.byte	0x9c
 2039 03e8 FA030000 		.4byte	0x3fa
 2040 03ec 13       		.uleb128 0x13
 2041 03ed 6300     		.ascii	"c\000"
 2042 03ef 01       		.byte	0x1
 2043 03f0 C301     		.2byte	0x1c3
 2044 03f2 8A000000 		.4byte	0x8a
 2045 03f6 02       		.uleb128 0x2
 2046 03f7 91       		.byte	0x91
 2047 03f8 77       		.sleb128 -9
 2048 03f9 00       		.byte	0
 2049 03fa 14       		.uleb128 0x14
 2050 03fb AC040000 		.4byte	.LASF58
 2051 03ff 06       		.byte	0x6
 2052 0400 1207     		.2byte	0x712
 2053 0402 06040000 		.4byte	0x406
 2054 0406 15       		.uleb128 0x15
 2055 0407 A1000000 		.4byte	0xa1
 2056 040b 16       		.uleb128 0x16
 2057 040c 747300   		.ascii	"ts\000"
 2058 040f 05       		.byte	0x5
 2059 0410 10       		.byte	0x10
 2060 0411 AC000000 		.4byte	0xac
 2061 0415 05       		.uleb128 0x5
 2062 0416 03       		.byte	0x3
 2063 0417 00000000 		.4byte	ts
 2064 041b 17       		.uleb128 0x17
 2065 041c 0E050000 		.4byte	.LASF59
 2066 0420 05       		.byte	0x5
 2067 0421 11       		.byte	0x11
 2068 0422 B8000000 		.4byte	0xb8
 2069 0426 05       		.uleb128 0x5
 2070 0427 03       		.byte	0x3
 2071 0428 00000000 		.4byte	ts_enc
 2072 042c 17       		.uleb128 0x17
 2073 042d 15050000 		.4byte	.LASF60
 2074 0431 05       		.byte	0x5
 2075 0432 12       		.byte	0x12
 2076 0433 B8000000 		.4byte	0xb8
 2077 0437 05       		.uleb128 0x5
 2078 0438 03       		.byte	0x3
 2079 0439 00000000 		.4byte	ts_update
 2080 043d 17       		.uleb128 0x17
 2081 043e 05050000 		.4byte	.LASF61
 2082 0442 05       		.byte	0x5
 2083 0443 13       		.byte	0x13
 2084 0444 B8000000 		.4byte	0xb8
 2085 0448 05       		.uleb128 0x5
 2086 0449 03       		.byte	0x3
 2087 044a 00000000 		.4byte	ts_speed
 2088 044e 17       		.uleb128 0x17
 2089 044f FA040000 		.4byte	.LASF62
 2090 0453 05       		.byte	0x5
 2091 0454 14       		.byte	0x14
 2092 0455 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 46


 2093 0459 05       		.uleb128 0x5
 2094 045a 03       		.byte	0x3
 2095 045b 00000000 		.4byte	ts_display
 2096 045f 17       		.uleb128 0x17
 2097 0460 CB040000 		.4byte	.LASF63
 2098 0464 05       		.byte	0x5
 2099 0465 16       		.byte	0x16
 2100 0466 AC000000 		.4byte	0xac
 2101 046a 05       		.uleb128 0x5
 2102 046b 03       		.byte	0x3
 2103 046c 00000000 		.4byte	flag_ts_enc
 2104 0470 17       		.uleb128 0x17
 2105 0471 42020000 		.4byte	.LASF64
 2106 0475 05       		.byte	0x5
 2107 0476 17       		.byte	0x17
 2108 0477 AC000000 		.4byte	0xac
 2109 047b 05       		.uleb128 0x5
 2110 047c 03       		.byte	0x3
 2111 047d 00000000 		.4byte	flag_ts_update
 2112 0481 17       		.uleb128 0x17
 2113 0482 5C000000 		.4byte	.LASF65
 2114 0486 05       		.byte	0x5
 2115 0487 18       		.byte	0x18
 2116 0488 AC000000 		.4byte	0xac
 2117 048c 05       		.uleb128 0x5
 2118 048d 03       		.byte	0x3
 2119 048e 00000000 		.4byte	flag_ts_speed
 2120 0492 17       		.uleb128 0x17
 2121 0493 97020000 		.4byte	.LASF66
 2122 0497 05       		.byte	0x5
 2123 0498 19       		.byte	0x19
 2124 0499 AC000000 		.4byte	0xac
 2125 049d 05       		.uleb128 0x5
 2126 049e 03       		.byte	0x3
 2127 049f 00000000 		.4byte	flag_ts_display
 2128 04a3 17       		.uleb128 0x17
 2129 04a4 5A030000 		.4byte	.LASF67
 2130 04a8 05       		.byte	0x5
 2131 04a9 1C       		.byte	0x1c
 2132 04aa AC000000 		.4byte	0xac
 2133 04ae 05       		.uleb128 0x5
 2134 04af 03       		.byte	0x3
 2135 04b0 00000000 		.4byte	flag_rx
 2136 04b4 17       		.uleb128 0x17
 2137 04b5 41000000 		.4byte	.LASF68
 2138 04b9 05       		.byte	0x5
 2139 04ba 1D       		.byte	0x1d
 2140 04bb AC000000 		.4byte	0xac
 2141 04bf 05       		.uleb128 0x5
 2142 04c0 03       		.byte	0x3
 2143 04c1 00000000 		.4byte	flag_packet
 2144 04c5 17       		.uleb128 0x17
 2145 04c6 8D030000 		.4byte	.LASF69
 2146 04ca 05       		.byte	0x5
 2147 04cb 1E       		.byte	0x1e
 2148 04cc AC000000 		.4byte	0xac
 2149 04d0 05       		.uleb128 0x5
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 47


 2150 04d1 03       		.byte	0x3
 2151 04d2 00000000 		.4byte	flag_KB_string
 2152 04d6 17       		.uleb128 0x17
 2153 04d7 4B030000 		.4byte	.LASF70
 2154 04db 05       		.byte	0x5
 2155 04dc 20       		.byte	0x20
 2156 04dd AC000000 		.4byte	0xac
 2157 04e1 05       		.uleb128 0x5
 2158 04e2 03       		.byte	0x3
 2159 04e3 00000000 		.4byte	dataready_flag
 2160 04e7 17       		.uleb128 0x17
 2161 04e8 1F050000 		.4byte	.LASF71
 2162 04ec 05       		.byte	0x5
 2163 04ed 22       		.byte	0x22
 2164 04ee AC000000 		.4byte	0xac
 2165 04f2 05       		.uleb128 0x5
 2166 04f3 03       		.byte	0x3
 2167 04f4 00000000 		.4byte	flag_rf_transmission_active
 2168 04f8 06       		.uleb128 0x6
 2169 04f9 8A000000 		.4byte	0x8a
 2170 04fd 08050000 		.4byte	0x508
 2171 0501 07       		.uleb128 0x7
 2172 0502 7D000000 		.4byte	0x7d
 2173 0506 3F       		.byte	0x3f
 2174 0507 00       		.byte	0
 2175 0508 17       		.uleb128 0x17
 2176 0509 62040000 		.4byte	.LASF72
 2177 050d 05       		.byte	0x5
 2178 050e 25       		.byte	0x25
 2179 050f F8040000 		.4byte	0x4f8
 2180 0513 05       		.uleb128 0x5
 2181 0514 03       		.byte	0x3
 2182 0515 00000000 		.4byte	displaystring
 2183 0519 17       		.uleb128 0x17
 2184 051a 03020000 		.4byte	.LASF73
 2185 051e 05       		.byte	0x5
 2186 051f 26       		.byte	0x26
 2187 0520 F8040000 		.4byte	0x4f8
 2188 0524 05       		.uleb128 0x5
 2189 0525 03       		.byte	0x3
 2190 0526 00000000 		.4byte	line
 2191 052a 17       		.uleb128 0x17
 2192 052b FE020000 		.4byte	.LASF74
 2193 052f 05       		.byte	0x5
 2194 0530 26       		.byte	0x26
 2195 0531 F8040000 		.4byte	0x4f8
 2196 0535 05       		.uleb128 0x5
 2197 0536 03       		.byte	0x3
 2198 0537 00000000 		.4byte	entry
 2199 053b 06       		.uleb128 0x6
 2200 053c AC000000 		.4byte	0xac
 2201 0540 4B050000 		.4byte	0x54b
 2202 0544 07       		.uleb128 0x7
 2203 0545 7D000000 		.4byte	0x7d
 2204 0549 3F       		.byte	0x3f
 2205 054a 00       		.byte	0
 2206 054b 17       		.uleb128 0x17
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 48


 2207 054c 9F000000 		.4byte	.LASF75
 2208 0550 05       		.byte	0x5
 2209 0551 27       		.byte	0x27
 2210 0552 3B050000 		.4byte	0x53b
 2211 0556 05       		.uleb128 0x5
 2212 0557 03       		.byte	0x3
 2213 0558 00000000 		.4byte	usbBuffer
 2214 055c 17       		.uleb128 0x17
 2215 055d 7C000000 		.4byte	.LASF76
 2216 0561 05       		.byte	0x5
 2217 0562 3C       		.byte	0x3c
 2218 0563 EA000000 		.4byte	0xea
 2219 0567 05       		.uleb128 0x5
 2220 0568 03       		.byte	0x3
 2221 0569 00000000 		.4byte	system_state
 2222 056d 17       		.uleb128 0x17
 2223 056e 9C030000 		.4byte	.LASF77
 2224 0572 01       		.byte	0x1
 2225 0573 2A       		.byte	0x2a
 2226 0574 68000000 		.4byte	0x68
 2227 0578 05       		.uleb128 0x5
 2228 0579 03       		.byte	0x3
 2229 057a 00000000 		.4byte	consecStops
 2230 057e 17       		.uleb128 0x17
 2231 057f 1A020000 		.4byte	.LASF78
 2232 0583 01       		.byte	0x1
 2233 0584 2B       		.byte	0x2b
 2234 0585 68000000 		.4byte	0x68
 2235 0589 05       		.uleb128 0x5
 2236 058a 03       		.byte	0x3
 2237 058b 00000000 		.4byte	started
 2238 058f 17       		.uleb128 0x17
 2239 0590 B9040000 		.4byte	.LASF79
 2240 0594 01       		.byte	0x1
 2241 0595 2C       		.byte	0x2c
 2242 0596 68000000 		.4byte	0x68
 2243 059a 05       		.uleb128 0x5
 2244 059b 03       		.byte	0x3
 2245 059c 00000000 		.4byte	instCounter
 2246 05a0 17       		.uleb128 0x17
 2247 05a1 30040000 		.4byte	.LASF80
 2248 05a5 01       		.byte	0x1
 2249 05a6 32       		.byte	0x32
 2250 05a7 B1050000 		.4byte	0x5b1
 2251 05ab 05       		.uleb128 0x5
 2252 05ac 03       		.byte	0x3
 2253 05ad 00000000 		.4byte	flag
 2254 05b1 15       		.uleb128 0x15
 2255 05b2 68000000 		.4byte	0x68
 2256 05b6 06       		.uleb128 0x6
 2257 05b7 B1050000 		.4byte	0x5b1
 2258 05bb C7050000 		.4byte	0x5c7
 2259 05bf 18       		.uleb128 0x18
 2260 05c0 7D000000 		.4byte	0x7d
 2261 05c4 F301     		.2byte	0x1f3
 2262 05c6 00       		.byte	0
 2263 05c7 17       		.uleb128 0x17
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 49


 2264 05c8 4B040000 		.4byte	.LASF81
 2265 05cc 01       		.byte	0x1
 2266 05cd 33       		.byte	0x33
 2267 05ce D8050000 		.4byte	0x5d8
 2268 05d2 05       		.uleb128 0x5
 2269 05d3 03       		.byte	0x3
 2270 05d4 00000000 		.4byte	valuesLeftIntersection
 2271 05d8 15       		.uleb128 0x15
 2272 05d9 B6050000 		.4byte	0x5b6
 2273 05dd 17       		.uleb128 0x17
 2274 05de 4D000000 		.4byte	.LASF82
 2275 05e2 01       		.byte	0x1
 2276 05e3 34       		.byte	0x34
 2277 05e4 EE050000 		.4byte	0x5ee
 2278 05e8 05       		.uleb128 0x5
 2279 05e9 03       		.byte	0x3
 2280 05ea 00000000 		.4byte	valuesLeftLine
 2281 05ee 15       		.uleb128 0x15
 2282 05ef B6050000 		.4byte	0x5b6
 2283 05f3 17       		.uleb128 0x17
 2284 05f4 E5030000 		.4byte	.LASF83
 2285 05f8 01       		.byte	0x1
 2286 05f9 35       		.byte	0x35
 2287 05fa 04060000 		.4byte	0x604
 2288 05fe 05       		.uleb128 0x5
 2289 05ff 03       		.byte	0x3
 2290 0600 00000000 		.4byte	valuesMiddleLine
 2291 0604 15       		.uleb128 0x15
 2292 0605 B6050000 		.4byte	0x5b6
 2293 0609 17       		.uleb128 0x17
 2294 060a 98010000 		.4byte	.LASF84
 2295 060e 01       		.byte	0x1
 2296 060f 36       		.byte	0x36
 2297 0610 1A060000 		.4byte	0x61a
 2298 0614 05       		.uleb128 0x5
 2299 0615 03       		.byte	0x3
 2300 0616 00000000 		.4byte	valuesRightLine
 2301 061a 15       		.uleb128 0x15
 2302 061b B6050000 		.4byte	0x5b6
 2303 061f 17       		.uleb128 0x17
 2304 0620 DB010000 		.4byte	.LASF85
 2305 0624 01       		.byte	0x1
 2306 0625 37       		.byte	0x37
 2307 0626 30060000 		.4byte	0x630
 2308 062a 05       		.uleb128 0x5
 2309 062b 03       		.byte	0x3
 2310 062c 00000000 		.4byte	valuesRightIntersection
 2311 0630 15       		.uleb128 0x15
 2312 0631 B6050000 		.4byte	0x5b6
 2313 0635 17       		.uleb128 0x17
 2314 0636 C5040000 		.4byte	.LASF86
 2315 063a 01       		.byte	0x1
 2316 063b 38       		.byte	0x38
 2317 063c B1050000 		.4byte	0x5b1
 2318 0640 05       		.uleb128 0x5
 2319 0641 03       		.byte	0x3
 2320 0642 00000000 		.4byte	count
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 50


 2321 0646 17       		.uleb128 0x17
 2322 0647 E1040000 		.4byte	.LASF87
 2323 064b 01       		.byte	0x1
 2324 064c 39       		.byte	0x39
 2325 064d B1050000 		.4byte	0x5b1
 2326 0651 05       		.uleb128 0x5
 2327 0652 03       		.byte	0x3
 2328 0653 00000000 		.4byte	motorUpdateCount
 2329 0657 17       		.uleb128 0x17
 2330 0658 77020000 		.4byte	.LASF88
 2331 065c 01       		.byte	0x1
 2332 065d 3A       		.byte	0x3a
 2333 065e B1050000 		.4byte	0x5b1
 2334 0662 05       		.uleb128 0x5
 2335 0663 03       		.byte	0x3
 2336 0664 00000000 		.4byte	lastVeerDirection
 2337 0668 17       		.uleb128 0x17
 2338 0669 D7040000 		.4byte	.LASF89
 2339 066d 01       		.byte	0x1
 2340 066e 3C       		.byte	0x3c
 2341 066f B1050000 		.4byte	0x5b1
 2342 0673 05       		.uleb128 0x5
 2343 0674 03       		.byte	0x3
 2344 0675 00000000 		.4byte	v1M1
 2345 0679 17       		.uleb128 0x17
 2346 067a DC040000 		.4byte	.LASF90
 2347 067e 01       		.byte	0x1
 2348 067f 3D       		.byte	0x3d
 2349 0680 B1050000 		.4byte	0x5b1
 2350 0684 05       		.uleb128 0x5
 2351 0685 03       		.byte	0x3
 2352 0686 00000000 		.4byte	v1M2
 2353 068a 17       		.uleb128 0x17
 2354 068b 70040000 		.4byte	.LASF91
 2355 068f 01       		.byte	0x1
 2356 0690 3E       		.byte	0x3e
 2357 0691 B1050000 		.4byte	0x5b1
 2358 0695 05       		.uleb128 0x5
 2359 0696 03       		.byte	0x3
 2360 0697 00000000 		.4byte	v2M1
 2361 069b 17       		.uleb128 0x17
 2362 069c 75040000 		.4byte	.LASF92
 2363 06a0 01       		.byte	0x1
 2364 06a1 3F       		.byte	0x3f
 2365 06a2 B1050000 		.4byte	0x5b1
 2366 06a6 05       		.uleb128 0x5
 2367 06a7 03       		.byte	0x3
 2368 06a8 00000000 		.4byte	v2M2
 2369 06ac 17       		.uleb128 0x17
 2370 06ad 92000000 		.4byte	.LASF93
 2371 06b1 01       		.byte	0x1
 2372 06b2 40       		.byte	0x40
 2373 06b3 B1050000 		.4byte	0x5b1
 2374 06b7 05       		.uleb128 0x5
 2375 06b8 03       		.byte	0x3
 2376 06b9 00000000 		.4byte	turnComplete
 2377 06bd 17       		.uleb128 0x17
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 51


 2378 06be F3010000 		.4byte	.LASF94
 2379 06c2 01       		.byte	0x1
 2380 06c3 41       		.byte	0x41
 2381 06c4 68000000 		.4byte	0x68
 2382 06c8 05       		.uleb128 0x5
 2383 06c9 03       		.byte	0x3
 2384 06ca 00000000 		.4byte	pulsesTravelled
 2385 06ce 17       		.uleb128 0x17
 2386 06cf B3020000 		.4byte	.LASF95
 2387 06d3 01       		.byte	0x1
 2388 06d4 42       		.byte	0x42
 2389 06d5 B1050000 		.4byte	0x5b1
 2390 06d9 05       		.uleb128 0x5
 2391 06da 03       		.byte	0x3
 2392 06db 00000000 		.4byte	checkDistance
 2393 06df 17       		.uleb128 0x17
 2394 06e0 70050000 		.4byte	.LASF96
 2395 06e4 01       		.byte	0x1
 2396 06e5 43       		.byte	0x43
 2397 06e6 B1050000 		.4byte	0x5b1
 2398 06ea 05       		.uleb128 0x5
 2399 06eb 03       		.byte	0x3
 2400 06ec 00000000 		.4byte	step
 2401 06f0 17       		.uleb128 0x17
 2402 06f1 89020000 		.4byte	.LASF97
 2403 06f5 01       		.byte	0x1
 2404 06f6 44       		.byte	0x44
 2405 06f7 B1050000 		.4byte	0x5b1
 2406 06fb 05       		.uleb128 0x5
 2407 06fc 03       		.byte	0x3
 2408 06fd 00000000 		.4byte	interruptFlag
 2409 0701 17       		.uleb128 0x17
 2410 0702 2D000000 		.4byte	.LASF98
 2411 0706 01       		.byte	0x1
 2412 0707 46       		.byte	0x46
 2413 0708 68000000 		.4byte	0x68
 2414 070c 05       		.uleb128 0x5
 2415 070d 03       		.byte	0x3
 2416 070e 00000000 		.4byte	lastAdjustDirection
 2417 0712 06       		.uleb128 0x6
 2418 0713 2C000000 		.4byte	0x2c
 2419 0717 29070000 		.4byte	0x729
 2420 071b 18       		.uleb128 0x18
 2421 071c 7D000000 		.4byte	0x7d
 2422 0720 F301     		.2byte	0x1f3
 2423 0722 07       		.uleb128 0x7
 2424 0723 7D000000 		.4byte	0x7d
 2425 0727 01       		.byte	0x1
 2426 0728 00       		.byte	0
 2427 0729 17       		.uleb128 0x17
 2428 072a 25000000 		.4byte	.LASF99
 2429 072e 01       		.byte	0x1
 2430 072f 47       		.byte	0x47
 2431 0730 12070000 		.4byte	0x712
 2432 0734 05       		.uleb128 0x5
 2433 0735 03       		.byte	0x3
 2434 0736 00000000 		.4byte	squares
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 52


 2435 073a 06       		.uleb128 0x6
 2436 073b 2C000000 		.4byte	0x2c
 2437 073f 4B070000 		.4byte	0x74b
 2438 0743 18       		.uleb128 0x18
 2439 0744 7D000000 		.4byte	0x7d
 2440 0748 F301     		.2byte	0x1f3
 2441 074a 00       		.byte	0
 2442 074b 17       		.uleb128 0x17
 2443 074c 4E050000 		.4byte	.LASF100
 2444 0750 01       		.byte	0x1
 2445 0751 48       		.byte	0x48
 2446 0752 3A070000 		.4byte	0x73a
 2447 0756 05       		.uleb128 0x5
 2448 0757 03       		.byte	0x3
 2449 0758 00000000 		.4byte	instruction
 2450 075c 17       		.uleb128 0x17
 2451 075d 05040000 		.4byte	.LASF101
 2452 0761 01       		.byte	0x1
 2453 0762 49       		.byte	0x49
 2454 0763 3A070000 		.4byte	0x73a
 2455 0767 05       		.uleb128 0x5
 2456 0768 03       		.byte	0x3
 2457 0769 00000000 		.4byte	distance
 2458 076d 00       		.byte	0
 2459              		.section	.debug_abbrev,"",%progbits
 2460              	.Ldebug_abbrev0:
 2461 0000 01       		.uleb128 0x1
 2462 0001 11       		.uleb128 0x11
 2463 0002 01       		.byte	0x1
 2464 0003 25       		.uleb128 0x25
 2465 0004 0E       		.uleb128 0xe
 2466 0005 13       		.uleb128 0x13
 2467 0006 0B       		.uleb128 0xb
 2468 0007 03       		.uleb128 0x3
 2469 0008 0E       		.uleb128 0xe
 2470 0009 1B       		.uleb128 0x1b
 2471 000a 0E       		.uleb128 0xe
 2472 000b 55       		.uleb128 0x55
 2473 000c 17       		.uleb128 0x17
 2474 000d 11       		.uleb128 0x11
 2475 000e 01       		.uleb128 0x1
 2476 000f 10       		.uleb128 0x10
 2477 0010 17       		.uleb128 0x17
 2478 0011 00       		.byte	0
 2479 0012 00       		.byte	0
 2480 0013 02       		.uleb128 0x2
 2481 0014 24       		.uleb128 0x24
 2482 0015 00       		.byte	0
 2483 0016 0B       		.uleb128 0xb
 2484 0017 0B       		.uleb128 0xb
 2485 0018 3E       		.uleb128 0x3e
 2486 0019 0B       		.uleb128 0xb
 2487 001a 03       		.uleb128 0x3
 2488 001b 0E       		.uleb128 0xe
 2489 001c 00       		.byte	0
 2490 001d 00       		.byte	0
 2491 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 53


 2492 001f 16       		.uleb128 0x16
 2493 0020 00       		.byte	0
 2494 0021 03       		.uleb128 0x3
 2495 0022 0E       		.uleb128 0xe
 2496 0023 3A       		.uleb128 0x3a
 2497 0024 0B       		.uleb128 0xb
 2498 0025 3B       		.uleb128 0x3b
 2499 0026 0B       		.uleb128 0xb
 2500 0027 49       		.uleb128 0x49
 2501 0028 13       		.uleb128 0x13
 2502 0029 00       		.byte	0
 2503 002a 00       		.byte	0
 2504 002b 04       		.uleb128 0x4
 2505 002c 24       		.uleb128 0x24
 2506 002d 00       		.byte	0
 2507 002e 0B       		.uleb128 0xb
 2508 002f 0B       		.uleb128 0xb
 2509 0030 3E       		.uleb128 0x3e
 2510 0031 0B       		.uleb128 0xb
 2511 0032 03       		.uleb128 0x3
 2512 0033 08       		.uleb128 0x8
 2513 0034 00       		.byte	0
 2514 0035 00       		.byte	0
 2515 0036 05       		.uleb128 0x5
 2516 0037 0F       		.uleb128 0xf
 2517 0038 00       		.byte	0
 2518 0039 0B       		.uleb128 0xb
 2519 003a 0B       		.uleb128 0xb
 2520 003b 49       		.uleb128 0x49
 2521 003c 13       		.uleb128 0x13
 2522 003d 00       		.byte	0
 2523 003e 00       		.byte	0
 2524 003f 06       		.uleb128 0x6
 2525 0040 01       		.uleb128 0x1
 2526 0041 01       		.byte	0x1
 2527 0042 49       		.uleb128 0x49
 2528 0043 13       		.uleb128 0x13
 2529 0044 01       		.uleb128 0x1
 2530 0045 13       		.uleb128 0x13
 2531 0046 00       		.byte	0
 2532 0047 00       		.byte	0
 2533 0048 07       		.uleb128 0x7
 2534 0049 21       		.uleb128 0x21
 2535 004a 00       		.byte	0
 2536 004b 49       		.uleb128 0x49
 2537 004c 13       		.uleb128 0x13
 2538 004d 2F       		.uleb128 0x2f
 2539 004e 0B       		.uleb128 0xb
 2540 004f 00       		.byte	0
 2541 0050 00       		.byte	0
 2542 0051 08       		.uleb128 0x8
 2543 0052 16       		.uleb128 0x16
 2544 0053 00       		.byte	0
 2545 0054 03       		.uleb128 0x3
 2546 0055 0E       		.uleb128 0xe
 2547 0056 3A       		.uleb128 0x3a
 2548 0057 0B       		.uleb128 0xb
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 54


 2549 0058 3B       		.uleb128 0x3b
 2550 0059 05       		.uleb128 0x5
 2551 005a 49       		.uleb128 0x49
 2552 005b 13       		.uleb128 0x13
 2553 005c 00       		.byte	0
 2554 005d 00       		.byte	0
 2555 005e 09       		.uleb128 0x9
 2556 005f 13       		.uleb128 0x13
 2557 0060 01       		.byte	0x1
 2558 0061 03       		.uleb128 0x3
 2559 0062 0E       		.uleb128 0xe
 2560 0063 0B       		.uleb128 0xb
 2561 0064 0B       		.uleb128 0xb
 2562 0065 3A       		.uleb128 0x3a
 2563 0066 0B       		.uleb128 0xb
 2564 0067 3B       		.uleb128 0x3b
 2565 0068 0B       		.uleb128 0xb
 2566 0069 01       		.uleb128 0x1
 2567 006a 13       		.uleb128 0x13
 2568 006b 00       		.byte	0
 2569 006c 00       		.byte	0
 2570 006d 0A       		.uleb128 0xa
 2571 006e 0D       		.uleb128 0xd
 2572 006f 00       		.byte	0
 2573 0070 03       		.uleb128 0x3
 2574 0071 0E       		.uleb128 0xe
 2575 0072 3A       		.uleb128 0x3a
 2576 0073 0B       		.uleb128 0xb
 2577 0074 3B       		.uleb128 0x3b
 2578 0075 0B       		.uleb128 0xb
 2579 0076 49       		.uleb128 0x49
 2580 0077 13       		.uleb128 0x13
 2581 0078 38       		.uleb128 0x38
 2582 0079 0B       		.uleb128 0xb
 2583 007a 00       		.byte	0
 2584 007b 00       		.byte	0
 2585 007c 0B       		.uleb128 0xb
 2586 007d 2E       		.uleb128 0x2e
 2587 007e 00       		.byte	0
 2588 007f 3F       		.uleb128 0x3f
 2589 0080 19       		.uleb128 0x19
 2590 0081 03       		.uleb128 0x3
 2591 0082 08       		.uleb128 0x8
 2592 0083 3A       		.uleb128 0x3a
 2593 0084 0B       		.uleb128 0xb
 2594 0085 3B       		.uleb128 0x3b
 2595 0086 0B       		.uleb128 0xb
 2596 0087 27       		.uleb128 0x27
 2597 0088 19       		.uleb128 0x19
 2598 0089 11       		.uleb128 0x11
 2599 008a 01       		.uleb128 0x1
 2600 008b 12       		.uleb128 0x12
 2601 008c 06       		.uleb128 0x6
 2602 008d 40       		.uleb128 0x40
 2603 008e 18       		.uleb128 0x18
 2604 008f 9742     		.uleb128 0x2117
 2605 0091 19       		.uleb128 0x19
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 55


 2606 0092 00       		.byte	0
 2607 0093 00       		.byte	0
 2608 0094 0C       		.uleb128 0xc
 2609 0095 2E       		.uleb128 0x2e
 2610 0096 01       		.byte	0x1
 2611 0097 3F       		.uleb128 0x3f
 2612 0098 19       		.uleb128 0x19
 2613 0099 03       		.uleb128 0x3
 2614 009a 0E       		.uleb128 0xe
 2615 009b 3A       		.uleb128 0x3a
 2616 009c 0B       		.uleb128 0xb
 2617 009d 3B       		.uleb128 0x3b
 2618 009e 0B       		.uleb128 0xb
 2619 009f 49       		.uleb128 0x49
 2620 00a0 13       		.uleb128 0x13
 2621 00a1 11       		.uleb128 0x11
 2622 00a2 01       		.uleb128 0x1
 2623 00a3 12       		.uleb128 0x12
 2624 00a4 06       		.uleb128 0x6
 2625 00a5 40       		.uleb128 0x40
 2626 00a6 18       		.uleb128 0x18
 2627 00a7 9642     		.uleb128 0x2116
 2628 00a9 19       		.uleb128 0x19
 2629 00aa 01       		.uleb128 0x1
 2630 00ab 13       		.uleb128 0x13
 2631 00ac 00       		.byte	0
 2632 00ad 00       		.byte	0
 2633 00ae 0D       		.uleb128 0xd
 2634 00af 0B       		.uleb128 0xb
 2635 00b0 01       		.byte	0x1
 2636 00b1 11       		.uleb128 0x11
 2637 00b2 01       		.uleb128 0x1
 2638 00b3 12       		.uleb128 0x12
 2639 00b4 06       		.uleb128 0x6
 2640 00b5 01       		.uleb128 0x1
 2641 00b6 13       		.uleb128 0x13
 2642 00b7 00       		.byte	0
 2643 00b8 00       		.byte	0
 2644 00b9 0E       		.uleb128 0xe
 2645 00ba 34       		.uleb128 0x34
 2646 00bb 00       		.byte	0
 2647 00bc 03       		.uleb128 0x3
 2648 00bd 08       		.uleb128 0x8
 2649 00be 3A       		.uleb128 0x3a
 2650 00bf 0B       		.uleb128 0xb
 2651 00c0 3B       		.uleb128 0x3b
 2652 00c1 0B       		.uleb128 0xb
 2653 00c2 49       		.uleb128 0x49
 2654 00c3 13       		.uleb128 0x13
 2655 00c4 02       		.uleb128 0x2
 2656 00c5 18       		.uleb128 0x18
 2657 00c6 00       		.byte	0
 2658 00c7 00       		.byte	0
 2659 00c8 0F       		.uleb128 0xf
 2660 00c9 0B       		.uleb128 0xb
 2661 00ca 01       		.byte	0x1
 2662 00cb 11       		.uleb128 0x11
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 56


 2663 00cc 01       		.uleb128 0x1
 2664 00cd 12       		.uleb128 0x12
 2665 00ce 06       		.uleb128 0x6
 2666 00cf 00       		.byte	0
 2667 00d0 00       		.byte	0
 2668 00d1 10       		.uleb128 0x10
 2669 00d2 34       		.uleb128 0x34
 2670 00d3 00       		.byte	0
 2671 00d4 03       		.uleb128 0x3
 2672 00d5 0E       		.uleb128 0xe
 2673 00d6 3A       		.uleb128 0x3a
 2674 00d7 0B       		.uleb128 0xb
 2675 00d8 3B       		.uleb128 0x3b
 2676 00d9 0B       		.uleb128 0xb
 2677 00da 49       		.uleb128 0x49
 2678 00db 13       		.uleb128 0x13
 2679 00dc 02       		.uleb128 0x2
 2680 00dd 18       		.uleb128 0x18
 2681 00de 00       		.byte	0
 2682 00df 00       		.byte	0
 2683 00e0 11       		.uleb128 0x11
 2684 00e1 34       		.uleb128 0x34
 2685 00e2 00       		.byte	0
 2686 00e3 03       		.uleb128 0x3
 2687 00e4 0E       		.uleb128 0xe
 2688 00e5 3A       		.uleb128 0x3a
 2689 00e6 0B       		.uleb128 0xb
 2690 00e7 3B       		.uleb128 0x3b
 2691 00e8 05       		.uleb128 0x5
 2692 00e9 49       		.uleb128 0x49
 2693 00ea 13       		.uleb128 0x13
 2694 00eb 02       		.uleb128 0x2
 2695 00ec 18       		.uleb128 0x18
 2696 00ed 00       		.byte	0
 2697 00ee 00       		.byte	0
 2698 00ef 12       		.uleb128 0x12
 2699 00f0 2E       		.uleb128 0x2e
 2700 00f1 01       		.byte	0x1
 2701 00f2 3F       		.uleb128 0x3f
 2702 00f3 19       		.uleb128 0x19
 2703 00f4 03       		.uleb128 0x3
 2704 00f5 0E       		.uleb128 0xe
 2705 00f6 3A       		.uleb128 0x3a
 2706 00f7 0B       		.uleb128 0xb
 2707 00f8 3B       		.uleb128 0x3b
 2708 00f9 05       		.uleb128 0x5
 2709 00fa 27       		.uleb128 0x27
 2710 00fb 19       		.uleb128 0x19
 2711 00fc 11       		.uleb128 0x11
 2712 00fd 01       		.uleb128 0x1
 2713 00fe 12       		.uleb128 0x12
 2714 00ff 06       		.uleb128 0x6
 2715 0100 40       		.uleb128 0x40
 2716 0101 18       		.uleb128 0x18
 2717 0102 9642     		.uleb128 0x2116
 2718 0104 19       		.uleb128 0x19
 2719 0105 01       		.uleb128 0x1
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 57


 2720 0106 13       		.uleb128 0x13
 2721 0107 00       		.byte	0
 2722 0108 00       		.byte	0
 2723 0109 13       		.uleb128 0x13
 2724 010a 05       		.uleb128 0x5
 2725 010b 00       		.byte	0
 2726 010c 03       		.uleb128 0x3
 2727 010d 08       		.uleb128 0x8
 2728 010e 3A       		.uleb128 0x3a
 2729 010f 0B       		.uleb128 0xb
 2730 0110 3B       		.uleb128 0x3b
 2731 0111 05       		.uleb128 0x5
 2732 0112 49       		.uleb128 0x49
 2733 0113 13       		.uleb128 0x13
 2734 0114 02       		.uleb128 0x2
 2735 0115 18       		.uleb128 0x18
 2736 0116 00       		.byte	0
 2737 0117 00       		.byte	0
 2738 0118 14       		.uleb128 0x14
 2739 0119 34       		.uleb128 0x34
 2740 011a 00       		.byte	0
 2741 011b 03       		.uleb128 0x3
 2742 011c 0E       		.uleb128 0xe
 2743 011d 3A       		.uleb128 0x3a
 2744 011e 0B       		.uleb128 0xb
 2745 011f 3B       		.uleb128 0x3b
 2746 0120 05       		.uleb128 0x5
 2747 0121 49       		.uleb128 0x49
 2748 0122 13       		.uleb128 0x13
 2749 0123 3F       		.uleb128 0x3f
 2750 0124 19       		.uleb128 0x19
 2751 0125 3C       		.uleb128 0x3c
 2752 0126 19       		.uleb128 0x19
 2753 0127 00       		.byte	0
 2754 0128 00       		.byte	0
 2755 0129 15       		.uleb128 0x15
 2756 012a 35       		.uleb128 0x35
 2757 012b 00       		.byte	0
 2758 012c 49       		.uleb128 0x49
 2759 012d 13       		.uleb128 0x13
 2760 012e 00       		.byte	0
 2761 012f 00       		.byte	0
 2762 0130 16       		.uleb128 0x16
 2763 0131 34       		.uleb128 0x34
 2764 0132 00       		.byte	0
 2765 0133 03       		.uleb128 0x3
 2766 0134 08       		.uleb128 0x8
 2767 0135 3A       		.uleb128 0x3a
 2768 0136 0B       		.uleb128 0xb
 2769 0137 3B       		.uleb128 0x3b
 2770 0138 0B       		.uleb128 0xb
 2771 0139 49       		.uleb128 0x49
 2772 013a 13       		.uleb128 0x13
 2773 013b 3F       		.uleb128 0x3f
 2774 013c 19       		.uleb128 0x19
 2775 013d 02       		.uleb128 0x2
 2776 013e 18       		.uleb128 0x18
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 58


 2777 013f 00       		.byte	0
 2778 0140 00       		.byte	0
 2779 0141 17       		.uleb128 0x17
 2780 0142 34       		.uleb128 0x34
 2781 0143 00       		.byte	0
 2782 0144 03       		.uleb128 0x3
 2783 0145 0E       		.uleb128 0xe
 2784 0146 3A       		.uleb128 0x3a
 2785 0147 0B       		.uleb128 0xb
 2786 0148 3B       		.uleb128 0x3b
 2787 0149 0B       		.uleb128 0xb
 2788 014a 49       		.uleb128 0x49
 2789 014b 13       		.uleb128 0x13
 2790 014c 3F       		.uleb128 0x3f
 2791 014d 19       		.uleb128 0x19
 2792 014e 02       		.uleb128 0x2
 2793 014f 18       		.uleb128 0x18
 2794 0150 00       		.byte	0
 2795 0151 00       		.byte	0
 2796 0152 18       		.uleb128 0x18
 2797 0153 21       		.uleb128 0x21
 2798 0154 00       		.byte	0
 2799 0155 49       		.uleb128 0x49
 2800 0156 13       		.uleb128 0x13
 2801 0157 2F       		.uleb128 0x2f
 2802 0158 05       		.uleb128 0x5
 2803 0159 00       		.byte	0
 2804 015a 00       		.byte	0
 2805 015b 00       		.byte	0
 2806              		.section	.debug_aranges,"",%progbits
 2807 0000 34000000 		.4byte	0x34
 2808 0004 0200     		.2byte	0x2
 2809 0006 00000000 		.4byte	.Ldebug_info0
 2810 000a 04       		.byte	0x4
 2811 000b 00       		.byte	0
 2812 000c 0000     		.2byte	0
 2813 000e 0000     		.2byte	0
 2814 0010 00000000 		.4byte	.LFB64
 2815 0014 18000000 		.4byte	.LFE64-.LFB64
 2816 0018 00000000 		.4byte	.LFB65
 2817 001c AC080000 		.4byte	.LFE65-.LFB65
 2818 0020 00000000 		.4byte	.LFB66
 2819 0024 3E000000 		.4byte	.LFE66-.LFB66
 2820 0028 00000000 		.4byte	.LFB67
 2821 002c 26000000 		.4byte	.LFE67-.LFB67
 2822 0030 00000000 		.4byte	0
 2823 0034 00000000 		.4byte	0
 2824              		.section	.debug_ranges,"",%progbits
 2825              	.Ldebug_ranges0:
 2826 0000 00000000 		.4byte	.LFB64
 2827 0004 18000000 		.4byte	.LFE64
 2828 0008 00000000 		.4byte	.LFB65
 2829 000c AC080000 		.4byte	.LFE65
 2830 0010 00000000 		.4byte	.LFB66
 2831 0014 3E000000 		.4byte	.LFE66
 2832 0018 00000000 		.4byte	.LFB67
 2833 001c 26000000 		.4byte	.LFE67
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 59


 2834 0020 00000000 		.4byte	0
 2835 0024 00000000 		.4byte	0
 2836              		.section	.debug_line,"",%progbits
 2837              	.Ldebug_line0:
 2838 0000 A9030000 		.section	.debug_str,"MS",%progbits,1
 2838      02005601 
 2838      00000201 
 2838      FB0E0D00 
 2838      01010101 
 2839              	.LASF57:
 2840 0000 75736250 		.ascii	"usbPutChar\000"
 2840      75744368 
 2840      617200
 2841              	.LASF37:
 2842 000b 68696768 		.ascii	"highCountLeftIntersection\000"
 2842      436F756E 
 2842      744C6566 
 2842      74496E74 
 2842      65727365 
 2843              	.LASF99:
 2844 0025 73717561 		.ascii	"squares\000"
 2844      72657300 
 2845              	.LASF98:
 2846 002d 6C617374 		.ascii	"lastAdjustDirection\000"
 2846      41646A75 
 2846      73744469 
 2846      72656374 
 2846      696F6E00 
 2847              	.LASF68:
 2848 0041 666C6167 		.ascii	"flag_packet\000"
 2848      5F706163 
 2848      6B657400 
 2849              	.LASF82:
 2850 004d 76616C75 		.ascii	"valuesLeftLine\000"
 2850      65734C65 
 2850      66744C69 
 2850      6E6500
 2851              	.LASF65:
 2852 005c 666C6167 		.ascii	"flag_ts_speed\000"
 2852      5F74735F 
 2852      73706565 
 2852      6400
 2853              	.LASF33:
 2854 006a 67325F78 		.ascii	"g2_xpos\000"
 2854      706F7300 
 2855              	.LASF2:
 2856 0072 73686F72 		.ascii	"short int\000"
 2856      7420696E 
 2856      7400
 2857              	.LASF76:
 2858 007c 73797374 		.ascii	"system_state\000"
 2858      656D5F73 
 2858      74617465 
 2858      00
 2859              	.LASF10:
 2860 0089 73697A65 		.ascii	"sizetype\000"
 2860      74797065 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 60


 2860      00
 2861              	.LASF93:
 2862 0092 7475726E 		.ascii	"turnComplete\000"
 2862      436F6D70 
 2862      6C657465 
 2862      00
 2863              	.LASF75:
 2864 009f 75736242 		.ascii	"usbBuffer\000"
 2864      75666665 
 2864      7200
 2865              	.LASF102:
 2866 00a9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2866      43313120 
 2866      352E342E 
 2866      31203230 
 2866      31363036 
 2867 00dc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2867      20726576 
 2867      6973696F 
 2867      6E203233 
 2867      37373135 
 2868 010f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2868      66756E63 
 2868      74696F6E 
 2868      2D736563 
 2868      74696F6E 
 2869              	.LASF55:
 2870 0137 6D61696E 		.ascii	"main\000"
 2870      00
 2871              	.LASF104:
 2872 013c 483A5C44 		.ascii	"H:\\Documents\\GitHub\\team14\\301_lab_tasks\\psoc "
 2872      6F63756D 
 2872      656E7473 
 2872      5C476974 
 2872      4875625C 
 2873 016a 73747564 		.ascii	"student pack\\psoc_code_base\\CS301_Class.cydsn\000"
 2873      656E7420 
 2873      7061636B 
 2873      5C70736F 
 2873      635F636F 
 2874              	.LASF84:
 2875 0198 76616C75 		.ascii	"valuesRightLine\000"
 2875      65735269 
 2875      6768744C 
 2875      696E6500 
 2876              	.LASF36:
 2877 01a8 67325F64 		.ascii	"g2_direction\000"
 2877      69726563 
 2877      74696F6E 
 2877      00
 2878              	.LASF15:
 2879 01b5 75696E74 		.ascii	"uint16\000"
 2879      313600
 2880              	.LASF21:
 2881 01bc 696E6465 		.ascii	"index\000"
 2881      7800
 2882              	.LASF17:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 61


 2883 01c2 696E7431 		.ascii	"int16\000"
 2883      3600
 2884              	.LASF14:
 2885 01c8 75696E74 		.ascii	"uint8\000"
 2885      3800
 2886              	.LASF32:
 2887 01ce 67315F64 		.ascii	"g1_direction\000"
 2887      69726563 
 2887      74696F6E 
 2887      00
 2888              	.LASF85:
 2889 01db 76616C75 		.ascii	"valuesRightIntersection\000"
 2889      65735269 
 2889      67687449 
 2889      6E746572 
 2889      73656374 
 2890              	.LASF94:
 2891 01f3 70756C73 		.ascii	"pulsesTravelled\000"
 2891      65735472 
 2891      6176656C 
 2891      6C656400 
 2892              	.LASF73:
 2893 0203 6C696E65 		.ascii	"line\000"
 2893      00
 2894              	.LASF0:
 2895 0208 7369676E 		.ascii	"signed char\000"
 2895      65642063 
 2895      68617200 
 2896              	.LASF18:
 2897 0214 666C6F61 		.ascii	"float\000"
 2897      7400
 2898              	.LASF78:
 2899 021a 73746172 		.ascii	"started\000"
 2899      74656400 
 2900              	.LASF6:
 2901 0222 6C6F6E67 		.ascii	"long long int\000"
 2901      206C6F6E 
 2901      6720696E 
 2901      7400
 2902              	.LASF56:
 2903 0230 75736250 		.ascii	"usbPutString\000"
 2903      75745374 
 2903      72696E67 
 2903      00
 2904              	.LASF16:
 2905 023d 696E7438 		.ascii	"int8\000"
 2905      00
 2906              	.LASF64:
 2907 0242 666C6167 		.ascii	"flag_ts_update\000"
 2907      5F74735F 
 2907      75706461 
 2907      746500
 2908              	.LASF34:
 2909 0251 67325F79 		.ascii	"g2_ypos\000"
 2909      706F7300 
 2910              	.LASF28:
 2911 0259 67305F64 		.ascii	"g0_direction\000"
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 62


 2911      69726563 
 2911      74696F6E 
 2911      00
 2912              	.LASF25:
 2913 0266 67305F78 		.ascii	"g0_xpos\000"
 2913      706F7300 
 2914              	.LASF4:
 2915 026e 6C6F6E67 		.ascii	"long int\000"
 2915      20696E74 
 2915      00
 2916              	.LASF88:
 2917 0277 6C617374 		.ascii	"lastVeerDirection\000"
 2917      56656572 
 2917      44697265 
 2917      6374696F 
 2917      6E00
 2918              	.LASF97:
 2919 0289 696E7465 		.ascii	"interruptFlag\000"
 2919      72727570 
 2919      74466C61 
 2919      6700
 2920              	.LASF66:
 2921 0297 666C6167 		.ascii	"flag_ts_display\000"
 2921      5F74735F 
 2921      64697370 
 2921      6C617900 
 2922              	.LASF46:
 2923 02a7 63757272 		.ascii	"currentInst\000"
 2923      656E7449 
 2923      6E737400 
 2924              	.LASF95:
 2925 02b3 63686563 		.ascii	"checkDistance\000"
 2925      6B446973 
 2925      74616E63 
 2925      6500
 2926              	.LASF42:
 2927 02c1 68696768 		.ascii	"highCountRightIntersection\000"
 2927      436F756E 
 2927      74526967 
 2927      6874496E 
 2927      74657273 
 2928              	.LASF1:
 2929 02dc 756E7369 		.ascii	"unsigned char\000"
 2929      676E6564 
 2929      20636861 
 2929      7200
 2930              	.LASF30:
 2931 02ea 67315F79 		.ascii	"g1_ypos\000"
 2931      706F7300 
 2932              	.LASF9:
 2933 02f2 6C6F6E67 		.ascii	"long double\000"
 2933      20646F75 
 2933      626C6500 
 2934              	.LASF74:
 2935 02fe 656E7472 		.ascii	"entry\000"
 2935      7900
 2936              	.LASF43:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 63


 2937 0304 72657375 		.ascii	"result1\000"
 2937      6C743100 
 2938              	.LASF44:
 2939 030c 72657375 		.ascii	"result2\000"
 2939      6C743200 
 2940              	.LASF45:
 2941 0314 66697273 		.ascii	"firstNonZeroIndex\000"
 2941      744E6F6E 
 2941      5A65726F 
 2941      496E6465 
 2941      7800
 2942              	.LASF27:
 2943 0326 67305F73 		.ascii	"g0_speed\000"
 2943      70656564 
 2943      00
 2944              	.LASF31:
 2945 032f 67315F73 		.ascii	"g1_speed\000"
 2945      70656564 
 2945      00
 2946              	.LASF41:
 2947 0338 68696768 		.ascii	"highCountRightLine\000"
 2947      436F756E 
 2947      74526967 
 2947      68744C69 
 2947      6E6500
 2948              	.LASF70:
 2949 034b 64617461 		.ascii	"dataready_flag\000"
 2949      72656164 
 2949      795F666C 
 2949      616700
 2950              	.LASF67:
 2951 035a 666C6167 		.ascii	"flag_rx\000"
 2951      5F727800 
 2952              	.LASF51:
 2953 0362 7365636F 		.ascii	"second\000"
 2953      6E6400
 2954              	.LASF7:
 2955 0369 6C6F6E67 		.ascii	"long long unsigned int\000"
 2955      206C6F6E 
 2955      6720756E 
 2955      7369676E 
 2955      65642069 
 2956              	.LASF8:
 2957 0380 756E7369 		.ascii	"unsigned int\000"
 2957      676E6564 
 2957      20696E74 
 2957      00
 2958              	.LASF69:
 2959 038d 666C6167 		.ascii	"flag_KB_string\000"
 2959      5F4B425F 
 2959      73747269 
 2959      6E6700
 2960              	.LASF77:
 2961 039c 636F6E73 		.ascii	"consecStops\000"
 2961      65635374 
 2961      6F707300 
 2962              	.LASF35:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 64


 2963 03a8 67325F73 		.ascii	"g2_speed\000"
 2963      70656564 
 2963      00
 2964              	.LASF48:
 2965 03b1 64697374 		.ascii	"dist\000"
 2965      00
 2966              	.LASF29:
 2967 03b6 67315F78 		.ascii	"g1_xpos\000"
 2967      706F7300 
 2968              	.LASF3:
 2969 03be 73686F72 		.ascii	"short unsigned int\000"
 2969      7420756E 
 2969      7369676E 
 2969      65642069 
 2969      6E7400
 2970              	.LASF39:
 2971 03d1 68696768 		.ascii	"highCountMiddleLine\000"
 2971      436F756E 
 2971      744D6964 
 2971      646C654C 
 2971      696E6500 
 2972              	.LASF83:
 2973 03e5 76616C75 		.ascii	"valuesMiddleLine\000"
 2973      65734D69 
 2973      64646C65 
 2973      4C696E65 
 2973      00
 2974              	.LASF105:
 2975 03f6 64617461 		.ascii	"data_main\000"
 2975      5F6D6169 
 2975      6E00
 2976              	.LASF11:
 2977 0400 63686172 		.ascii	"char\000"
 2977      00
 2978              	.LASF101:
 2979 0405 64697374 		.ascii	"distance\000"
 2979      616E6365 
 2979      00
 2980              	.LASF54:
 2981 040e 70756C73 		.ascii	"pulsesToTravel\000"
 2981      6573546F 
 2981      54726176 
 2981      656C00
 2982              	.LASF22:
 2983 041d 726F626F 		.ascii	"robot_xpos\000"
 2983      745F7870 
 2983      6F7300
 2984              	.LASF13:
 2985 0428 696E7433 		.ascii	"int32_t\000"
 2985      325F7400 
 2986              	.LASF80:
 2987 0430 666C6167 		.ascii	"flag\000"
 2987      00
 2988              	.LASF12:
 2989 0435 5F5F696E 		.ascii	"__int32_t\000"
 2989      7433325F 
 2989      7400
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 65


 2990              	.LASF49:
 2991 043f 70756C73 		.ascii	"pulses\000"
 2991      657300
 2992              	.LASF53:
 2993 0446 6356616C 		.ascii	"cVal\000"
 2993      00
 2994              	.LASF81:
 2995 044b 76616C75 		.ascii	"valuesLeftIntersection\000"
 2995      65734C65 
 2995      6674496E 
 2995      74657273 
 2995      65637469 
 2996              	.LASF72:
 2997 0462 64697370 		.ascii	"displaystring\000"
 2997      6C617973 
 2997      7472696E 
 2997      6700
 2998              	.LASF91:
 2999 0470 76324D31 		.ascii	"v2M1\000"
 2999      00
 3000              	.LASF92:
 3001 0475 76324D32 		.ascii	"v2M2\000"
 3001      00
 3002              	.LASF38:
 3003 047a 68696768 		.ascii	"highCountLeftLine\000"
 3003      436F756E 
 3003      744C6566 
 3003      744C696E 
 3003      6500
 3004              	.LASF103:
 3005 048c 6D61696E 		.ascii	"main.c\000"
 3005      2E6300
 3006              	.LASF5:
 3007 0493 6C6F6E67 		.ascii	"long unsigned int\000"
 3007      20756E73 
 3007      69676E65 
 3007      6420696E 
 3007      7400
 3008              	.LASF19:
 3009 04a5 646F7562 		.ascii	"double\000"
 3009      6C6500
 3010              	.LASF58:
 3011 04ac 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3011      52784275 
 3011      66666572 
 3011      00
 3012              	.LASF79:
 3013 04b9 696E7374 		.ascii	"instCounter\000"
 3013      436F756E 
 3013      74657200 
 3014              	.LASF86:
 3015 04c5 636F756E 		.ascii	"count\000"
 3015      7400
 3016              	.LASF63:
 3017 04cb 666C6167 		.ascii	"flag_ts_enc\000"
 3017      5F74735F 
 3017      656E6300 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 66


 3018              	.LASF89:
 3019 04d7 76314D31 		.ascii	"v1M1\000"
 3019      00
 3020              	.LASF90:
 3021 04dc 76314D32 		.ascii	"v1M2\000"
 3021      00
 3022              	.LASF87:
 3023 04e1 6D6F746F 		.ascii	"motorUpdateCount\000"
 3023      72557064 
 3023      61746543 
 3023      6F756E74 
 3023      00
 3024              	.LASF26:
 3025 04f2 67305F79 		.ascii	"g0_ypos\000"
 3025      706F7300 
 3026              	.LASF62:
 3027 04fa 74735F64 		.ascii	"ts_display\000"
 3027      6973706C 
 3027      617900
 3028              	.LASF61:
 3029 0505 74735F73 		.ascii	"ts_speed\000"
 3029      70656564 
 3029      00
 3030              	.LASF59:
 3031 050e 74735F65 		.ascii	"ts_enc\000"
 3031      6E6300
 3032              	.LASF60:
 3033 0515 74735F75 		.ascii	"ts_update\000"
 3033      70646174 
 3033      6500
 3034              	.LASF71:
 3035 051f 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3035      5F72665F 
 3035      7472616E 
 3035      736D6973 
 3035      73696F6E 
 3036              	.LASF23:
 3037 053b 726F626F 		.ascii	"robot_ypos\000"
 3037      745F7970 
 3037      6F7300
 3038              	.LASF52:
 3039 0546 696E7374 		.ascii	"instStr\000"
 3039      53747200 
 3040              	.LASF100:
 3041 054e 696E7374 		.ascii	"instruction\000"
 3041      72756374 
 3041      696F6E00 
 3042              	.LASF40:
 3043 055a 68696768 		.ascii	"highCountTurnComplete\000"
 3043      436F756E 
 3043      74547572 
 3043      6E436F6D 
 3043      706C6574 
 3044              	.LASF96:
 3045 0570 73746570 		.ascii	"step\000"
 3045      00
 3046              	.LASF20:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\cchtDVqg.s 			page 67


 3047 0575 72737369 		.ascii	"rssi\000"
 3047      00
 3048              	.LASF24:
 3049 057a 726F626F 		.ascii	"robot_orientation\000"
 3049      745F6F72 
 3049      69656E74 
 3049      6174696F 
 3049      6E00
 3050              	.LASF50:
 3051 058c 66697273 		.ascii	"first\000"
 3051      7400
 3052              	.LASF47:
 3053 0592 6E657874 		.ascii	"nextInst\000"
 3053      496E7374 
 3053      00
 3054              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
