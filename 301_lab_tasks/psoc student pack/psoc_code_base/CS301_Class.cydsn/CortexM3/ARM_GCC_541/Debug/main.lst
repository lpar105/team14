ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	TARGET_SPEED
 107              		.align	2
 108              		.type	TARGET_SPEED, %object
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 3


 109              		.size	TARGET_SPEED, 4
 110              	TARGET_SPEED:
 111 0044 00007041 		.word	1097859072
 112              		.global	restoring
 113              		.align	2
 114              		.type	restoring, %object
 115              		.size	restoring, 4
 116              	restoring:
 117 0048 1E000000 		.word	30
 118              		.global	turningDirection
 119              		.bss
 120 0012 0000     		.align	2
 121              		.type	turningDirection, %object
 122              		.size	turningDirection, 4
 123              	turningDirection:
 124 0014 00000000 		.space	4
 125              		.global	turningCount
 126              		.data
 127              		.align	2
 128              		.type	turningCount, %object
 129              		.size	turningCount, 4
 130              	turningCount:
 131 004c 1E000000 		.word	30
 132              		.global	shouldUpdate
 133              		.align	2
 134              		.type	shouldUpdate, %object
 135              		.size	shouldUpdate, 4
 136              	shouldUpdate:
 137 0050 01000000 		.word	1
 138              		.global	dotsTravelled
 139              		.bss
 140              		.align	2
 141              		.type	dotsTravelled, %object
 142              		.size	dotsTravelled, 4
 143              	dotsTravelled:
 144 0018 00000000 		.space	4
 145              		.global	flag
 146              		.align	2
 147              		.type	flag, %object
 148              		.size	flag, 4
 149              	flag:
 150 001c 00000000 		.space	4
 151              		.comm	valuesLeftIntersection,4000,4
 152              		.comm	valuesLeftLine,4000,4
 153              		.comm	valuesMiddleLine,4000,4
 154              		.comm	valuesTurnComplete,4000,4
 155              		.comm	valuesRightLine,4000,4
 156              		.comm	valuesRightIntersection,4000,4
 157              		.global	count
 158              		.align	2
 159              		.type	count, %object
 160              		.size	count, 4
 161              	count:
 162 0020 00000000 		.space	4
 163              		.global	turningLeft
 164              		.align	2
 165              		.type	turningLeft, %object
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 4


 166              		.size	turningLeft, 4
 167              	turningLeft:
 168 0024 00000000 		.space	4
 169              		.global	turningRight
 170              		.align	2
 171              		.type	turningRight, %object
 172              		.size	turningRight, 4
 173              	turningRight:
 174 0028 00000000 		.space	4
 175              		.global	lastVeerDirection
 176              		.align	2
 177              		.type	lastVeerDirection, %object
 178              		.size	lastVeerDirection, 4
 179              	lastVeerDirection:
 180 002c 00000000 		.space	4
 181              		.global	motorFlag
 182              		.align	2
 183              		.type	motorFlag, %object
 184              		.size	motorFlag, 4
 185              	motorFlag:
 186 0030 00000000 		.space	4
 187              		.global	step
 188              		.align	2
 189              		.type	step, %object
 190              		.size	step, 4
 191              	step:
 192 0034 00000000 		.space	4
 193              		.comm	v1L,4,4
 194              		.comm	v2L,4,4
 195              		.comm	v1R,4,4
 196              		.comm	v2R,4,4
 197              		.comm	numRotationsL,4,4
 198              		.comm	numRotationsR,4,4
 199              		.comm	turnCount,4,4
 200              		.global	distanceTravelled
 201              		.align	2
 202              		.type	distanceTravelled, %object
 203              		.size	distanceTravelled, 4
 204              	distanceTravelled:
 205 0038 00000000 		.space	4
 206              		.global	distancePerSecondL
 207              		.align	2
 208              		.type	distancePerSecondL, %object
 209              		.size	distancePerSecondL, 4
 210              	distancePerSecondL:
 211 003c 00000000 		.space	4
 212              		.global	distancePerSecondR
 213              		.align	2
 214              		.type	distancePerSecondR, %object
 215              		.size	distancePerSecondR, 4
 216              	distancePerSecondR:
 217 0040 00000000 		.space	4
 218              		.global	distancePerSecondAvg
 219              		.align	2
 220              		.type	distancePerSecondAvg, %object
 221              		.size	distancePerSecondAvg, 4
 222              	distancePerSecondAvg:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 5


 223 0044 00000000 		.space	4
 224              		.global	prevTurnState
 225              		.align	2
 226              		.type	prevTurnState, %object
 227              		.size	prevTurnState, 4
 228              	prevTurnState:
 229 0048 00000000 		.space	4
 230              		.global	turnState
 231              		.align	2
 232              		.type	turnState, %object
 233              		.size	turnState, 4
 234              	turnState:
 235 004c 00000000 		.space	4
 236              		.global	turnEnable
 237              		.align	2
 238              		.type	turnEnable, %object
 239              		.size	turnEnable, 4
 240              	turnEnable:
 241 0050 00000000 		.space	4
 242              		.global	turnTimer
 243              		.align	2
 244              		.type	turnTimer, %object
 245              		.size	turnTimer, 4
 246              	turnTimer:
 247 0054 00000000 		.space	4
 248              		.global	lastAdjustDirection
 249              		.align	2
 250              		.type	lastAdjustDirection, %object
 251              		.size	lastAdjustDirection, 4
 252              	lastAdjustDirection:
 253 0058 00000000 		.space	4
 254              		.section	.text.eoc,"ax",%progbits
 255              		.align	2
 256              		.global	eoc
 257              		.thumb
 258              		.thumb_func
 259              		.type	eoc, %function
 260              	eoc:
 261              	.LFB64:
 262              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 6


  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** #include "pathfind.h"
  30:main.c        **** 
  31:main.c        **** #include "vars.h"
  32:main.c        **** 
  33:main.c        **** #define ADC_COUNT 1000
  34:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 150
  35:main.c        **** #define R_INT_BLACK highCountRightIntersection < 150
  36:main.c        **** #define L_LINE_BLACK highCountLeftLine < 150
  37:main.c        **** #define R_LINE_BLACK highCountRightLine < 150
  38:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 150
  39:main.c        **** #define TC_BLACK highCountTurnComplete < 150
  40:main.c        **** float TARGET_SPEED = 15; //speed in cm^-1
  41:main.c        **** int restoring = 30;
  42:main.c        **** int turningDirection = 0;
  43:main.c        **** int turningCount = 30;
  44:main.c        **** volatile int shouldUpdate = 1;
  45:main.c        **** #define MOVE_DISTANCE 9999999 //cm
  46:main.c        **** volatile int dotsTravelled = 0;
  47:main.c        **** //* ========================================
  48:main.c        **** void usbPutString(char * s);
  49:main.c        **** void usbPutChar(char c);
  50:main.c        **** void printSensorDebug(int highCountLeftIntersection, int highCountLeftLine, int highCountMiddleLine
  51:main.c        **** //* ========================================
  52:main.c        **** 
  53:main.c        **** volatile int flag = 0;
  54:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  55:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  56:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  57:main.c        **** volatile int valuesTurnComplete[ADC_COUNT];
  58:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  59:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  60:main.c        **** volatile int count = 0;
  61:main.c        **** volatile int turningLeft = 0;
  62:main.c        **** volatile int turningRight = 0;
  63:main.c        **** volatile int lastVeerDirection = 0;
  64:main.c        **** 
  65:main.c        **** volatile int motorFlag = 0;
  66:main.c        **** volatile int step = 0; // are we on first measuring step or second step?
  67:main.c        **** volatile int v1L; // allocating storage for measure number of holes (ahead) - LEFT WHEEL
  68:main.c        **** volatile int v2L; // allocating storage for measure number of holes (behind) - LEFT WHEEL
  69:main.c        **** volatile int v1R; // allocating storage for measure number of holes (ahead) - RIGHT WHEEL
  70:main.c        **** volatile int v2R; // allocating storage for measure number of holes (behind) - RIGHT WHEEL
  71:main.c        **** volatile int numRotationsL; //
  72:main.c        **** volatile int numRotationsR; //
  73:main.c        **** volatile int turnCount;
  74:main.c        **** volatile int distanceTravelled = 0;
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 7


  75:main.c        **** volatile int distancePerSecondL = 0;
  76:main.c        **** volatile int distancePerSecondR = 0;
  77:main.c        **** volatile int distancePerSecondAvg = 0;
  78:main.c        **** volatile int prevTurnState = 0;
  79:main.c        **** volatile int turnState = 0;
  80:main.c        **** volatile int turnEnable = 0;
  81:main.c        **** volatile int turnTimer = 0;
  82:main.c        **** int lastAdjustDirection = 0;
  83:main.c        **** 
  84:main.c        **** CY_ISR(eoc) {
 263              		.loc 1 84 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268 0000 80B4     		push	{r7}
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 7, -4
 271 0002 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
  85:main.c        ****   flag = 1;
 273              		.loc 1 85 0
 274 0004 034B     		ldr	r3, .L2
 275 0006 0122     		movs	r2, #1
 276 0008 1A60     		str	r2, [r3]
  86:main.c        **** }
 277              		.loc 1 86 0
 278 000a 00BF     		nop
 279 000c BD46     		mov	sp, r7
 280              		.cfi_def_cfa_register 13
 281              		@ sp needed
 282 000e 80BC     		pop	{r7}
 283              		.cfi_restore 7
 284              		.cfi_def_cfa_offset 0
 285 0010 7047     		bx	lr
 286              	.L3:
 287 0012 00BF     		.align	2
 288              	.L2:
 289 0014 00000000 		.word	flag
 290              		.cfi_endproc
 291              	.LFE64:
 292              		.size	eoc, .-eoc
 293              		.section	.text.MyISR,"ax",%progbits
 294              		.align	2
 295              		.global	MyISR
 296              		.thumb
 297              		.thumb_func
 298              		.type	MyISR, %function
 299              	MyISR:
 300              	.LFB65:
  87:main.c        **** 
  88:main.c        **** CY_ISR(MyISR) {
 301              		.loc 1 88 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305              		@ link register save eliminated.
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 8


 306 0000 80B4     		push	{r7}
 307              		.cfi_def_cfa_offset 4
 308              		.cfi_offset 7, -4
 309 0002 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
  89:main.c        ****   motorFlag = 1;
 311              		.loc 1 89 0
 312 0004 034B     		ldr	r3, .L5
 313 0006 0122     		movs	r2, #1
 314 0008 1A60     		str	r2, [r3]
  90:main.c        **** }
 315              		.loc 1 90 0
 316 000a 00BF     		nop
 317 000c BD46     		mov	sp, r7
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 000e 80BC     		pop	{r7}
 321              		.cfi_restore 7
 322              		.cfi_def_cfa_offset 0
 323 0010 7047     		bx	lr
 324              	.L6:
 325 0012 00BF     		.align	2
 326              	.L5:
 327 0014 00000000 		.word	motorFlag
 328              		.cfi_endproc
 329              	.LFE65:
 330              		.size	MyISR, .-MyISR
 331              		.section	.rodata
 332              		.align	2
 333              	.LC1:
 334 0000 53746172 		.ascii	"Starting Pathfind\015\012\000"
 334      74696E67 
 334      20506174 
 334      6866696E 
 334      640D0A00 
 335              		.align	2
 336              	.LC2:
 337 0014 53515541 		.ascii	"SQUARES\015\012\000"
 337      5245530D 
 337      0A00
 338 001e 0000     		.align	2
 339              	.LC3:
 340 0020 25752025 		.ascii	"%u %u \015\012\000"
 340      75200D0A 
 340      00
 341 0029 000000   		.align	2
 342              	.LC4:
 343 002c 494E5354 		.ascii	"INSTRUCTIONS - DISTANCES\015\012\000"
 343      52554354 
 343      494F4E53 
 343      202D2044 
 343      49535441 
 344 0047 00       		.align	2
 345              	.LC5:
 346 0048 2575202D 		.ascii	"%u - %u \015\012\000"
 346      20257520 
 346      0D0A00
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 9


 347 0053 00       		.align	2
 348              	.LC6:
 349 0054 2575202D 		.ascii	"%u - %u FALSE %u \015\012\000"
 349      20257520 
 349      46414C53 
 349      45202575 
 349      200D0A00 
 350              		.global	__aeabi_i2f
 351              		.global	__aeabi_fmul
 352              		.global	__aeabi_f2iz
 353              		.align	2
 354              	.LC0:
 355 0068 04000000 		.word	4
 356 006c 02000000 		.word	2
 357 0070 02000000 		.word	2
 358 0074 02000000 		.word	2
 359 0078 02000000 		.word	2
 360 007c 02000000 		.word	2
 361 0080 02000000 		.word	2
 362 0084 02000000 		.word	2
 363 0088 02000000 		.word	2
 364 008c 02000000 		.word	2
 365 0090 02000000 		.word	2
 366 0094 01000000 		.word	1
 367 0098 02000000 		.word	2
 368 009c 04000000 		.word	4
 369 00a0 01000000 		.word	1
 370 00a4 02000000 		.word	2
 371 00a8 06000000 		.word	6
 372 00ac 02000000 		.word	2
 373 00b0 06000000 		.word	6
 374 00b4 02000000 		.word	2
 375 00b8 04000000 		.word	4
 376 00bc 04000000 		.word	4
 377 00c0 02000000 		.word	2
 378 00c4 06000000 		.word	6
 379 00c8 02000000 		.word	2
 380 00cc 02000000 		.word	2
 381 00d0 02000000 		.word	2
 382 00d4 04000000 		.word	4
 383 00d8 02000000 		.word	2
 384 00dc 00000000 		.word	0
 385 00e0 00000000 		.word	0
 386 00e4 00000000 		.word	0
 387 00e8 00000000 		.word	0
 388 00ec 00000000 		.word	0
 389 00f0 00000000 		.word	0
 390              		.section	.text.main,"ax",%progbits
 391              		.align	2
 392              		.global	main
 393              		.thumb
 394              		.thumb_func
 395              		.type	main, %function
 396              	main:
 397              	.LFB66:
  91:main.c        **** 
  92:main.c        **** int main() {
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 10


 398              		.loc 1 92 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 2232
 401              		@ frame_needed = 1, uses_anonymous_args = 0
 402 0000 90B5     		push	{r4, r7, lr}
 403              		.cfi_def_cfa_offset 12
 404              		.cfi_offset 4, -12
 405              		.cfi_offset 7, -8
 406              		.cfi_offset 14, -4
 407 0002 ADF6C40D 		subw	sp, sp, #2244
 408              		.cfi_def_cfa_offset 2256
 409 0006 02AF     		add	r7, sp, #8
 410              		.cfi_def_cfa 7, 2248
  93:main.c        **** 
  94:main.c        ****   // --------------------------------    
  95:main.c        ****   // ----- INITIALIZATIONS ----------
  96:main.c        ****   CYGlobalIntEnable;
 411              		.loc 1 96 0
 412              		.syntax unified
 413              	@ 96 "main.c" 1
 414 0008 62B6     		CPSIE   i
 415              	@ 0 "" 2
  97:main.c        **** 
  98:main.c        ****   // ------USB SETUP ----------------    
  99:main.c        **** 
 100:main.c        ****   USBUART_Start(0, USBUART_5V_OPERATION);
 416              		.loc 1 100 0
 417              		.thumb
 418              		.syntax unified
 419 000a 0121     		movs	r1, #1
 420 000c 0020     		movs	r0, #0
 421 000e FFF7FEFF 		bl	USBUART_Start
 101:main.c        ****   UART_Start();
 422              		.loc 1 101 0
 423 0012 FFF7FEFF 		bl	UART_Start
 102:main.c        **** 
 103:main.c        ****   QuadDec_M1_Start();
 424              		.loc 1 103 0
 425 0016 FFF7FEFF 		bl	QuadDec_M1_Start
 104:main.c        ****   QuadDec_M2_Start();
 426              		.loc 1 104 0
 427 001a FFF7FEFF 		bl	QuadDec_M2_Start
 105:main.c        **** 
 106:main.c        ****   isr_TS_StartEx(MyISR);
 428              		.loc 1 106 0
 429 001e C648     		ldr	r0, .L65
 430 0020 FFF7FEFF 		bl	isr_TS_StartEx
 107:main.c        **** 
 108:main.c        ****   RF_BT_SELECT_Write(1);
 431              		.loc 1 108 0
 432 0024 0120     		movs	r0, #1
 433 0026 FFF7FEFF 		bl	RF_BT_SELECT_Write
 109:main.c        **** 
 110:main.c        ****   ADC_Start();
 434              		.loc 1 110 0
 435 002a FFF7FEFF 		bl	ADC_Start
 111:main.c        ****   ADC_StartConvert();
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 11


 436              		.loc 1 111 0
 437 002e FFF7FEFF 		bl	ADC_StartConvert
 112:main.c        ****   eoc_StartEx(eoc);
 438              		.loc 1 112 0
 439 0032 C248     		ldr	r0, .L65+4
 440 0034 FFF7FEFF 		bl	eoc_StartEx
 113:main.c        **** 
 114:main.c        ****   initMotors();
 441              		.loc 1 114 0
 442 0038 FFF7FEFF 		bl	initMotors
 115:main.c        **** 
 116:main.c        ****   stop();
 443              		.loc 1 116 0
 444 003c FFF7FEFF 		bl	stop
 117:main.c        **** 
 118:main.c        ****   isr_TS_StartEx(MyISR);
 445              		.loc 1 118 0
 446 0040 BD48     		ldr	r0, .L65
 447 0042 FFF7FEFF 		bl	isr_TS_StartEx
 119:main.c        ****   Timer_TS_Start();
 448              		.loc 1 119 0
 449 0046 FFF7FEFF 		bl	Timer_TS_Start
 450              	.LBB2:
 120:main.c        **** 
 121:main.c        ****   unsigned char squares[500][2];
 122:main.c        **** 
 123:main.c        ****   unsigned char instruction[500];
 124:main.c        ****   unsigned char distance[500];
 125:main.c        **** 
 126:main.c        **** // Loop through the arrays and set each element to 55 or 0
 127:main.c        ****     for (int i = 0; i < 500; i++) {
 451              		.loc 1 127 0
 452 004a 0023     		movs	r3, #0
 453 004c C7F8B438 		str	r3, [r7, #2228]
 454 0050 28E0     		b	.L8
 455              	.L9:
 128:main.c        ****         squares[i][0] = 55;
 456              		.loc 1 128 0 discriminator 3
 457 0052 07F59363 		add	r3, r7, #1176
 458 0056 D7F8B428 		ldr	r2, [r7, #2228]
 459 005a 3721     		movs	r1, #55
 460 005c 03F81210 		strb	r1, [r3, r2, lsl #1]
 129:main.c        ****         squares[i][1] = 55;
 461              		.loc 1 129 0 discriminator 3
 462 0060 07F59362 		add	r2, r7, #1176
 463 0064 D7F8B438 		ldr	r3, [r7, #2228]
 464 0068 5B00     		lsls	r3, r3, #1
 465 006a 1344     		add	r3, r3, r2
 466 006c 3722     		movs	r2, #55
 467 006e 5A70     		strb	r2, [r3, #1]
 130:main.c        ****         instruction[i] = 0;
 468              		.loc 1 130 0 discriminator 3
 469 0070 07F52972 		add	r2, r7, #676
 470 0074 D7F8B438 		ldr	r3, [r7, #2228]
 471 0078 1344     		add	r3, r3, r2
 472 007a 0022     		movs	r2, #0
 473 007c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 12


 131:main.c        ****         distance[i] = 0;
 474              		.loc 1 131 0 discriminator 3
 475 007e 07F1B002 		add	r2, r7, #176
 476 0082 D7F8B438 		ldr	r3, [r7, #2228]
 477 0086 1344     		add	r3, r3, r2
 478 0088 0022     		movs	r2, #0
 479 008a 1A70     		strb	r2, [r3]
 132:main.c        ****         distance[i] = 55;
 480              		.loc 1 132 0 discriminator 3
 481 008c 07F1B002 		add	r2, r7, #176
 482 0090 D7F8B438 		ldr	r3, [r7, #2228]
 483 0094 1344     		add	r3, r3, r2
 484 0096 3722     		movs	r2, #55
 485 0098 1A70     		strb	r2, [r3]
 127:main.c        ****         squares[i][0] = 55;
 486              		.loc 1 127 0 discriminator 3
 487 009a D7F8B438 		ldr	r3, [r7, #2228]
 488 009e 0133     		adds	r3, r3, #1
 489 00a0 C7F8B438 		str	r3, [r7, #2228]
 490              	.L8:
 127:main.c        ****         squares[i][0] = 55;
 491              		.loc 1 127 0 is_stmt 0 discriminator 1
 492 00a4 D7F8B438 		ldr	r3, [r7, #2228]
 493 00a8 B3F5FA7F 		cmp	r3, #500
 494 00ac D1DB     		blt	.L9
 495              	.LBE2:
 133:main.c        ****     }
 134:main.c        ****  CyDelay(4000);
 496              		.loc 1 134 0 is_stmt 1
 497 00ae 4FF47A60 		mov	r0, #4000
 498 00b2 FFF7FEFF 		bl	CyDelay
 135:main.c        ****   usbPutString("Starting Pathfind\r\n");
 499              		.loc 1 135 0
 500 00b6 A248     		ldr	r0, .L65+8
 501 00b8 FFF7FEFF 		bl	usbPutString
 136:main.c        ****   pathfind(instruction, distance, squares);
 502              		.loc 1 136 0
 503 00bc 07F59362 		add	r2, r7, #1176
 504 00c0 07F1B001 		add	r1, r7, #176
 505 00c4 07F52973 		add	r3, r7, #676
 506 00c8 1846     		mov	r0, r3
 507 00ca FFF7FEFF 		bl	pathfind
 137:main.c        **** 
 138:main.c        **** 
 139:main.c        ****   usbPutString("SQUARES\r\n");
 508              		.loc 1 139 0
 509 00ce 9D48     		ldr	r0, .L65+12
 510 00d0 FFF7FEFF 		bl	usbPutString
 511              	.LBB3:
 140:main.c        ****   for (int i = 0; i < 500; i++) {
 512              		.loc 1 140 0
 513 00d4 0023     		movs	r3, #0
 514 00d6 C7F8B038 		str	r3, [r7, #2224]
 515 00da 1FE0     		b	.L10
 516              	.L11:
 517              	.LBB4:
 141:main.c        ****     char squareStr[10];
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 13


 142:main.c        ****     snprintf(squareStr, sizeof(squareStr), "%u %u \r\n", (unsigned char) squares[i][0], (unsigned c
 518              		.loc 1 142 0 discriminator 3
 519 00dc 07F59363 		add	r3, r7, #1176
 520 00e0 D7F8B028 		ldr	r2, [r7, #2224]
 521 00e4 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 522 00e8 1946     		mov	r1, r3
 523 00ea 07F59362 		add	r2, r7, #1176
 524 00ee D7F8B038 		ldr	r3, [r7, #2224]
 525 00f2 5B00     		lsls	r3, r3, #1
 526 00f4 1344     		add	r3, r3, r2
 527 00f6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 528 00f8 07F11800 		add	r0, r7, #24
 529 00fc 0093     		str	r3, [sp]
 530 00fe 0B46     		mov	r3, r1
 531 0100 914A     		ldr	r2, .L65+16
 532 0102 0A21     		movs	r1, #10
 533 0104 FFF7FEFF 		bl	snprintf
 143:main.c        ****     usbPutString(squareStr);
 534              		.loc 1 143 0 discriminator 3
 535 0108 07F11803 		add	r3, r7, #24
 536 010c 1846     		mov	r0, r3
 537 010e FFF7FEFF 		bl	usbPutString
 538              	.LBE4:
 140:main.c        ****   for (int i = 0; i < 500; i++) {
 539              		.loc 1 140 0 discriminator 3
 540 0112 D7F8B038 		ldr	r3, [r7, #2224]
 541 0116 0133     		adds	r3, r3, #1
 542 0118 C7F8B038 		str	r3, [r7, #2224]
 543              	.L10:
 140:main.c        ****   for (int i = 0; i < 500; i++) {
 544              		.loc 1 140 0 is_stmt 0 discriminator 1
 545 011c D7F8B038 		ldr	r3, [r7, #2224]
 546 0120 B3F5FA7F 		cmp	r3, #500
 547 0124 DADB     		blt	.L11
 548              	.LBE3:
 144:main.c        ****   }
 145:main.c        **** 
 146:main.c        **** usbPutString("INSTRUCTIONS - DISTANCES\r\n");
 549              		.loc 1 146 0 is_stmt 1
 550 0126 8948     		ldr	r0, .L65+20
 551 0128 FFF7FEFF 		bl	usbPutString
 147:main.c        **** // Print all instructions
 148:main.c        ****     int started = 0;
 552              		.loc 1 148 0
 553 012c 0023     		movs	r3, #0
 554 012e C7F8AC38 		str	r3, [r7, #2220]
 149:main.c        ****     int consecStops = 0;
 555              		.loc 1 149 0
 556 0132 0023     		movs	r3, #0
 557 0134 C7F8A838 		str	r3, [r7, #2216]
 150:main.c        ****     int desired[] = {4,2,2,2,2,2,2,2,2,2,2,1,2,4,1,2,6,2,6,2,4,4,2,6,2,2,2,4,2,0,0,0,0,0,0};
 558              		.loc 1 150 0
 559 0138 07F12403 		add	r3, r7, #36
 560 013c 844A     		ldr	r2, .L65+24
 561 013e 1846     		mov	r0, r3
 562 0140 1146     		mov	r1, r2
 563 0142 8C23     		movs	r3, #140
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 14


 564 0144 1A46     		mov	r2, r3
 565 0146 FFF7FEFF 		bl	memcpy
 151:main.c        ****     int d = 0;
 566              		.loc 1 151 0
 567 014a 0023     		movs	r3, #0
 568 014c C7F8A438 		str	r3, [r7, #2212]
 569              	.LBB5:
 152:main.c        **** 
 153:main.c        ****     for (int i = 0; i < 500; i++) {
 570              		.loc 1 153 0
 571 0150 0023     		movs	r3, #0
 572 0152 C7F8A038 		str	r3, [r7, #2208]
 573 0156 75E0     		b	.L12
 574              	.L20:
 154:main.c        ****         if (instruction[i] == 0 && (started == 0 || consecStops >= 6)) {
 575              		.loc 1 154 0
 576 0158 07F52972 		add	r2, r7, #676
 577 015c D7F8A038 		ldr	r3, [r7, #2208]
 578 0160 1344     		add	r3, r3, r2
 579 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 580 0164 002B     		cmp	r3, #0
 581 0166 07D1     		bne	.L13
 582              		.loc 1 154 0 is_stmt 0 discriminator 1
 583 0168 D7F8AC38 		ldr	r3, [r7, #2220]
 584 016c 002B     		cmp	r3, #0
 585 016e 63D0     		beq	.L64
 586              		.loc 1 154 0 discriminator 2
 587 0170 D7F8A838 		ldr	r3, [r7, #2216]
 588 0174 052B     		cmp	r3, #5
 589 0176 5FDC     		bgt	.L64
 590              	.L13:
 591              	.LBB6:
 155:main.c        ****         } else {
 156:main.c        ****             started = 4;
 592              		.loc 1 156 0 is_stmt 1
 593 0178 0423     		movs	r3, #4
 594 017a C7F8AC38 		str	r3, [r7, #2220]
 157:main.c        ****             char instStr[24]; 
 158:main.c        ****             if ((unsigned char) distance[i] == (unsigned char)desired[d]) {
 595              		.loc 1 158 0
 596 017e 07F1B002 		add	r2, r7, #176
 597 0182 D7F8A038 		ldr	r3, [r7, #2208]
 598 0186 1344     		add	r3, r3, r2
 599 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 600 018a 1946     		mov	r1, r3
 601 018c 07F12403 		add	r3, r7, #36
 602 0190 D7F8A428 		ldr	r2, [r7, #2212]
 603 0194 53F82230 		ldr	r3, [r3, r2, lsl #2]
 604 0198 DBB2     		uxtb	r3, r3
 605 019a 9942     		cmp	r1, r3
 606 019c 14D1     		bne	.L16
 159:main.c        ****             snprintf(instStr, sizeof(instStr), "%u - %u \r\n", (unsigned char)instruction[i], (unsi
 607              		.loc 1 159 0
 608 019e 07F52972 		add	r2, r7, #676
 609 01a2 D7F8A038 		ldr	r3, [r7, #2208]
 610 01a6 1344     		add	r3, r3, r2
 611 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 15


 612 01aa 1946     		mov	r1, r3
 613 01ac 07F1B002 		add	r2, r7, #176
 614 01b0 D7F8A038 		ldr	r3, [r7, #2208]
 615 01b4 1344     		add	r3, r3, r2
 616 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 617 01b8 3846     		mov	r0, r7
 618 01ba 0093     		str	r3, [sp]
 619 01bc 0B46     		mov	r3, r1
 620 01be 654A     		ldr	r2, .L65+28
 621 01c0 1821     		movs	r1, #24
 622 01c2 FFF7FEFF 		bl	snprintf
 623 01c6 1CE0     		b	.L17
 624              	.L16:
 160:main.c        ****             } else {
 161:main.c        ****                 snprintf(instStr, sizeof(instStr), "%u - %u FALSE %u \r\n", (unsigned char)instruct
 625              		.loc 1 161 0
 626 01c8 07F52972 		add	r2, r7, #676
 627 01cc D7F8A038 		ldr	r3, [r7, #2208]
 628 01d0 1344     		add	r3, r3, r2
 629 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 630 01d4 1C46     		mov	r4, r3
 631 01d6 07F1B002 		add	r2, r7, #176
 632 01da D7F8A038 		ldr	r3, [r7, #2208]
 633 01de 1344     		add	r3, r3, r2
 634 01e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 635 01e2 1946     		mov	r1, r3
 636 01e4 07F12403 		add	r3, r7, #36
 637 01e8 D7F8A428 		ldr	r2, [r7, #2212]
 638 01ec 53F82230 		ldr	r3, [r3, r2, lsl #2]
 639 01f0 DBB2     		uxtb	r3, r3
 640 01f2 3846     		mov	r0, r7
 641 01f4 0193     		str	r3, [sp, #4]
 642 01f6 0091     		str	r1, [sp]
 643 01f8 2346     		mov	r3, r4
 644 01fa 574A     		ldr	r2, .L65+32
 645 01fc 1821     		movs	r1, #24
 646 01fe FFF7FEFF 		bl	snprintf
 647              	.L17:
 162:main.c        ****             }
 163:main.c        ****             usbPutString(instStr);
 648              		.loc 1 163 0
 649 0202 3B46     		mov	r3, r7
 650 0204 1846     		mov	r0, r3
 651 0206 FFF7FEFF 		bl	usbPutString
 164:main.c        ****             d++;
 652              		.loc 1 164 0
 653 020a D7F8A438 		ldr	r3, [r7, #2212]
 654 020e 0133     		adds	r3, r3, #1
 655 0210 C7F8A438 		str	r3, [r7, #2212]
 165:main.c        ****             if (instruction[i] == 0) {
 656              		.loc 1 165 0
 657 0214 07F52972 		add	r2, r7, #676
 658 0218 D7F8A038 		ldr	r3, [r7, #2208]
 659 021c 1344     		add	r3, r3, r2
 660 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 661 0220 002B     		cmp	r3, #0
 662 0222 05D1     		bne	.L18
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 16


 166:main.c        ****                 consecStops++;
 663              		.loc 1 166 0
 664 0224 D7F8A838 		ldr	r3, [r7, #2216]
 665 0228 0133     		adds	r3, r3, #1
 666 022a C7F8A838 		str	r3, [r7, #2216]
 667 022e 04E0     		b	.L15
 668              	.L18:
 167:main.c        ****             } else {
 168:main.c        ****                 consecStops = 0;
 669              		.loc 1 168 0
 670 0230 0023     		movs	r3, #0
 671 0232 C7F8A838 		str	r3, [r7, #2216]
 672 0236 00E0     		b	.L15
 673              	.L64:
 674              	.LBE6:
 154:main.c        ****         } else {
 675              		.loc 1 154 0
 676 0238 00BF     		nop
 677              	.L15:
 153:main.c        ****         if (instruction[i] == 0 && (started == 0 || consecStops >= 6)) {
 678              		.loc 1 153 0 discriminator 2
 679 023a D7F8A038 		ldr	r3, [r7, #2208]
 680 023e 0133     		adds	r3, r3, #1
 681 0240 C7F8A038 		str	r3, [r7, #2208]
 682              	.L12:
 153:main.c        ****         if (instruction[i] == 0 && (started == 0 || consecStops >= 6)) {
 683              		.loc 1 153 0 is_stmt 0 discriminator 1
 684 0244 D7F8A038 		ldr	r3, [r7, #2208]
 685 0248 B3F5FA7F 		cmp	r3, #500
 686 024c 84DB     		blt	.L20
 687              	.L63:
 688              	.LBE5:
 169:main.c        ****             }
 170:main.c        ****         }
 171:main.c        ****     }
 172:main.c        **** 
 173:main.c        ****   for (;;) {
 174:main.c        **** 
 175:main.c        ****     if (motorFlag == 1) { // timer has counted 0.1s 
 689              		.loc 1 175 0 is_stmt 1
 690 024e 434B     		ldr	r3, .L65+36
 691 0250 1B68     		ldr	r3, [r3]
 692 0252 012B     		cmp	r3, #1
 693 0254 68D1     		bne	.L21
 176:main.c        **** 
 177:main.c        ****       isr_TS_Disable(); // disabling the interrupts
 694              		.loc 1 177 0
 695 0256 FFF7FEFF 		bl	isr_TS_Disable
 178:main.c        ****       if (step == 0) { //takes the first measurement, sets steps to 2, the next time the timer goes
 696              		.loc 1 178 0
 697 025a 414B     		ldr	r3, .L65+40
 698 025c 1B68     		ldr	r3, [r3]
 699 025e 002B     		cmp	r3, #0
 700 0260 11D1     		bne	.L22
 179:main.c        ****         v1L = QuadDec_M1_GetCounter(); // first measurement taken - LEFT
 701              		.loc 1 179 0
 702 0262 FFF7FEFF 		bl	QuadDec_M1_GetCounter
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 17


 703 0266 0346     		mov	r3, r0
 704 0268 1A46     		mov	r2, r3
 705 026a 3E4B     		ldr	r3, .L65+44
 706 026c 1A60     		str	r2, [r3]
 180:main.c        ****         v1R = QuadDec_M2_GetCounter(); // first measurement taken - RIGHT
 707              		.loc 1 180 0
 708 026e FFF7FEFF 		bl	QuadDec_M2_GetCounter
 709 0272 0346     		mov	r3, r0
 710 0274 1A46     		mov	r2, r3
 711 0276 3C4B     		ldr	r3, .L65+48
 712 0278 1A60     		str	r2, [r3]
 181:main.c        ****         step++;
 713              		.loc 1 181 0
 714 027a 394B     		ldr	r3, .L65+40
 715 027c 1B68     		ldr	r3, [r3]
 716 027e 0133     		adds	r3, r3, #1
 717 0280 374A     		ldr	r2, .L65+40
 718 0282 1360     		str	r3, [r2]
 719 0284 4BE0     		b	.L23
 720              	.L22:
 721              	.LBB7:
 182:main.c        ****       } else { // second measure
 183:main.c        ****         step = 0;
 722              		.loc 1 183 0
 723 0286 364B     		ldr	r3, .L65+40
 724 0288 0022     		movs	r2, #0
 725 028a 1A60     		str	r2, [r3]
 184:main.c        **** 
 185:main.c        ****         v2L = QuadDec_M1_GetCounter(); // second measurement taken - LEFT
 726              		.loc 1 185 0
 727 028c FFF7FEFF 		bl	QuadDec_M1_GetCounter
 728 0290 0346     		mov	r3, r0
 729 0292 1A46     		mov	r2, r3
 730 0294 354B     		ldr	r3, .L65+52
 731 0296 1A60     		str	r2, [r3]
 186:main.c        ****         v2R = QuadDec_M2_GetCounter(); // second measurement taken - RIGHT
 732              		.loc 1 186 0
 733 0298 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 734 029c 0346     		mov	r3, r0
 735 029e 1A46     		mov	r2, r3
 736 02a0 334B     		ldr	r3, .L65+56
 737 02a2 1A60     		str	r2, [r3]
 187:main.c        **** 
 188:main.c        ****         numRotationsL = (v2L - v1L);
 738              		.loc 1 188 0
 739 02a4 314B     		ldr	r3, .L65+52
 740 02a6 1A68     		ldr	r2, [r3]
 741 02a8 2E4B     		ldr	r3, .L65+44
 742 02aa 1B68     		ldr	r3, [r3]
 743 02ac D31A     		subs	r3, r2, r3
 744 02ae 314A     		ldr	r2, .L65+60
 745 02b0 1360     		str	r3, [r2]
 189:main.c        ****         numRotationsR = (v2R - v1R);
 746              		.loc 1 189 0
 747 02b2 2F4B     		ldr	r3, .L65+56
 748 02b4 1A68     		ldr	r2, [r3]
 749 02b6 2C4B     		ldr	r3, .L65+48
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 18


 750 02b8 1B68     		ldr	r3, [r3]
 751 02ba D31A     		subs	r3, r2, r3
 752 02bc 2E4A     		ldr	r2, .L65+64
 753 02be 1360     		str	r3, [r2]
 190:main.c        **** 
 191:main.c        ****         int changeInDots = (((abs(numRotationsR) + abs(numRotationsL)) ) / 2);
 754              		.loc 1 191 0
 755 02c0 2D4B     		ldr	r3, .L65+64
 756 02c2 1B68     		ldr	r3, [r3]
 757 02c4 83EAE372 		eor	r2, r3, r3, asr #31
 758 02c8 A2EBE372 		sub	r2, r2, r3, asr #31
 759 02cc 294B     		ldr	r3, .L65+60
 760 02ce 1B68     		ldr	r3, [r3]
 761 02d0 002B     		cmp	r3, #0
 762 02d2 B8BF     		it	lt
 763 02d4 5B42     		rsblt	r3, r3, #0
 764 02d6 1344     		add	r3, r3, r2
 765 02d8 DA0F     		lsrs	r2, r3, #31
 766 02da 1344     		add	r3, r3, r2
 767 02dc 5B10     		asrs	r3, r3, #1
 768 02de C7F88038 		str	r3, [r7, #2176]
 192:main.c        ****         dotsTravelled = changeInDots + dotsTravelled;
 769              		.loc 1 192 0
 770 02e2 264B     		ldr	r3, .L65+68
 771 02e4 1A68     		ldr	r2, [r3]
 772 02e6 D7F88038 		ldr	r3, [r7, #2176]
 773 02ea 1344     		add	r3, r3, r2
 774 02ec 234A     		ldr	r2, .L65+68
 775 02ee 1360     		str	r3, [r2]
 193:main.c        ****         distanceTravelled = (dotsTravelled * (float)(1.217375 / 6.105)); //increase 6.1 to go furth
 776              		.loc 1 193 0
 777 02f0 224B     		ldr	r3, .L65+68
 778 02f2 1B68     		ldr	r3, [r3]
 779 02f4 1846     		mov	r0, r3
 780 02f6 FFF7FEFF 		bl	__aeabi_i2f
 781 02fa 0346     		mov	r3, r0
 782 02fc 2049     		ldr	r1, .L65+72
 783 02fe 1846     		mov	r0, r3
 784 0300 FFF7FEFF 		bl	__aeabi_fmul
 785 0304 0346     		mov	r3, r0
 786 0306 1846     		mov	r0, r3
 787 0308 FFF7FEFF 		bl	__aeabi_f2iz
 788 030c 0246     		mov	r2, r0
 789 030e 1D4B     		ldr	r3, .L65+76
 790 0310 1A60     		str	r2, [r3]
 194:main.c        ****                                                                          //6.2 for low, 6.1 for nor
 195:main.c        **** 
 196:main.c        ****         QuadDec_M1_SetCounter(0); // set quad counter to 0 to avoid overflow
 791              		.loc 1 196 0
 792 0312 0020     		movs	r0, #0
 793 0314 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 197:main.c        ****         QuadDec_M2_SetCounter(0); // set quad counter to 0 to avoid overflow 
 794              		.loc 1 197 0
 795 0318 0020     		movs	r0, #0
 796 031a FFF7FEFF 		bl	QuadDec_M2_SetCounter
 797              	.L23:
 798              	.LBE7:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 19


 198:main.c        **** 
 199:main.c        ****       }
 200:main.c        ****       motorFlag = 0; // interrupt flag is back to 0
 799              		.loc 1 200 0
 800 031e 0F4B     		ldr	r3, .L65+36
 801 0320 0022     		movs	r2, #0
 802 0322 1A60     		str	r2, [r3]
 201:main.c        ****       isr_TS_Enable(); // interrupt enabled
 803              		.loc 1 201 0
 804 0324 FFF7FEFF 		bl	isr_TS_Enable
 805              	.L21:
 202:main.c        **** 
 203:main.c        ****     }
 204:main.c        **** 
 205:main.c        ****     if (distanceTravelled > MOVE_DISTANCE) {
 806              		.loc 1 205 0
 807 0328 164B     		ldr	r3, .L65+76
 808 032a 1B68     		ldr	r3, [r3]
 809 032c 164A     		ldr	r2, .L65+80
 810 032e 9342     		cmp	r3, r2
 811 0330 2CDD     		ble	.L24
 206:main.c        ****       stop();
 812              		.loc 1 206 0
 813 0332 FFF7FEFF 		bl	stop
 814 0336 8AE7     		b	.L63
 815              	.L66:
 816              		.align	2
 817              	.L65:
 818 0338 00000000 		.word	MyISR
 819 033c 00000000 		.word	eoc
 820 0340 00000000 		.word	.LC1
 821 0344 14000000 		.word	.LC2
 822 0348 20000000 		.word	.LC3
 823 034c 2C000000 		.word	.LC4
 824 0350 68000000 		.word	.LC0
 825 0354 48000000 		.word	.LC5
 826 0358 54000000 		.word	.LC6
 827 035c 00000000 		.word	motorFlag
 828 0360 00000000 		.word	step
 829 0364 00000000 		.word	v1L
 830 0368 00000000 		.word	v1R
 831 036c 00000000 		.word	v2L
 832 0370 00000000 		.word	v2R
 833 0374 00000000 		.word	numRotationsL
 834 0378 00000000 		.word	numRotationsR
 835 037c 00000000 		.word	dotsTravelled
 836 0380 25314C3E 		.word	1045180709
 837 0384 00000000 		.word	distanceTravelled
 838 0388 7F969800 		.word	9999999
 839              	.L24:
 207:main.c        **** 
 208:main.c        ****     } else {
 209:main.c        **** 
 210:main.c        ****       LED_PIN_4_Write(0);
 840              		.loc 1 210 0
 841 038c 0020     		movs	r0, #0
 842 038e FFF7FEFF 		bl	LED_PIN_4_Write
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 20


 211:main.c        ****       if (flag == 1) {
 843              		.loc 1 211 0
 844 0392 BA4B     		ldr	r3, .L67
 845 0394 1B68     		ldr	r3, [r3]
 846 0396 012B     		cmp	r3, #1
 847 0398 7FF459AF 		bne	.L63
 212:main.c        **** 
 213:main.c        ****         ADC_IRQ_Disable();
 848              		.loc 1 213 0
 849 039c FFF7FEFF 		bl	ADC_IRQ_Disable
 214:main.c        ****         valuesLeftIntersection[count] = ADC_GetResult16(0);
 850              		.loc 1 214 0
 851 03a0 B74B     		ldr	r3, .L67+4
 852 03a2 1C68     		ldr	r4, [r3]
 853 03a4 0020     		movs	r0, #0
 854 03a6 FFF7FEFF 		bl	ADC_GetResult16
 855 03aa 0346     		mov	r3, r0
 856 03ac 1A46     		mov	r2, r3
 857 03ae B54B     		ldr	r3, .L67+8
 858 03b0 43F82420 		str	r2, [r3, r4, lsl #2]
 215:main.c        ****         valuesLeftLine[count] = ADC_GetResult16(1);
 859              		.loc 1 215 0
 860 03b4 B24B     		ldr	r3, .L67+4
 861 03b6 1C68     		ldr	r4, [r3]
 862 03b8 0120     		movs	r0, #1
 863 03ba FFF7FEFF 		bl	ADC_GetResult16
 864 03be 0346     		mov	r3, r0
 865 03c0 1A46     		mov	r2, r3
 866 03c2 B14B     		ldr	r3, .L67+12
 867 03c4 43F82420 		str	r2, [r3, r4, lsl #2]
 216:main.c        ****         valuesMiddleLine[count] = ADC_GetResult16(2);
 868              		.loc 1 216 0
 869 03c8 AD4B     		ldr	r3, .L67+4
 870 03ca 1C68     		ldr	r4, [r3]
 871 03cc 0220     		movs	r0, #2
 872 03ce FFF7FEFF 		bl	ADC_GetResult16
 873 03d2 0346     		mov	r3, r0
 874 03d4 1A46     		mov	r2, r3
 875 03d6 AD4B     		ldr	r3, .L67+16
 876 03d8 43F82420 		str	r2, [r3, r4, lsl #2]
 217:main.c        ****         valuesTurnComplete[count] = ADC_GetResult16(3);
 877              		.loc 1 217 0
 878 03dc A84B     		ldr	r3, .L67+4
 879 03de 1C68     		ldr	r4, [r3]
 880 03e0 0320     		movs	r0, #3
 881 03e2 FFF7FEFF 		bl	ADC_GetResult16
 882 03e6 0346     		mov	r3, r0
 883 03e8 1A46     		mov	r2, r3
 884 03ea A94B     		ldr	r3, .L67+20
 885 03ec 43F82420 		str	r2, [r3, r4, lsl #2]
 218:main.c        ****         valuesRightLine[count] = ADC_GetResult16(4);
 886              		.loc 1 218 0
 887 03f0 A34B     		ldr	r3, .L67+4
 888 03f2 1C68     		ldr	r4, [r3]
 889 03f4 0420     		movs	r0, #4
 890 03f6 FFF7FEFF 		bl	ADC_GetResult16
 891 03fa 0346     		mov	r3, r0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 21


 892 03fc 1A46     		mov	r2, r3
 893 03fe A54B     		ldr	r3, .L67+24
 894 0400 43F82420 		str	r2, [r3, r4, lsl #2]
 219:main.c        ****         valuesRightIntersection[count] = ADC_GetResult16(5);
 895              		.loc 1 219 0
 896 0404 9E4B     		ldr	r3, .L67+4
 897 0406 1C68     		ldr	r4, [r3]
 898 0408 0520     		movs	r0, #5
 899 040a FFF7FEFF 		bl	ADC_GetResult16
 900 040e 0346     		mov	r3, r0
 901 0410 1A46     		mov	r2, r3
 902 0412 A14B     		ldr	r3, .L67+28
 903 0414 43F82420 		str	r2, [r3, r4, lsl #2]
 220:main.c        **** 
 221:main.c        ****         count++;
 904              		.loc 1 221 0
 905 0418 994B     		ldr	r3, .L67+4
 906 041a 1B68     		ldr	r3, [r3]
 907 041c 0133     		adds	r3, r3, #1
 908 041e 984A     		ldr	r2, .L67+4
 909 0420 1360     		str	r3, [r2]
 222:main.c        ****         if (count == ADC_COUNT) {
 910              		.loc 1 222 0
 911 0422 974B     		ldr	r3, .L67+4
 912 0424 1B68     		ldr	r3, [r3]
 913 0426 B3F57A7F 		cmp	r3, #1000
 914 042a 40F0D081 		bne	.L26
 915              	.LBB8:
 223:main.c        ****           LED_PIN_4_Write(1);
 916              		.loc 1 223 0
 917 042e 0120     		movs	r0, #1
 918 0430 FFF7FEFF 		bl	LED_PIN_4_Write
 224:main.c        ****           count = 0;
 919              		.loc 1 224 0
 920 0434 924B     		ldr	r3, .L67+4
 921 0436 0022     		movs	r2, #0
 922 0438 1A60     		str	r2, [r3]
 225:main.c        ****           int highCountLeftIntersection = 0;
 923              		.loc 1 225 0
 924 043a 0023     		movs	r3, #0
 925 043c C7F89C38 		str	r3, [r7, #2204]
 226:main.c        ****           int highCountLeftLine = 0;
 926              		.loc 1 226 0
 927 0440 0023     		movs	r3, #0
 928 0442 C7F89838 		str	r3, [r7, #2200]
 227:main.c        ****           int highCountMiddleLine = 0;
 929              		.loc 1 227 0
 930 0446 0023     		movs	r3, #0
 931 0448 C7F89438 		str	r3, [r7, #2196]
 228:main.c        ****           int highCountTurnComplete = 0;
 932              		.loc 1 228 0
 933 044c 0023     		movs	r3, #0
 934 044e C7F89038 		str	r3, [r7, #2192]
 229:main.c        ****           int highCountRightLine = 0;
 935              		.loc 1 229 0
 936 0452 0023     		movs	r3, #0
 937 0454 C7F88C38 		str	r3, [r7, #2188]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 22


 230:main.c        ****           int highCountRightIntersection = 0;
 938              		.loc 1 230 0
 939 0458 0023     		movs	r3, #0
 940 045a C7F88838 		str	r3, [r7, #2184]
 941              	.LBB9:
 231:main.c        ****           for (int i = 0; i < ADC_COUNT; i++) {
 942              		.loc 1 231 0
 943 045e 0023     		movs	r3, #0
 944 0460 C7F88438 		str	r3, [r7, #2180]
 945 0464 58E0     		b	.L27
 946              	.L34:
 232:main.c        **** 
 233:main.c        ****             if (valuesLeftIntersection[i] > 3000) {
 947              		.loc 1 233 0
 948 0466 874A     		ldr	r2, .L67+8
 949 0468 D7F88438 		ldr	r3, [r7, #2180]
 950 046c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 951 0470 40F6B832 		movw	r2, #3000
 952 0474 9342     		cmp	r3, r2
 953 0476 04DD     		ble	.L28
 234:main.c        ****               highCountLeftIntersection++;
 954              		.loc 1 234 0
 955 0478 D7F89C38 		ldr	r3, [r7, #2204]
 956 047c 0133     		adds	r3, r3, #1
 957 047e C7F89C38 		str	r3, [r7, #2204]
 958              	.L28:
 235:main.c        **** 
 236:main.c        ****             }
 237:main.c        **** 
 238:main.c        ****             if (valuesLeftLine[i] > 3000) {
 959              		.loc 1 238 0
 960 0482 814A     		ldr	r2, .L67+12
 961 0484 D7F88438 		ldr	r3, [r7, #2180]
 962 0488 52F82330 		ldr	r3, [r2, r3, lsl #2]
 963 048c 40F6B832 		movw	r2, #3000
 964 0490 9342     		cmp	r3, r2
 965 0492 04DD     		ble	.L29
 239:main.c        ****               highCountLeftLine++;
 966              		.loc 1 239 0
 967 0494 D7F89838 		ldr	r3, [r7, #2200]
 968 0498 0133     		adds	r3, r3, #1
 969 049a C7F89838 		str	r3, [r7, #2200]
 970              	.L29:
 240:main.c        **** 
 241:main.c        ****             }
 242:main.c        **** 
 243:main.c        ****             if (valuesMiddleLine[i] > 3000) {
 971              		.loc 1 243 0
 972 049e 7B4A     		ldr	r2, .L67+16
 973 04a0 D7F88438 		ldr	r3, [r7, #2180]
 974 04a4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 975 04a8 40F6B832 		movw	r2, #3000
 976 04ac 9342     		cmp	r3, r2
 977 04ae 04DD     		ble	.L30
 244:main.c        ****               highCountMiddleLine++;
 978              		.loc 1 244 0
 979 04b0 D7F89438 		ldr	r3, [r7, #2196]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 23


 980 04b4 0133     		adds	r3, r3, #1
 981 04b6 C7F89438 		str	r3, [r7, #2196]
 982              	.L30:
 245:main.c        **** 
 246:main.c        ****             }
 247:main.c        **** 
 248:main.c        ****             if (valuesTurnComplete[i] > 3000) {
 983              		.loc 1 248 0
 984 04ba 754A     		ldr	r2, .L67+20
 985 04bc D7F88438 		ldr	r3, [r7, #2180]
 986 04c0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 987 04c4 40F6B832 		movw	r2, #3000
 988 04c8 9342     		cmp	r3, r2
 989 04ca 04DD     		ble	.L31
 249:main.c        ****               highCountTurnComplete++;
 990              		.loc 1 249 0
 991 04cc D7F89038 		ldr	r3, [r7, #2192]
 992 04d0 0133     		adds	r3, r3, #1
 993 04d2 C7F89038 		str	r3, [r7, #2192]
 994              	.L31:
 250:main.c        **** 
 251:main.c        ****             }
 252:main.c        **** 
 253:main.c        ****             if (valuesRightLine[i] > 3000) {
 995              		.loc 1 253 0
 996 04d6 6F4A     		ldr	r2, .L67+24
 997 04d8 D7F88438 		ldr	r3, [r7, #2180]
 998 04dc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 999 04e0 40F6B832 		movw	r2, #3000
 1000 04e4 9342     		cmp	r3, r2
 1001 04e6 04DD     		ble	.L32
 254:main.c        ****               highCountRightLine++;
 1002              		.loc 1 254 0
 1003 04e8 D7F88C38 		ldr	r3, [r7, #2188]
 1004 04ec 0133     		adds	r3, r3, #1
 1005 04ee C7F88C38 		str	r3, [r7, #2188]
 1006              	.L32:
 255:main.c        **** 
 256:main.c        ****             }
 257:main.c        **** 
 258:main.c        ****             if (valuesRightIntersection[i] > 3000) {
 1007              		.loc 1 258 0
 1008 04f2 694A     		ldr	r2, .L67+28
 1009 04f4 D7F88438 		ldr	r3, [r7, #2180]
 1010 04f8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1011 04fc 40F6B832 		movw	r2, #3000
 1012 0500 9342     		cmp	r3, r2
 1013 0502 04DD     		ble	.L33
 259:main.c        ****               highCountRightIntersection++;
 1014              		.loc 1 259 0
 1015 0504 D7F88838 		ldr	r3, [r7, #2184]
 1016 0508 0133     		adds	r3, r3, #1
 1017 050a C7F88838 		str	r3, [r7, #2184]
 1018              	.L33:
 231:main.c        **** 
 1019              		.loc 1 231 0 discriminator 2
 1020 050e D7F88438 		ldr	r3, [r7, #2180]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 24


 1021 0512 0133     		adds	r3, r3, #1
 1022 0514 C7F88438 		str	r3, [r7, #2180]
 1023              	.L27:
 231:main.c        **** 
 1024              		.loc 1 231 0 is_stmt 0 discriminator 1
 1025 0518 D7F88438 		ldr	r3, [r7, #2180]
 1026 051c B3F57A7F 		cmp	r3, #1000
 1027 0520 A1DB     		blt	.L34
 1028              	.LBE9:
 260:main.c        **** 
 261:main.c        ****             }
 262:main.c        **** 
 263:main.c        ****           }
 264:main.c        **** 
 265:main.c        ****           if (L_LINE_BLACK) {
 1029              		.loc 1 265 0 is_stmt 1
 1030 0522 D7F89838 		ldr	r3, [r7, #2200]
 1031 0526 952B     		cmp	r3, #149
 1032 0528 03DC     		bgt	.L35
 266:main.c        ****             LED_PIN_1_Write(0);
 1033              		.loc 1 266 0
 1034 052a 0020     		movs	r0, #0
 1035 052c FFF7FEFF 		bl	LED_PIN_1_Write
 1036 0530 02E0     		b	.L36
 1037              	.L35:
 267:main.c        ****           } else {
 268:main.c        ****             LED_PIN_1_Write(1);
 1038              		.loc 1 268 0
 1039 0532 0120     		movs	r0, #1
 1040 0534 FFF7FEFF 		bl	LED_PIN_1_Write
 1041              	.L36:
 269:main.c        ****           }
 270:main.c        **** 
 271:main.c        ****           if (M_LINE_BLACK) {
 1042              		.loc 1 271 0
 1043 0538 D7F89438 		ldr	r3, [r7, #2196]
 1044 053c 952B     		cmp	r3, #149
 1045 053e 03DC     		bgt	.L37
 272:main.c        ****             LED_PIN_2_Write(0);
 1046              		.loc 1 272 0
 1047 0540 0020     		movs	r0, #0
 1048 0542 FFF7FEFF 		bl	LED_PIN_2_Write
 1049 0546 02E0     		b	.L38
 1050              	.L37:
 273:main.c        ****           } else {
 274:main.c        ****             LED_PIN_2_Write(1);
 1051              		.loc 1 274 0
 1052 0548 0120     		movs	r0, #1
 1053 054a FFF7FEFF 		bl	LED_PIN_2_Write
 1054              	.L38:
 275:main.c        ****           }
 276:main.c        **** 
 277:main.c        ****           if (R_LINE_BLACK) {
 1055              		.loc 1 277 0
 1056 054e D7F88C38 		ldr	r3, [r7, #2188]
 1057 0552 952B     		cmp	r3, #149
 1058 0554 03DC     		bgt	.L39
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 25


 278:main.c        ****             LED_PIN_3_Write(0);
 1059              		.loc 1 278 0
 1060 0556 0020     		movs	r0, #0
 1061 0558 FFF7FEFF 		bl	LED_PIN_3_Write
 1062 055c 02E0     		b	.L40
 1063              	.L39:
 279:main.c        ****           } else {
 280:main.c        ****             LED_PIN_3_Write(1);
 1064              		.loc 1 280 0
 1065 055e 0120     		movs	r0, #1
 1066 0560 FFF7FEFF 		bl	LED_PIN_3_Write
 1067              	.L40:
 281:main.c        ****           }
 282:main.c        **** 
 283:main.c        ****           shouldUpdate = 0;
 1068              		.loc 1 283 0
 1069 0564 4D4B     		ldr	r3, .L67+32
 1070 0566 0022     		movs	r2, #0
 1071 0568 1A60     		str	r2, [r3]
 284:main.c        ****           turnTimer = 0;
 1072              		.loc 1 284 0
 1073 056a 4D4B     		ldr	r3, .L67+36
 1074 056c 0022     		movs	r2, #0
 1075 056e 1A60     		str	r2, [r3]
 285:main.c        **** 
 286:main.c        ****           // If all the sensors are under black light, stop the robot
 287:main.c        ****           if (L_INT_BLACK && M_LINE_BLACK && R_INT_BLACK && TC_BLACK && L_LINE_BLACK && R_LINE_BLAC
 1076              		.loc 1 287 0
 1077 0570 D7F89C38 		ldr	r3, [r7, #2204]
 1078 0574 952B     		cmp	r3, #149
 1079 0576 16DC     		bgt	.L41
 1080              		.loc 1 287 0 is_stmt 0 discriminator 1
 1081 0578 D7F89438 		ldr	r3, [r7, #2196]
 1082 057c 952B     		cmp	r3, #149
 1083 057e 12DC     		bgt	.L41
 1084              		.loc 1 287 0 discriminator 2
 1085 0580 D7F88838 		ldr	r3, [r7, #2184]
 1086 0584 952B     		cmp	r3, #149
 1087 0586 0EDC     		bgt	.L41
 1088              		.loc 1 287 0 discriminator 3
 1089 0588 D7F89038 		ldr	r3, [r7, #2192]
 1090 058c 952B     		cmp	r3, #149
 1091 058e 0ADC     		bgt	.L41
 1092              		.loc 1 287 0 discriminator 4
 1093 0590 D7F89838 		ldr	r3, [r7, #2200]
 1094 0594 952B     		cmp	r3, #149
 1095 0596 06DC     		bgt	.L41
 1096              		.loc 1 287 0 discriminator 5
 1097 0598 D7F88C38 		ldr	r3, [r7, #2188]
 1098 059c 952B     		cmp	r3, #149
 1099 059e 02DC     		bgt	.L41
 288:main.c        **** 
 289:main.c        ****             stop();
 1100              		.loc 1 289 0 is_stmt 1
 1101 05a0 FFF7FEFF 		bl	stop
 1102 05a4 13E1     		b	.L26
 1103              	.L41:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 26


 290:main.c        **** 
 291:main.c        ****           } else if (turningLeft == 1) { // if robot is turning left
 1104              		.loc 1 291 0
 1105 05a6 3F4B     		ldr	r3, .L67+40
 1106 05a8 1B68     		ldr	r3, [r3]
 1107 05aa 012B     		cmp	r3, #1
 1108 05ac 14D1     		bne	.L42
 292:main.c        ****             while (turnTimer != 10000) {
 1109              		.loc 1 292 0
 1110 05ae 06E0     		b	.L43
 1111              	.L44:
 293:main.c        ****               turnLeft();
 1112              		.loc 1 293 0
 1113 05b0 FFF7FEFF 		bl	turnLeft
 294:main.c        ****               turnTimer++;
 1114              		.loc 1 294 0
 1115 05b4 3A4B     		ldr	r3, .L67+36
 1116 05b6 1B68     		ldr	r3, [r3]
 1117 05b8 0133     		adds	r3, r3, #1
 1118 05ba 394A     		ldr	r2, .L67+36
 1119 05bc 1360     		str	r3, [r2]
 1120              	.L43:
 292:main.c        ****             while (turnTimer != 10000) {
 1121              		.loc 1 292 0
 1122 05be 384B     		ldr	r3, .L67+36
 1123 05c0 1B68     		ldr	r3, [r3]
 1124 05c2 42F21072 		movw	r2, #10000
 1125 05c6 9342     		cmp	r3, r2
 1126 05c8 F2D1     		bne	.L44
 295:main.c        ****             }
 296:main.c        ****             turnEnable = 0;
 1127              		.loc 1 296 0
 1128 05ca 374B     		ldr	r3, .L67+44
 1129 05cc 0022     		movs	r2, #0
 1130 05ce 1A60     		str	r2, [r3]
 297:main.c        ****             turningLeft = 0;
 1131              		.loc 1 297 0
 1132 05d0 344B     		ldr	r3, .L67+40
 1133 05d2 0022     		movs	r2, #0
 1134 05d4 1A60     		str	r2, [r3]
 1135 05d6 FAE0     		b	.L26
 1136              	.L42:
 298:main.c        **** 
 299:main.c        ****           } else if (turningRight == 1) { // if robot is turning right
 1137              		.loc 1 299 0
 1138 05d8 344B     		ldr	r3, .L67+48
 1139 05da 1B68     		ldr	r3, [r3]
 1140 05dc 012B     		cmp	r3, #1
 1141 05de 14D1     		bne	.L45
 300:main.c        ****             while (turnTimer != 10000) {
 1142              		.loc 1 300 0
 1143 05e0 06E0     		b	.L46
 1144              	.L47:
 301:main.c        ****               turnRight();
 1145              		.loc 1 301 0
 1146 05e2 FFF7FEFF 		bl	turnRight
 302:main.c        ****               turnTimer++;
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 27


 1147              		.loc 1 302 0
 1148 05e6 2E4B     		ldr	r3, .L67+36
 1149 05e8 1B68     		ldr	r3, [r3]
 1150 05ea 0133     		adds	r3, r3, #1
 1151 05ec 2C4A     		ldr	r2, .L67+36
 1152 05ee 1360     		str	r3, [r2]
 1153              	.L46:
 300:main.c        ****             while (turnTimer != 10000) {
 1154              		.loc 1 300 0
 1155 05f0 2B4B     		ldr	r3, .L67+36
 1156 05f2 1B68     		ldr	r3, [r3]
 1157 05f4 42F21072 		movw	r2, #10000
 1158 05f8 9342     		cmp	r3, r2
 1159 05fa F2D1     		bne	.L47
 303:main.c        ****             }
 304:main.c        ****             turnEnable = 0;
 1160              		.loc 1 304 0
 1161 05fc 2A4B     		ldr	r3, .L67+44
 1162 05fe 0022     		movs	r2, #0
 1163 0600 1A60     		str	r2, [r3]
 305:main.c        ****             turningRight = 0;
 1164              		.loc 1 305 0
 1165 0602 2A4B     		ldr	r3, .L67+48
 1166 0604 0022     		movs	r2, #0
 1167 0606 1A60     		str	r2, [r3]
 1168 0608 E1E0     		b	.L26
 1169              	.L45:
 306:main.c        **** 
 307:main.c        ****           } else if (L_INT_BLACK && (M_LINE_BLACK || L_LINE_BLACK) && turnEnable == 1) { //initiate
 1170              		.loc 1 307 0
 1171 060a D7F89C38 		ldr	r3, [r7, #2204]
 1172 060e 952B     		cmp	r3, #149
 1173 0610 17DC     		bgt	.L48
 1174              		.loc 1 307 0 is_stmt 0 discriminator 1
 1175 0612 D7F89438 		ldr	r3, [r7, #2196]
 1176 0616 952B     		cmp	r3, #149
 1177 0618 03DD     		ble	.L49
 1178              		.loc 1 307 0 discriminator 3
 1179 061a D7F89838 		ldr	r3, [r7, #2200]
 1180 061e 952B     		cmp	r3, #149
 1181 0620 0FDC     		bgt	.L48
 1182              	.L49:
 1183              		.loc 1 307 0 discriminator 4
 1184 0622 214B     		ldr	r3, .L67+44
 1185 0624 1B68     		ldr	r3, [r3]
 1186 0626 012B     		cmp	r3, #1
 1187 0628 0BD1     		bne	.L48
 308:main.c        **** 
 309:main.c        ****             turnTimer++;
 1188              		.loc 1 309 0 is_stmt 1
 1189 062a 1D4B     		ldr	r3, .L67+36
 1190 062c 1B68     		ldr	r3, [r3]
 1191 062e 0133     		adds	r3, r3, #1
 1192 0630 1B4A     		ldr	r2, .L67+36
 1193 0632 1360     		str	r3, [r2]
 310:main.c        ****             turningLeft = 1;
 1194              		.loc 1 310 0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 28


 1195 0634 1B4B     		ldr	r3, .L67+40
 1196 0636 0122     		movs	r2, #1
 1197 0638 1A60     		str	r2, [r3]
 311:main.c        ****             lastAdjustDirection = 0;
 1198              		.loc 1 311 0
 1199 063a 1D4B     		ldr	r3, .L67+52
 1200 063c 0022     		movs	r2, #0
 1201 063e 1A60     		str	r2, [r3]
 1202 0640 C5E0     		b	.L26
 1203              	.L48:
 312:main.c        **** 
 313:main.c        ****           } else if (R_INT_BLACK && (M_LINE_BLACK || R_LINE_BLACK) && turnEnable == 1) { //initiate
 1204              		.loc 1 313 0
 1205 0642 D7F88838 		ldr	r3, [r7, #2184]
 1206 0646 952B     		cmp	r3, #149
 1207 0648 34DC     		bgt	.L50
 1208              		.loc 1 313 0 is_stmt 0 discriminator 1
 1209 064a D7F89438 		ldr	r3, [r7, #2196]
 1210 064e 952B     		cmp	r3, #149
 1211 0650 03DD     		ble	.L51
 1212              		.loc 1 313 0 discriminator 3
 1213 0652 D7F88C38 		ldr	r3, [r7, #2188]
 1214 0656 952B     		cmp	r3, #149
 1215 0658 2CDC     		bgt	.L50
 1216              	.L51:
 1217              		.loc 1 313 0 discriminator 4
 1218 065a 134B     		ldr	r3, .L67+44
 1219 065c 1B68     		ldr	r3, [r3]
 1220 065e 012B     		cmp	r3, #1
 1221 0660 28D1     		bne	.L50
 314:main.c        **** 
 315:main.c        ****             turnTimer++;
 1222              		.loc 1 315 0 is_stmt 1
 1223 0662 0F4B     		ldr	r3, .L67+36
 1224 0664 1B68     		ldr	r3, [r3]
 1225 0666 0133     		adds	r3, r3, #1
 1226 0668 0D4A     		ldr	r2, .L67+36
 1227 066a 1360     		str	r3, [r2]
 316:main.c        ****             turningRight = 1;
 1228              		.loc 1 316 0
 1229 066c 0F4B     		ldr	r3, .L67+48
 1230 066e 0122     		movs	r2, #1
 1231 0670 1A60     		str	r2, [r3]
 317:main.c        ****             lastAdjustDirection = 2;
 1232              		.loc 1 317 0
 1233 0672 0F4B     		ldr	r3, .L67+52
 1234 0674 0222     		movs	r2, #2
 1235 0676 1A60     		str	r2, [r3]
 1236 0678 A9E0     		b	.L26
 1237              	.L68:
 1238 067a 00BF     		.align	2
 1239              	.L67:
 1240 067c 00000000 		.word	flag
 1241 0680 00000000 		.word	count
 1242 0684 00000000 		.word	valuesLeftIntersection
 1243 0688 00000000 		.word	valuesLeftLine
 1244 068c 00000000 		.word	valuesMiddleLine
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 29


 1245 0690 00000000 		.word	valuesTurnComplete
 1246 0694 00000000 		.word	valuesRightLine
 1247 0698 00000000 		.word	valuesRightIntersection
 1248 069c 00000000 		.word	shouldUpdate
 1249 06a0 00000000 		.word	turnTimer
 1250 06a4 00000000 		.word	turningLeft
 1251 06a8 00000000 		.word	turnEnable
 1252 06ac 00000000 		.word	turningRight
 1253 06b0 00000000 		.word	lastAdjustDirection
 1254              	.L50:
 318:main.c        **** 
 319:main.c        ****           } else if (R_LINE_BLACK && L_LINE_BLACK) {
 1255              		.loc 1 319 0
 1256 06b4 D7F88C38 		ldr	r3, [r7, #2188]
 1257 06b8 952B     		cmp	r3, #149
 1258 06ba 04DC     		bgt	.L52
 1259              		.loc 1 319 0 is_stmt 0 discriminator 1
 1260 06bc D7F89838 		ldr	r3, [r7, #2200]
 1261 06c0 952B     		cmp	r3, #149
 1262 06c2 40F38480 		ble	.L26
 1263              	.L52:
 320:main.c        ****             // do nothing for now
 321:main.c        **** 
 322:main.c        ****           } else if (L_INT_BLACK && R_INT_BLACK) {
 1264              		.loc 1 322 0 is_stmt 1
 1265 06c6 D7F89C38 		ldr	r3, [r7, #2204]
 1266 06ca 952B     		cmp	r3, #149
 1267 06cc 03DC     		bgt	.L53
 1268              		.loc 1 322 0 is_stmt 0 discriminator 1
 1269 06ce D7F88838 		ldr	r3, [r7, #2184]
 1270 06d2 952B     		cmp	r3, #149
 1271 06d4 7BDD     		ble	.L26
 1272              	.L53:
 323:main.c        ****             // do nothing for now
 324:main.c        **** 
 325:main.c        ****           } else if (M_LINE_BLACK && L_LINE_BLACK) { // if robot slightly too far right
 1273              		.loc 1 325 0 is_stmt 1
 1274 06d6 D7F89438 		ldr	r3, [r7, #2196]
 1275 06da 952B     		cmp	r3, #149
 1276 06dc 0CDC     		bgt	.L54
 1277              		.loc 1 325 0 is_stmt 0 discriminator 1
 1278 06de D7F89838 		ldr	r3, [r7, #2200]
 1279 06e2 952B     		cmp	r3, #149
 1280 06e4 08DC     		bgt	.L54
 326:main.c        ****             adjustLeft();
 1281              		.loc 1 326 0 is_stmt 1
 1282 06e6 FFF7FEFF 		bl	adjustLeft
 327:main.c        ****             turnEnable = 1;
 1283              		.loc 1 327 0
 1284 06ea 3C4B     		ldr	r3, .L69
 1285 06ec 0122     		movs	r2, #1
 1286 06ee 1A60     		str	r2, [r3]
 328:main.c        ****             lastAdjustDirection = 0;
 1287              		.loc 1 328 0
 1288 06f0 3B4B     		ldr	r3, .L69+4
 1289 06f2 0022     		movs	r2, #0
 1290 06f4 1A60     		str	r2, [r3]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 30


 1291 06f6 6AE0     		b	.L26
 1292              	.L54:
 329:main.c        **** 
 330:main.c        ****           } else if (M_LINE_BLACK && R_LINE_BLACK) { //  if robot slightly too far left
 1293              		.loc 1 330 0
 1294 06f8 D7F89438 		ldr	r3, [r7, #2196]
 1295 06fc 952B     		cmp	r3, #149
 1296 06fe 0CDC     		bgt	.L55
 1297              		.loc 1 330 0 is_stmt 0 discriminator 1
 1298 0700 D7F88C38 		ldr	r3, [r7, #2188]
 1299 0704 952B     		cmp	r3, #149
 1300 0706 08DC     		bgt	.L55
 331:main.c        ****             adjustRight();
 1301              		.loc 1 331 0 is_stmt 1
 1302 0708 FFF7FEFF 		bl	adjustRight
 332:main.c        ****             lastAdjustDirection = 2;
 1303              		.loc 1 332 0
 1304 070c 344B     		ldr	r3, .L69+4
 1305 070e 0222     		movs	r2, #2
 1306 0710 1A60     		str	r2, [r3]
 333:main.c        ****             turnEnable = 1;
 1307              		.loc 1 333 0
 1308 0712 324B     		ldr	r3, .L69
 1309 0714 0122     		movs	r2, #1
 1310 0716 1A60     		str	r2, [r3]
 1311 0718 59E0     		b	.L26
 1312              	.L55:
 334:main.c        **** 
 335:main.c        ****           } else if (M_LINE_BLACK) { // if robot in the center keep moving straight
 1313              		.loc 1 335 0
 1314 071a D7F89438 		ldr	r3, [r7, #2196]
 1315 071e 952B     		cmp	r3, #149
 1316 0720 15DC     		bgt	.L56
 336:main.c        ****             shouldUpdate = 1;
 1317              		.loc 1 336 0
 1318 0722 304B     		ldr	r3, .L69+8
 1319 0724 0122     		movs	r2, #1
 1320 0726 1A60     		str	r2, [r3]
 337:main.c        ****             lastAdjustDirection = 1;
 1321              		.loc 1 337 0
 1322 0728 2D4B     		ldr	r3, .L69+4
 1323 072a 0122     		movs	r2, #1
 1324 072c 1A60     		str	r2, [r3]
 338:main.c        ****             turnEnable = 1;
 1325              		.loc 1 338 0
 1326 072e 2B4B     		ldr	r3, .L69
 1327 0730 0122     		movs	r2, #1
 1328 0732 1A60     		str	r2, [r3]
 339:main.c        ****             driveForward(distanceTravelled, TARGET_SPEED);
 1329              		.loc 1 339 0
 1330 0734 2C4B     		ldr	r3, .L69+12
 1331 0736 1C68     		ldr	r4, [r3]
 1332 0738 2C4B     		ldr	r3, .L69+16
 1333 073a 1B68     		ldr	r3, [r3]	@ float
 1334 073c 1846     		mov	r0, r3
 1335 073e FFF7FEFF 		bl	__aeabi_f2iz
 1336 0742 0346     		mov	r3, r0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 31


 1337 0744 1946     		mov	r1, r3
 1338 0746 2046     		mov	r0, r4
 1339 0748 FFF7FEFF 		bl	driveForward
 1340 074c 3FE0     		b	.L26
 1341              	.L56:
 340:main.c        **** 
 341:main.c        ****           } else if (R_LINE_BLACK) { // if robot too far left
 1342              		.loc 1 341 0
 1343 074e D7F88C38 		ldr	r3, [r7, #2188]
 1344 0752 952B     		cmp	r3, #149
 1345 0754 08DC     		bgt	.L57
 342:main.c        ****             adjustRight();
 1346              		.loc 1 342 0
 1347 0756 FFF7FEFF 		bl	adjustRight
 343:main.c        ****             turnEnable = 1;
 1348              		.loc 1 343 0
 1349 075a 204B     		ldr	r3, .L69
 1350 075c 0122     		movs	r2, #1
 1351 075e 1A60     		str	r2, [r3]
 344:main.c        ****             lastAdjustDirection = 2;
 1352              		.loc 1 344 0
 1353 0760 1F4B     		ldr	r3, .L69+4
 1354 0762 0222     		movs	r2, #2
 1355 0764 1A60     		str	r2, [r3]
 1356 0766 32E0     		b	.L26
 1357              	.L57:
 345:main.c        **** 
 346:main.c        ****           } else if (L_LINE_BLACK) { // if robot too far right
 1358              		.loc 1 346 0
 1359 0768 D7F89838 		ldr	r3, [r7, #2200]
 1360 076c 952B     		cmp	r3, #149
 1361 076e 08DC     		bgt	.L58
 347:main.c        ****             adjustLeft();
 1362              		.loc 1 347 0
 1363 0770 FFF7FEFF 		bl	adjustLeft
 348:main.c        ****             turnEnable = 1;
 1364              		.loc 1 348 0
 1365 0774 194B     		ldr	r3, .L69
 1366 0776 0122     		movs	r2, #1
 1367 0778 1A60     		str	r2, [r3]
 349:main.c        ****             lastAdjustDirection = 0;
 1368              		.loc 1 349 0
 1369 077a 194B     		ldr	r3, .L69+4
 1370 077c 0022     		movs	r2, #0
 1371 077e 1A60     		str	r2, [r3]
 1372 0780 25E0     		b	.L26
 1373              	.L58:
 350:main.c        **** 
 351:main.c        ****           } else if (L_INT_BLACK) {
 1374              		.loc 1 351 0
 1375 0782 D7F89C38 		ldr	r3, [r7, #2204]
 1376 0786 952B     		cmp	r3, #149
 1377 0788 06DC     		bgt	.L59
 352:main.c        ****             //hardAdjustLeft();
 353:main.c        ****             turningLeft = 1;
 1378              		.loc 1 353 0
 1379 078a 194B     		ldr	r3, .L69+20
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 32


 1380 078c 0122     		movs	r2, #1
 1381 078e 1A60     		str	r2, [r3]
 354:main.c        ****             lastAdjustDirection = 0;
 1382              		.loc 1 354 0
 1383 0790 134B     		ldr	r3, .L69+4
 1384 0792 0022     		movs	r2, #0
 1385 0794 1A60     		str	r2, [r3]
 1386 0796 1AE0     		b	.L26
 1387              	.L59:
 355:main.c        **** 
 356:main.c        ****           } else if (R_INT_BLACK) {
 1388              		.loc 1 356 0
 1389 0798 D7F88838 		ldr	r3, [r7, #2184]
 1390 079c 952B     		cmp	r3, #149
 1391 079e 06DC     		bgt	.L60
 357:main.c        ****             //hardAdjustRight();
 358:main.c        ****             turningRight = 1;
 1392              		.loc 1 358 0
 1393 07a0 144B     		ldr	r3, .L69+24
 1394 07a2 0122     		movs	r2, #1
 1395 07a4 1A60     		str	r2, [r3]
 359:main.c        ****             lastAdjustDirection = 2;
 1396              		.loc 1 359 0
 1397 07a6 0E4B     		ldr	r3, .L69+4
 1398 07a8 0222     		movs	r2, #2
 1399 07aa 1A60     		str	r2, [r3]
 1400 07ac 0FE0     		b	.L26
 1401              	.L60:
 360:main.c        **** //          } else if (highCountLeftIntersection > 150 && highCountRightIntersection > 150 && highC
 361:main.c        **** //            driveForward(distanceTravelled, TARGET_SPEED);
 362:main.c        **** //            
 363:main.c        **** //        }
 364:main.c        ****         }
 365:main.c        ****             else { // completely lost find way
 366:main.c        ****             if (lastAdjustDirection == 0) {
 1402              		.loc 1 366 0
 1403 07ae 0C4B     		ldr	r3, .L69+4
 1404 07b0 1B68     		ldr	r3, [r3]
 1405 07b2 002B     		cmp	r3, #0
 1406 07b4 02D1     		bne	.L61
 367:main.c        ****               turnLeft();
 1407              		.loc 1 367 0
 1408 07b6 FFF7FEFF 		bl	turnLeft
 1409 07ba 08E0     		b	.L26
 1410              	.L61:
 368:main.c        ****             } else if (lastAdjustDirection == 1) { // last movement was forward (middle sensor sens
 1411              		.loc 1 368 0
 1412 07bc 084B     		ldr	r3, .L69+4
 1413 07be 1B68     		ldr	r3, [r3]
 1414 07c0 012B     		cmp	r3, #1
 1415 07c2 02D1     		bne	.L62
 369:main.c        ****               //hardAdjustLeft();
 370:main.c        ****               turnRight();
 1416              		.loc 1 370 0
 1417 07c4 FFF7FEFF 		bl	turnRight
 1418 07c8 01E0     		b	.L26
 1419              	.L62:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 33


 371:main.c        ****               //reverse(3000); // random number 3000
 372:main.c        ****             } else {
 373:main.c        ****               turnRight();
 1420              		.loc 1 373 0
 1421 07ca FFF7FEFF 		bl	turnRight
 1422              	.L26:
 1423              	.LBE8:
 374:main.c        ****             }
 375:main.c        ****             }
 376:main.c        ****         }
 377:main.c        **** 
 378:main.c        ****         flag = 0;
 1424              		.loc 1 378 0
 1425 07ce 0A4B     		ldr	r3, .L69+28
 1426 07d0 0022     		movs	r2, #0
 1427 07d2 1A60     		str	r2, [r3]
 379:main.c        ****         ADC_IRQ_Enable();
 1428              		.loc 1 379 0
 1429 07d4 FFF7FEFF 		bl	ADC_IRQ_Enable
 380:main.c        ****       }
 381:main.c        ****     }
 382:main.c        ****   }
 1430              		.loc 1 382 0
 1431 07d8 39E5     		b	.L63
 1432              	.L70:
 1433 07da 00BF     		.align	2
 1434              	.L69:
 1435 07dc 00000000 		.word	turnEnable
 1436 07e0 00000000 		.word	lastAdjustDirection
 1437 07e4 00000000 		.word	shouldUpdate
 1438 07e8 00000000 		.word	distanceTravelled
 1439 07ec 00000000 		.word	TARGET_SPEED
 1440 07f0 00000000 		.word	turningLeft
 1441 07f4 00000000 		.word	turningRight
 1442 07f8 00000000 		.word	flag
 1443              		.cfi_endproc
 1444              	.LFE66:
 1445              		.size	main, .-main
 1446              		.section	.text.usbPutString,"ax",%progbits
 1447              		.align	2
 1448              		.global	usbPutString
 1449              		.thumb
 1450              		.thumb_func
 1451              		.type	usbPutString, %function
 1452              	usbPutString:
 1453              	.LFB67:
 383:main.c        **** }
 384:main.c        **** 
 385:main.c        **** void usbPutString(char * s) {
 1454              		.loc 1 385 0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 8
 1457              		@ frame_needed = 1, uses_anonymous_args = 0
 1458 0000 80B5     		push	{r7, lr}
 1459              		.cfi_def_cfa_offset 8
 1460              		.cfi_offset 7, -8
 1461              		.cfi_offset 14, -4
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 34


 1462 0002 82B0     		sub	sp, sp, #8
 1463              		.cfi_def_cfa_offset 16
 1464 0004 00AF     		add	r7, sp, #0
 1465              		.cfi_def_cfa_register 7
 1466 0006 7860     		str	r0, [r7, #4]
 386:main.c        ****   // !! Assumes that *s is a string with allocated space >=64 chars     
 387:main.c        ****   //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 388:main.c        ****   //  length to 62 char (63rd char is a '!')
 389:main.c        **** 
 390:main.c        ****   #ifdef USE_USB
 391:main.c        ****   while (USBUART_CDCIsReady() == 0);
 1467              		.loc 1 391 0
 1468 0008 00BF     		nop
 1469              	.L72:
 1470              		.loc 1 391 0 is_stmt 0 discriminator 1
 1471 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1472 000e 0346     		mov	r3, r0
 1473 0010 002B     		cmp	r3, #0
 1474 0012 FAD0     		beq	.L72
 392:main.c        ****   s[63] = '\0';
 1475              		.loc 1 392 0 is_stmt 1
 1476 0014 7B68     		ldr	r3, [r7, #4]
 1477 0016 3F33     		adds	r3, r3, #63
 1478 0018 0022     		movs	r2, #0
 1479 001a 1A70     		strb	r2, [r3]
 393:main.c        ****   s[62] = '!';
 1480              		.loc 1 393 0
 1481 001c 7B68     		ldr	r3, [r7, #4]
 1482 001e 3E33     		adds	r3, r3, #62
 1483 0020 2122     		movs	r2, #33
 1484 0022 1A70     		strb	r2, [r3]
 394:main.c        ****   USBUART_PutData((uint8 * ) s, strlen(s));
 1485              		.loc 1 394 0
 1486 0024 7868     		ldr	r0, [r7, #4]
 1487 0026 FFF7FEFF 		bl	strlen
 1488 002a 0346     		mov	r3, r0
 1489 002c 9BB2     		uxth	r3, r3
 1490 002e 1946     		mov	r1, r3
 1491 0030 7868     		ldr	r0, [r7, #4]
 1492 0032 FFF7FEFF 		bl	USBUART_PutData
 395:main.c        ****   #endif
 396:main.c        **** }
 1493              		.loc 1 396 0
 1494 0036 00BF     		nop
 1495 0038 0837     		adds	r7, r7, #8
 1496              		.cfi_def_cfa_offset 8
 1497 003a BD46     		mov	sp, r7
 1498              		.cfi_def_cfa_register 13
 1499              		@ sp needed
 1500 003c 80BD     		pop	{r7, pc}
 1501              		.cfi_endproc
 1502              	.LFE67:
 1503              		.size	usbPutString, .-usbPutString
 1504 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1505              		.align	2
 1506              		.global	usbPutChar
 1507              		.thumb
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 35


 1508              		.thumb_func
 1509              		.type	usbPutChar, %function
 1510              	usbPutChar:
 1511              	.LFB68:
 397:main.c        **** //* ========================================
 398:main.c        **** void usbPutChar(char c) {
 1512              		.loc 1 398 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 8
 1515              		@ frame_needed = 1, uses_anonymous_args = 0
 1516 0000 80B5     		push	{r7, lr}
 1517              		.cfi_def_cfa_offset 8
 1518              		.cfi_offset 7, -8
 1519              		.cfi_offset 14, -4
 1520 0002 82B0     		sub	sp, sp, #8
 1521              		.cfi_def_cfa_offset 16
 1522 0004 00AF     		add	r7, sp, #0
 1523              		.cfi_def_cfa_register 7
 1524 0006 0346     		mov	r3, r0
 1525 0008 FB71     		strb	r3, [r7, #7]
 399:main.c        ****   #ifdef USE_USB
 400:main.c        ****   while (USBUART_CDCIsReady() == 0);
 1526              		.loc 1 400 0
 1527 000a 00BF     		nop
 1528              	.L74:
 1529              		.loc 1 400 0 is_stmt 0 discriminator 1
 1530 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1531 0010 0346     		mov	r3, r0
 1532 0012 002B     		cmp	r3, #0
 1533 0014 FAD0     		beq	.L74
 401:main.c        ****   USBUART_PutChar(c);
 1534              		.loc 1 401 0 is_stmt 1
 1535 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1536 0018 1846     		mov	r0, r3
 1537 001a FFF7FEFF 		bl	USBUART_PutChar
 402:main.c        ****   #endif
 403:main.c        **** }...
 1538              		.loc 1 403 0
 1539 001e 00BF     		nop
 1540 0020 0837     		adds	r7, r7, #8
 1541              		.cfi_def_cfa_offset 8
 1542 0022 BD46     		mov	sp, r7
 1543              		.cfi_def_cfa_register 13
 1544              		@ sp needed
 1545 0024 80BD     		pop	{r7, pc}
 1546              		.cfi_endproc
 1547              	.LFE68:
 1548              		.size	usbPutChar, .-usbPutChar
 1549 0026 00BF     		.text
 1550              	.Letext0:
 1551              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1552              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1553              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1554              		.file 5 "vars.h"
 1555              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1556              		.section	.debug_info,"",%progbits
 1557              	.Ldebug_info0:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 36


 1558 0000 FC070000 		.4byte	0x7fc
 1559 0004 0400     		.2byte	0x4
 1560 0006 00000000 		.4byte	.Ldebug_abbrev0
 1561 000a 04       		.byte	0x4
 1562 000b 01       		.uleb128 0x1
 1563 000c BF000000 		.4byte	.LASF106
 1564 0010 0C       		.byte	0xc
 1565 0011 D2040000 		.4byte	.LASF107
 1566 0015 28020000 		.4byte	.LASF108
 1567 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1568 001d 00000000 		.4byte	0
 1569 0021 00000000 		.4byte	.Ldebug_line0
 1570 0025 02       		.uleb128 0x2
 1571 0026 01       		.byte	0x1
 1572 0027 06       		.byte	0x6
 1573 0028 E8010000 		.4byte	.LASF0
 1574 002c 02       		.uleb128 0x2
 1575 002d 01       		.byte	0x1
 1576 002e 08       		.byte	0x8
 1577 002f 5E030000 		.4byte	.LASF1
 1578 0033 02       		.uleb128 0x2
 1579 0034 02       		.byte	0x2
 1580 0035 05       		.byte	0x5
 1581 0036 6D000000 		.4byte	.LASF2
 1582 003a 02       		.uleb128 0x2
 1583 003b 02       		.byte	0x2
 1584 003c 07       		.byte	0x7
 1585 003d 75040000 		.4byte	.LASF3
 1586 0041 03       		.uleb128 0x3
 1587 0042 33050000 		.4byte	.LASF12
 1588 0046 02       		.byte	0x2
 1589 0047 3F       		.byte	0x3f
 1590 0048 4C000000 		.4byte	0x4c
 1591 004c 02       		.uleb128 0x2
 1592 004d 04       		.byte	0x4
 1593 004e 05       		.byte	0x5
 1594 004f E2020000 		.4byte	.LASF4
 1595 0053 02       		.uleb128 0x2
 1596 0054 04       		.byte	0x4
 1597 0055 07       		.byte	0x7
 1598 0056 D9040000 		.4byte	.LASF5
 1599 005a 02       		.uleb128 0x2
 1600 005b 08       		.byte	0x8
 1601 005c 05       		.byte	0x5
 1602 005d 16060000 		.4byte	.LASF6
 1603 0061 02       		.uleb128 0x2
 1604 0062 08       		.byte	0x8
 1605 0063 07       		.byte	0x7
 1606 0064 A2030000 		.4byte	.LASF7
 1607 0068 04       		.uleb128 0x4
 1608 0069 04       		.byte	0x4
 1609 006a 05       		.byte	0x5
 1610 006b 696E7400 		.ascii	"int\000"
 1611 006f 02       		.uleb128 0x2
 1612 0070 04       		.byte	0x4
 1613 0071 07       		.byte	0x7
 1614 0072 B9030000 		.4byte	.LASF8
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 37


 1615 0076 02       		.uleb128 0x2
 1616 0077 08       		.byte	0x8
 1617 0078 04       		.byte	0x4
 1618 0079 4C030000 		.4byte	.LASF9
 1619 007d 02       		.uleb128 0x2
 1620 007e 04       		.byte	0x4
 1621 007f 07       		.byte	0x7
 1622 0080 A7000000 		.4byte	.LASF10
 1623 0084 05       		.uleb128 0x5
 1624 0085 04       		.byte	0x4
 1625 0086 8A000000 		.4byte	0x8a
 1626 008a 02       		.uleb128 0x2
 1627 008b 01       		.byte	0x1
 1628 008c 08       		.byte	0x8
 1629 008d 3E040000 		.4byte	.LASF11
 1630 0091 06       		.uleb128 0x6
 1631 0092 8A000000 		.4byte	0x8a
 1632 0096 A1000000 		.4byte	0xa1
 1633 009a 07       		.uleb128 0x7
 1634 009b 7D000000 		.4byte	0x7d
 1635 009f 17       		.byte	0x17
 1636 00a0 00       		.byte	0
 1637 00a1 03       		.uleb128 0x3
 1638 00a2 5B040000 		.4byte	.LASF13
 1639 00a6 03       		.byte	0x3
 1640 00a7 2C       		.byte	0x2c
 1641 00a8 41000000 		.4byte	0x41
 1642 00ac 08       		.uleb128 0x8
 1643 00ad 95040000 		.4byte	.LASF14
 1644 00b1 04       		.byte	0x4
 1645 00b2 E701     		.2byte	0x1e7
 1646 00b4 2C000000 		.4byte	0x2c
 1647 00b8 08       		.uleb128 0x8
 1648 00b9 77010000 		.4byte	.LASF15
 1649 00bd 04       		.byte	0x4
 1650 00be E801     		.2byte	0x1e8
 1651 00c0 3A000000 		.4byte	0x3a
 1652 00c4 08       		.uleb128 0x8
 1653 00c5 9D020000 		.4byte	.LASF16
 1654 00c9 04       		.byte	0x4
 1655 00ca EA01     		.2byte	0x1ea
 1656 00cc 25000000 		.4byte	0x25
 1657 00d0 08       		.uleb128 0x8
 1658 00d1 97010000 		.4byte	.LASF17
 1659 00d5 04       		.byte	0x4
 1660 00d6 EB01     		.2byte	0x1eb
 1661 00d8 33000000 		.4byte	0x33
 1662 00dc 02       		.uleb128 0x2
 1663 00dd 04       		.byte	0x4
 1664 00de 04       		.byte	0x4
 1665 00df F4010000 		.4byte	.LASF18
 1666 00e3 02       		.uleb128 0x2
 1667 00e4 08       		.byte	0x8
 1668 00e5 04       		.byte	0x4
 1669 00e6 EB040000 		.4byte	.LASF19
 1670 00ea 09       		.uleb128 0x9
 1671 00eb 2B040000 		.4byte	.LASF109
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 38


 1672 00ef 20       		.byte	0x20
 1673 00f0 05       		.byte	0x5
 1674 00f1 29       		.byte	0x29
 1675 00f2 C3010000 		.4byte	0x1c3
 1676 00f6 0A       		.uleb128 0xa
 1677 00f7 11060000 		.4byte	.LASF20
 1678 00fb 05       		.byte	0x5
 1679 00fc 2A       		.byte	0x2a
 1680 00fd C4000000 		.4byte	0xc4
 1681 0101 00       		.byte	0
 1682 0102 0A       		.uleb128 0xa
 1683 0103 91010000 		.4byte	.LASF21
 1684 0107 05       		.byte	0x5
 1685 0108 2B       		.byte	0x2b
 1686 0109 AC000000 		.4byte	0xac
 1687 010d 01       		.byte	0x1
 1688 010e 0A       		.uleb128 0xa
 1689 010f 50040000 		.4byte	.LASF22
 1690 0113 05       		.byte	0x5
 1691 0114 2C       		.byte	0x2c
 1692 0115 D0000000 		.4byte	0xd0
 1693 0119 02       		.byte	0x2
 1694 011a 0A       		.uleb128 0xa
 1695 011b 9A050000 		.4byte	.LASF23
 1696 011f 05       		.byte	0x5
 1697 0120 2D       		.byte	0x2d
 1698 0121 D0000000 		.4byte	0xd0
 1699 0125 04       		.byte	0x4
 1700 0126 0A       		.uleb128 0xa
 1701 0127 45050000 		.4byte	.LASF24
 1702 012b 05       		.byte	0x5
 1703 012c 2E       		.byte	0x2e
 1704 012d D0000000 		.4byte	0xd0
 1705 0131 06       		.byte	0x6
 1706 0132 0A       		.uleb128 0xa
 1707 0133 D0020000 		.4byte	.LASF25
 1708 0137 05       		.byte	0x5
 1709 0138 2F       		.byte	0x2f
 1710 0139 D0000000 		.4byte	0xd0
 1711 013d 08       		.byte	0x8
 1712 013e 0A       		.uleb128 0xa
 1713 013f 3D050000 		.4byte	.LASF26
 1714 0143 05       		.byte	0x5
 1715 0144 30       		.byte	0x30
 1716 0145 D0000000 		.4byte	0xd0
 1717 0149 0A       		.byte	0xa
 1718 014a 0A       		.uleb128 0xa
 1719 014b 6C030000 		.4byte	.LASF27
 1720 014f 05       		.byte	0x5
 1721 0150 31       		.byte	0x31
 1722 0151 D0000000 		.4byte	0xd0
 1723 0155 0C       		.byte	0xc
 1724 0156 0A       		.uleb128 0xa
 1725 0157 C3020000 		.4byte	.LASF28
 1726 015b 05       		.byte	0x5
 1727 015c 32       		.byte	0x32
 1728 015d D0000000 		.4byte	0xd0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 39


 1729 0161 0E       		.byte	0xe
 1730 0162 0A       		.uleb128 0xa
 1731 0163 F4030000 		.4byte	.LASF29
 1732 0167 05       		.byte	0x5
 1733 0168 33       		.byte	0x33
 1734 0169 D0000000 		.4byte	0xd0
 1735 016d 10       		.byte	0x10
 1736 016e 0A       		.uleb128 0xa
 1737 016f 44030000 		.4byte	.LASF30
 1738 0173 05       		.byte	0x5
 1739 0174 34       		.byte	0x34
 1740 0175 D0000000 		.4byte	0xd0
 1741 0179 12       		.byte	0x12
 1742 017a 0A       		.uleb128 0xa
 1743 017b 0A020000 		.4byte	.LASF31
 1744 017f 05       		.byte	0x5
 1745 0180 35       		.byte	0x35
 1746 0181 D0000000 		.4byte	0xd0
 1747 0185 14       		.byte	0x14
 1748 0186 0A       		.uleb128 0xa
 1749 0187 B0010000 		.4byte	.LASF32
 1750 018b 05       		.byte	0x5
 1751 018c 36       		.byte	0x36
 1752 018d D0000000 		.4byte	0xd0
 1753 0191 16       		.byte	0x16
 1754 0192 0A       		.uleb128 0xa
 1755 0193 65000000 		.4byte	.LASF33
 1756 0197 05       		.byte	0x5
 1757 0198 37       		.byte	0x37
 1758 0199 D0000000 		.4byte	0xd0
 1759 019d 18       		.byte	0x18
 1760 019e 0A       		.uleb128 0xa
 1761 019f 02020000 		.4byte	.LASF34
 1762 01a3 05       		.byte	0x5
 1763 01a4 38       		.byte	0x38
 1764 01a5 D0000000 		.4byte	0xd0
 1765 01a9 1A       		.byte	0x1a
 1766 01aa 0A       		.uleb128 0xa
 1767 01ab E1030000 		.4byte	.LASF35
 1768 01af 05       		.byte	0x5
 1769 01b0 39       		.byte	0x39
 1770 01b1 D0000000 		.4byte	0xd0
 1771 01b5 1C       		.byte	0x1c
 1772 01b6 0A       		.uleb128 0xa
 1773 01b7 68040000 		.4byte	.LASF36
 1774 01bb 05       		.byte	0x5
 1775 01bc 3A       		.byte	0x3a
 1776 01bd D0000000 		.4byte	0xd0
 1777 01c1 1E       		.byte	0x1e
 1778 01c2 00       		.byte	0
 1779 01c3 0B       		.uleb128 0xb
 1780 01c4 656F6300 		.ascii	"eoc\000"
 1781 01c8 01       		.byte	0x1
 1782 01c9 54       		.byte	0x54
 1783 01ca 00000000 		.4byte	.LFB64
 1784 01ce 18000000 		.4byte	.LFE64-.LFB64
 1785 01d2 01       		.uleb128 0x1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 40


 1786 01d3 9C       		.byte	0x9c
 1787 01d4 0C       		.uleb128 0xc
 1788 01d5 23030000 		.4byte	.LASF37
 1789 01d9 01       		.byte	0x1
 1790 01da 58       		.byte	0x58
 1791 01db 00000000 		.4byte	.LFB65
 1792 01df 18000000 		.4byte	.LFE65-.LFB65
 1793 01e3 01       		.uleb128 0x1
 1794 01e4 9C       		.byte	0x9c
 1795 01e5 0D       		.uleb128 0xd
 1796 01e6 B0000000 		.4byte	.LASF53
 1797 01ea 01       		.byte	0x1
 1798 01eb 5C       		.byte	0x5c
 1799 01ec 68000000 		.4byte	0x68
 1800 01f0 00000000 		.4byte	.LFB66
 1801 01f4 FC070000 		.4byte	.LFE66-.LFB66
 1802 01f8 01       		.uleb128 0x1
 1803 01f9 9C       		.byte	0x9c
 1804 01fa 75030000 		.4byte	0x375
 1805 01fe 0E       		.uleb128 0xe
 1806 01ff 16000000 		.4byte	.LASF38
 1807 0203 01       		.byte	0x1
 1808 0204 79       		.byte	0x79
 1809 0205 75030000 		.4byte	0x375
 1810 0209 03       		.uleb128 0x3
 1811 020a 91       		.byte	0x91
 1812 020b D077     		.sleb128 -1072
 1813 020d 0E       		.uleb128 0xe
 1814 020e BA050000 		.4byte	.LASF39
 1815 0212 01       		.byte	0x1
 1816 0213 7B       		.byte	0x7b
 1817 0214 8C030000 		.4byte	0x38c
 1818 0218 03       		.uleb128 0x3
 1819 0219 91       		.byte	0x91
 1820 021a DC73     		.sleb128 -1572
 1821 021c 0E       		.uleb128 0xe
 1822 021d 35040000 		.4byte	.LASF40
 1823 0221 01       		.byte	0x1
 1824 0222 7C       		.byte	0x7c
 1825 0223 8C030000 		.4byte	0x38c
 1826 0227 03       		.uleb128 0x3
 1827 0228 91       		.byte	0x91
 1828 0229 E86F     		.sleb128 -2072
 1829 022b 0E       		.uleb128 0xe
 1830 022c FA010000 		.4byte	.LASF41
 1831 0230 01       		.byte	0x1
 1832 0231 94       		.byte	0x94
 1833 0232 68000000 		.4byte	0x68
 1834 0236 02       		.uleb128 0x2
 1835 0237 91       		.byte	0x91
 1836 0238 64       		.sleb128 -28
 1837 0239 0E       		.uleb128 0xe
 1838 023a D5030000 		.4byte	.LASF42
 1839 023e 01       		.byte	0x1
 1840 023f 95       		.byte	0x95
 1841 0240 68000000 		.4byte	0x68
 1842 0244 02       		.uleb128 0x2
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 41


 1843 0245 91       		.byte	0x91
 1844 0246 60       		.sleb128 -32
 1845 0247 0E       		.uleb128 0xe
 1846 0248 DC050000 		.4byte	.LASF43
 1847 024c 01       		.byte	0x1
 1848 024d 96       		.byte	0x96
 1849 024e 9D030000 		.4byte	0x39d
 1850 0252 03       		.uleb128 0x3
 1851 0253 91       		.byte	0x91
 1852 0254 DC6E     		.sleb128 -2212
 1853 0256 0F       		.uleb128 0xf
 1854 0257 6400     		.ascii	"d\000"
 1855 0259 01       		.byte	0x1
 1856 025a 97       		.byte	0x97
 1857 025b 68000000 		.4byte	0x68
 1858 025f 02       		.uleb128 0x2
 1859 0260 91       		.byte	0x91
 1860 0261 5C       		.sleb128 -36
 1861 0262 10       		.uleb128 0x10
 1862 0263 4A000000 		.4byte	.LBB2
 1863 0267 64000000 		.4byte	.LBE2-.LBB2
 1864 026b 7C020000 		.4byte	0x27c
 1865 026f 0F       		.uleb128 0xf
 1866 0270 6900     		.ascii	"i\000"
 1867 0272 01       		.byte	0x1
 1868 0273 7F       		.byte	0x7f
 1869 0274 68000000 		.4byte	0x68
 1870 0278 02       		.uleb128 0x2
 1871 0279 91       		.byte	0x91
 1872 027a 6C       		.sleb128 -20
 1873 027b 00       		.byte	0
 1874 027c 10       		.uleb128 0x10
 1875 027d D4000000 		.4byte	.LBB3
 1876 0281 52000000 		.4byte	.LBE3-.LBB3
 1877 0285 AF020000 		.4byte	0x2af
 1878 0289 0F       		.uleb128 0xf
 1879 028a 6900     		.ascii	"i\000"
 1880 028c 01       		.byte	0x1
 1881 028d 8C       		.byte	0x8c
 1882 028e 68000000 		.4byte	0x68
 1883 0292 02       		.uleb128 0x2
 1884 0293 91       		.byte	0x91
 1885 0294 68       		.sleb128 -24
 1886 0295 11       		.uleb128 0x11
 1887 0296 DC000000 		.4byte	.LBB4
 1888 029a 36000000 		.4byte	.LBE4-.LBB4
 1889 029e 0E       		.uleb128 0xe
 1890 029f D8020000 		.4byte	.LASF44
 1891 02a3 01       		.byte	0x1
 1892 02a4 8D       		.byte	0x8d
 1893 02a5 AD030000 		.4byte	0x3ad
 1894 02a9 03       		.uleb128 0x3
 1895 02aa 91       		.byte	0x91
 1896 02ab D06E     		.sleb128 -2224
 1897 02ad 00       		.byte	0
 1898 02ae 00       		.byte	0
 1899 02af 10       		.uleb128 0x10
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 42


 1900 02b0 50010000 		.4byte	.LBB5
 1901 02b4 FE000000 		.4byte	.LBE5-.LBB5
 1902 02b8 E2020000 		.4byte	0x2e2
 1903 02bc 0F       		.uleb128 0xf
 1904 02bd 6900     		.ascii	"i\000"
 1905 02bf 01       		.byte	0x1
 1906 02c0 99       		.byte	0x99
 1907 02c1 68000000 		.4byte	0x68
 1908 02c5 02       		.uleb128 0x2
 1909 02c6 91       		.byte	0x91
 1910 02c7 58       		.sleb128 -40
 1911 02c8 11       		.uleb128 0x11
 1912 02c9 78010000 		.4byte	.LBB6
 1913 02cd C0000000 		.4byte	.LBE6-.LBB6
 1914 02d1 0E       		.uleb128 0xe
 1915 02d2 B2050000 		.4byte	.LASF45
 1916 02d6 01       		.byte	0x1
 1917 02d7 9D       		.byte	0x9d
 1918 02d8 91000000 		.4byte	0x91
 1919 02dc 03       		.uleb128 0x3
 1920 02dd 91       		.byte	0x91
 1921 02de B86E     		.sleb128 -2248
 1922 02e0 00       		.byte	0
 1923 02e1 00       		.byte	0
 1924 02e2 10       		.uleb128 0x10
 1925 02e3 86020000 		.4byte	.LBB7
 1926 02e7 98000000 		.4byte	.LBE7-.LBB7
 1927 02eb FF020000 		.4byte	0x2ff
 1928 02ef 0E       		.uleb128 0xe
 1929 02f0 88030000 		.4byte	.LASF46
 1930 02f4 01       		.byte	0x1
 1931 02f5 BF       		.byte	0xbf
 1932 02f6 68000000 		.4byte	0x68
 1933 02fa 03       		.uleb128 0x3
 1934 02fb 91       		.byte	0x91
 1935 02fc B87F     		.sleb128 -72
 1936 02fe 00       		.byte	0
 1937 02ff 11       		.uleb128 0x11
 1938 0300 2E040000 		.4byte	.LBB8
 1939 0304 A0030000 		.4byte	.LBE8-.LBB8
 1940 0308 0E       		.uleb128 0xe
 1941 0309 F7050000 		.4byte	.LASF47
 1942 030d 01       		.byte	0x1
 1943 030e E1       		.byte	0xe1
 1944 030f 68000000 		.4byte	0x68
 1945 0313 02       		.uleb128 0x2
 1946 0314 91       		.byte	0x91
 1947 0315 54       		.sleb128 -44
 1948 0316 0E       		.uleb128 0xe
 1949 0317 C0040000 		.4byte	.LASF48
 1950 031b 01       		.byte	0x1
 1951 031c E2       		.byte	0xe2
 1952 031d 68000000 		.4byte	0x68
 1953 0321 02       		.uleb128 0x2
 1954 0322 91       		.byte	0x91
 1955 0323 50       		.sleb128 -48
 1956 0324 0E       		.uleb128 0xe
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 43


 1957 0325 06040000 		.4byte	.LASF49
 1958 0329 01       		.byte	0x1
 1959 032a E3       		.byte	0xe3
 1960 032b 68000000 		.4byte	0x68
 1961 032f 02       		.uleb128 0x2
 1962 0330 91       		.byte	0x91
 1963 0331 4C       		.sleb128 -52
 1964 0332 0E       		.uleb128 0xe
 1965 0333 C6050000 		.4byte	.LASF50
 1966 0337 01       		.byte	0x1
 1967 0338 E4       		.byte	0xe4
 1968 0339 68000000 		.4byte	0x68
 1969 033d 02       		.uleb128 0x2
 1970 033e 91       		.byte	0x91
 1971 033f 48       		.sleb128 -56
 1972 0340 0E       		.uleb128 0xe
 1973 0341 75030000 		.4byte	.LASF51
 1974 0345 01       		.byte	0x1
 1975 0346 E5       		.byte	0xe5
 1976 0347 68000000 		.4byte	0x68
 1977 034b 02       		.uleb128 0x2
 1978 034c 91       		.byte	0x91
 1979 034d 44       		.sleb128 -60
 1980 034e 0E       		.uleb128 0xe
 1981 034f 29030000 		.4byte	.LASF52
 1982 0353 01       		.byte	0x1
 1983 0354 E6       		.byte	0xe6
 1984 0355 68000000 		.4byte	0x68
 1985 0359 02       		.uleb128 0x2
 1986 035a 91       		.byte	0x91
 1987 035b 40       		.sleb128 -64
 1988 035c 11       		.uleb128 0x11
 1989 035d 5E040000 		.4byte	.LBB9
 1990 0361 C4000000 		.4byte	.LBE9-.LBB9
 1991 0365 0F       		.uleb128 0xf
 1992 0366 6900     		.ascii	"i\000"
 1993 0368 01       		.byte	0x1
 1994 0369 E7       		.byte	0xe7
 1995 036a 68000000 		.4byte	0x68
 1996 036e 03       		.uleb128 0x3
 1997 036f 91       		.byte	0x91
 1998 0370 BC7F     		.sleb128 -68
 1999 0372 00       		.byte	0
 2000 0373 00       		.byte	0
 2001 0374 00       		.byte	0
 2002 0375 06       		.uleb128 0x6
 2003 0376 2C000000 		.4byte	0x2c
 2004 037a 8C030000 		.4byte	0x38c
 2005 037e 12       		.uleb128 0x12
 2006 037f 7D000000 		.4byte	0x7d
 2007 0383 F301     		.2byte	0x1f3
 2008 0385 07       		.uleb128 0x7
 2009 0386 7D000000 		.4byte	0x7d
 2010 038a 01       		.byte	0x1
 2011 038b 00       		.byte	0
 2012 038c 06       		.uleb128 0x6
 2013 038d 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 44


 2014 0391 9D030000 		.4byte	0x39d
 2015 0395 12       		.uleb128 0x12
 2016 0396 7D000000 		.4byte	0x7d
 2017 039a F301     		.2byte	0x1f3
 2018 039c 00       		.byte	0
 2019 039d 06       		.uleb128 0x6
 2020 039e 68000000 		.4byte	0x68
 2021 03a2 AD030000 		.4byte	0x3ad
 2022 03a6 07       		.uleb128 0x7
 2023 03a7 7D000000 		.4byte	0x7d
 2024 03ab 22       		.byte	0x22
 2025 03ac 00       		.byte	0
 2026 03ad 06       		.uleb128 0x6
 2027 03ae 8A000000 		.4byte	0x8a
 2028 03b2 BD030000 		.4byte	0x3bd
 2029 03b6 07       		.uleb128 0x7
 2030 03b7 7D000000 		.4byte	0x7d
 2031 03bb 09       		.byte	0x9
 2032 03bc 00       		.byte	0
 2033 03bd 13       		.uleb128 0x13
 2034 03be 90020000 		.4byte	.LASF54
 2035 03c2 01       		.byte	0x1
 2036 03c3 8101     		.2byte	0x181
 2037 03c5 00000000 		.4byte	.LFB67
 2038 03c9 3E000000 		.4byte	.LFE67-.LFB67
 2039 03cd 01       		.uleb128 0x1
 2040 03ce 9C       		.byte	0x9c
 2041 03cf E1030000 		.4byte	0x3e1
 2042 03d3 14       		.uleb128 0x14
 2043 03d4 7300     		.ascii	"s\000"
 2044 03d6 01       		.byte	0x1
 2045 03d7 8101     		.2byte	0x181
 2046 03d9 84000000 		.4byte	0x84
 2047 03dd 02       		.uleb128 0x2
 2048 03de 91       		.byte	0x91
 2049 03df 74       		.sleb128 -12
 2050 03e0 00       		.byte	0
 2051 03e1 13       		.uleb128 0x13
 2052 03e2 00000000 		.4byte	.LASF55
 2053 03e6 01       		.byte	0x1
 2054 03e7 8E01     		.2byte	0x18e
 2055 03e9 00000000 		.4byte	.LFB68
 2056 03ed 26000000 		.4byte	.LFE68-.LFB68
 2057 03f1 01       		.uleb128 0x1
 2058 03f2 9C       		.byte	0x9c
 2059 03f3 05040000 		.4byte	0x405
 2060 03f7 14       		.uleb128 0x14
 2061 03f8 6300     		.ascii	"c\000"
 2062 03fa 01       		.byte	0x1
 2063 03fb 8E01     		.2byte	0x18e
 2064 03fd 8A000000 		.4byte	0x8a
 2065 0401 02       		.uleb128 0x2
 2066 0402 91       		.byte	0x91
 2067 0403 77       		.sleb128 -9
 2068 0404 00       		.byte	0
 2069 0405 15       		.uleb128 0x15
 2070 0406 43040000 		.4byte	.LASF56
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 45


 2071 040a 06       		.byte	0x6
 2072 040b 1207     		.2byte	0x712
 2073 040d 11040000 		.4byte	0x411
 2074 0411 16       		.uleb128 0x16
 2075 0412 A1000000 		.4byte	0xa1
 2076 0416 17       		.uleb128 0x17
 2077 0417 747300   		.ascii	"ts\000"
 2078 041a 05       		.byte	0x5
 2079 041b 10       		.byte	0x10
 2080 041c AC000000 		.4byte	0xac
 2081 0420 05       		.uleb128 0x5
 2082 0421 03       		.byte	0x3
 2083 0422 00000000 		.4byte	ts
 2084 0426 18       		.uleb128 0x18
 2085 0427 63050000 		.4byte	.LASF57
 2086 042b 05       		.byte	0x5
 2087 042c 11       		.byte	0x11
 2088 042d B8000000 		.4byte	0xb8
 2089 0431 05       		.uleb128 0x5
 2090 0432 03       		.byte	0x3
 2091 0433 00000000 		.4byte	ts_enc
 2092 0437 18       		.uleb128 0x18
 2093 0438 6A050000 		.4byte	.LASF58
 2094 043c 05       		.byte	0x5
 2095 043d 12       		.byte	0x12
 2096 043e B8000000 		.4byte	0xb8
 2097 0442 05       		.uleb128 0x5
 2098 0443 03       		.byte	0x3
 2099 0444 00000000 		.4byte	ts_update
 2100 0448 18       		.uleb128 0x18
 2101 0449 18050000 		.4byte	.LASF59
 2102 044d 05       		.byte	0x5
 2103 044e 13       		.byte	0x13
 2104 044f B8000000 		.4byte	0xb8
 2105 0453 05       		.uleb128 0x5
 2106 0454 03       		.byte	0x3
 2107 0455 00000000 		.4byte	ts_speed
 2108 0459 18       		.uleb128 0x18
 2109 045a 4D010000 		.4byte	.LASF60
 2110 045e 05       		.byte	0x5
 2111 045f 14       		.byte	0x14
 2112 0460 B8000000 		.4byte	0xb8
 2113 0464 05       		.uleb128 0x5
 2114 0465 03       		.byte	0x3
 2115 0466 00000000 		.4byte	ts_display
 2116 046a 18       		.uleb128 0x18
 2117 046b 27050000 		.4byte	.LASF61
 2118 046f 05       		.byte	0x5
 2119 0470 16       		.byte	0x16
 2120 0471 AC000000 		.4byte	0xac
 2121 0475 05       		.uleb128 0x5
 2122 0476 03       		.byte	0x3
 2123 0477 00000000 		.4byte	flag_ts_enc
 2124 047b 18       		.uleb128 0x18
 2125 047c A2020000 		.4byte	.LASF62
 2126 0480 05       		.byte	0x5
 2127 0481 17       		.byte	0x17
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 46


 2128 0482 AC000000 		.4byte	0xac
 2129 0486 05       		.uleb128 0x5
 2130 0487 03       		.byte	0x3
 2131 0488 00000000 		.4byte	flag_ts_update
 2132 048c 18       		.uleb128 0x18
 2133 048d 57000000 		.4byte	.LASF63
 2134 0491 05       		.byte	0x5
 2135 0492 18       		.byte	0x18
 2136 0493 AC000000 		.4byte	0xac
 2137 0497 05       		.uleb128 0x5
 2138 0498 03       		.byte	0x3
 2139 0499 00000000 		.4byte	flag_ts_speed
 2140 049d 18       		.uleb128 0x18
 2141 049e 0B030000 		.4byte	.LASF64
 2142 04a2 05       		.byte	0x5
 2143 04a3 19       		.byte	0x19
 2144 04a4 AC000000 		.4byte	0xac
 2145 04a8 05       		.uleb128 0x5
 2146 04a9 03       		.byte	0x3
 2147 04aa 00000000 		.4byte	flag_ts_display
 2148 04ae 18       		.uleb128 0x18
 2149 04af 1B030000 		.4byte	.LASF65
 2150 04b3 05       		.byte	0x5
 2151 04b4 1C       		.byte	0x1c
 2152 04b5 AC000000 		.4byte	0xac
 2153 04b9 05       		.uleb128 0x5
 2154 04ba 03       		.byte	0x3
 2155 04bb 00000000 		.4byte	flag_rx
 2156 04bf 18       		.uleb128 0x18
 2157 04c0 32000000 		.4byte	.LASF66
 2158 04c4 05       		.byte	0x5
 2159 04c5 1D       		.byte	0x1d
 2160 04c6 AC000000 		.4byte	0xac
 2161 04ca 05       		.uleb128 0x5
 2162 04cb 03       		.byte	0x3
 2163 04cc 00000000 		.4byte	flag_packet
 2164 04d0 18       		.uleb128 0x18
 2165 04d1 C6030000 		.4byte	.LASF67
 2166 04d5 05       		.byte	0x5
 2167 04d6 1E       		.byte	0x1e
 2168 04d7 AC000000 		.4byte	0xac
 2169 04db 05       		.uleb128 0x5
 2170 04dc 03       		.byte	0x3
 2171 04dd 00000000 		.4byte	flag_KB_string
 2172 04e1 18       		.uleb128 0x18
 2173 04e2 F2040000 		.4byte	.LASF68
 2174 04e6 05       		.byte	0x5
 2175 04e7 20       		.byte	0x20
 2176 04e8 AC000000 		.4byte	0xac
 2177 04ec 05       		.uleb128 0x5
 2178 04ed 03       		.byte	0x3
 2179 04ee 00000000 		.4byte	dataready_flag
 2180 04f2 18       		.uleb128 0x18
 2181 04f3 7E050000 		.4byte	.LASF69
 2182 04f7 05       		.byte	0x5
 2183 04f8 22       		.byte	0x22
 2184 04f9 AC000000 		.4byte	0xac
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 47


 2185 04fd 05       		.uleb128 0x5
 2186 04fe 03       		.byte	0x3
 2187 04ff 00000000 		.4byte	flag_rf_transmission_active
 2188 0503 06       		.uleb128 0x6
 2189 0504 8A000000 		.4byte	0x8a
 2190 0508 13050000 		.4byte	0x513
 2191 050c 07       		.uleb128 0x7
 2192 050d 7D000000 		.4byte	0x7d
 2193 0511 3F       		.byte	0x3f
 2194 0512 00       		.byte	0
 2195 0513 18       		.uleb128 0x18
 2196 0514 B2040000 		.4byte	.LASF70
 2197 0518 05       		.byte	0x5
 2198 0519 25       		.byte	0x25
 2199 051a 03050000 		.4byte	0x503
 2200 051e 05       		.uleb128 0x5
 2201 051f 03       		.byte	0x3
 2202 0520 00000000 		.4byte	displaystring
 2203 0524 18       		.uleb128 0x18
 2204 0525 D5010000 		.4byte	.LASF71
 2205 0529 05       		.byte	0x5
 2206 052a 26       		.byte	0x26
 2207 052b 03050000 		.4byte	0x503
 2208 052f 05       		.uleb128 0x5
 2209 0530 03       		.byte	0x3
 2210 0531 00000000 		.4byte	line
 2211 0535 18       		.uleb128 0x18
 2212 0536 58030000 		.4byte	.LASF72
 2213 053a 05       		.byte	0x5
 2214 053b 26       		.byte	0x26
 2215 053c 03050000 		.4byte	0x503
 2216 0540 05       		.uleb128 0x5
 2217 0541 03       		.byte	0x3
 2218 0542 00000000 		.4byte	entry
 2219 0546 06       		.uleb128 0x6
 2220 0547 AC000000 		.4byte	0xac
 2221 054b 56050000 		.4byte	0x556
 2222 054f 07       		.uleb128 0x7
 2223 0550 7D000000 		.4byte	0x7d
 2224 0554 3F       		.byte	0x3f
 2225 0555 00       		.byte	0
 2226 0556 18       		.uleb128 0x18
 2227 0557 B5000000 		.4byte	.LASF73
 2228 055b 05       		.byte	0x5
 2229 055c 27       		.byte	0x27
 2230 055d 46050000 		.4byte	0x546
 2231 0561 05       		.uleb128 0x5
 2232 0562 03       		.byte	0x3
 2233 0563 00000000 		.4byte	usbBuffer
 2234 0567 18       		.uleb128 0x18
 2235 0568 9A000000 		.4byte	.LASF74
 2236 056c 05       		.byte	0x5
 2237 056d 3C       		.byte	0x3c
 2238 056e EA000000 		.4byte	0xea
 2239 0572 05       		.uleb128 0x5
 2240 0573 03       		.byte	0x3
 2241 0574 00000000 		.4byte	system_state
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 48


 2242 0578 18       		.uleb128 0x18
 2243 0579 A5050000 		.4byte	.LASF75
 2244 057d 01       		.byte	0x1
 2245 057e 28       		.byte	0x28
 2246 057f DC000000 		.4byte	0xdc
 2247 0583 05       		.uleb128 0x5
 2248 0584 03       		.byte	0x3
 2249 0585 00000000 		.4byte	TARGET_SPEED
 2250 0589 18       		.uleb128 0x18
 2251 058a FC030000 		.4byte	.LASF76
 2252 058e 01       		.byte	0x1
 2253 058f 29       		.byte	0x29
 2254 0590 68000000 		.4byte	0x68
 2255 0594 05       		.uleb128 0x5
 2256 0595 03       		.byte	0x3
 2257 0596 00000000 		.4byte	restoring
 2258 059a 18       		.uleb128 0x18
 2259 059b 66010000 		.4byte	.LASF77
 2260 059f 01       		.byte	0x1
 2261 05a0 2A       		.byte	0x2a
 2262 05a1 68000000 		.4byte	0x68
 2263 05a5 05       		.uleb128 0x5
 2264 05a6 03       		.byte	0x3
 2265 05a7 00000000 		.4byte	turningDirection
 2266 05ab 18       		.uleb128 0x18
 2267 05ac 0B050000 		.4byte	.LASF78
 2268 05b0 01       		.byte	0x1
 2269 05b1 2B       		.byte	0x2b
 2270 05b2 68000000 		.4byte	0x68
 2271 05b6 05       		.uleb128 0x5
 2272 05b7 03       		.byte	0x3
 2273 05b8 00000000 		.4byte	turningCount
 2274 05bc 18       		.uleb128 0x18
 2275 05bd 88040000 		.4byte	.LASF79
 2276 05c1 01       		.byte	0x1
 2277 05c2 2C       		.byte	0x2c
 2278 05c3 CD050000 		.4byte	0x5cd
 2279 05c7 05       		.uleb128 0x5
 2280 05c8 03       		.byte	0x3
 2281 05c9 00000000 		.4byte	shouldUpdate
 2282 05cd 16       		.uleb128 0x16
 2283 05ce 68000000 		.4byte	0x68
 2284 05d2 18       		.uleb128 0x18
 2285 05d3 FD020000 		.4byte	.LASF80
 2286 05d7 01       		.byte	0x1
 2287 05d8 2E       		.byte	0x2e
 2288 05d9 CD050000 		.4byte	0x5cd
 2289 05dd 05       		.uleb128 0x5
 2290 05de 03       		.byte	0x3
 2291 05df 00000000 		.4byte	dotsTravelled
 2292 05e3 18       		.uleb128 0x18
 2293 05e4 63040000 		.4byte	.LASF81
 2294 05e8 01       		.byte	0x1
 2295 05e9 35       		.byte	0x35
 2296 05ea CD050000 		.4byte	0x5cd
 2297 05ee 05       		.uleb128 0x5
 2298 05ef 03       		.byte	0x3
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 49


 2299 05f0 00000000 		.4byte	flag
 2300 05f4 06       		.uleb128 0x6
 2301 05f5 CD050000 		.4byte	0x5cd
 2302 05f9 05060000 		.4byte	0x605
 2303 05fd 12       		.uleb128 0x12
 2304 05fe 7D000000 		.4byte	0x7d
 2305 0602 E703     		.2byte	0x3e7
 2306 0604 00       		.byte	0
 2307 0605 18       		.uleb128 0x18
 2308 0606 9B040000 		.4byte	.LASF82
 2309 060a 01       		.byte	0x1
 2310 060b 36       		.byte	0x36
 2311 060c 16060000 		.4byte	0x616
 2312 0610 05       		.uleb128 0x5
 2313 0611 03       		.byte	0x3
 2314 0612 00000000 		.4byte	valuesLeftIntersection
 2315 0616 16       		.uleb128 0x16
 2316 0617 F4050000 		.4byte	0x5f4
 2317 061b 18       		.uleb128 0x18
 2318 061c 48000000 		.4byte	.LASF83
 2319 0620 01       		.byte	0x1
 2320 0621 37       		.byte	0x37
 2321 0622 2C060000 		.4byte	0x62c
 2322 0626 05       		.uleb128 0x5
 2323 0627 03       		.byte	0x3
 2324 0628 00000000 		.4byte	valuesLeftLine
 2325 062c 16       		.uleb128 0x16
 2326 062d F4050000 		.4byte	0x5f4
 2327 0631 18       		.uleb128 0x18
 2328 0632 1A040000 		.4byte	.LASF84
 2329 0636 01       		.byte	0x1
 2330 0637 38       		.byte	0x38
 2331 0638 42060000 		.4byte	0x642
 2332 063c 05       		.uleb128 0x5
 2333 063d 03       		.byte	0x3
 2334 063e 00000000 		.4byte	valuesMiddleLine
 2335 0642 16       		.uleb128 0x16
 2336 0643 F4050000 		.4byte	0x5f4
 2337 0647 18       		.uleb128 0x18
 2338 0648 77000000 		.4byte	.LASF85
 2339 064c 01       		.byte	0x1
 2340 064d 39       		.byte	0x39
 2341 064e 58060000 		.4byte	0x658
 2342 0652 05       		.uleb128 0x5
 2343 0653 03       		.byte	0x3
 2344 0654 00000000 		.4byte	valuesTurnComplete
 2345 0658 16       		.uleb128 0x16
 2346 0659 F4050000 		.4byte	0x5f4
 2347 065d 18       		.uleb128 0x18
 2348 065e 8A000000 		.4byte	.LASF86
 2349 0662 01       		.byte	0x1
 2350 0663 3A       		.byte	0x3a
 2351 0664 6E060000 		.4byte	0x66e
 2352 0668 05       		.uleb128 0x5
 2353 0669 03       		.byte	0x3
 2354 066a 00000000 		.4byte	valuesRightLine
 2355 066e 16       		.uleb128 0x16
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 50


 2356 066f F4050000 		.4byte	0x5f4
 2357 0673 18       		.uleb128 0x18
 2358 0674 BD010000 		.4byte	.LASF87
 2359 0678 01       		.byte	0x1
 2360 0679 3B       		.byte	0x3b
 2361 067a 84060000 		.4byte	0x684
 2362 067e 05       		.uleb128 0x5
 2363 067f 03       		.byte	0x3
 2364 0680 00000000 		.4byte	valuesRightIntersection
 2365 0684 16       		.uleb128 0x16
 2366 0685 F4050000 		.4byte	0x5f4
 2367 0689 18       		.uleb128 0x18
 2368 068a 21050000 		.4byte	.LASF88
 2369 068e 01       		.byte	0x1
 2370 068f 3C       		.byte	0x3c
 2371 0690 CD050000 		.4byte	0x5cd
 2372 0694 05       		.uleb128 0x5
 2373 0695 03       		.byte	0x3
 2374 0696 00000000 		.4byte	count
 2375 069a 18       		.uleb128 0x18
 2376 069b 57050000 		.4byte	.LASF89
 2377 069f 01       		.byte	0x1
 2378 06a0 3D       		.byte	0x3d
 2379 06a1 CD050000 		.4byte	0x5cd
 2380 06a5 05       		.uleb128 0x5
 2381 06a6 03       		.byte	0x3
 2382 06a7 00000000 		.4byte	turningLeft
 2383 06ab 18       		.uleb128 0x18
 2384 06ac 95030000 		.4byte	.LASF90
 2385 06b0 01       		.byte	0x1
 2386 06b1 3E       		.byte	0x3e
 2387 06b2 CD050000 		.4byte	0x5cd
 2388 06b6 05       		.uleb128 0x5
 2389 06b7 03       		.byte	0x3
 2390 06b8 00000000 		.4byte	turningRight
 2391 06bc 18       		.uleb128 0x18
 2392 06bd EB020000 		.4byte	.LASF91
 2393 06c1 01       		.byte	0x1
 2394 06c2 3F       		.byte	0x3f
 2395 06c3 CD050000 		.4byte	0x5cd
 2396 06c7 05       		.uleb128 0x5
 2397 06c8 03       		.byte	0x3
 2398 06c9 00000000 		.4byte	lastVeerDirection
 2399 06cd 18       		.uleb128 0x18
 2400 06ce 01050000 		.4byte	.LASF92
 2401 06d2 01       		.byte	0x1
 2402 06d3 41       		.byte	0x41
 2403 06d4 CD050000 		.4byte	0x5cd
 2404 06d8 05       		.uleb128 0x5
 2405 06d9 03       		.byte	0x3
 2406 06da 00000000 		.4byte	motorFlag
 2407 06de 18       		.uleb128 0x18
 2408 06df F2050000 		.4byte	.LASF93
 2409 06e3 01       		.byte	0x1
 2410 06e4 42       		.byte	0x42
 2411 06e5 CD050000 		.4byte	0x5cd
 2412 06e9 05       		.uleb128 0x5
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 51


 2413 06ea 03       		.byte	0x3
 2414 06eb 00000000 		.4byte	step
 2415 06ef 17       		.uleb128 0x17
 2416 06f0 76314C00 		.ascii	"v1L\000"
 2417 06f4 01       		.byte	0x1
 2418 06f5 43       		.byte	0x43
 2419 06f6 CD050000 		.4byte	0x5cd
 2420 06fa 05       		.uleb128 0x5
 2421 06fb 03       		.byte	0x3
 2422 06fc 00000000 		.4byte	v1L
 2423 0700 17       		.uleb128 0x17
 2424 0701 76324C00 		.ascii	"v2L\000"
 2425 0705 01       		.byte	0x1
 2426 0706 44       		.byte	0x44
 2427 0707 CD050000 		.4byte	0x5cd
 2428 070b 05       		.uleb128 0x5
 2429 070c 03       		.byte	0x3
 2430 070d 00000000 		.4byte	v2L
 2431 0711 17       		.uleb128 0x17
 2432 0712 76315200 		.ascii	"v1R\000"
 2433 0716 01       		.byte	0x1
 2434 0717 45       		.byte	0x45
 2435 0718 CD050000 		.4byte	0x5cd
 2436 071c 05       		.uleb128 0x5
 2437 071d 03       		.byte	0x3
 2438 071e 00000000 		.4byte	v1R
 2439 0722 17       		.uleb128 0x17
 2440 0723 76325200 		.ascii	"v2R\000"
 2441 0727 01       		.byte	0x1
 2442 0728 46       		.byte	0x46
 2443 0729 CD050000 		.4byte	0x5cd
 2444 072d 05       		.uleb128 0x5
 2445 072e 03       		.byte	0x3
 2446 072f 00000000 		.4byte	v2R
 2447 0733 18       		.uleb128 0x18
 2448 0734 DA010000 		.4byte	.LASF94
 2449 0738 01       		.byte	0x1
 2450 0739 47       		.byte	0x47
 2451 073a CD050000 		.4byte	0x5cd
 2452 073e 05       		.uleb128 0x5
 2453 073f 03       		.byte	0x3
 2454 0740 00000000 		.4byte	numRotationsL
 2455 0744 18       		.uleb128 0x18
 2456 0745 E4050000 		.4byte	.LASF95
 2457 0749 01       		.byte	0x1
 2458 074a 48       		.byte	0x48
 2459 074b CD050000 		.4byte	0x5cd
 2460 074f 05       		.uleb128 0x5
 2461 0750 03       		.byte	0x3
 2462 0751 00000000 		.4byte	numRotationsR
 2463 0755 18       		.uleb128 0x18
 2464 0756 EA030000 		.4byte	.LASF96
 2465 075a 01       		.byte	0x1
 2466 075b 49       		.byte	0x49
 2467 075c CD050000 		.4byte	0x5cd
 2468 0760 05       		.uleb128 0x5
 2469 0761 03       		.byte	0x3
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 52


 2470 0762 00000000 		.4byte	turnCount
 2471 0766 18       		.uleb128 0x18
 2472 0767 B1020000 		.4byte	.LASF97
 2473 076b 01       		.byte	0x1
 2474 076c 4A       		.byte	0x4a
 2475 076d CD050000 		.4byte	0x5cd
 2476 0771 05       		.uleb128 0x5
 2477 0772 03       		.byte	0x3
 2478 0773 00000000 		.4byte	distanceTravelled
 2479 0777 18       		.uleb128 0x18
 2480 0778 7E010000 		.4byte	.LASF98
 2481 077c 01       		.byte	0x1
 2482 077d 4B       		.byte	0x4b
 2483 077e CD050000 		.4byte	0x5cd
 2484 0782 05       		.uleb128 0x5
 2485 0783 03       		.byte	0x3
 2486 0784 00000000 		.4byte	distancePerSecondL
 2487 0788 18       		.uleb128 0x18
 2488 0789 9D010000 		.4byte	.LASF99
 2489 078d 01       		.byte	0x1
 2490 078e 4C       		.byte	0x4c
 2491 078f CD050000 		.4byte	0x5cd
 2492 0793 05       		.uleb128 0x5
 2493 0794 03       		.byte	0x3
 2494 0795 00000000 		.4byte	distancePerSecondR
 2495 0799 18       		.uleb128 0x18
 2496 079a 13020000 		.4byte	.LASF100
 2497 079e 01       		.byte	0x1
 2498 079f 4D       		.byte	0x4d
 2499 07a0 CD050000 		.4byte	0x5cd
 2500 07a4 05       		.uleb128 0x5
 2501 07a5 03       		.byte	0x3
 2502 07a6 00000000 		.4byte	distancePerSecondAvg
 2503 07aa 18       		.uleb128 0x18
 2504 07ab 58010000 		.4byte	.LASF101
 2505 07af 01       		.byte	0x1
 2506 07b0 4E       		.byte	0x4e
 2507 07b1 CD050000 		.4byte	0x5cd
 2508 07b5 05       		.uleb128 0x5
 2509 07b6 03       		.byte	0x3
 2510 07b7 00000000 		.4byte	prevTurnState
 2511 07bb 18       		.uleb128 0x18
 2512 07bc 74050000 		.4byte	.LASF102
 2513 07c0 01       		.byte	0x1
 2514 07c1 4F       		.byte	0x4f
 2515 07c2 CD050000 		.4byte	0x5cd
 2516 07c6 05       		.uleb128 0x5
 2517 07c7 03       		.byte	0x3
 2518 07c8 00000000 		.4byte	turnState
 2519 07cc 18       		.uleb128 0x18
 2520 07cd 0B000000 		.4byte	.LASF103
 2521 07d1 01       		.byte	0x1
 2522 07d2 50       		.byte	0x50
 2523 07d3 CD050000 		.4byte	0x5cd
 2524 07d7 05       		.uleb128 0x5
 2525 07d8 03       		.byte	0x3
 2526 07d9 00000000 		.4byte	turnEnable
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 53


 2527 07dd 18       		.uleb128 0x18
 2528 07de 3E000000 		.4byte	.LASF104
 2529 07e2 01       		.byte	0x1
 2530 07e3 51       		.byte	0x51
 2531 07e4 CD050000 		.4byte	0x5cd
 2532 07e8 05       		.uleb128 0x5
 2533 07e9 03       		.byte	0x3
 2534 07ea 00000000 		.4byte	turnTimer
 2535 07ee 18       		.uleb128 0x18
 2536 07ef 1E000000 		.4byte	.LASF105
 2537 07f3 01       		.byte	0x1
 2538 07f4 52       		.byte	0x52
 2539 07f5 68000000 		.4byte	0x68
 2540 07f9 05       		.uleb128 0x5
 2541 07fa 03       		.byte	0x3
 2542 07fb 00000000 		.4byte	lastAdjustDirection
 2543 07ff 00       		.byte	0
 2544              		.section	.debug_abbrev,"",%progbits
 2545              	.Ldebug_abbrev0:
 2546 0000 01       		.uleb128 0x1
 2547 0001 11       		.uleb128 0x11
 2548 0002 01       		.byte	0x1
 2549 0003 25       		.uleb128 0x25
 2550 0004 0E       		.uleb128 0xe
 2551 0005 13       		.uleb128 0x13
 2552 0006 0B       		.uleb128 0xb
 2553 0007 03       		.uleb128 0x3
 2554 0008 0E       		.uleb128 0xe
 2555 0009 1B       		.uleb128 0x1b
 2556 000a 0E       		.uleb128 0xe
 2557 000b 55       		.uleb128 0x55
 2558 000c 17       		.uleb128 0x17
 2559 000d 11       		.uleb128 0x11
 2560 000e 01       		.uleb128 0x1
 2561 000f 10       		.uleb128 0x10
 2562 0010 17       		.uleb128 0x17
 2563 0011 00       		.byte	0
 2564 0012 00       		.byte	0
 2565 0013 02       		.uleb128 0x2
 2566 0014 24       		.uleb128 0x24
 2567 0015 00       		.byte	0
 2568 0016 0B       		.uleb128 0xb
 2569 0017 0B       		.uleb128 0xb
 2570 0018 3E       		.uleb128 0x3e
 2571 0019 0B       		.uleb128 0xb
 2572 001a 03       		.uleb128 0x3
 2573 001b 0E       		.uleb128 0xe
 2574 001c 00       		.byte	0
 2575 001d 00       		.byte	0
 2576 001e 03       		.uleb128 0x3
 2577 001f 16       		.uleb128 0x16
 2578 0020 00       		.byte	0
 2579 0021 03       		.uleb128 0x3
 2580 0022 0E       		.uleb128 0xe
 2581 0023 3A       		.uleb128 0x3a
 2582 0024 0B       		.uleb128 0xb
 2583 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 54


 2584 0026 0B       		.uleb128 0xb
 2585 0027 49       		.uleb128 0x49
 2586 0028 13       		.uleb128 0x13
 2587 0029 00       		.byte	0
 2588 002a 00       		.byte	0
 2589 002b 04       		.uleb128 0x4
 2590 002c 24       		.uleb128 0x24
 2591 002d 00       		.byte	0
 2592 002e 0B       		.uleb128 0xb
 2593 002f 0B       		.uleb128 0xb
 2594 0030 3E       		.uleb128 0x3e
 2595 0031 0B       		.uleb128 0xb
 2596 0032 03       		.uleb128 0x3
 2597 0033 08       		.uleb128 0x8
 2598 0034 00       		.byte	0
 2599 0035 00       		.byte	0
 2600 0036 05       		.uleb128 0x5
 2601 0037 0F       		.uleb128 0xf
 2602 0038 00       		.byte	0
 2603 0039 0B       		.uleb128 0xb
 2604 003a 0B       		.uleb128 0xb
 2605 003b 49       		.uleb128 0x49
 2606 003c 13       		.uleb128 0x13
 2607 003d 00       		.byte	0
 2608 003e 00       		.byte	0
 2609 003f 06       		.uleb128 0x6
 2610 0040 01       		.uleb128 0x1
 2611 0041 01       		.byte	0x1
 2612 0042 49       		.uleb128 0x49
 2613 0043 13       		.uleb128 0x13
 2614 0044 01       		.uleb128 0x1
 2615 0045 13       		.uleb128 0x13
 2616 0046 00       		.byte	0
 2617 0047 00       		.byte	0
 2618 0048 07       		.uleb128 0x7
 2619 0049 21       		.uleb128 0x21
 2620 004a 00       		.byte	0
 2621 004b 49       		.uleb128 0x49
 2622 004c 13       		.uleb128 0x13
 2623 004d 2F       		.uleb128 0x2f
 2624 004e 0B       		.uleb128 0xb
 2625 004f 00       		.byte	0
 2626 0050 00       		.byte	0
 2627 0051 08       		.uleb128 0x8
 2628 0052 16       		.uleb128 0x16
 2629 0053 00       		.byte	0
 2630 0054 03       		.uleb128 0x3
 2631 0055 0E       		.uleb128 0xe
 2632 0056 3A       		.uleb128 0x3a
 2633 0057 0B       		.uleb128 0xb
 2634 0058 3B       		.uleb128 0x3b
 2635 0059 05       		.uleb128 0x5
 2636 005a 49       		.uleb128 0x49
 2637 005b 13       		.uleb128 0x13
 2638 005c 00       		.byte	0
 2639 005d 00       		.byte	0
 2640 005e 09       		.uleb128 0x9
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 55


 2641 005f 13       		.uleb128 0x13
 2642 0060 01       		.byte	0x1
 2643 0061 03       		.uleb128 0x3
 2644 0062 0E       		.uleb128 0xe
 2645 0063 0B       		.uleb128 0xb
 2646 0064 0B       		.uleb128 0xb
 2647 0065 3A       		.uleb128 0x3a
 2648 0066 0B       		.uleb128 0xb
 2649 0067 3B       		.uleb128 0x3b
 2650 0068 0B       		.uleb128 0xb
 2651 0069 01       		.uleb128 0x1
 2652 006a 13       		.uleb128 0x13
 2653 006b 00       		.byte	0
 2654 006c 00       		.byte	0
 2655 006d 0A       		.uleb128 0xa
 2656 006e 0D       		.uleb128 0xd
 2657 006f 00       		.byte	0
 2658 0070 03       		.uleb128 0x3
 2659 0071 0E       		.uleb128 0xe
 2660 0072 3A       		.uleb128 0x3a
 2661 0073 0B       		.uleb128 0xb
 2662 0074 3B       		.uleb128 0x3b
 2663 0075 0B       		.uleb128 0xb
 2664 0076 49       		.uleb128 0x49
 2665 0077 13       		.uleb128 0x13
 2666 0078 38       		.uleb128 0x38
 2667 0079 0B       		.uleb128 0xb
 2668 007a 00       		.byte	0
 2669 007b 00       		.byte	0
 2670 007c 0B       		.uleb128 0xb
 2671 007d 2E       		.uleb128 0x2e
 2672 007e 00       		.byte	0
 2673 007f 3F       		.uleb128 0x3f
 2674 0080 19       		.uleb128 0x19
 2675 0081 03       		.uleb128 0x3
 2676 0082 08       		.uleb128 0x8
 2677 0083 3A       		.uleb128 0x3a
 2678 0084 0B       		.uleb128 0xb
 2679 0085 3B       		.uleb128 0x3b
 2680 0086 0B       		.uleb128 0xb
 2681 0087 27       		.uleb128 0x27
 2682 0088 19       		.uleb128 0x19
 2683 0089 11       		.uleb128 0x11
 2684 008a 01       		.uleb128 0x1
 2685 008b 12       		.uleb128 0x12
 2686 008c 06       		.uleb128 0x6
 2687 008d 40       		.uleb128 0x40
 2688 008e 18       		.uleb128 0x18
 2689 008f 9742     		.uleb128 0x2117
 2690 0091 19       		.uleb128 0x19
 2691 0092 00       		.byte	0
 2692 0093 00       		.byte	0
 2693 0094 0C       		.uleb128 0xc
 2694 0095 2E       		.uleb128 0x2e
 2695 0096 00       		.byte	0
 2696 0097 3F       		.uleb128 0x3f
 2697 0098 19       		.uleb128 0x19
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 56


 2698 0099 03       		.uleb128 0x3
 2699 009a 0E       		.uleb128 0xe
 2700 009b 3A       		.uleb128 0x3a
 2701 009c 0B       		.uleb128 0xb
 2702 009d 3B       		.uleb128 0x3b
 2703 009e 0B       		.uleb128 0xb
 2704 009f 27       		.uleb128 0x27
 2705 00a0 19       		.uleb128 0x19
 2706 00a1 11       		.uleb128 0x11
 2707 00a2 01       		.uleb128 0x1
 2708 00a3 12       		.uleb128 0x12
 2709 00a4 06       		.uleb128 0x6
 2710 00a5 40       		.uleb128 0x40
 2711 00a6 18       		.uleb128 0x18
 2712 00a7 9742     		.uleb128 0x2117
 2713 00a9 19       		.uleb128 0x19
 2714 00aa 00       		.byte	0
 2715 00ab 00       		.byte	0
 2716 00ac 0D       		.uleb128 0xd
 2717 00ad 2E       		.uleb128 0x2e
 2718 00ae 01       		.byte	0x1
 2719 00af 3F       		.uleb128 0x3f
 2720 00b0 19       		.uleb128 0x19
 2721 00b1 03       		.uleb128 0x3
 2722 00b2 0E       		.uleb128 0xe
 2723 00b3 3A       		.uleb128 0x3a
 2724 00b4 0B       		.uleb128 0xb
 2725 00b5 3B       		.uleb128 0x3b
 2726 00b6 0B       		.uleb128 0xb
 2727 00b7 49       		.uleb128 0x49
 2728 00b8 13       		.uleb128 0x13
 2729 00b9 11       		.uleb128 0x11
 2730 00ba 01       		.uleb128 0x1
 2731 00bb 12       		.uleb128 0x12
 2732 00bc 06       		.uleb128 0x6
 2733 00bd 40       		.uleb128 0x40
 2734 00be 18       		.uleb128 0x18
 2735 00bf 9642     		.uleb128 0x2116
 2736 00c1 19       		.uleb128 0x19
 2737 00c2 01       		.uleb128 0x1
 2738 00c3 13       		.uleb128 0x13
 2739 00c4 00       		.byte	0
 2740 00c5 00       		.byte	0
 2741 00c6 0E       		.uleb128 0xe
 2742 00c7 34       		.uleb128 0x34
 2743 00c8 00       		.byte	0
 2744 00c9 03       		.uleb128 0x3
 2745 00ca 0E       		.uleb128 0xe
 2746 00cb 3A       		.uleb128 0x3a
 2747 00cc 0B       		.uleb128 0xb
 2748 00cd 3B       		.uleb128 0x3b
 2749 00ce 0B       		.uleb128 0xb
 2750 00cf 49       		.uleb128 0x49
 2751 00d0 13       		.uleb128 0x13
 2752 00d1 02       		.uleb128 0x2
 2753 00d2 18       		.uleb128 0x18
 2754 00d3 00       		.byte	0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 57


 2755 00d4 00       		.byte	0
 2756 00d5 0F       		.uleb128 0xf
 2757 00d6 34       		.uleb128 0x34
 2758 00d7 00       		.byte	0
 2759 00d8 03       		.uleb128 0x3
 2760 00d9 08       		.uleb128 0x8
 2761 00da 3A       		.uleb128 0x3a
 2762 00db 0B       		.uleb128 0xb
 2763 00dc 3B       		.uleb128 0x3b
 2764 00dd 0B       		.uleb128 0xb
 2765 00de 49       		.uleb128 0x49
 2766 00df 13       		.uleb128 0x13
 2767 00e0 02       		.uleb128 0x2
 2768 00e1 18       		.uleb128 0x18
 2769 00e2 00       		.byte	0
 2770 00e3 00       		.byte	0
 2771 00e4 10       		.uleb128 0x10
 2772 00e5 0B       		.uleb128 0xb
 2773 00e6 01       		.byte	0x1
 2774 00e7 11       		.uleb128 0x11
 2775 00e8 01       		.uleb128 0x1
 2776 00e9 12       		.uleb128 0x12
 2777 00ea 06       		.uleb128 0x6
 2778 00eb 01       		.uleb128 0x1
 2779 00ec 13       		.uleb128 0x13
 2780 00ed 00       		.byte	0
 2781 00ee 00       		.byte	0
 2782 00ef 11       		.uleb128 0x11
 2783 00f0 0B       		.uleb128 0xb
 2784 00f1 01       		.byte	0x1
 2785 00f2 11       		.uleb128 0x11
 2786 00f3 01       		.uleb128 0x1
 2787 00f4 12       		.uleb128 0x12
 2788 00f5 06       		.uleb128 0x6
 2789 00f6 00       		.byte	0
 2790 00f7 00       		.byte	0
 2791 00f8 12       		.uleb128 0x12
 2792 00f9 21       		.uleb128 0x21
 2793 00fa 00       		.byte	0
 2794 00fb 49       		.uleb128 0x49
 2795 00fc 13       		.uleb128 0x13
 2796 00fd 2F       		.uleb128 0x2f
 2797 00fe 05       		.uleb128 0x5
 2798 00ff 00       		.byte	0
 2799 0100 00       		.byte	0
 2800 0101 13       		.uleb128 0x13
 2801 0102 2E       		.uleb128 0x2e
 2802 0103 01       		.byte	0x1
 2803 0104 3F       		.uleb128 0x3f
 2804 0105 19       		.uleb128 0x19
 2805 0106 03       		.uleb128 0x3
 2806 0107 0E       		.uleb128 0xe
 2807 0108 3A       		.uleb128 0x3a
 2808 0109 0B       		.uleb128 0xb
 2809 010a 3B       		.uleb128 0x3b
 2810 010b 05       		.uleb128 0x5
 2811 010c 27       		.uleb128 0x27
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 58


 2812 010d 19       		.uleb128 0x19
 2813 010e 11       		.uleb128 0x11
 2814 010f 01       		.uleb128 0x1
 2815 0110 12       		.uleb128 0x12
 2816 0111 06       		.uleb128 0x6
 2817 0112 40       		.uleb128 0x40
 2818 0113 18       		.uleb128 0x18
 2819 0114 9642     		.uleb128 0x2116
 2820 0116 19       		.uleb128 0x19
 2821 0117 01       		.uleb128 0x1
 2822 0118 13       		.uleb128 0x13
 2823 0119 00       		.byte	0
 2824 011a 00       		.byte	0
 2825 011b 14       		.uleb128 0x14
 2826 011c 05       		.uleb128 0x5
 2827 011d 00       		.byte	0
 2828 011e 03       		.uleb128 0x3
 2829 011f 08       		.uleb128 0x8
 2830 0120 3A       		.uleb128 0x3a
 2831 0121 0B       		.uleb128 0xb
 2832 0122 3B       		.uleb128 0x3b
 2833 0123 05       		.uleb128 0x5
 2834 0124 49       		.uleb128 0x49
 2835 0125 13       		.uleb128 0x13
 2836 0126 02       		.uleb128 0x2
 2837 0127 18       		.uleb128 0x18
 2838 0128 00       		.byte	0
 2839 0129 00       		.byte	0
 2840 012a 15       		.uleb128 0x15
 2841 012b 34       		.uleb128 0x34
 2842 012c 00       		.byte	0
 2843 012d 03       		.uleb128 0x3
 2844 012e 0E       		.uleb128 0xe
 2845 012f 3A       		.uleb128 0x3a
 2846 0130 0B       		.uleb128 0xb
 2847 0131 3B       		.uleb128 0x3b
 2848 0132 05       		.uleb128 0x5
 2849 0133 49       		.uleb128 0x49
 2850 0134 13       		.uleb128 0x13
 2851 0135 3F       		.uleb128 0x3f
 2852 0136 19       		.uleb128 0x19
 2853 0137 3C       		.uleb128 0x3c
 2854 0138 19       		.uleb128 0x19
 2855 0139 00       		.byte	0
 2856 013a 00       		.byte	0
 2857 013b 16       		.uleb128 0x16
 2858 013c 35       		.uleb128 0x35
 2859 013d 00       		.byte	0
 2860 013e 49       		.uleb128 0x49
 2861 013f 13       		.uleb128 0x13
 2862 0140 00       		.byte	0
 2863 0141 00       		.byte	0
 2864 0142 17       		.uleb128 0x17
 2865 0143 34       		.uleb128 0x34
 2866 0144 00       		.byte	0
 2867 0145 03       		.uleb128 0x3
 2868 0146 08       		.uleb128 0x8
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 59


 2869 0147 3A       		.uleb128 0x3a
 2870 0148 0B       		.uleb128 0xb
 2871 0149 3B       		.uleb128 0x3b
 2872 014a 0B       		.uleb128 0xb
 2873 014b 49       		.uleb128 0x49
 2874 014c 13       		.uleb128 0x13
 2875 014d 3F       		.uleb128 0x3f
 2876 014e 19       		.uleb128 0x19
 2877 014f 02       		.uleb128 0x2
 2878 0150 18       		.uleb128 0x18
 2879 0151 00       		.byte	0
 2880 0152 00       		.byte	0
 2881 0153 18       		.uleb128 0x18
 2882 0154 34       		.uleb128 0x34
 2883 0155 00       		.byte	0
 2884 0156 03       		.uleb128 0x3
 2885 0157 0E       		.uleb128 0xe
 2886 0158 3A       		.uleb128 0x3a
 2887 0159 0B       		.uleb128 0xb
 2888 015a 3B       		.uleb128 0x3b
 2889 015b 0B       		.uleb128 0xb
 2890 015c 49       		.uleb128 0x49
 2891 015d 13       		.uleb128 0x13
 2892 015e 3F       		.uleb128 0x3f
 2893 015f 19       		.uleb128 0x19
 2894 0160 02       		.uleb128 0x2
 2895 0161 18       		.uleb128 0x18
 2896 0162 00       		.byte	0
 2897 0163 00       		.byte	0
 2898 0164 00       		.byte	0
 2899              		.section	.debug_aranges,"",%progbits
 2900 0000 3C000000 		.4byte	0x3c
 2901 0004 0200     		.2byte	0x2
 2902 0006 00000000 		.4byte	.Ldebug_info0
 2903 000a 04       		.byte	0x4
 2904 000b 00       		.byte	0
 2905 000c 0000     		.2byte	0
 2906 000e 0000     		.2byte	0
 2907 0010 00000000 		.4byte	.LFB64
 2908 0014 18000000 		.4byte	.LFE64-.LFB64
 2909 0018 00000000 		.4byte	.LFB65
 2910 001c 18000000 		.4byte	.LFE65-.LFB65
 2911 0020 00000000 		.4byte	.LFB66
 2912 0024 FC070000 		.4byte	.LFE66-.LFB66
 2913 0028 00000000 		.4byte	.LFB67
 2914 002c 3E000000 		.4byte	.LFE67-.LFB67
 2915 0030 00000000 		.4byte	.LFB68
 2916 0034 26000000 		.4byte	.LFE68-.LFB68
 2917 0038 00000000 		.4byte	0
 2918 003c 00000000 		.4byte	0
 2919              		.section	.debug_ranges,"",%progbits
 2920              	.Ldebug_ranges0:
 2921 0000 00000000 		.4byte	.LFB64
 2922 0004 18000000 		.4byte	.LFE64
 2923 0008 00000000 		.4byte	.LFB65
 2924 000c 18000000 		.4byte	.LFE65
 2925 0010 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 60


 2926 0014 FC070000 		.4byte	.LFE66
 2927 0018 00000000 		.4byte	.LFB67
 2928 001c 3E000000 		.4byte	.LFE67
 2929 0020 00000000 		.4byte	.LFB68
 2930 0024 26000000 		.4byte	.LFE68
 2931 0028 00000000 		.4byte	0
 2932 002c 00000000 		.4byte	0
 2933              		.section	.debug_line,"",%progbits
 2934              	.Ldebug_line0:
 2935 0000 2F030000 		.section	.debug_str,"MS",%progbits,1
 2935      02005601 
 2935      00000201 
 2935      FB0E0D00 
 2935      01010101 
 2936              	.LASF55:
 2937 0000 75736250 		.ascii	"usbPutChar\000"
 2937      75744368 
 2937      617200
 2938              	.LASF103:
 2939 000b 7475726E 		.ascii	"turnEnable\000"
 2939      456E6162 
 2939      6C6500
 2940              	.LASF38:
 2941 0016 73717561 		.ascii	"squares\000"
 2941      72657300 
 2942              	.LASF105:
 2943 001e 6C617374 		.ascii	"lastAdjustDirection\000"
 2943      41646A75 
 2943      73744469 
 2943      72656374 
 2943      696F6E00 
 2944              	.LASF66:
 2945 0032 666C6167 		.ascii	"flag_packet\000"
 2945      5F706163 
 2945      6B657400 
 2946              	.LASF104:
 2947 003e 7475726E 		.ascii	"turnTimer\000"
 2947      54696D65 
 2947      7200
 2948              	.LASF83:
 2949 0048 76616C75 		.ascii	"valuesLeftLine\000"
 2949      65734C65 
 2949      66744C69 
 2949      6E6500
 2950              	.LASF63:
 2951 0057 666C6167 		.ascii	"flag_ts_speed\000"
 2951      5F74735F 
 2951      73706565 
 2951      6400
 2952              	.LASF33:
 2953 0065 67325F78 		.ascii	"g2_xpos\000"
 2953      706F7300 
 2954              	.LASF2:
 2955 006d 73686F72 		.ascii	"short int\000"
 2955      7420696E 
 2955      7400
 2956              	.LASF85:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 61


 2957 0077 76616C75 		.ascii	"valuesTurnComplete\000"
 2957      65735475 
 2957      726E436F 
 2957      6D706C65 
 2957      746500
 2958              	.LASF86:
 2959 008a 76616C75 		.ascii	"valuesRightLine\000"
 2959      65735269 
 2959      6768744C 
 2959      696E6500 
 2960              	.LASF74:
 2961 009a 73797374 		.ascii	"system_state\000"
 2961      656D5F73 
 2961      74617465 
 2961      00
 2962              	.LASF10:
 2963 00a7 73697A65 		.ascii	"sizetype\000"
 2963      74797065 
 2963      00
 2964              	.LASF53:
 2965 00b0 6D61696E 		.ascii	"main\000"
 2965      00
 2966              	.LASF73:
 2967 00b5 75736242 		.ascii	"usbBuffer\000"
 2967      75666665 
 2967      7200
 2968              	.LASF106:
 2969 00bf 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2969      43313120 
 2969      352E342E 
 2969      31203230 
 2969      31363036 
 2970 00f2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2970      20726576 
 2970      6973696F 
 2970      6E203233 
 2970      37373135 
 2971 0125 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2971      66756E63 
 2971      74696F6E 
 2971      2D736563 
 2971      74696F6E 
 2972              	.LASF60:
 2973 014d 74735F64 		.ascii	"ts_display\000"
 2973      6973706C 
 2973      617900
 2974              	.LASF101:
 2975 0158 70726576 		.ascii	"prevTurnState\000"
 2975      5475726E 
 2975      53746174 
 2975      6500
 2976              	.LASF77:
 2977 0166 7475726E 		.ascii	"turningDirection\000"
 2977      696E6744 
 2977      69726563 
 2977      74696F6E 
 2977      00
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 62


 2978              	.LASF15:
 2979 0177 75696E74 		.ascii	"uint16\000"
 2979      313600
 2980              	.LASF98:
 2981 017e 64697374 		.ascii	"distancePerSecondL\000"
 2981      616E6365 
 2981      50657253 
 2981      65636F6E 
 2981      644C00
 2982              	.LASF21:
 2983 0191 696E6465 		.ascii	"index\000"
 2983      7800
 2984              	.LASF17:
 2985 0197 696E7431 		.ascii	"int16\000"
 2985      3600
 2986              	.LASF99:
 2987 019d 64697374 		.ascii	"distancePerSecondR\000"
 2987      616E6365 
 2987      50657253 
 2987      65636F6E 
 2987      645200
 2988              	.LASF32:
 2989 01b0 67315F64 		.ascii	"g1_direction\000"
 2989      69726563 
 2989      74696F6E 
 2989      00
 2990              	.LASF87:
 2991 01bd 76616C75 		.ascii	"valuesRightIntersection\000"
 2991      65735269 
 2991      67687449 
 2991      6E746572 
 2991      73656374 
 2992              	.LASF71:
 2993 01d5 6C696E65 		.ascii	"line\000"
 2993      00
 2994              	.LASF94:
 2995 01da 6E756D52 		.ascii	"numRotationsL\000"
 2995      6F746174 
 2995      696F6E73 
 2995      4C00
 2996              	.LASF0:
 2997 01e8 7369676E 		.ascii	"signed char\000"
 2997      65642063 
 2997      68617200 
 2998              	.LASF18:
 2999 01f4 666C6F61 		.ascii	"float\000"
 2999      7400
 3000              	.LASF41:
 3001 01fa 73746172 		.ascii	"started\000"
 3001      74656400 
 3002              	.LASF34:
 3003 0202 67325F79 		.ascii	"g2_ypos\000"
 3003      706F7300 
 3004              	.LASF31:
 3005 020a 67315F73 		.ascii	"g1_speed\000"
 3005      70656564 
 3005      00
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 63


 3006              	.LASF100:
 3007 0213 64697374 		.ascii	"distancePerSecondAvg\000"
 3007      616E6365 
 3007      50657253 
 3007      65636F6E 
 3007      64417667 
 3008              	.LASF108:
 3009 0228 483A5C44 		.ascii	"H:\\Documents\\301\\Post-Benchmark\\team14\\301_lab"
 3009      6F63756D 
 3009      656E7473 
 3009      5C333031 
 3009      5C506F73 
 3010 0256 5F746173 		.ascii	"_tasks\\psoc student pack\\psoc_code_base\\CS301_Cl"
 3010      6B735C70 
 3010      736F6320 
 3010      73747564 
 3010      656E7420 
 3011 0286 6173732E 		.ascii	"ass.cydsn\000"
 3011      63796473 
 3011      6E00
 3012              	.LASF54:
 3013 0290 75736250 		.ascii	"usbPutString\000"
 3013      75745374 
 3013      72696E67 
 3013      00
 3014              	.LASF16:
 3015 029d 696E7438 		.ascii	"int8\000"
 3015      00
 3016              	.LASF62:
 3017 02a2 666C6167 		.ascii	"flag_ts_update\000"
 3017      5F74735F 
 3017      75706461 
 3017      746500
 3018              	.LASF97:
 3019 02b1 64697374 		.ascii	"distanceTravelled\000"
 3019      616E6365 
 3019      54726176 
 3019      656C6C65 
 3019      6400
 3020              	.LASF28:
 3021 02c3 67305F64 		.ascii	"g0_direction\000"
 3021      69726563 
 3021      74696F6E 
 3021      00
 3022              	.LASF25:
 3023 02d0 67305F78 		.ascii	"g0_xpos\000"
 3023      706F7300 
 3024              	.LASF44:
 3025 02d8 73717561 		.ascii	"squareStr\000"
 3025      72655374 
 3025      7200
 3026              	.LASF4:
 3027 02e2 6C6F6E67 		.ascii	"long int\000"
 3027      20696E74 
 3027      00
 3028              	.LASF91:
 3029 02eb 6C617374 		.ascii	"lastVeerDirection\000"
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 64


 3029      56656572 
 3029      44697265 
 3029      6374696F 
 3029      6E00
 3030              	.LASF80:
 3031 02fd 646F7473 		.ascii	"dotsTravelled\000"
 3031      54726176 
 3031      656C6C65 
 3031      6400
 3032              	.LASF64:
 3033 030b 666C6167 		.ascii	"flag_ts_display\000"
 3033      5F74735F 
 3033      64697370 
 3033      6C617900 
 3034              	.LASF65:
 3035 031b 666C6167 		.ascii	"flag_rx\000"
 3035      5F727800 
 3036              	.LASF37:
 3037 0323 4D794953 		.ascii	"MyISR\000"
 3037      5200
 3038              	.LASF52:
 3039 0329 68696768 		.ascii	"highCountRightIntersection\000"
 3039      436F756E 
 3039      74526967 
 3039      6874496E 
 3039      74657273 
 3040              	.LASF30:
 3041 0344 67315F79 		.ascii	"g1_ypos\000"
 3041      706F7300 
 3042              	.LASF9:
 3043 034c 6C6F6E67 		.ascii	"long double\000"
 3043      20646F75 
 3043      626C6500 
 3044              	.LASF72:
 3045 0358 656E7472 		.ascii	"entry\000"
 3045      7900
 3046              	.LASF1:
 3047 035e 756E7369 		.ascii	"unsigned char\000"
 3047      676E6564 
 3047      20636861 
 3047      7200
 3048              	.LASF27:
 3049 036c 67305F73 		.ascii	"g0_speed\000"
 3049      70656564 
 3049      00
 3050              	.LASF51:
 3051 0375 68696768 		.ascii	"highCountRightLine\000"
 3051      436F756E 
 3051      74526967 
 3051      68744C69 
 3051      6E6500
 3052              	.LASF46:
 3053 0388 6368616E 		.ascii	"changeInDots\000"
 3053      6765496E 
 3053      446F7473 
 3053      00
 3054              	.LASF90:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 65


 3055 0395 7475726E 		.ascii	"turningRight\000"
 3055      696E6752 
 3055      69676874 
 3055      00
 3056              	.LASF7:
 3057 03a2 6C6F6E67 		.ascii	"long long unsigned int\000"
 3057      206C6F6E 
 3057      6720756E 
 3057      7369676E 
 3057      65642069 
 3058              	.LASF8:
 3059 03b9 756E7369 		.ascii	"unsigned int\000"
 3059      676E6564 
 3059      20696E74 
 3059      00
 3060              	.LASF67:
 3061 03c6 666C6167 		.ascii	"flag_KB_string\000"
 3061      5F4B425F 
 3061      73747269 
 3061      6E6700
 3062              	.LASF42:
 3063 03d5 636F6E73 		.ascii	"consecStops\000"
 3063      65635374 
 3063      6F707300 
 3064              	.LASF35:
 3065 03e1 67325F73 		.ascii	"g2_speed\000"
 3065      70656564 
 3065      00
 3066              	.LASF96:
 3067 03ea 7475726E 		.ascii	"turnCount\000"
 3067      436F756E 
 3067      7400
 3068              	.LASF29:
 3069 03f4 67315F78 		.ascii	"g1_xpos\000"
 3069      706F7300 
 3070              	.LASF76:
 3071 03fc 72657374 		.ascii	"restoring\000"
 3071      6F72696E 
 3071      6700
 3072              	.LASF49:
 3073 0406 68696768 		.ascii	"highCountMiddleLine\000"
 3073      436F756E 
 3073      744D6964 
 3073      646C654C 
 3073      696E6500 
 3074              	.LASF84:
 3075 041a 76616C75 		.ascii	"valuesMiddleLine\000"
 3075      65734D69 
 3075      64646C65 
 3075      4C696E65 
 3075      00
 3076              	.LASF109:
 3077 042b 64617461 		.ascii	"data_main\000"
 3077      5F6D6169 
 3077      6E00
 3078              	.LASF40:
 3079 0435 64697374 		.ascii	"distance\000"
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 66


 3079      616E6365 
 3079      00
 3080              	.LASF11:
 3081 043e 63686172 		.ascii	"char\000"
 3081      00
 3082              	.LASF56:
 3083 0443 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3083      52784275 
 3083      66666572 
 3083      00
 3084              	.LASF22:
 3085 0450 726F626F 		.ascii	"robot_xpos\000"
 3085      745F7870 
 3085      6F7300
 3086              	.LASF13:
 3087 045b 696E7433 		.ascii	"int32_t\000"
 3087      325F7400 
 3088              	.LASF81:
 3089 0463 666C6167 		.ascii	"flag\000"
 3089      00
 3090              	.LASF36:
 3091 0468 67325F64 		.ascii	"g2_direction\000"
 3091      69726563 
 3091      74696F6E 
 3091      00
 3092              	.LASF3:
 3093 0475 73686F72 		.ascii	"short unsigned int\000"
 3093      7420756E 
 3093      7369676E 
 3093      65642069 
 3093      6E7400
 3094              	.LASF79:
 3095 0488 73686F75 		.ascii	"shouldUpdate\000"
 3095      6C645570 
 3095      64617465 
 3095      00
 3096              	.LASF14:
 3097 0495 75696E74 		.ascii	"uint8\000"
 3097      3800
 3098              	.LASF82:
 3099 049b 76616C75 		.ascii	"valuesLeftIntersection\000"
 3099      65734C65 
 3099      6674496E 
 3099      74657273 
 3099      65637469 
 3100              	.LASF70:
 3101 04b2 64697370 		.ascii	"displaystring\000"
 3101      6C617973 
 3101      7472696E 
 3101      6700
 3102              	.LASF48:
 3103 04c0 68696768 		.ascii	"highCountLeftLine\000"
 3103      436F756E 
 3103      744C6566 
 3103      744C696E 
 3103      6500
 3104              	.LASF107:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 67


 3105 04d2 6D61696E 		.ascii	"main.c\000"
 3105      2E6300
 3106              	.LASF5:
 3107 04d9 6C6F6E67 		.ascii	"long unsigned int\000"
 3107      20756E73 
 3107      69676E65 
 3107      6420696E 
 3107      7400
 3108              	.LASF19:
 3109 04eb 646F7562 		.ascii	"double\000"
 3109      6C6500
 3110              	.LASF68:
 3111 04f2 64617461 		.ascii	"dataready_flag\000"
 3111      72656164 
 3111      795F666C 
 3111      616700
 3112              	.LASF92:
 3113 0501 6D6F746F 		.ascii	"motorFlag\000"
 3113      72466C61 
 3113      6700
 3114              	.LASF78:
 3115 050b 7475726E 		.ascii	"turningCount\000"
 3115      696E6743 
 3115      6F756E74 
 3115      00
 3116              	.LASF59:
 3117 0518 74735F73 		.ascii	"ts_speed\000"
 3117      70656564 
 3117      00
 3118              	.LASF88:
 3119 0521 636F756E 		.ascii	"count\000"
 3119      7400
 3120              	.LASF61:
 3121 0527 666C6167 		.ascii	"flag_ts_enc\000"
 3121      5F74735F 
 3121      656E6300 
 3122              	.LASF12:
 3123 0533 5F5F696E 		.ascii	"__int32_t\000"
 3123      7433325F 
 3123      7400
 3124              	.LASF26:
 3125 053d 67305F79 		.ascii	"g0_ypos\000"
 3125      706F7300 
 3126              	.LASF24:
 3127 0545 726F626F 		.ascii	"robot_orientation\000"
 3127      745F6F72 
 3127      69656E74 
 3127      6174696F 
 3127      6E00
 3128              	.LASF89:
 3129 0557 7475726E 		.ascii	"turningLeft\000"
 3129      696E674C 
 3129      65667400 
 3130              	.LASF57:
 3131 0563 74735F65 		.ascii	"ts_enc\000"
 3131      6E6300
 3132              	.LASF58:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 68


 3133 056a 74735F75 		.ascii	"ts_update\000"
 3133      70646174 
 3133      6500
 3134              	.LASF102:
 3135 0574 7475726E 		.ascii	"turnState\000"
 3135      53746174 
 3135      6500
 3136              	.LASF69:
 3137 057e 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3137      5F72665F 
 3137      7472616E 
 3137      736D6973 
 3137      73696F6E 
 3138              	.LASF23:
 3139 059a 726F626F 		.ascii	"robot_ypos\000"
 3139      745F7970 
 3139      6F7300
 3140              	.LASF75:
 3141 05a5 54415247 		.ascii	"TARGET_SPEED\000"
 3141      45545F53 
 3141      50454544 
 3141      00
 3142              	.LASF45:
 3143 05b2 696E7374 		.ascii	"instStr\000"
 3143      53747200 
 3144              	.LASF39:
 3145 05ba 696E7374 		.ascii	"instruction\000"
 3145      72756374 
 3145      696F6E00 
 3146              	.LASF50:
 3147 05c6 68696768 		.ascii	"highCountTurnComplete\000"
 3147      436F756E 
 3147      74547572 
 3147      6E436F6D 
 3147      706C6574 
 3148              	.LASF43:
 3149 05dc 64657369 		.ascii	"desired\000"
 3149      72656400 
 3150              	.LASF95:
 3151 05e4 6E756D52 		.ascii	"numRotationsR\000"
 3151      6F746174 
 3151      696F6E73 
 3151      5200
 3152              	.LASF93:
 3153 05f2 73746570 		.ascii	"step\000"
 3153      00
 3154              	.LASF47:
 3155 05f7 68696768 		.ascii	"highCountLeftIntersection\000"
 3155      436F756E 
 3155      744C6566 
 3155      74496E74 
 3155      65727365 
 3156              	.LASF20:
 3157 0611 72737369 		.ascii	"rssi\000"
 3157      00
 3158              	.LASF6:
 3159 0616 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccSJhaMP.s 			page 69


 3159      206C6F6E 
 3159      6720696E 
 3159      7400
 3160              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
