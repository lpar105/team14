ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	consecStops
 107              		.bss
 108 0012 0000     		.align	2
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 3


 109              		.type	consecStops, %object
 110              		.size	consecStops, 4
 111              	consecStops:
 112 0014 00000000 		.space	4
 113              		.global	started
 114              		.align	2
 115              		.type	started, %object
 116              		.size	started, 4
 117              	started:
 118 0018 00000000 		.space	4
 119              		.global	instCounter
 120              		.align	2
 121              		.type	instCounter, %object
 122              		.size	instCounter, 4
 123              	instCounter:
 124 001c 00000000 		.space	4
 125              		.global	flag
 126              		.align	2
 127              		.type	flag, %object
 128              		.size	flag, 4
 129              	flag:
 130 0020 00000000 		.space	4
 131              		.comm	valuesLeftIntersection,4000,4
 132              		.comm	valuesLeftLine,4000,4
 133              		.comm	valuesMiddleLine,4000,4
 134              		.comm	valuesTurnComplete,4000,4
 135              		.comm	valuesRightLine,4000,4
 136              		.comm	valuesRightIntersection,4000,4
 137              		.global	count
 138              		.align	2
 139              		.type	count, %object
 140              		.size	count, 4
 141              	count:
 142 0024 00000000 		.space	4
 143              		.global	motorUpdateCount
 144              		.align	2
 145              		.type	motorUpdateCount, %object
 146              		.size	motorUpdateCount, 4
 147              	motorUpdateCount:
 148 0028 00000000 		.space	4
 149              		.global	lastVeerDirection
 150              		.align	2
 151              		.type	lastVeerDirection, %object
 152              		.size	lastVeerDirection, 4
 153              	lastVeerDirection:
 154 002c 00000000 		.space	4
 155              		.comm	v1M1,4,4
 156              		.comm	v1M2,4,4
 157              		.comm	v2M1,4,4
 158              		.comm	v2M2,4,4
 159              		.global	turnComplete
 160              		.data
 161              		.align	2
 162              		.type	turnComplete, %object
 163              		.size	turnComplete, 4
 164              	turnComplete:
 165 0044 FFFFFFFF 		.word	-1
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 4


 166              		.global	pulsesTravelled
 167              		.bss
 168              		.align	2
 169              		.type	pulsesTravelled, %object
 170              		.size	pulsesTravelled, 4
 171              	pulsesTravelled:
 172 0030 00000000 		.space	4
 173              		.global	checkDistance
 174              		.align	2
 175              		.type	checkDistance, %object
 176              		.size	checkDistance, 4
 177              	checkDistance:
 178 0034 00000000 		.space	4
 179              		.global	step
 180              		.align	2
 181              		.type	step, %object
 182              		.size	step, 4
 183              	step:
 184 0038 00000000 		.space	4
 185              		.global	interruptFlag
 186              		.align	2
 187              		.type	interruptFlag, %object
 188              		.size	interruptFlag, 4
 189              	interruptFlag:
 190 003c 00000000 		.space	4
 191              		.global	lastAdjustDirection
 192              		.align	2
 193              		.type	lastAdjustDirection, %object
 194              		.size	lastAdjustDirection, 4
 195              	lastAdjustDirection:
 196 0040 00000000 		.space	4
 197              		.comm	squares,1000,4
 198              		.comm	instruction,500,4
 199              		.comm	distance,500,4
 200              		.section	.text.eoc,"ax",%progbits
 201              		.align	2
 202              		.global	eoc
 203              		.thumb
 204              		.thumb_func
 205              		.type	eoc, %function
 206              	eoc:
 207              	.LFB64:
 208              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 5


  15:main.c        ****  * ========================================
  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** 
  30:main.c        **** #include "pathfind.h"
  31:main.c        **** 
  32:main.c        **** #include "vars.h"
  33:main.c        **** 
  34:main.c        **** #define ADC_COUNT 1000
  35:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 75
  36:main.c        **** #define R_INT_BLACK highCountRightIntersection < 75
  37:main.c        **** #define L_LINE_BLACK highCountLeftLine < 75
  38:main.c        **** #define R_LINE_BLACK highCountRightLine < 75
  39:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 75
  40:main.c        **** #define TC_BLACK highCountTurnComplete < 75
  41:main.c        **** 
  42:main.c        **** int consecStops = 0;
  43:main.c        **** int started = 0;
  44:main.c        **** int instCounter = 0;
  45:main.c        **** //* ========================================
  46:main.c        **** void usbPutString(char * s);
  47:main.c        **** void usbPutChar(char c);
  48:main.c        **** //* ========================================
  49:main.c        **** 
  50:main.c        **** volatile int flag = 0;
  51:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  52:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  53:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  54:main.c        **** volatile int valuesTurnComplete[ADC_COUNT];
  55:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  56:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  57:main.c        **** volatile int count = 0;
  58:main.c        **** volatile int motorUpdateCount = 0;
  59:main.c        **** volatile int lastVeerDirection = 0;
  60:main.c        **** 
  61:main.c        **** volatile int v1M1;
  62:main.c        **** volatile int v1M2;
  63:main.c        **** volatile int v2M1;
  64:main.c        **** volatile int v2M2;
  65:main.c        **** volatile int turnComplete = -1;
  66:main.c        **** int pulsesTravelled = 0;
  67:main.c        **** volatile int checkDistance = 0;
  68:main.c        **** volatile int step = 0;
  69:main.c        **** volatile int interruptFlag = 0;
  70:main.c        **** 
  71:main.c        **** int lastAdjustDirection = 0;
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 6


  72:main.c        **** unsigned char squares[500][2];
  73:main.c        **** unsigned char instruction[500];
  74:main.c        **** unsigned char distance[500];
  75:main.c        **** 
  76:main.c        **** CY_ISR(eoc) {
 209              		.loc 1 76 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214 0000 80B4     		push	{r7}
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 7, -4
 217 0002 00AF     		add	r7, sp, #0
 218              		.cfi_def_cfa_register 7
  77:main.c        ****     flag = 1;
 219              		.loc 1 77 0
 220 0004 034B     		ldr	r3, .L2
 221 0006 0122     		movs	r2, #1
 222 0008 1A60     		str	r2, [r3]
  78:main.c        **** }
 223              		.loc 1 78 0
 224 000a 00BF     		nop
 225 000c BD46     		mov	sp, r7
 226              		.cfi_def_cfa_register 13
 227              		@ sp needed
 228 000e 80BC     		pop	{r7}
 229              		.cfi_restore 7
 230              		.cfi_def_cfa_offset 0
 231 0010 7047     		bx	lr
 232              	.L3:
 233 0012 00BF     		.align	2
 234              	.L2:
 235 0014 00000000 		.word	flag
 236              		.cfi_endproc
 237              	.LFE64:
 238              		.size	eoc, .-eoc
 239              		.global	__aeabi_i2d
 240              		.global	__aeabi_dmul
 241              		.global	__aeabi_ddiv
 242              		.global	__aeabi_dcmple
 243              		.section	.text.main,"ax",%progbits
 244              		.align	2
 245              		.global	main
 246              		.thumb
 247              		.thumb_func
 248              		.type	main, %function
 249              	main:
 250              	.LFB65:
  79:main.c        **** 
  80:main.c        **** int main() {
 251              		.loc 1 80 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 264
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255 0000 B0B5     		push	{r4, r5, r7, lr}
 256              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 7


 257              		.cfi_offset 4, -16
 258              		.cfi_offset 5, -12
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 C2B0     		sub	sp, sp, #264
 262              		.cfi_def_cfa_offset 280
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
  81:main.c        ****     CYGlobalIntEnable;
 265              		.loc 1 81 0
 266              		.syntax unified
 267              	@ 81 "main.c" 1
 268 0006 62B6     		CPSIE   i
 269              	@ 0 "" 2
  82:main.c        ****     USBUART_Start(0, USBUART_5V_OPERATION);
 270              		.loc 1 82 0
 271              		.thumb
 272              		.syntax unified
 273 0008 0121     		movs	r1, #1
 274 000a 0020     		movs	r0, #0
 275 000c FFF7FEFF 		bl	USBUART_Start
  83:main.c        ****     //UART_Start();
  84:main.c        **** 
  85:main.c        ****     QuadDec_M1_Start();
 276              		.loc 1 85 0
 277 0010 FFF7FEFF 		bl	QuadDec_M1_Start
  86:main.c        ****     QuadDec_M2_Start();
 278              		.loc 1 86 0
 279 0014 FFF7FEFF 		bl	QuadDec_M2_Start
  87:main.c        **** 
  88:main.c        ****     //isr_TS_StartEx(MyISR);
  89:main.c        **** 
  90:main.c        ****     RF_BT_SELECT_Write(1);
 280              		.loc 1 90 0
 281 0018 0120     		movs	r0, #1
 282 001a FFF7FEFF 		bl	RF_BT_SELECT_Write
  91:main.c        ****     //ADC1_IRQ_Enable();
  92:main.c        ****     ADC1_Start();
 283              		.loc 1 92 0
 284 001e FFF7FEFF 		bl	ADC1_Start
  93:main.c        **** 
  94:main.c        ****     ADC1_StartConvert();
 285              		.loc 1 94 0
 286 0022 FFF7FEFF 		bl	ADC1_StartConvert
  95:main.c        **** 
  96:main.c        ****     eoc_StartEx(eoc);
 287              		.loc 1 96 0
 288 0026 B748     		ldr	r0, .L71
 289 0028 FFF7FEFF 		bl	eoc_StartEx
  97:main.c        **** 
  98:main.c        ****     initMotors();
 290              		.loc 1 98 0
 291 002c FFF7FEFF 		bl	initMotors
  99:main.c        **** 
 100:main.c        ****     stop();
 292              		.loc 1 100 0
 293 0030 FFF7FEFF 		bl	stop
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 8


 294              	.LBB2:
 101:main.c        ****     //isr_TS_StartEx(MyISR);
 102:main.c        ****     //Timer_TS_Start();
 103:main.c        **** 
 104:main.c        ****     // Loop through the arrays and set each element to 55 or 0
 105:main.c        ****     for (int i = 0; i < 500; i++) {
 295              		.loc 1 105 0
 296 0034 0023     		movs	r3, #0
 297 0036 C7F80431 		str	r3, [r7, #260]
 298 003a 23E0     		b	.L5
 299              	.L6:
 106:main.c        ****         squares[i][0] = 55;
 300              		.loc 1 106 0 discriminator 3
 301 003c B24A     		ldr	r2, .L71+4
 302 003e D7F80431 		ldr	r3, [r7, #260]
 303 0042 3721     		movs	r1, #55
 304 0044 02F81310 		strb	r1, [r2, r3, lsl #1]
 107:main.c        ****         squares[i][1] = 55;
 305              		.loc 1 107 0 discriminator 3
 306 0048 AF4A     		ldr	r2, .L71+4
 307 004a D7F80431 		ldr	r3, [r7, #260]
 308 004e 5B00     		lsls	r3, r3, #1
 309 0050 1344     		add	r3, r3, r2
 310 0052 3722     		movs	r2, #55
 311 0054 5A70     		strb	r2, [r3, #1]
 108:main.c        ****         instruction[i] = 0;
 312              		.loc 1 108 0 discriminator 3
 313 0056 AD4A     		ldr	r2, .L71+8
 314 0058 D7F80431 		ldr	r3, [r7, #260]
 315 005c 1344     		add	r3, r3, r2
 316 005e 0022     		movs	r2, #0
 317 0060 1A70     		strb	r2, [r3]
 109:main.c        ****         distance[i] = 0;
 318              		.loc 1 109 0 discriminator 3
 319 0062 AB4A     		ldr	r2, .L71+12
 320 0064 D7F80431 		ldr	r3, [r7, #260]
 321 0068 1344     		add	r3, r3, r2
 322 006a 0022     		movs	r2, #0
 323 006c 1A70     		strb	r2, [r3]
 110:main.c        ****         distance[i] = 55;
 324              		.loc 1 110 0 discriminator 3
 325 006e A84A     		ldr	r2, .L71+12
 326 0070 D7F80431 		ldr	r3, [r7, #260]
 327 0074 1344     		add	r3, r3, r2
 328 0076 3722     		movs	r2, #55
 329 0078 1A70     		strb	r2, [r3]
 105:main.c        ****         squares[i][0] = 55;
 330              		.loc 1 105 0 discriminator 3
 331 007a D7F80431 		ldr	r3, [r7, #260]
 332 007e 0133     		adds	r3, r3, #1
 333 0080 C7F80431 		str	r3, [r7, #260]
 334              	.L5:
 105:main.c        ****         squares[i][0] = 55;
 335              		.loc 1 105 0 is_stmt 0 discriminator 1
 336 0084 D7F80431 		ldr	r3, [r7, #260]
 337 0088 B3F5FA7F 		cmp	r3, #500
 338 008c D6DB     		blt	.L6
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 9


 339              	.LBE2:
 111:main.c        ****     }
 112:main.c        ****     pathfind(instruction, distance, squares);
 340              		.loc 1 112 0 is_stmt 1
 341 008e 9E4A     		ldr	r2, .L71+4
 342 0090 9F49     		ldr	r1, .L71+12
 343 0092 9E48     		ldr	r0, .L71+8
 344 0094 FFF7FEFF 		bl	pathfind
 345              	.L70:
 113:main.c        **** 
 114:main.c        ****     //CyDelay(2000);
 115:main.c        ****     for (;;) {
 116:main.c        **** 
 117:main.c        ****         if (flag == 1) {
 346              		.loc 1 117 0
 347 0098 9E4B     		ldr	r3, .L71+16
 348 009a 1B68     		ldr	r3, [r3]
 349 009c 012B     		cmp	r3, #1
 350 009e FBD1     		bne	.L70
 118:main.c        **** 
 119:main.c        ****             ADC1_IRQ_Disable();
 351              		.loc 1 119 0
 352 00a0 FFF7FEFF 		bl	ADC1_IRQ_Disable
 120:main.c        ****             valuesLeftIntersection[count] = ADC1_GetResult16(0);
 353              		.loc 1 120 0
 354 00a4 9C4B     		ldr	r3, .L71+20
 355 00a6 1C68     		ldr	r4, [r3]
 356 00a8 0020     		movs	r0, #0
 357 00aa FFF7FEFF 		bl	ADC1_GetResult16
 358 00ae 0346     		mov	r3, r0
 359 00b0 1A46     		mov	r2, r3
 360 00b2 9A4B     		ldr	r3, .L71+24
 361 00b4 43F82420 		str	r2, [r3, r4, lsl #2]
 121:main.c        ****             valuesLeftLine[count] = ADC1_GetResult16(1);
 362              		.loc 1 121 0
 363 00b8 974B     		ldr	r3, .L71+20
 364 00ba 1C68     		ldr	r4, [r3]
 365 00bc 0120     		movs	r0, #1
 366 00be FFF7FEFF 		bl	ADC1_GetResult16
 367 00c2 0346     		mov	r3, r0
 368 00c4 1A46     		mov	r2, r3
 369 00c6 964B     		ldr	r3, .L71+28
 370 00c8 43F82420 		str	r2, [r3, r4, lsl #2]
 122:main.c        ****             valuesMiddleLine[count] = ADC1_GetResult16(2);
 371              		.loc 1 122 0
 372 00cc 924B     		ldr	r3, .L71+20
 373 00ce 1C68     		ldr	r4, [r3]
 374 00d0 0220     		movs	r0, #2
 375 00d2 FFF7FEFF 		bl	ADC1_GetResult16
 376 00d6 0346     		mov	r3, r0
 377 00d8 1A46     		mov	r2, r3
 378 00da 924B     		ldr	r3, .L71+32
 379 00dc 43F82420 		str	r2, [r3, r4, lsl #2]
 123:main.c        ****             valuesTurnComplete[count] = ADC1_GetResult16(3);
 380              		.loc 1 123 0
 381 00e0 8D4B     		ldr	r3, .L71+20
 382 00e2 1C68     		ldr	r4, [r3]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 10


 383 00e4 0320     		movs	r0, #3
 384 00e6 FFF7FEFF 		bl	ADC1_GetResult16
 385 00ea 0346     		mov	r3, r0
 386 00ec 1A46     		mov	r2, r3
 387 00ee 8E4B     		ldr	r3, .L71+36
 388 00f0 43F82420 		str	r2, [r3, r4, lsl #2]
 124:main.c        ****             valuesRightLine[count] = ADC1_GetResult16(4);
 389              		.loc 1 124 0
 390 00f4 884B     		ldr	r3, .L71+20
 391 00f6 1C68     		ldr	r4, [r3]
 392 00f8 0420     		movs	r0, #4
 393 00fa FFF7FEFF 		bl	ADC1_GetResult16
 394 00fe 0346     		mov	r3, r0
 395 0100 1A46     		mov	r2, r3
 396 0102 8A4B     		ldr	r3, .L71+40
 397 0104 43F82420 		str	r2, [r3, r4, lsl #2]
 125:main.c        ****             valuesRightIntersection[count] = ADC1_GetResult16(5);
 398              		.loc 1 125 0
 399 0108 834B     		ldr	r3, .L71+20
 400 010a 1C68     		ldr	r4, [r3]
 401 010c 0520     		movs	r0, #5
 402 010e FFF7FEFF 		bl	ADC1_GetResult16
 403 0112 0346     		mov	r3, r0
 404 0114 1A46     		mov	r2, r3
 405 0116 864B     		ldr	r3, .L71+44
 406 0118 43F82420 		str	r2, [r3, r4, lsl #2]
 126:main.c        **** 
 127:main.c        ****             count++;
 407              		.loc 1 127 0
 408 011c 7E4B     		ldr	r3, .L71+20
 409 011e 1B68     		ldr	r3, [r3]
 410 0120 0133     		adds	r3, r3, #1
 411 0122 7D4A     		ldr	r2, .L71+20
 412 0124 1360     		str	r3, [r2]
 128:main.c        ****             if (count == ADC_COUNT) {
 413              		.loc 1 128 0
 414 0126 7C4B     		ldr	r3, .L71+20
 415 0128 1B68     		ldr	r3, [r3]
 416 012a B3F57A7F 		cmp	r3, #1000
 417 012e 40F0E083 		bne	.L8
 418              	.LBB3:
 129:main.c        **** 
 130:main.c        ****                 count = 0;
 419              		.loc 1 130 0
 420 0132 794B     		ldr	r3, .L71+20
 421 0134 0022     		movs	r2, #0
 422 0136 1A60     		str	r2, [r3]
 131:main.c        ****                 motorUpdateCount++;
 423              		.loc 1 131 0
 424 0138 7E4B     		ldr	r3, .L71+48
 425 013a 1B68     		ldr	r3, [r3]
 426 013c 0133     		adds	r3, r3, #1
 427 013e 7D4A     		ldr	r2, .L71+48
 428 0140 1360     		str	r3, [r2]
 132:main.c        ****                 int highCountLeftIntersection = 0;
 429              		.loc 1 132 0
 430 0142 0023     		movs	r3, #0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 11


 431 0144 C7F80031 		str	r3, [r7, #256]
 133:main.c        ****                 int highCountLeftLine = 0;
 432              		.loc 1 133 0
 433 0148 0023     		movs	r3, #0
 434 014a C7F8FC30 		str	r3, [r7, #252]
 134:main.c        ****                 int highCountMiddleLine = 0;
 435              		.loc 1 134 0
 436 014e 0023     		movs	r3, #0
 437 0150 C7F8F830 		str	r3, [r7, #248]
 135:main.c        ****                 int highCountTurnComplete = 0;
 438              		.loc 1 135 0
 439 0154 0023     		movs	r3, #0
 440 0156 C7F8F430 		str	r3, [r7, #244]
 136:main.c        ****                 int highCountRightLine = 0;
 441              		.loc 1 136 0
 442 015a 0023     		movs	r3, #0
 443 015c C7F8F030 		str	r3, [r7, #240]
 137:main.c        ****                 int highCountRightIntersection = 0;
 444              		.loc 1 137 0
 445 0160 0023     		movs	r3, #0
 446 0162 C7F8EC30 		str	r3, [r7, #236]
 447              	.LBB4:
 138:main.c        ****                 for (int i = 0; i < ADC_COUNT; i++) {
 448              		.loc 1 138 0
 449 0166 0023     		movs	r3, #0
 450 0168 C7F8E830 		str	r3, [r7, #232]
 451 016c 97E0     		b	.L9
 452              	.L19:
 453              	.LBB5:
 139:main.c        ****                     step = 0;
 454              		.loc 1 139 0
 455 016e 724B     		ldr	r3, .L71+52
 456 0170 0022     		movs	r2, #0
 457 0172 1A60     		str	r2, [r3]
 140:main.c        ****                     char result1[24];
 141:main.c        ****                     char result2[24];
 142:main.c        ****                     if (motorUpdateCount == 1) {
 458              		.loc 1 142 0
 459 0174 6F4B     		ldr	r3, .L71+48
 460 0176 1B68     		ldr	r3, [r3]
 461 0178 012B     		cmp	r3, #1
 462 017a 3DD1     		bne	.L10
 143:main.c        ****                         if (turnComplete == -1 || turnComplete == 1) {
 463              		.loc 1 143 0
 464 017c 6F4B     		ldr	r3, .L71+56
 465 017e 1B68     		ldr	r3, [r3]
 466 0180 B3F1FF3F 		cmp	r3, #-1
 467 0184 03D0     		beq	.L11
 468              		.loc 1 143 0 is_stmt 0 discriminator 1
 469 0186 6D4B     		ldr	r3, .L71+56
 470 0188 1B68     		ldr	r3, [r3]
 471 018a 012B     		cmp	r3, #1
 472 018c 2BD1     		bne	.L12
 473              	.L11:
 144:main.c        ****                             v2M1 = QuadDec_M1_GetCounter() * -1;
 474              		.loc 1 144 0 is_stmt 1
 475 018e FFF7FEFF 		bl	QuadDec_M1_GetCounter
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 12


 476 0192 0346     		mov	r3, r0
 477 0194 5B42     		negs	r3, r3
 478 0196 6A4A     		ldr	r2, .L71+60
 479 0198 1360     		str	r3, [r2]
 145:main.c        ****                             v2M2 = QuadDec_M2_GetCounter() * -1;
 480              		.loc 1 145 0
 481 019a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 482 019e 0346     		mov	r3, r0
 483 01a0 5B42     		negs	r3, r3
 484 01a2 684A     		ldr	r2, .L71+64
 485 01a4 1360     		str	r3, [r2]
 146:main.c        ****                             pulsesTravelled = pulsesTravelled + v2M1 + v2M2;
 486              		.loc 1 146 0
 487 01a6 684B     		ldr	r3, .L71+68
 488 01a8 1A68     		ldr	r2, [r3]
 489 01aa 654B     		ldr	r3, .L71+60
 490 01ac 1B68     		ldr	r3, [r3]
 491 01ae 1A44     		add	r2, r2, r3
 492 01b0 644B     		ldr	r3, .L71+64
 493 01b2 1B68     		ldr	r3, [r3]
 494 01b4 1344     		add	r3, r3, r2
 495 01b6 644A     		ldr	r2, .L71+68
 496 01b8 1360     		str	r3, [r2]
 147:main.c        ****                             itoa((v2M1 - v1M1), result1, 10);
 497              		.loc 1 147 0
 498 01ba 614B     		ldr	r3, .L71+60
 499 01bc 1A68     		ldr	r2, [r3]
 500 01be 634B     		ldr	r3, .L71+72
 501 01c0 1B68     		ldr	r3, [r3]
 502 01c2 D31A     		subs	r3, r2, r3
 503 01c4 07F1C001 		add	r1, r7, #192
 504 01c8 0A22     		movs	r2, #10
 505 01ca 1846     		mov	r0, r3
 506 01cc FFF7FEFF 		bl	itoa
 148:main.c        ****                             itoa((v2M2 - v1M2), result2, 10);
 507              		.loc 1 148 0
 508 01d0 5C4B     		ldr	r3, .L71+64
 509 01d2 1A68     		ldr	r2, [r3]
 510 01d4 5E4B     		ldr	r3, .L71+76
 511 01d6 1B68     		ldr	r3, [r3]
 512 01d8 D31A     		subs	r3, r2, r3
 513 01da 07F1A801 		add	r1, r7, #168
 514 01de 0A22     		movs	r2, #10
 515 01e0 1846     		mov	r0, r3
 516 01e2 FFF7FEFF 		bl	itoa
 517              	.L12:
 149:main.c        ****                         }
 150:main.c        ****                         QuadDec_M1_SetCounter(0);
 518              		.loc 1 150 0
 519 01e6 0020     		movs	r0, #0
 520 01e8 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 151:main.c        ****                         QuadDec_M2_SetCounter(0);
 521              		.loc 1 151 0
 522 01ec 0020     		movs	r0, #0
 523 01ee FFF7FEFF 		bl	QuadDec_M2_SetCounter
 152:main.c        ****                         motorUpdateCount = 0;
 524              		.loc 1 152 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 13


 525 01f2 504B     		ldr	r3, .L71+48
 526 01f4 0022     		movs	r2, #0
 527 01f6 1A60     		str	r2, [r3]
 528              	.L10:
 153:main.c        ****                     }
 154:main.c        ****                     if (valuesLeftIntersection[i] > 2000) {
 529              		.loc 1 154 0
 530 01f8 484A     		ldr	r2, .L71+24
 531 01fa D7F8E830 		ldr	r3, [r7, #232]
 532 01fe 52F82330 		ldr	r3, [r2, r3, lsl #2]
 533 0202 B3F5FA6F 		cmp	r3, #2000
 534 0206 04DD     		ble	.L13
 155:main.c        ****                         highCountLeftIntersection++;
 535              		.loc 1 155 0
 536 0208 D7F80031 		ldr	r3, [r7, #256]
 537 020c 0133     		adds	r3, r3, #1
 538 020e C7F80031 		str	r3, [r7, #256]
 539              	.L13:
 156:main.c        **** 
 157:main.c        ****                     }
 158:main.c        **** 
 159:main.c        ****                     if (valuesLeftLine[i] > 2000) {
 540              		.loc 1 159 0
 541 0212 434A     		ldr	r2, .L71+28
 542 0214 D7F8E830 		ldr	r3, [r7, #232]
 543 0218 52F82330 		ldr	r3, [r2, r3, lsl #2]
 544 021c B3F5FA6F 		cmp	r3, #2000
 545 0220 04DD     		ble	.L14
 160:main.c        ****                         highCountLeftLine++;
 546              		.loc 1 160 0
 547 0222 D7F8FC30 		ldr	r3, [r7, #252]
 548 0226 0133     		adds	r3, r3, #1
 549 0228 C7F8FC30 		str	r3, [r7, #252]
 550              	.L14:
 161:main.c        **** 
 162:main.c        ****                     }
 163:main.c        **** 
 164:main.c        ****                     if (valuesMiddleLine[i] > 2000) {
 551              		.loc 1 164 0
 552 022c 3D4A     		ldr	r2, .L71+32
 553 022e D7F8E830 		ldr	r3, [r7, #232]
 554 0232 52F82330 		ldr	r3, [r2, r3, lsl #2]
 555 0236 B3F5FA6F 		cmp	r3, #2000
 556 023a 04DD     		ble	.L15
 165:main.c        ****                         highCountMiddleLine++;
 557              		.loc 1 165 0
 558 023c D7F8F830 		ldr	r3, [r7, #248]
 559 0240 0133     		adds	r3, r3, #1
 560 0242 C7F8F830 		str	r3, [r7, #248]
 561              	.L15:
 166:main.c        **** 
 167:main.c        ****                     }
 168:main.c        **** 
 169:main.c        ****                     if (valuesTurnComplete[i] > 2000) {
 562              		.loc 1 169 0
 563 0246 384A     		ldr	r2, .L71+36
 564 0248 D7F8E830 		ldr	r3, [r7, #232]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 14


 565 024c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 566 0250 B3F5FA6F 		cmp	r3, #2000
 567 0254 04DD     		ble	.L16
 170:main.c        ****                         highCountTurnComplete++;
 568              		.loc 1 170 0
 569 0256 D7F8F430 		ldr	r3, [r7, #244]
 570 025a 0133     		adds	r3, r3, #1
 571 025c C7F8F430 		str	r3, [r7, #244]
 572              	.L16:
 171:main.c        **** 
 172:main.c        ****                     }
 173:main.c        **** 
 174:main.c        ****                     if (valuesRightLine[i] > 2000) {
 573              		.loc 1 174 0
 574 0260 324A     		ldr	r2, .L71+40
 575 0262 D7F8E830 		ldr	r3, [r7, #232]
 576 0266 52F82330 		ldr	r3, [r2, r3, lsl #2]
 577 026a B3F5FA6F 		cmp	r3, #2000
 578 026e 04DD     		ble	.L17
 175:main.c        ****                         highCountRightLine++;
 579              		.loc 1 175 0
 580 0270 D7F8F030 		ldr	r3, [r7, #240]
 581 0274 0133     		adds	r3, r3, #1
 582 0276 C7F8F030 		str	r3, [r7, #240]
 583              	.L17:
 176:main.c        **** 
 177:main.c        ****                     }
 178:main.c        **** 
 179:main.c        ****                     if (valuesRightIntersection[i] > 2000) {
 584              		.loc 1 179 0
 585 027a 2D4A     		ldr	r2, .L71+44
 586 027c D7F8E830 		ldr	r3, [r7, #232]
 587 0280 52F82330 		ldr	r3, [r2, r3, lsl #2]
 588 0284 B3F5FA6F 		cmp	r3, #2000
 589 0288 04DD     		ble	.L18
 180:main.c        ****                         highCountRightIntersection++;
 590              		.loc 1 180 0
 591 028a D7F8EC30 		ldr	r3, [r7, #236]
 592 028e 0133     		adds	r3, r3, #1
 593 0290 C7F8EC30 		str	r3, [r7, #236]
 594              	.L18:
 595              	.LBE5:
 138:main.c        ****                     step = 0;
 596              		.loc 1 138 0 discriminator 2
 597 0294 D7F8E830 		ldr	r3, [r7, #232]
 598 0298 0133     		adds	r3, r3, #1
 599 029a C7F8E830 		str	r3, [r7, #232]
 600              	.L9:
 138:main.c        ****                     step = 0;
 601              		.loc 1 138 0 is_stmt 0 discriminator 1
 602 029e D7F8E830 		ldr	r3, [r7, #232]
 603 02a2 B3F57A7F 		cmp	r3, #1000
 604 02a6 FFF662AF 		blt	.L19
 605              	.LBE4:
 181:main.c        **** 
 182:main.c        ****                     }
 183:main.c        **** 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 15


 184:main.c        ****                 }
 185:main.c        **** 
 186:main.c        ****                 if (started == 0) {
 606              		.loc 1 186 0 is_stmt 1
 607 02aa 2A4B     		ldr	r3, .L71+80
 608 02ac 1B68     		ldr	r3, [r3]
 609 02ae 002B     		cmp	r3, #0
 610 02b0 40F0AF80 		bne	.L20
 611              	.LBB6:
 187:main.c        ****                    
 188:main.c        ****                     int i, firstNonZeroIndex = -1;
 612              		.loc 1 188 0
 613 02b4 4FF0FF33 		mov	r3, #-1
 614 02b8 C7F8E030 		str	r3, [r7, #224]
 189:main.c        ****                     for (i = 0; i < 500; i++) {
 615              		.loc 1 189 0
 616 02bc 0023     		movs	r3, #0
 617 02be C7F8E430 		str	r3, [r7, #228]
 618 02c2 10E0     		b	.L21
 619              	.L24:
 190:main.c        ****                         if (instruction[i] != 0) {
 620              		.loc 1 190 0
 621 02c4 114A     		ldr	r2, .L71+8
 622 02c6 D7F8E430 		ldr	r3, [r7, #228]
 623 02ca 1344     		add	r3, r3, r2
 624 02cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 625 02ce 002B     		cmp	r3, #0
 626 02d0 04D0     		beq	.L22
 191:main.c        ****                             firstNonZeroIndex = i;
 627              		.loc 1 191 0
 628 02d2 D7F8E430 		ldr	r3, [r7, #228]
 629 02d6 C7F8E030 		str	r3, [r7, #224]
 192:main.c        ****                             break;
 630              		.loc 1 192 0
 631 02da 09E0     		b	.L23
 632              	.L22:
 189:main.c        ****                         if (instruction[i] != 0) {
 633              		.loc 1 189 0 discriminator 2
 634 02dc D7F8E430 		ldr	r3, [r7, #228]
 635 02e0 0133     		adds	r3, r3, #1
 636 02e2 C7F8E430 		str	r3, [r7, #228]
 637              	.L21:
 189:main.c        ****                         if (instruction[i] != 0) {
 638              		.loc 1 189 0 is_stmt 0 discriminator 1
 639 02e6 D7F8E430 		ldr	r3, [r7, #228]
 640 02ea B3F5FA7F 		cmp	r3, #500
 641 02ee E9DB     		blt	.L24
 642              	.L23:
 193:main.c        ****                         }
 194:main.c        ****                     }
 195:main.c        **** 
 196:main.c        ****                     if (firstNonZeroIndex != -1) {
 643              		.loc 1 196 0 is_stmt 1
 644 02f0 D7F8E030 		ldr	r3, [r7, #224]
 645 02f4 B3F1FF3F 		cmp	r3, #-1
 646 02f8 72D0     		beq	.L25
 197:main.c        ****                         // Shift the array to start with the first non-zero element
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 16


 198:main.c        ****                         for (i = 0; i < 500 - firstNonZeroIndex; i++) {
 647              		.loc 1 198 0
 648 02fa 0023     		movs	r3, #0
 649 02fc C7F8E430 		str	r3, [r7, #228]
 650 0300 49E0     		b	.L26
 651              	.L72:
 652 0302 00BF     		.align	2
 653              	.L71:
 654 0304 00000000 		.word	eoc
 655 0308 00000000 		.word	squares
 656 030c 00000000 		.word	instruction
 657 0310 00000000 		.word	distance
 658 0314 00000000 		.word	flag
 659 0318 00000000 		.word	count
 660 031c 00000000 		.word	valuesLeftIntersection
 661 0320 00000000 		.word	valuesLeftLine
 662 0324 00000000 		.word	valuesMiddleLine
 663 0328 00000000 		.word	valuesTurnComplete
 664 032c 00000000 		.word	valuesRightLine
 665 0330 00000000 		.word	valuesRightIntersection
 666 0334 00000000 		.word	motorUpdateCount
 667 0338 00000000 		.word	step
 668 033c 00000000 		.word	turnComplete
 669 0340 00000000 		.word	v2M1
 670 0344 00000000 		.word	v2M2
 671 0348 00000000 		.word	pulsesTravelled
 672 034c 00000000 		.word	v1M1
 673 0350 00000000 		.word	v1M2
 674 0354 00000000 		.word	started
 675              	.L27:
 199:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 676              		.loc 1 199 0 discriminator 3
 677 0358 D7F8E420 		ldr	r2, [r7, #228]
 678 035c D7F8E030 		ldr	r3, [r7, #224]
 679 0360 1344     		add	r3, r3, r2
 680 0362 C64A     		ldr	r2, .L73
 681 0364 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 682 0366 C54A     		ldr	r2, .L73
 683 0368 D7F8E430 		ldr	r3, [r7, #228]
 684 036c 1344     		add	r3, r3, r2
 685 036e 0A46     		mov	r2, r1
 686 0370 1A70     		strb	r2, [r3]
 200:main.c        ****                             distance[i] = distance[i + firstNonZeroIndex];
 687              		.loc 1 200 0 discriminator 3
 688 0372 D7F8E420 		ldr	r2, [r7, #228]
 689 0376 D7F8E030 		ldr	r3, [r7, #224]
 690 037a 1344     		add	r3, r3, r2
 691 037c C04A     		ldr	r2, .L73+4
 692 037e D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 693 0380 BF4A     		ldr	r2, .L73+4
 694 0382 D7F8E430 		ldr	r3, [r7, #228]
 695 0386 1344     		add	r3, r3, r2
 696 0388 0A46     		mov	r2, r1
 697 038a 1A70     		strb	r2, [r3]
 198:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 698              		.loc 1 198 0 discriminator 3
 699 038c D7F8E430 		ldr	r3, [r7, #228]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 17


 700 0390 0133     		adds	r3, r3, #1
 701 0392 C7F8E430 		str	r3, [r7, #228]
 702              	.L26:
 198:main.c        ****                             instruction[i] = instruction[i + firstNonZeroIndex];
 703              		.loc 1 198 0 is_stmt 0 discriminator 1
 704 0396 D7F8E030 		ldr	r3, [r7, #224]
 705 039a C3F5FA72 		rsb	r2, r3, #500
 706 039e D7F8E430 		ldr	r3, [r7, #228]
 707 03a2 9A42     		cmp	r2, r3
 708 03a4 D8DC     		bgt	.L27
 201:main.c        ****                         }
 202:main.c        **** 
 203:main.c        ****                         // Zero out the remaining elements
 204:main.c        ****                         for (i = 500 - firstNonZeroIndex; i < 500; i++) {
 709              		.loc 1 204 0 is_stmt 1
 710 03a6 D7F8E030 		ldr	r3, [r7, #224]
 711 03aa C3F5FA73 		rsb	r3, r3, #500
 712 03ae C7F8E430 		str	r3, [r7, #228]
 713 03b2 10E0     		b	.L28
 714              	.L29:
 205:main.c        ****                             instruction[i] = 0;
 715              		.loc 1 205 0 discriminator 3
 716 03b4 B14A     		ldr	r2, .L73
 717 03b6 D7F8E430 		ldr	r3, [r7, #228]
 718 03ba 1344     		add	r3, r3, r2
 719 03bc 0022     		movs	r2, #0
 720 03be 1A70     		strb	r2, [r3]
 206:main.c        ****                             distance[i] = 0;
 721              		.loc 1 206 0 discriminator 3
 722 03c0 AF4A     		ldr	r2, .L73+4
 723 03c2 D7F8E430 		ldr	r3, [r7, #228]
 724 03c6 1344     		add	r3, r3, r2
 725 03c8 0022     		movs	r2, #0
 726 03ca 1A70     		strb	r2, [r3]
 204:main.c        ****                             instruction[i] = 0;
 727              		.loc 1 204 0 discriminator 3
 728 03cc D7F8E430 		ldr	r3, [r7, #228]
 729 03d0 0133     		adds	r3, r3, #1
 730 03d2 C7F8E430 		str	r3, [r7, #228]
 731              	.L28:
 204:main.c        ****                             instruction[i] = 0;
 732              		.loc 1 204 0 is_stmt 0 discriminator 1
 733 03d6 D7F8E430 		ldr	r3, [r7, #228]
 734 03da B3F5FA7F 		cmp	r3, #500
 735 03de E9DB     		blt	.L29
 736              	.L25:
 737              	.LBB7:
 207:main.c        ****                         }
 208:main.c        **** 
 209:main.c        ****                     } else {
 210:main.c        ****                         // The array contains all zeros
 211:main.c        **** 
 212:main.c        ****                     }
 213:main.c        ****                     for (int i = 0; i < 500; i++) {
 738              		.loc 1 213 0 is_stmt 1
 739 03e0 0023     		movs	r3, #0
 740 03e2 C7F8DC30 		str	r3, [r7, #220]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 18


 741 03e6 04E0     		b	.L30
 742              	.L31:
 743              		.loc 1 213 0 is_stmt 0 discriminator 3
 744 03e8 D7F8DC30 		ldr	r3, [r7, #220]
 745 03ec 0133     		adds	r3, r3, #1
 746 03ee C7F8DC30 		str	r3, [r7, #220]
 747              	.L30:
 748              		.loc 1 213 0 discriminator 1
 749 03f2 D7F8DC30 		ldr	r3, [r7, #220]
 750 03f6 B3F5FA7F 		cmp	r3, #500
 751 03fa F5DB     		blt	.L31
 752              	.LBE7:
 214:main.c        **** 
 215:main.c        ****                         char instStr[24];
 216:main.c        **** 
 217:main.c        ****                         //snprintf(instStr, sizeof(instStr), "%u - %u \r\n", (unsigned char) instru
 218:main.c        **** 
 219:main.c        ****                         //usbPutString(instStr);
 220:main.c        ****                     }
 221:main.c        ****                     started = 1;
 753              		.loc 1 221 0 is_stmt 1
 754 03fc A14B     		ldr	r3, .L73+8
 755 03fe 0122     		movs	r2, #1
 756 0400 1A60     		str	r2, [r3]
 222:main.c        ****                     turnComplete = -1; //let the robot travel forward first
 757              		.loc 1 222 0
 758 0402 A14B     		ldr	r3, .L73+12
 759 0404 4FF0FF32 		mov	r2, #-1
 760 0408 1A60     		str	r2, [r3]
 223:main.c        ****                     checkDistance = 0; //robot checks/stops distance when this is on
 761              		.loc 1 223 0
 762 040a A04B     		ldr	r3, .L73+16
 763 040c 0022     		movs	r2, #0
 764 040e 1A60     		str	r2, [r3]
 765              	.LBE6:
 766 0410 6FE2     		b	.L8
 767              	.L20:
 768              	.LBB8:
 224:main.c        ****                     
 225:main.c        ****                 } else {
 226:main.c        **** 
 227:main.c        ****                     started = 1;
 769              		.loc 1 227 0
 770 0412 9C4B     		ldr	r3, .L73+8
 771 0414 0122     		movs	r2, #1
 772 0416 1A60     		str	r2, [r3]
 228:main.c        **** 
 229:main.c        ****                     char currentInst = instruction[instCounter];
 773              		.loc 1 229 0
 774 0418 9D4B     		ldr	r3, .L73+20
 775 041a 1B68     		ldr	r3, [r3]
 776 041c 974A     		ldr	r2, .L73
 777 041e D35C     		ldrb	r3, [r2, r3]
 778 0420 87F8DB30 		strb	r3, [r7, #219]
 230:main.c        ****                     char nextInst = instruction[instCounter + 1];
 779              		.loc 1 230 0
 780 0424 9A4B     		ldr	r3, .L73+20
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 19


 781 0426 1B68     		ldr	r3, [r3]
 782 0428 0133     		adds	r3, r3, #1
 783 042a 944A     		ldr	r2, .L73
 784 042c D35C     		ldrb	r3, [r2, r3]
 785 042e 87F8DA30 		strb	r3, [r7, #218]
 231:main.c        ****                     if (currentInst == 0) {
 786              		.loc 1 231 0
 787 0432 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 788 0436 002B     		cmp	r3, #0
 789 0438 1AD1     		bne	.L32
 232:main.c        ****                         LED_PIN_1_Write(0);
 790              		.loc 1 232 0
 791 043a 0020     		movs	r0, #0
 792 043c FFF7FEFF 		bl	LED_PIN_1_Write
 233:main.c        ****                         LED_PIN_6_Write(0);
 793              		.loc 1 233 0
 794 0440 0020     		movs	r0, #0
 795 0442 FFF7FEFF 		bl	LED_PIN_6_Write
 234:main.c        ****                         stop();
 796              		.loc 1 234 0
 797 0446 FFF7FEFF 		bl	stop
 235:main.c        ****                         // Stop
 236:main.c        ****                         CyDelay(1000);
 798              		.loc 1 236 0
 799 044a 4FF47A70 		mov	r0, #1000
 800 044e FFF7FEFF 		bl	CyDelay
 237:main.c        ****                         if (nextInst == 1 || nextInst == 5) {
 801              		.loc 1 237 0
 802 0452 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 803 0456 012B     		cmp	r3, #1
 804 0458 04D0     		beq	.L33
 805              		.loc 1 237 0 is_stmt 0 discriminator 1
 806 045a 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 807 045e 052B     		cmp	r3, #5
 808 0460 40F0F980 		bne	.L35
 809              	.L33:
 238:main.c        ****                             turnLeft();
 810              		.loc 1 238 0 is_stmt 1
 811 0464 FFF7FEFF 		bl	turnLeft
 239:main.c        ****                             CyDelay(50);
 812              		.loc 1 239 0
 813 0468 3220     		movs	r0, #50
 814 046a FFF7FEFF 		bl	CyDelay
 815 046e F2E0     		b	.L35
 816              	.L32:
 240:main.c        ****                         }
 241:main.c        ****                     } else if ((currentInst == 1 || currentInst == 5)&& turnComplete == -1) {
 817              		.loc 1 241 0
 818 0470 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 819 0474 012B     		cmp	r3, #1
 820 0476 03D0     		beq	.L36
 821              		.loc 1 241 0 is_stmt 0 discriminator 2
 822 0478 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 823 047c 052B     		cmp	r3, #5
 824 047e 19D1     		bne	.L37
 825              	.L36:
 826              		.loc 1 241 0 discriminator 3
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 20


 827 0480 814B     		ldr	r3, .L73+12
 828 0482 1B68     		ldr	r3, [r3]
 829 0484 B3F1FF3F 		cmp	r3, #-1
 830 0488 14D1     		bne	.L37
 242:main.c        ****                         LED_PIN_1_Write(1);
 831              		.loc 1 242 0 is_stmt 1
 832 048a 0120     		movs	r0, #1
 833 048c FFF7FEFF 		bl	LED_PIN_1_Write
 243:main.c        ****                         LED_PIN_6_Write(0);
 834              		.loc 1 243 0
 835 0490 0020     		movs	r0, #0
 836 0492 FFF7FEFF 		bl	LED_PIN_6_Write
 244:main.c        ****                         turnComplete = 0;
 837              		.loc 1 244 0
 838 0496 7C4B     		ldr	r3, .L73+12
 839 0498 0022     		movs	r2, #0
 840 049a 1A60     		str	r2, [r3]
 245:main.c        ****                         turnLeft();
 841              		.loc 1 245 0
 842 049c FFF7FEFF 		bl	turnLeft
 246:main.c        ****                         LED_PIN_4_Write(0);
 843              		.loc 1 246 0
 844 04a0 0020     		movs	r0, #0
 845 04a2 FFF7FEFF 		bl	LED_PIN_4_Write
 247:main.c        ****                         CyDelay(150);
 846              		.loc 1 247 0
 847 04a6 9620     		movs	r0, #150
 848 04a8 FFF7FEFF 		bl	CyDelay
 248:main.c        ****                         pulsesTravelled = 0;
 849              		.loc 1 248 0
 850 04ac 794B     		ldr	r3, .L73+24
 851 04ae 0022     		movs	r2, #0
 852 04b0 1A60     		str	r2, [r3]
 853 04b2 D0E0     		b	.L35
 854              	.L37:
 249:main.c        ****                         // Complete a left turn, then follow line
 250:main.c        **** 
 251:main.c        ****                     } else if ((currentInst == 1 || currentInst == 5) && turnComplete == 0) {
 855              		.loc 1 251 0
 856 04b4 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 857 04b8 012B     		cmp	r3, #1
 858 04ba 03D0     		beq	.L38
 859              		.loc 1 251 0 is_stmt 0 discriminator 2
 860 04bc 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 861 04c0 052B     		cmp	r3, #5
 862 04c2 20D1     		bne	.L39
 863              	.L38:
 864              		.loc 1 251 0 discriminator 3
 865 04c4 704B     		ldr	r3, .L73+12
 866 04c6 1B68     		ldr	r3, [r3]
 867 04c8 002B     		cmp	r3, #0
 868 04ca 1CD1     		bne	.L39
 252:main.c        ****                         lastAdjustDirection = 0;
 869              		.loc 1 252 0 is_stmt 1
 870 04cc 724B     		ldr	r3, .L73+28
 871 04ce 0022     		movs	r2, #0
 872 04d0 1A60     		str	r2, [r3]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 21


 253:main.c        ****                         if (L_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 873              		.loc 1 253 0
 874 04d2 D7F8FC30 		ldr	r3, [r7, #252]
 875 04d6 4A2B     		cmp	r3, #74
 876 04d8 11DC     		bgt	.L40
 254:main.c        ****                             turnComplete = 1;
 877              		.loc 1 254 0
 878 04da 6B4B     		ldr	r3, .L73+12
 879 04dc 0122     		movs	r2, #1
 880 04de 1A60     		str	r2, [r3]
 255:main.c        ****                             stop();
 881              		.loc 1 255 0
 882 04e0 FFF7FEFF 		bl	stop
 256:main.c        ****                             CyDelay(200);
 883              		.loc 1 256 0
 884 04e4 C820     		movs	r0, #200
 885 04e6 FFF7FEFF 		bl	CyDelay
 257:main.c        ****                             
 258:main.c        ****                             adjustRight();
 886              		.loc 1 258 0
 887 04ea FFF7FEFF 		bl	adjustRight
 259:main.c        ****                             CyDelay(225);
 888              		.loc 1 259 0
 889 04ee E120     		movs	r0, #225
 890 04f0 FFF7FEFF 		bl	CyDelay
 260:main.c        ****                             
 261:main.c        ****                             stop();
 891              		.loc 1 261 0
 892 04f4 FFF7FEFF 		bl	stop
 262:main.c        ****                             CyDelay(200);
 893              		.loc 1 262 0
 894 04f8 C820     		movs	r0, #200
 895 04fa FFF7FEFF 		bl	CyDelay
 896              	.L40:
 263:main.c        ****                         }
 264:main.c        ****                         pulsesTravelled = 0;
 897              		.loc 1 264 0
 898 04fe 654B     		ldr	r3, .L73+24
 899 0500 0022     		movs	r2, #0
 900 0502 1A60     		str	r2, [r3]
 901 0504 A7E0     		b	.L35
 902              	.L39:
 265:main.c        ****                     } else if (currentInst == 2 || currentInst == 6) {
 903              		.loc 1 265 0
 904 0506 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 905 050a 022B     		cmp	r3, #2
 906 050c 03D0     		beq	.L41
 907              		.loc 1 265 0 is_stmt 0 discriminator 1
 908 050e 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 909 0512 062B     		cmp	r3, #6
 910 0514 06D1     		bne	.L42
 911              	.L41:
 266:main.c        ****                         LED_PIN_1_Write(1);
 912              		.loc 1 266 0 is_stmt 1
 913 0516 0120     		movs	r0, #1
 914 0518 FFF7FEFF 		bl	LED_PIN_1_Write
 267:main.c        ****                         LED_PIN_6_Write(1);
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 22


 915              		.loc 1 267 0
 916 051c 0120     		movs	r0, #1
 917 051e FFF7FEFF 		bl	LED_PIN_6_Write
 918 0522 98E0     		b	.L35
 919              	.L42:
 268:main.c        ****                         // Drive straight
 269:main.c        ****                         
 270:main.c        ****                         
 271:main.c        ****                     } else if ((currentInst == 3||currentInst == 7) && turnComplete == -1) {
 920              		.loc 1 271 0
 921 0524 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 922 0528 032B     		cmp	r3, #3
 923 052a 03D0     		beq	.L43
 924              		.loc 1 271 0 is_stmt 0 discriminator 2
 925 052c 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 926 0530 072B     		cmp	r3, #7
 927 0532 19D1     		bne	.L44
 928              	.L43:
 929              		.loc 1 271 0 discriminator 3
 930 0534 544B     		ldr	r3, .L73+12
 931 0536 1B68     		ldr	r3, [r3]
 932 0538 B3F1FF3F 		cmp	r3, #-1
 933 053c 14D1     		bne	.L44
 272:main.c        ****                         LED_PIN_1_Write(0);
 934              		.loc 1 272 0 is_stmt 1
 935 053e 0020     		movs	r0, #0
 936 0540 FFF7FEFF 		bl	LED_PIN_1_Write
 273:main.c        ****                         LED_PIN_6_Write(1);
 937              		.loc 1 273 0
 938 0544 0120     		movs	r0, #1
 939 0546 FFF7FEFF 		bl	LED_PIN_6_Write
 274:main.c        ****                         turnComplete = 0;
 940              		.loc 1 274 0
 941 054a 4F4B     		ldr	r3, .L73+12
 942 054c 0022     		movs	r2, #0
 943 054e 1A60     		str	r2, [r3]
 275:main.c        ****                         turnRight();
 944              		.loc 1 275 0
 945 0550 FFF7FEFF 		bl	turnRight
 276:main.c        ****                         LED_PIN_4_Write(0);
 946              		.loc 1 276 0
 947 0554 0020     		movs	r0, #0
 948 0556 FFF7FEFF 		bl	LED_PIN_4_Write
 277:main.c        ****                         CyDelay(150);
 949              		.loc 1 277 0
 950 055a 9620     		movs	r0, #150
 951 055c FFF7FEFF 		bl	CyDelay
 278:main.c        ****                         pulsesTravelled = 0;
 952              		.loc 1 278 0
 953 0560 4C4B     		ldr	r3, .L73+24
 954 0562 0022     		movs	r2, #0
 955 0564 1A60     		str	r2, [r3]
 956 0566 76E0     		b	.L35
 957              	.L44:
 279:main.c        **** 
 280:main.c        ****                     } else if ((currentInst == 3||currentInst == 7) && turnComplete == 0) {
 958              		.loc 1 280 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 23


 959 0568 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 960 056c 032B     		cmp	r3, #3
 961 056e 03D0     		beq	.L45
 962              		.loc 1 280 0 is_stmt 0 discriminator 2
 963 0570 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 964 0574 072B     		cmp	r3, #7
 965 0576 20D1     		bne	.L46
 966              	.L45:
 967              		.loc 1 280 0 discriminator 3
 968 0578 434B     		ldr	r3, .L73+12
 969 057a 1B68     		ldr	r3, [r3]
 970 057c 002B     		cmp	r3, #0
 971 057e 1CD1     		bne	.L46
 281:main.c        ****                         lastAdjustDirection = 2;
 972              		.loc 1 281 0 is_stmt 1
 973 0580 454B     		ldr	r3, .L73+28
 974 0582 0222     		movs	r2, #2
 975 0584 1A60     		str	r2, [r3]
 282:main.c        ****                         if (R_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 976              		.loc 1 282 0
 977 0586 D7F8F030 		ldr	r3, [r7, #240]
 978 058a 4A2B     		cmp	r3, #74
 979 058c 11DC     		bgt	.L47
 283:main.c        ****                             turnComplete = 1;
 980              		.loc 1 283 0
 981 058e 3E4B     		ldr	r3, .L73+12
 982 0590 0122     		movs	r2, #1
 983 0592 1A60     		str	r2, [r3]
 284:main.c        ****                             stop();
 984              		.loc 1 284 0
 985 0594 FFF7FEFF 		bl	stop
 285:main.c        ****                             CyDelay(200);
 986              		.loc 1 285 0
 987 0598 C820     		movs	r0, #200
 988 059a FFF7FEFF 		bl	CyDelay
 286:main.c        ****                             
 287:main.c        ****                             adjustLeft();
 989              		.loc 1 287 0
 990 059e FFF7FEFF 		bl	adjustLeft
 288:main.c        ****                             CyDelay(225);
 991              		.loc 1 288 0
 992 05a2 E120     		movs	r0, #225
 993 05a4 FFF7FEFF 		bl	CyDelay
 289:main.c        ****                             
 290:main.c        ****                             stop();
 994              		.loc 1 290 0
 995 05a8 FFF7FEFF 		bl	stop
 291:main.c        ****                             CyDelay(200);
 996              		.loc 1 291 0
 997 05ac C820     		movs	r0, #200
 998 05ae FFF7FEFF 		bl	CyDelay
 999              	.L47:
 292:main.c        ****                         }
 293:main.c        ****                         pulsesTravelled = 0;
 1000              		.loc 1 293 0
 1001 05b2 384B     		ldr	r3, .L73+24
 1002 05b4 0022     		movs	r2, #0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 24


 1003 05b6 1A60     		str	r2, [r3]
 1004 05b8 4DE0     		b	.L35
 1005              	.L46:
 294:main.c        ****                     } else if ((currentInst == 4||currentInst == 8) && turnComplete == -1) {
 1006              		.loc 1 294 0
 1007 05ba 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1008 05be 042B     		cmp	r3, #4
 1009 05c0 03D0     		beq	.L48
 1010              		.loc 1 294 0 is_stmt 0 discriminator 2
 1011 05c2 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1012 05c6 082B     		cmp	r3, #8
 1013 05c8 1AD1     		bne	.L49
 1014              	.L48:
 1015              		.loc 1 294 0 discriminator 3
 1016 05ca 2F4B     		ldr	r3, .L73+12
 1017 05cc 1B68     		ldr	r3, [r3]
 1018 05ce B3F1FF3F 		cmp	r3, #-1
 1019 05d2 15D1     		bne	.L49
 295:main.c        ****                         LED_PIN_1_Write(0);
 1020              		.loc 1 295 0 is_stmt 1
 1021 05d4 0020     		movs	r0, #0
 1022 05d6 FFF7FEFF 		bl	LED_PIN_1_Write
 296:main.c        ****                         LED_PIN_6_Write(0);
 1023              		.loc 1 296 0
 1024 05da 0020     		movs	r0, #0
 1025 05dc FFF7FEFF 		bl	LED_PIN_6_Write
 297:main.c        ****                         turnComplete = 0;
 1026              		.loc 1 297 0
 1027 05e0 294B     		ldr	r3, .L73+12
 1028 05e2 0022     		movs	r2, #0
 1029 05e4 1A60     		str	r2, [r3]
 298:main.c        ****                         turnRight();
 1030              		.loc 1 298 0
 1031 05e6 FFF7FEFF 		bl	turnRight
 299:main.c        ****                         LED_PIN_4_Write(0);
 1032              		.loc 1 299 0
 1033 05ea 0020     		movs	r0, #0
 1034 05ec FFF7FEFF 		bl	LED_PIN_4_Write
 300:main.c        ****                         CyDelay(300);
 1035              		.loc 1 300 0
 1036 05f0 4FF49670 		mov	r0, #300
 1037 05f4 FFF7FEFF 		bl	CyDelay
 301:main.c        ****                         pulsesTravelled = 0;
 1038              		.loc 1 301 0
 1039 05f8 264B     		ldr	r3, .L73+24
 1040 05fa 0022     		movs	r2, #0
 1041 05fc 1A60     		str	r2, [r3]
 1042 05fe 2AE0     		b	.L35
 1043              	.L49:
 302:main.c        **** 
 303:main.c        ****                     } else if ((currentInst == 4||currentInst == 8) && turnComplete == 0) {
 1044              		.loc 1 303 0
 1045 0600 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1046 0604 042B     		cmp	r3, #4
 1047 0606 03D0     		beq	.L50
 1048              		.loc 1 303 0 is_stmt 0 discriminator 2
 1049 0608 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 25


 1050 060c 082B     		cmp	r3, #8
 1051 060e 22D1     		bne	.L35
 1052              	.L50:
 1053              		.loc 1 303 0 discriminator 3
 1054 0610 1D4B     		ldr	r3, .L73+12
 1055 0612 1B68     		ldr	r3, [r3]
 1056 0614 002B     		cmp	r3, #0
 1057 0616 1ED1     		bne	.L35
 304:main.c        ****                         LED_PIN_1_Write(0);
 1058              		.loc 1 304 0 is_stmt 1
 1059 0618 0020     		movs	r0, #0
 1060 061a FFF7FEFF 		bl	LED_PIN_1_Write
 305:main.c        ****                         LED_PIN_6_Write(0);
 1061              		.loc 1 305 0
 1062 061e 0020     		movs	r0, #0
 1063 0620 FFF7FEFF 		bl	LED_PIN_6_Write
 306:main.c        ****                         // Do a 180, then follow line
 307:main.c        ****                         if (R_LINE_BLACK) { //code that senses when the turn is done, can be optimi
 1064              		.loc 1 307 0
 1065 0624 D7F8F030 		ldr	r3, [r7, #240]
 1066 0628 4A2B     		cmp	r3, #74
 1067 062a 11DC     		bgt	.L51
 308:main.c        ****                             turnComplete = 1;
 1068              		.loc 1 308 0
 1069 062c 164B     		ldr	r3, .L73+12
 1070 062e 0122     		movs	r2, #1
 1071 0630 1A60     		str	r2, [r3]
 309:main.c        ****                             stop();
 1072              		.loc 1 309 0
 1073 0632 FFF7FEFF 		bl	stop
 310:main.c        ****                             CyDelay(200);
 1074              		.loc 1 310 0
 1075 0636 C820     		movs	r0, #200
 1076 0638 FFF7FEFF 		bl	CyDelay
 311:main.c        ****                             
 312:main.c        ****                             adjustLeft();
 1077              		.loc 1 312 0
 1078 063c FFF7FEFF 		bl	adjustLeft
 313:main.c        ****                             CyDelay(225);
 1079              		.loc 1 313 0
 1080 0640 E120     		movs	r0, #225
 1081 0642 FFF7FEFF 		bl	CyDelay
 314:main.c        ****                             
 315:main.c        ****                             stop();
 1082              		.loc 1 315 0
 1083 0646 FFF7FEFF 		bl	stop
 316:main.c        ****                             CyDelay(200);
 1084              		.loc 1 316 0
 1085 064a C820     		movs	r0, #200
 1086 064c FFF7FEFF 		bl	CyDelay
 1087              	.L51:
 317:main.c        ****                         }
 318:main.c        ****                         pulsesTravelled = 0;
 1088              		.loc 1 318 0
 1089 0650 104B     		ldr	r3, .L73+24
 1090 0652 0022     		movs	r2, #0
 1091 0654 1A60     		str	r2, [r3]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 26


 1092              	.L35:
 319:main.c        ****                    
 320:main.c        ****                     }
 321:main.c        **** 
 322:main.c        ****                     //only allow code to straighten if turn is complete
 323:main.c        ****                     if (turnComplete != 0 ) {
 1093              		.loc 1 323 0
 1094 0656 0C4B     		ldr	r3, .L73+12
 1095 0658 1B68     		ldr	r3, [r3]
 1096 065a 002B     		cmp	r3, #0
 1097 065c 00F03B81 		beq	.L52
 1098              	.LBB9:
 324:main.c        ****                         if ((M_LINE_BLACK && L_LINE_BLACK)) { // if robot slightly too far right
 1099              		.loc 1 324 0
 1100 0660 D7F8F830 		ldr	r3, [r7, #248]
 1101 0664 4A2B     		cmp	r3, #74
 1102 0666 19DC     		bgt	.L53
 1103              		.loc 1 324 0 is_stmt 0 discriminator 1
 1104 0668 D7F8FC30 		ldr	r3, [r7, #252]
 1105 066c 4A2B     		cmp	r3, #74
 1106 066e 15DC     		bgt	.L53
 325:main.c        ****                             adjustLeft();
 1107              		.loc 1 325 0 is_stmt 1
 1108 0670 FFF7FEFF 		bl	adjustLeft
 326:main.c        ****                             lastAdjustDirection = 0;
 1109              		.loc 1 326 0
 1110 0674 084B     		ldr	r3, .L73+28
 1111 0676 0022     		movs	r2, #0
 1112 0678 1A60     		str	r2, [r3]
 1113 067a 4DE0     		b	.L54
 1114              	.L74:
 1115              		.align	2
 1116              	.L73:
 1117 067c 00000000 		.word	instruction
 1118 0680 00000000 		.word	distance
 1119 0684 00000000 		.word	started
 1120 0688 00000000 		.word	turnComplete
 1121 068c 00000000 		.word	checkDistance
 1122 0690 00000000 		.word	instCounter
 1123 0694 00000000 		.word	pulsesTravelled
 1124 0698 00000000 		.word	lastAdjustDirection
 1125              	.L53:
 327:main.c        **** 
 328:main.c        ****                         } else if (M_LINE_BLACK && R_LINE_BLACK) { //  if robot slightly too far le
 1126              		.loc 1 328 0
 1127 069c D7F8F830 		ldr	r3, [r7, #248]
 1128 06a0 4A2B     		cmp	r3, #74
 1129 06a2 09DC     		bgt	.L55
 1130              		.loc 1 328 0 is_stmt 0 discriminator 1
 1131 06a4 D7F8F030 		ldr	r3, [r7, #240]
 1132 06a8 4A2B     		cmp	r3, #74
 1133 06aa 05DC     		bgt	.L55
 329:main.c        ****                             adjustRight();
 1134              		.loc 1 329 0 is_stmt 1
 1135 06ac FFF7FEFF 		bl	adjustRight
 330:main.c        ****                             lastAdjustDirection = 2;
 1136              		.loc 1 330 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 27


 1137 06b0 974B     		ldr	r3, .L75+16
 1138 06b2 0222     		movs	r2, #2
 1139 06b4 1A60     		str	r2, [r3]
 1140 06b6 2FE0     		b	.L54
 1141              	.L55:
 331:main.c        **** 
 332:main.c        ****                         } else if (M_LINE_BLACK) { // if robot in the center keep moving straight
 1142              		.loc 1 332 0
 1143 06b8 D7F8F830 		ldr	r3, [r7, #248]
 1144 06bc 4A2B     		cmp	r3, #74
 1145 06be 07DC     		bgt	.L56
 333:main.c        ****                             lastAdjustDirection = 1;
 1146              		.loc 1 333 0
 1147 06c0 934B     		ldr	r3, .L75+16
 1148 06c2 0122     		movs	r2, #1
 1149 06c4 1A60     		str	r2, [r3]
 334:main.c        ****                             driveForward(0, 0);
 1150              		.loc 1 334 0
 1151 06c6 0021     		movs	r1, #0
 1152 06c8 0020     		movs	r0, #0
 1153 06ca FFF7FEFF 		bl	driveForward
 1154 06ce 23E0     		b	.L54
 1155              	.L56:
 335:main.c        **** 
 336:main.c        ****                         } else if (R_LINE_BLACK) { // if robot too far left
 1156              		.loc 1 336 0
 1157 06d0 D7F8F030 		ldr	r3, [r7, #240]
 1158 06d4 4A2B     		cmp	r3, #74
 1159 06d6 05DC     		bgt	.L57
 337:main.c        ****                             adjustRight();
 1160              		.loc 1 337 0
 1161 06d8 FFF7FEFF 		bl	adjustRight
 338:main.c        ****                             lastAdjustDirection = 2;
 1162              		.loc 1 338 0
 1163 06dc 8C4B     		ldr	r3, .L75+16
 1164 06de 0222     		movs	r2, #2
 1165 06e0 1A60     		str	r2, [r3]
 1166 06e2 19E0     		b	.L54
 1167              	.L57:
 339:main.c        **** 
 340:main.c        ****                         } else if (L_LINE_BLACK) { // if robot too far right
 1168              		.loc 1 340 0
 1169 06e4 D7F8FC30 		ldr	r3, [r7, #252]
 1170 06e8 4A2B     		cmp	r3, #74
 1171 06ea 05DC     		bgt	.L58
 341:main.c        ****                             adjustLeft();
 1172              		.loc 1 341 0
 1173 06ec FFF7FEFF 		bl	adjustLeft
 342:main.c        ****                             lastAdjustDirection = 0;
 1174              		.loc 1 342 0
 1175 06f0 874B     		ldr	r3, .L75+16
 1176 06f2 0022     		movs	r2, #0
 1177 06f4 1A60     		str	r2, [r3]
 1178 06f6 0FE0     		b	.L54
 1179              	.L58:
 343:main.c        ****                         
 344:main.c        **** 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 28


 345:main.c        ****                         } else { // completely lost find way
 346:main.c        ****                             if (lastAdjustDirection == 0) {
 1180              		.loc 1 346 0
 1181 06f8 854B     		ldr	r3, .L75+16
 1182 06fa 1B68     		ldr	r3, [r3]
 1183 06fc 002B     		cmp	r3, #0
 1184 06fe 02D1     		bne	.L59
 347:main.c        ****                                 turnLeft();
 1185              		.loc 1 347 0
 1186 0700 FFF7FEFF 		bl	turnLeft
 1187 0704 08E0     		b	.L54
 1188              	.L59:
 348:main.c        ****                             } else if (lastAdjustDirection == 1) { // last movement was forward (mi
 1189              		.loc 1 348 0
 1190 0706 824B     		ldr	r3, .L75+16
 1191 0708 1B68     		ldr	r3, [r3]
 1192 070a 012B     		cmp	r3, #1
 1193 070c 02D1     		bne	.L60
 349:main.c        ****                                 //hardAdjustLeft();
 350:main.c        ****                                 turnRight();
 1194              		.loc 1 350 0
 1195 070e FFF7FEFF 		bl	turnRight
 1196 0712 01E0     		b	.L54
 1197              	.L60:
 351:main.c        ****                             } else {
 352:main.c        ****                                 turnRight();
 1198              		.loc 1 352 0
 1199 0714 FFF7FEFF 		bl	turnRight
 1200              	.L54:
 353:main.c        ****                             }
 354:main.c        **** 
 355:main.c        ****                         }
 356:main.c        ****                         
 357:main.c        **** 
 358:main.c        ****                         // UPDATE INSTRUCTION LOGIC GOES HERE this needs dramatic improving
 359:main.c        ****                         LED_PIN_2_Write(0);
 1201              		.loc 1 359 0
 1202 0718 0020     		movs	r0, #0
 1203 071a FFF7FEFF 		bl	LED_PIN_2_Write
 360:main.c        ****                         LED_PIN_3_Write(0);
 1204              		.loc 1 360 0
 1205 071e 0020     		movs	r0, #0
 1206 0720 FFF7FEFF 		bl	LED_PIN_3_Write
 361:main.c        ****                         LED_PIN_4_Write(0);
 1207              		.loc 1 361 0
 1208 0724 0020     		movs	r0, #0
 1209 0726 FFF7FEFF 		bl	LED_PIN_4_Write
 362:main.c        ****                         char dist[24];
 363:main.c        ****                         char pulses[24];
 364:main.c        ****                         char first[24];
 365:main.c        ****                         char second[24];
 366:main.c        ****                         //57 pulses on 1 motor = 20.42 cm
 367:main.c        ****                         char instStr[24];
 368:main.c        ****                         char cVal[24];
 369:main.c        **** 
 370:main.c        **** 
 371:main.c        ****                         //if distance has been covered and ready to switch
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 29


 372:main.c        ****                         if (turnComplete != 0 && ((distance[instCounter] * 9.13333 *1.2 <= pulsesTr
 1210              		.loc 1 372 0
 1211 072a 7A4B     		ldr	r3, .L75+20
 1212 072c 1B68     		ldr	r3, [r3]
 1213 072e 002B     		cmp	r3, #0
 1214 0730 00F0D180 		beq	.L52
 1215              		.loc 1 372 0 is_stmt 0 discriminator 1
 1216 0734 784B     		ldr	r3, .L75+24
 1217 0736 1B68     		ldr	r3, [r3]
 1218 0738 784A     		ldr	r2, .L75+28
 1219 073a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1220 073c 1846     		mov	r0, r3
 1221 073e FFF7FEFF 		bl	__aeabi_i2d
 1222 0742 6FA3     		adr	r3, .L75
 1223 0744 D3E90023 		ldrd	r2, [r3]
 1224 0748 FFF7FEFF 		bl	__aeabi_dmul
 1225 074c 0346     		mov	r3, r0
 1226 074e 0C46     		mov	r4, r1
 1227 0750 1846     		mov	r0, r3
 1228 0752 2146     		mov	r1, r4
 1229 0754 4FF03332 		mov	r2, #858993459
 1230 0758 714B     		ldr	r3, .L75+32
 1231 075a FFF7FEFF 		bl	__aeabi_dmul
 1232 075e 0346     		mov	r3, r0
 1233 0760 0C46     		mov	r4, r1
 1234 0762 2546     		mov	r5, r4
 1235 0764 1C46     		mov	r4, r3
 1236 0766 6F4B     		ldr	r3, .L75+36
 1237 0768 1B68     		ldr	r3, [r3]
 1238 076a 1846     		mov	r0, r3
 1239 076c FFF7FEFF 		bl	__aeabi_i2d
 1240 0770 65A3     		adr	r3, .L75+8
 1241 0772 D3E90023 		ldrd	r2, [r3]
 1242 0776 FFF7FEFF 		bl	__aeabi_dmul
 1243 077a 0246     		mov	r2, r0
 1244 077c 0B46     		mov	r3, r1
 1245 077e 1046     		mov	r0, r2
 1246 0780 1946     		mov	r1, r3
 1247 0782 4FF00002 		mov	r2, #0
 1248 0786 684B     		ldr	r3, .L75+40
 1249 0788 FFF7FEFF 		bl	__aeabi_ddiv
 1250 078c 0246     		mov	r2, r0
 1251 078e 0B46     		mov	r3, r1
 1252 0790 1046     		mov	r0, r2
 1253 0792 1946     		mov	r1, r3
 1254 0794 4FF00002 		mov	r2, #0
 1255 0798 4FF08043 		mov	r3, #1073741824
 1256 079c FFF7FEFF 		bl	__aeabi_ddiv
 1257 07a0 0246     		mov	r2, r0
 1258 07a2 0B46     		mov	r3, r1
 1259 07a4 2046     		mov	r0, r4
 1260 07a6 2946     		mov	r1, r5
 1261 07a8 FFF7FEFF 		bl	__aeabi_dcmple
 1262 07ac 0346     		mov	r3, r0
 1263 07ae 002B     		cmp	r3, #0
 1264 07b0 04D1     		bne	.L62
 1265              		.loc 1 372 0 discriminator 2
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 30


 1266 07b2 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1267 07b6 002B     		cmp	r3, #0
 1268 07b8 40F08D80 		bne	.L52
 1269              	.L62:
 373:main.c        ****                             if (currentInst == 0 || currentInst == 6 || currentInst == 7 || current
 1270              		.loc 1 373 0 is_stmt 1
 1271 07bc 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1272 07c0 002B     		cmp	r3, #0
 1273 07c2 0FD0     		beq	.L63
 1274              		.loc 1 373 0 is_stmt 0 discriminator 1
 1275 07c4 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1276 07c8 062B     		cmp	r3, #6
 1277 07ca 0BD0     		beq	.L63
 1278              		.loc 1 373 0 discriminator 2
 1279 07cc 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1280 07d0 072B     		cmp	r3, #7
 1281 07d2 07D0     		beq	.L63
 1282              		.loc 1 373 0 discriminator 3
 1283 07d4 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1284 07d8 082B     		cmp	r3, #8
 1285 07da 03D0     		beq	.L63
 1286              		.loc 1 373 0 discriminator 4
 1287 07dc 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1288 07e0 052B     		cmp	r3, #5
 1289 07e2 19D1     		bne	.L64
 1290              	.L63:
 374:main.c        ****                                 LED_PIN_4_Write(1);
 1291              		.loc 1 374 0 is_stmt 1
 1292 07e4 0120     		movs	r0, #1
 1293 07e6 FFF7FEFF 		bl	LED_PIN_4_Write
 375:main.c        ****                                 instCounter++;
 1294              		.loc 1 375 0
 1295 07ea 4B4B     		ldr	r3, .L75+24
 1296 07ec 1B68     		ldr	r3, [r3]
 1297 07ee 0133     		adds	r3, r3, #1
 1298 07f0 494A     		ldr	r2, .L75+24
 1299 07f2 1360     		str	r3, [r2]
 376:main.c        ****                                 turnComplete = -1;
 1300              		.loc 1 376 0
 1301 07f4 474B     		ldr	r3, .L75+20
 1302 07f6 4FF0FF32 		mov	r2, #-1
 1303 07fa 1A60     		str	r2, [r3]
 377:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 378:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 379:main.c        ****                                 //                            //usbPutString(instStr);
 380:main.c        ****                                 pulsesTravelled = 0;
 1304              		.loc 1 380 0
 1305 07fc 494B     		ldr	r3, .L75+36
 1306 07fe 0022     		movs	r2, #0
 1307 0800 1A60     		str	r2, [r3]
 381:main.c        ****                                 if (currentInst != 0) {
 1308              		.loc 1 381 0
 1309 0802 97F8DB30 		ldrb	r3, [r7, #219]	@ zero_extendqisi2
 1310 0806 002B     		cmp	r3, #0
 1311 0808 65D0     		beq	.L52
 382:main.c        ****                                     stop();
 1312              		.loc 1 382 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 31


 1313 080a FFF7FEFF 		bl	stop
 383:main.c        ****                                     CyDelay(1000);
 1314              		.loc 1 383 0
 1315 080e 4FF47A70 		mov	r0, #1000
 1316 0812 FFF7FEFF 		bl	CyDelay
 381:main.c        ****                                 if (currentInst != 0) {
 1317              		.loc 1 381 0
 1318 0816 5EE0     		b	.L52
 1319              	.L64:
 384:main.c        ****                                 }
 385:main.c        ****                                 //
 386:main.c        ****                             } else if (R_INT_BLACK && (nextInst == 0 || nextInst == 3 || nextInst =
 1320              		.loc 1 386 0
 1321 0818 D7F8EC30 		ldr	r3, [r7, #236]
 1322 081c 4A2B     		cmp	r3, #74
 1323 081e 2BDC     		bgt	.L66
 1324              		.loc 1 386 0 is_stmt 0 discriminator 1
 1325 0820 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1326 0824 002B     		cmp	r3, #0
 1327 0826 17D0     		beq	.L67
 1328              		.loc 1 386 0 discriminator 2
 1329 0828 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1330 082c 032B     		cmp	r3, #3
 1331 082e 13D0     		beq	.L67
 1332              		.loc 1 386 0 discriminator 3
 1333 0830 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1334 0834 022B     		cmp	r3, #2
 1335 0836 0FD0     		beq	.L67
 1336              		.loc 1 386 0 discriminator 4
 1337 0838 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1338 083c 042B     		cmp	r3, #4
 1339 083e 0BD0     		beq	.L67
 1340              		.loc 1 386 0 discriminator 5
 1341 0840 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1342 0844 072B     		cmp	r3, #7
 1343 0846 07D0     		beq	.L67
 1344              		.loc 1 386 0 discriminator 6
 1345 0848 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1346 084c 062B     		cmp	r3, #6
 1347 084e 03D0     		beq	.L67
 1348              		.loc 1 386 0 discriminator 7
 1349 0850 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1350 0854 082B     		cmp	r3, #8
 1351 0856 0FD1     		bne	.L66
 1352              	.L67:
 387:main.c        ****                                 //
 388:main.c        ****                                 LED_PIN_4_Write(1);
 1353              		.loc 1 388 0 is_stmt 1
 1354 0858 0120     		movs	r0, #1
 1355 085a FFF7FEFF 		bl	LED_PIN_4_Write
 389:main.c        ****                                 instCounter++;
 1356              		.loc 1 389 0
 1357 085e 2E4B     		ldr	r3, .L75+24
 1358 0860 1B68     		ldr	r3, [r3]
 1359 0862 0133     		adds	r3, r3, #1
 1360 0864 2C4A     		ldr	r2, .L75+24
 1361 0866 1360     		str	r3, [r2]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 32


 390:main.c        ****                                 turnComplete = -1;
 1362              		.loc 1 390 0
 1363 0868 2A4B     		ldr	r3, .L75+20
 1364 086a 4FF0FF32 		mov	r2, #-1
 1365 086e 1A60     		str	r2, [r3]
 391:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 392:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 393:main.c        ****                                 //                            //usbPutString(instStr);
 394:main.c        ****                                 pulsesTravelled = 0;
 1366              		.loc 1 394 0
 1367 0870 2C4B     		ldr	r3, .L75+36
 1368 0872 0022     		movs	r2, #0
 1369 0874 1A60     		str	r2, [r3]
 1370 0876 2EE0     		b	.L52
 1371              	.L66:
 395:main.c        ****                             } else if (L_INT_BLACK && (nextInst == 0 || nextInst == 1 || nextInst =
 1372              		.loc 1 395 0
 1373 0878 D7F80031 		ldr	r3, [r7, #256]
 1374 087c 4A2B     		cmp	r3, #74
 1375 087e 2ADC     		bgt	.L52
 1376              		.loc 1 395 0 is_stmt 0 discriminator 1
 1377 0880 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1378 0884 002B     		cmp	r3, #0
 1379 0886 17D0     		beq	.L68
 1380              		.loc 1 395 0 discriminator 2
 1381 0888 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1382 088c 012B     		cmp	r3, #1
 1383 088e 13D0     		beq	.L68
 1384              		.loc 1 395 0 discriminator 3
 1385 0890 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1386 0894 022B     		cmp	r3, #2
 1387 0896 0FD0     		beq	.L68
 1388              		.loc 1 395 0 discriminator 4
 1389 0898 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1390 089c 052B     		cmp	r3, #5
 1391 089e 0BD0     		beq	.L68
 1392              		.loc 1 395 0 discriminator 5
 1393 08a0 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1394 08a4 042B     		cmp	r3, #4
 1395 08a6 07D0     		beq	.L68
 1396              		.loc 1 395 0 discriminator 6
 1397 08a8 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1398 08ac 062B     		cmp	r3, #6
 1399 08ae 03D0     		beq	.L68
 1400              		.loc 1 395 0 discriminator 7
 1401 08b0 97F8DA30 		ldrb	r3, [r7, #218]	@ zero_extendqisi2
 1402 08b4 082B     		cmp	r3, #8
 1403 08b6 0ED1     		bne	.L52
 1404              	.L68:
 396:main.c        ****                                 LED_PIN_4_Write(1);
 1405              		.loc 1 396 0 is_stmt 1
 1406 08b8 0120     		movs	r0, #1
 1407 08ba FFF7FEFF 		bl	LED_PIN_4_Write
 397:main.c        ****                                 instCounter++;
 1408              		.loc 1 397 0
 1409 08be 164B     		ldr	r3, .L75+24
 1410 08c0 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 33


 1411 08c2 0133     		adds	r3, r3, #1
 1412 08c4 144A     		ldr	r2, .L75+24
 1413 08c6 1360     		str	r3, [r2]
 398:main.c        ****                                 turnComplete = -1;
 1414              		.loc 1 398 0
 1415 08c8 124B     		ldr	r3, .L75+20
 1416 08ca 4FF0FF32 		mov	r2, #-1
 1417 08ce 1A60     		str	r2, [r3]
 399:main.c        ****                                 //                            //snprintf(instStr, sizeof(instStr), 
 400:main.c        ****                                 //                            //usbPutString("INSTCHANGE - ");
 401:main.c        ****                                 //                            //usbPutString(instStr);
 402:main.c        ****                                 pulsesTravelled = 0;
 1418              		.loc 1 402 0
 1419 08d0 144B     		ldr	r3, .L75+36
 1420 08d2 0022     		movs	r2, #0
 1421 08d4 1A60     		str	r2, [r3]
 1422              	.L52:
 1423              	.LBE9:
 403:main.c        ****                             } else {
 404:main.c        **** 
 405:main.c        ****                             }
 406:main.c        ****                         }
 407:main.c        ****                     }
 408:main.c        **** 
 409:main.c        ****                     if (L_INT_BLACK) {
 1424              		.loc 1 409 0
 1425 08d6 D7F80031 		ldr	r3, [r7, #256]
 1426 08da 4A2B     		cmp	r3, #74
 1427 08dc 02DC     		bgt	.L69
 410:main.c        ****                         LED_PIN_2_Write(1);
 1428              		.loc 1 410 0
 1429 08de 0120     		movs	r0, #1
 1430 08e0 FFF7FEFF 		bl	LED_PIN_2_Write
 1431              	.L69:
 411:main.c        ****                     }
 412:main.c        **** 
 413:main.c        ****                     if (R_INT_BLACK) {
 1432              		.loc 1 413 0
 1433 08e4 D7F8EC30 		ldr	r3, [r7, #236]
 1434 08e8 4A2B     		cmp	r3, #74
 1435 08ea 02DC     		bgt	.L8
 414:main.c        ****                         LED_PIN_3_Write(1);
 1436              		.loc 1 414 0
 1437 08ec 0120     		movs	r0, #1
 1438 08ee FFF7FEFF 		bl	LED_PIN_3_Write
 1439              	.L8:
 1440              	.LBE8:
 1441              	.LBE3:
 415:main.c        ****                     }
 416:main.c        ****                 }
 417:main.c        ****             }
 418:main.c        **** 
 419:main.c        ****             flag = 0;
 1442              		.loc 1 419 0
 1443 08f2 0E4B     		ldr	r3, .L75+44
 1444 08f4 0022     		movs	r2, #0
 1445 08f6 1A60     		str	r2, [r3]
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 34


 420:main.c        ****             ADC1_IRQ_Enable();
 1446              		.loc 1 420 0
 1447 08f8 FFF7FEFF 		bl	ADC1_IRQ_Enable
 421:main.c        ****         }
 422:main.c        **** 
 423:main.c        ****     }
 1448              		.loc 1 423 0
 1449 08fc FFF7CCBB 		b	.L70
 1450              	.L76:
 1451              		.align	3
 1452              	.L75:
 1453 0900 C0266BD4 		.word	-731175232
 1454 0904 43442240 		.word	1075987523
 1455 0908 EC51B81E 		.word	515396076
 1456 090c 856B3440 		.word	1077177221
 1457 0910 00000000 		.word	lastAdjustDirection
 1458 0914 00000000 		.word	turnComplete
 1459 0918 00000000 		.word	instCounter
 1460 091c 00000000 		.word	distance
 1461 0920 3333F33F 		.word	1072902963
 1462 0924 00000000 		.word	pulsesTravelled
 1463 0928 00804C40 		.word	1078755328
 1464 092c 00000000 		.word	flag
 1465              		.cfi_endproc
 1466              	.LFE65:
 1467              		.size	main, .-main
 1468              		.section	.text.usbPutString,"ax",%progbits
 1469              		.align	2
 1470              		.global	usbPutString
 1471              		.thumb
 1472              		.thumb_func
 1473              		.type	usbPutString, %function
 1474              	usbPutString:
 1475              	.LFB66:
 424:main.c        **** }
 425:main.c        **** //* ========================================
 426:main.c        **** void usbPutString(char * s) {
 1476              		.loc 1 426 0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 8
 1479              		@ frame_needed = 1, uses_anonymous_args = 0
 1480 0000 80B5     		push	{r7, lr}
 1481              		.cfi_def_cfa_offset 8
 1482              		.cfi_offset 7, -8
 1483              		.cfi_offset 14, -4
 1484 0002 82B0     		sub	sp, sp, #8
 1485              		.cfi_def_cfa_offset 16
 1486 0004 00AF     		add	r7, sp, #0
 1487              		.cfi_def_cfa_register 7
 1488 0006 7860     		str	r0, [r7, #4]
 427:main.c        ****     // !! Assumes that *s is a string with allocated space >=64 chars    
 428:main.c        ****     //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 429:main.c        ****     //  length to 62 char (63rd char is a '!')
 430:main.c        **** 
 431:main.c        ****     #ifdef USE_USB
 432:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1489              		.loc 1 432 0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 35


 1490 0008 00BF     		nop
 1491              	.L78:
 1492              		.loc 1 432 0 is_stmt 0 discriminator 1
 1493 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1494 000e 0346     		mov	r3, r0
 1495 0010 002B     		cmp	r3, #0
 1496 0012 FAD0     		beq	.L78
 433:main.c        ****     s[63] = '\0';
 1497              		.loc 1 433 0 is_stmt 1
 1498 0014 7B68     		ldr	r3, [r7, #4]
 1499 0016 3F33     		adds	r3, r3, #63
 1500 0018 0022     		movs	r2, #0
 1501 001a 1A70     		strb	r2, [r3]
 434:main.c        ****     s[62] = '!';
 1502              		.loc 1 434 0
 1503 001c 7B68     		ldr	r3, [r7, #4]
 1504 001e 3E33     		adds	r3, r3, #62
 1505 0020 2122     		movs	r2, #33
 1506 0022 1A70     		strb	r2, [r3]
 435:main.c        ****     USBUART_PutData((uint8 * ) s, strlen(s));
 1507              		.loc 1 435 0
 1508 0024 7868     		ldr	r0, [r7, #4]
 1509 0026 FFF7FEFF 		bl	strlen
 1510 002a 0346     		mov	r3, r0
 1511 002c 9BB2     		uxth	r3, r3
 1512 002e 1946     		mov	r1, r3
 1513 0030 7868     		ldr	r0, [r7, #4]
 1514 0032 FFF7FEFF 		bl	USBUART_PutData
 436:main.c        ****     #endif
 437:main.c        **** }
 1515              		.loc 1 437 0
 1516 0036 00BF     		nop
 1517 0038 0837     		adds	r7, r7, #8
 1518              		.cfi_def_cfa_offset 8
 1519 003a BD46     		mov	sp, r7
 1520              		.cfi_def_cfa_register 13
 1521              		@ sp needed
 1522 003c 80BD     		pop	{r7, pc}
 1523              		.cfi_endproc
 1524              	.LFE66:
 1525              		.size	usbPutString, .-usbPutString
 1526 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1527              		.align	2
 1528              		.global	usbPutChar
 1529              		.thumb
 1530              		.thumb_func
 1531              		.type	usbPutChar, %function
 1532              	usbPutChar:
 1533              	.LFB67:
 438:main.c        **** //* ========================================
 439:main.c        **** void usbPutChar(char c) {
 1534              		.loc 1 439 0
 1535              		.cfi_startproc
 1536              		@ args = 0, pretend = 0, frame = 8
 1537              		@ frame_needed = 1, uses_anonymous_args = 0
 1538 0000 80B5     		push	{r7, lr}
 1539              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 36


 1540              		.cfi_offset 7, -8
 1541              		.cfi_offset 14, -4
 1542 0002 82B0     		sub	sp, sp, #8
 1543              		.cfi_def_cfa_offset 16
 1544 0004 00AF     		add	r7, sp, #0
 1545              		.cfi_def_cfa_register 7
 1546 0006 0346     		mov	r3, r0
 1547 0008 FB71     		strb	r3, [r7, #7]
 440:main.c        ****     #ifdef USE_USB
 441:main.c        ****     while (USBUART_CDCIsReady() == 0);
 1548              		.loc 1 441 0
 1549 000a 00BF     		nop
 1550              	.L80:
 1551              		.loc 1 441 0 is_stmt 0 discriminator 1
 1552 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1553 0010 0346     		mov	r3, r0
 1554 0012 002B     		cmp	r3, #0
 1555 0014 FAD0     		beq	.L80
 442:main.c        ****     USBUART_PutChar(c);
 1556              		.loc 1 442 0 is_stmt 1
 1557 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1558 0018 1846     		mov	r0, r3
 1559 001a FFF7FEFF 		bl	USBUART_PutChar
 443:main.c        ****     #endif
 444:main.c        **** }...
 1560              		.loc 1 444 0
 1561 001e 00BF     		nop
 1562 0020 0837     		adds	r7, r7, #8
 1563              		.cfi_def_cfa_offset 8
 1564 0022 BD46     		mov	sp, r7
 1565              		.cfi_def_cfa_register 13
 1566              		@ sp needed
 1567 0024 80BD     		pop	{r7, pc}
 1568              		.cfi_endproc
 1569              	.LFE67:
 1570              		.size	usbPutChar, .-usbPutChar
 1571 0026 00BF     		.text
 1572              	.Letext0:
 1573              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1574              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1575              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1576              		.file 5 "vars.h"
 1577              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1578              		.section	.debug_info,"",%progbits
 1579              	.Ldebug_info0:
 1580 0000 44070000 		.4byte	0x744
 1581 0004 0400     		.2byte	0x4
 1582 0006 00000000 		.4byte	.Ldebug_abbrev0
 1583 000a 04       		.byte	0x4
 1584 000b 01       		.uleb128 0x1
 1585 000c BC000000 		.4byte	.LASF102
 1586 0010 0C       		.byte	0xc
 1587 0011 90040000 		.4byte	.LASF103
 1588 0015 4F010000 		.4byte	.LASF104
 1589 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1590 001d 00000000 		.4byte	0
 1591 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 37


 1592 0025 02       		.uleb128 0x2
 1593 0026 01       		.byte	0x1
 1594 0027 06       		.byte	0x6
 1595 0028 1B020000 		.4byte	.LASF0
 1596 002c 02       		.uleb128 0x2
 1597 002d 01       		.byte	0x1
 1598 002e 08       		.byte	0x8
 1599 002f EF020000 		.4byte	.LASF1
 1600 0033 02       		.uleb128 0x2
 1601 0034 02       		.byte	0x2
 1602 0035 05       		.byte	0x5
 1603 0036 72000000 		.4byte	.LASF2
 1604 003a 02       		.uleb128 0x2
 1605 003b 02       		.byte	0x2
 1606 003c 07       		.byte	0x7
 1607 003d D1030000 		.4byte	.LASF3
 1608 0041 03       		.uleb128 0x3
 1609 0042 39040000 		.4byte	.LASF12
 1610 0046 02       		.byte	0x2
 1611 0047 3F       		.byte	0x3f
 1612 0048 4C000000 		.4byte	0x4c
 1613 004c 02       		.uleb128 0x2
 1614 004d 04       		.byte	0x4
 1615 004e 05       		.byte	0x5
 1616 004f 81020000 		.4byte	.LASF4
 1617 0053 02       		.uleb128 0x2
 1618 0054 04       		.byte	0x4
 1619 0055 07       		.byte	0x7
 1620 0056 97040000 		.4byte	.LASF5
 1621 005a 02       		.uleb128 0x2
 1622 005b 08       		.byte	0x8
 1623 005c 05       		.byte	0x5
 1624 005d 35020000 		.4byte	.LASF6
 1625 0061 02       		.uleb128 0x2
 1626 0062 08       		.byte	0x8
 1627 0063 07       		.byte	0x7
 1628 0064 7C030000 		.4byte	.LASF7
 1629 0068 04       		.uleb128 0x4
 1630 0069 04       		.byte	0x4
 1631 006a 05       		.byte	0x5
 1632 006b 696E7400 		.ascii	"int\000"
 1633 006f 02       		.uleb128 0x2
 1634 0070 04       		.byte	0x4
 1635 0071 07       		.byte	0x7
 1636 0072 93030000 		.4byte	.LASF8
 1637 0076 02       		.uleb128 0x2
 1638 0077 08       		.byte	0x8
 1639 0078 04       		.byte	0x4
 1640 0079 05030000 		.4byte	.LASF9
 1641 007d 02       		.uleb128 0x2
 1642 007e 04       		.byte	0x4
 1643 007f 07       		.byte	0x7
 1644 0080 9C000000 		.4byte	.LASF10
 1645 0084 05       		.uleb128 0x5
 1646 0085 04       		.byte	0x4
 1647 0086 8A000000 		.4byte	0x8a
 1648 008a 02       		.uleb128 0x2
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 38


 1649 008b 01       		.byte	0x1
 1650 008c 08       		.byte	0x8
 1651 008d 13040000 		.4byte	.LASF11
 1652 0091 06       		.uleb128 0x6
 1653 0092 8A000000 		.4byte	0x8a
 1654 0096 A1000000 		.4byte	0xa1
 1655 009a 07       		.uleb128 0x7
 1656 009b 7D000000 		.4byte	0x7d
 1657 009f 17       		.byte	0x17
 1658 00a0 00       		.byte	0
 1659 00a1 03       		.uleb128 0x3
 1660 00a2 2C040000 		.4byte	.LASF13
 1661 00a6 03       		.byte	0x3
 1662 00a7 2C       		.byte	0x2c
 1663 00a8 41000000 		.4byte	0x41
 1664 00ac 08       		.uleb128 0x8
 1665 00ad DB010000 		.4byte	.LASF14
 1666 00b1 04       		.byte	0x4
 1667 00b2 E701     		.2byte	0x1e7
 1668 00b4 2C000000 		.4byte	0x2c
 1669 00b8 08       		.uleb128 0x8
 1670 00b9 C8010000 		.4byte	.LASF15
 1671 00bd 04       		.byte	0x4
 1672 00be E801     		.2byte	0x1e8
 1673 00c0 3A000000 		.4byte	0x3a
 1674 00c4 08       		.uleb128 0x8
 1675 00c5 50020000 		.4byte	.LASF16
 1676 00c9 04       		.byte	0x4
 1677 00ca EA01     		.2byte	0x1ea
 1678 00cc 25000000 		.4byte	0x25
 1679 00d0 08       		.uleb128 0x8
 1680 00d1 D5010000 		.4byte	.LASF17
 1681 00d5 04       		.byte	0x4
 1682 00d6 EB01     		.2byte	0x1eb
 1683 00d8 33000000 		.4byte	0x33
 1684 00dc 02       		.uleb128 0x2
 1685 00dd 04       		.byte	0x4
 1686 00de 04       		.byte	0x4
 1687 00df 27020000 		.4byte	.LASF18
 1688 00e3 02       		.uleb128 0x2
 1689 00e4 08       		.byte	0x8
 1690 00e5 04       		.byte	0x4
 1691 00e6 A9040000 		.4byte	.LASF19
 1692 00ea 09       		.uleb128 0x9
 1693 00eb 09040000 		.4byte	.LASF105
 1694 00ef 20       		.byte	0x20
 1695 00f0 05       		.byte	0x5
 1696 00f1 29       		.byte	0x29
 1697 00f2 C3010000 		.4byte	0x1c3
 1698 00f6 0A       		.uleb128 0xa
 1699 00f7 79050000 		.4byte	.LASF20
 1700 00fb 05       		.byte	0x5
 1701 00fc 2A       		.byte	0x2a
 1702 00fd C4000000 		.4byte	0xc4
 1703 0101 00       		.byte	0
 1704 0102 0A       		.uleb128 0xa
 1705 0103 CF010000 		.4byte	.LASF21
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 39


 1706 0107 05       		.byte	0x5
 1707 0108 2B       		.byte	0x2b
 1708 0109 AC000000 		.4byte	0xac
 1709 010d 01       		.byte	0x1
 1710 010e 0A       		.uleb128 0xa
 1711 010f 21040000 		.4byte	.LASF22
 1712 0113 05       		.byte	0x5
 1713 0114 2C       		.byte	0x2c
 1714 0115 D0000000 		.4byte	0xd0
 1715 0119 02       		.byte	0x2
 1716 011a 0A       		.uleb128 0xa
 1717 011b 3F050000 		.4byte	.LASF23
 1718 011f 05       		.byte	0x5
 1719 0120 2D       		.byte	0x2d
 1720 0121 D0000000 		.4byte	0xd0
 1721 0125 04       		.byte	0x4
 1722 0126 0A       		.uleb128 0xa
 1723 0127 7E050000 		.4byte	.LASF24
 1724 012b 05       		.byte	0x5
 1725 012c 2E       		.byte	0x2e
 1726 012d D0000000 		.4byte	0xd0
 1727 0131 06       		.byte	0x6
 1728 0132 0A       		.uleb128 0xa
 1729 0133 79020000 		.4byte	.LASF25
 1730 0137 05       		.byte	0x5
 1731 0138 2F       		.byte	0x2f
 1732 0139 D0000000 		.4byte	0xd0
 1733 013d 08       		.byte	0x8
 1734 013e 0A       		.uleb128 0xa
 1735 013f F6040000 		.4byte	.LASF26
 1736 0143 05       		.byte	0x5
 1737 0144 30       		.byte	0x30
 1738 0145 D0000000 		.4byte	0xd0
 1739 0149 0A       		.byte	0xa
 1740 014a 0A       		.uleb128 0xa
 1741 014b 39030000 		.4byte	.LASF27
 1742 014f 05       		.byte	0x5
 1743 0150 31       		.byte	0x31
 1744 0151 D0000000 		.4byte	0xd0
 1745 0155 0C       		.byte	0xc
 1746 0156 0A       		.uleb128 0xa
 1747 0157 6C020000 		.4byte	.LASF28
 1748 015b 05       		.byte	0x5
 1749 015c 32       		.byte	0x32
 1750 015d D0000000 		.4byte	0xd0
 1751 0161 0E       		.byte	0xe
 1752 0162 0A       		.uleb128 0xa
 1753 0163 C9030000 		.4byte	.LASF29
 1754 0167 05       		.byte	0x5
 1755 0168 33       		.byte	0x33
 1756 0169 D0000000 		.4byte	0xd0
 1757 016d 10       		.byte	0x10
 1758 016e 0A       		.uleb128 0xa
 1759 016f FD020000 		.4byte	.LASF30
 1760 0173 05       		.byte	0x5
 1761 0174 34       		.byte	0x34
 1762 0175 D0000000 		.4byte	0xd0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 40


 1763 0179 12       		.byte	0x12
 1764 017a 0A       		.uleb128 0xa
 1765 017b 42030000 		.4byte	.LASF31
 1766 017f 05       		.byte	0x5
 1767 0180 35       		.byte	0x35
 1768 0181 D0000000 		.4byte	0xd0
 1769 0185 14       		.byte	0x14
 1770 0186 0A       		.uleb128 0xa
 1771 0187 E1010000 		.4byte	.LASF32
 1772 018b 05       		.byte	0x5
 1773 018c 36       		.byte	0x36
 1774 018d D0000000 		.4byte	0xd0
 1775 0191 16       		.byte	0x16
 1776 0192 0A       		.uleb128 0xa
 1777 0193 6A000000 		.4byte	.LASF33
 1778 0197 05       		.byte	0x5
 1779 0198 37       		.byte	0x37
 1780 0199 D0000000 		.4byte	0xd0
 1781 019d 18       		.byte	0x18
 1782 019e 0A       		.uleb128 0xa
 1783 019f 64020000 		.4byte	.LASF34
 1784 01a3 05       		.byte	0x5
 1785 01a4 38       		.byte	0x38
 1786 01a5 D0000000 		.4byte	0xd0
 1787 01a9 1A       		.byte	0x1a
 1788 01aa 0A       		.uleb128 0xa
 1789 01ab BB030000 		.4byte	.LASF35
 1790 01af 05       		.byte	0x5
 1791 01b0 39       		.byte	0x39
 1792 01b1 D0000000 		.4byte	0xd0
 1793 01b5 1C       		.byte	0x1c
 1794 01b6 0A       		.uleb128 0xa
 1795 01b7 BB010000 		.4byte	.LASF36
 1796 01bb 05       		.byte	0x5
 1797 01bc 3A       		.byte	0x3a
 1798 01bd D0000000 		.4byte	0xd0
 1799 01c1 1E       		.byte	0x1e
 1800 01c2 00       		.byte	0
 1801 01c3 0B       		.uleb128 0xb
 1802 01c4 656F6300 		.ascii	"eoc\000"
 1803 01c8 01       		.byte	0x1
 1804 01c9 4C       		.byte	0x4c
 1805 01ca 00000000 		.4byte	.LFB64
 1806 01ce 18000000 		.4byte	.LFE64-.LFB64
 1807 01d2 01       		.uleb128 0x1
 1808 01d3 9C       		.byte	0x9c
 1809 01d4 0C       		.uleb128 0xc
 1810 01d5 4A010000 		.4byte	.LASF54
 1811 01d9 01       		.byte	0x1
 1812 01da 50       		.byte	0x50
 1813 01db 68000000 		.4byte	0x68
 1814 01df 00000000 		.4byte	.LFB65
 1815 01e3 30090000 		.4byte	.LFE65-.LFB65
 1816 01e7 01       		.uleb128 0x1
 1817 01e8 9C       		.byte	0x9c
 1818 01e9 76030000 		.4byte	0x376
 1819 01ed 0D       		.uleb128 0xd
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 41


 1820 01ee 34000000 		.4byte	.LBB2
 1821 01f2 5A000000 		.4byte	.LBE2-.LBB2
 1822 01f6 07020000 		.4byte	0x207
 1823 01fa 0E       		.uleb128 0xe
 1824 01fb 6900     		.ascii	"i\000"
 1825 01fd 01       		.byte	0x1
 1826 01fe 69       		.byte	0x69
 1827 01ff 68000000 		.4byte	0x68
 1828 0203 02       		.uleb128 0x2
 1829 0204 91       		.byte	0x91
 1830 0205 6C       		.sleb128 -20
 1831 0206 00       		.byte	0
 1832 0207 0F       		.uleb128 0xf
 1833 0208 32010000 		.4byte	.LBB3
 1834 020c C0070000 		.4byte	.LBE3-.LBB3
 1835 0210 10       		.uleb128 0x10
 1836 0211 0B000000 		.4byte	.LASF37
 1837 0215 01       		.byte	0x1
 1838 0216 84       		.byte	0x84
 1839 0217 68000000 		.4byte	0x68
 1840 021b 02       		.uleb128 0x2
 1841 021c 91       		.byte	0x91
 1842 021d 68       		.sleb128 -24
 1843 021e 10       		.uleb128 0x10
 1844 021f 7E040000 		.4byte	.LASF38
 1845 0223 01       		.byte	0x1
 1846 0224 85       		.byte	0x85
 1847 0225 68000000 		.4byte	0x68
 1848 0229 02       		.uleb128 0x2
 1849 022a 91       		.byte	0x91
 1850 022b 64       		.sleb128 -28
 1851 022c 10       		.uleb128 0x10
 1852 022d E4030000 		.4byte	.LASF39
 1853 0231 01       		.byte	0x1
 1854 0232 86       		.byte	0x86
 1855 0233 68000000 		.4byte	0x68
 1856 0237 02       		.uleb128 0x2
 1857 0238 91       		.byte	0x91
 1858 0239 60       		.sleb128 -32
 1859 023a 10       		.uleb128 0x10
 1860 023b 5E050000 		.4byte	.LASF40
 1861 023f 01       		.byte	0x1
 1862 0240 87       		.byte	0x87
 1863 0241 68000000 		.4byte	0x68
 1864 0245 02       		.uleb128 0x2
 1865 0246 91       		.byte	0x91
 1866 0247 5C       		.sleb128 -36
 1867 0248 10       		.uleb128 0x10
 1868 0249 4B030000 		.4byte	.LASF41
 1869 024d 01       		.byte	0x1
 1870 024e 88       		.byte	0x88
 1871 024f 68000000 		.4byte	0x68
 1872 0253 02       		.uleb128 0x2
 1873 0254 91       		.byte	0x91
 1874 0255 58       		.sleb128 -40
 1875 0256 10       		.uleb128 0x10
 1876 0257 D4020000 		.4byte	.LASF42
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 42


 1877 025b 01       		.byte	0x1
 1878 025c 89       		.byte	0x89
 1879 025d 68000000 		.4byte	0x68
 1880 0261 02       		.uleb128 0x2
 1881 0262 91       		.byte	0x91
 1882 0263 54       		.sleb128 -44
 1883 0264 0D       		.uleb128 0xd
 1884 0265 66010000 		.4byte	.LBB4
 1885 0269 44010000 		.4byte	.LBE4-.LBB4
 1886 026d A6020000 		.4byte	0x2a6
 1887 0271 0E       		.uleb128 0xe
 1888 0272 6900     		.ascii	"i\000"
 1889 0274 01       		.byte	0x1
 1890 0275 8A       		.byte	0x8a
 1891 0276 68000000 		.4byte	0x68
 1892 027a 02       		.uleb128 0x2
 1893 027b 91       		.byte	0x91
 1894 027c 50       		.sleb128 -48
 1895 027d 0F       		.uleb128 0xf
 1896 027e 6E010000 		.4byte	.LBB5
 1897 0282 26010000 		.4byte	.LBE5-.LBB5
 1898 0286 10       		.uleb128 0x10
 1899 0287 17030000 		.4byte	.LASF43
 1900 028b 01       		.byte	0x1
 1901 028c 8C       		.byte	0x8c
 1902 028d 91000000 		.4byte	0x91
 1903 0291 03       		.uleb128 0x3
 1904 0292 91       		.byte	0x91
 1905 0293 A87F     		.sleb128 -88
 1906 0295 10       		.uleb128 0x10
 1907 0296 1F030000 		.4byte	.LASF44
 1908 029a 01       		.byte	0x1
 1909 029b 8D       		.byte	0x8d
 1910 029c 91000000 		.4byte	0x91
 1911 02a0 03       		.uleb128 0x3
 1912 02a1 91       		.byte	0x91
 1913 02a2 907F     		.sleb128 -112
 1914 02a4 00       		.byte	0
 1915 02a5 00       		.byte	0
 1916 02a6 0D       		.uleb128 0xd
 1917 02a7 B4020000 		.4byte	.LBB6
 1918 02ab 5C010000 		.4byte	.LBE6-.LBB6
 1919 02af E4020000 		.4byte	0x2e4
 1920 02b3 0E       		.uleb128 0xe
 1921 02b4 6900     		.ascii	"i\000"
 1922 02b6 01       		.byte	0x1
 1923 02b7 BC       		.byte	0xbc
 1924 02b8 68000000 		.4byte	0x68
 1925 02bc 02       		.uleb128 0x2
 1926 02bd 91       		.byte	0x91
 1927 02be 4C       		.sleb128 -52
 1928 02bf 10       		.uleb128 0x10
 1929 02c0 27030000 		.4byte	.LASF45
 1930 02c4 01       		.byte	0x1
 1931 02c5 BC       		.byte	0xbc
 1932 02c6 68000000 		.4byte	0x68
 1933 02ca 02       		.uleb128 0x2
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 43


 1934 02cb 91       		.byte	0x91
 1935 02cc 48       		.sleb128 -56
 1936 02cd 0F       		.uleb128 0xf
 1937 02ce E0030000 		.4byte	.LBB7
 1938 02d2 1C000000 		.4byte	.LBE7-.LBB7
 1939 02d6 0E       		.uleb128 0xe
 1940 02d7 6900     		.ascii	"i\000"
 1941 02d9 01       		.byte	0x1
 1942 02da D5       		.byte	0xd5
 1943 02db 68000000 		.4byte	0x68
 1944 02df 02       		.uleb128 0x2
 1945 02e0 91       		.byte	0x91
 1946 02e1 44       		.sleb128 -60
 1947 02e2 00       		.byte	0
 1948 02e3 00       		.byte	0
 1949 02e4 0F       		.uleb128 0xf
 1950 02e5 12040000 		.4byte	.LBB8
 1951 02e9 E0040000 		.4byte	.LBE8-.LBB8
 1952 02ed 10       		.uleb128 0x10
 1953 02ee BA020000 		.4byte	.LASF46
 1954 02f2 01       		.byte	0x1
 1955 02f3 E5       		.byte	0xe5
 1956 02f4 8A000000 		.4byte	0x8a
 1957 02f8 02       		.uleb128 0x2
 1958 02f9 91       		.byte	0x91
 1959 02fa 43       		.sleb128 -61
 1960 02fb 10       		.uleb128 0x10
 1961 02fc 96050000 		.4byte	.LASF47
 1962 0300 01       		.byte	0x1
 1963 0301 E6       		.byte	0xe6
 1964 0302 8A000000 		.4byte	0x8a
 1965 0306 02       		.uleb128 0x2
 1966 0307 91       		.byte	0x91
 1967 0308 42       		.sleb128 -62
 1968 0309 0F       		.uleb128 0xf
 1969 030a 60060000 		.4byte	.LBB9
 1970 030e 76020000 		.4byte	.LBE9-.LBB9
 1971 0312 11       		.uleb128 0x11
 1972 0313 C4030000 		.4byte	.LASF48
 1973 0317 01       		.byte	0x1
 1974 0318 6A01     		.2byte	0x16a
 1975 031a 91000000 		.4byte	0x91
 1976 031e 03       		.uleb128 0x3
 1977 031f 91       		.byte	0x91
 1978 0320 E07E     		.sleb128 -160
 1979 0322 11       		.uleb128 0x11
 1980 0323 43040000 		.4byte	.LASF49
 1981 0327 01       		.byte	0x1
 1982 0328 6B01     		.2byte	0x16b
 1983 032a 91000000 		.4byte	0x91
 1984 032e 03       		.uleb128 0x3
 1985 032f 91       		.byte	0x91
 1986 0330 C87E     		.sleb128 -184
 1987 0332 11       		.uleb128 0x11
 1988 0333 90050000 		.4byte	.LASF50
 1989 0337 01       		.byte	0x1
 1990 0338 6C01     		.2byte	0x16c
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 44


 1991 033a 91000000 		.4byte	0x91
 1992 033e 03       		.uleb128 0x3
 1993 033f 91       		.byte	0x91
 1994 0340 B07E     		.sleb128 -208
 1995 0342 11       		.uleb128 0x11
 1996 0343 75030000 		.4byte	.LASF51
 1997 0347 01       		.byte	0x1
 1998 0348 6D01     		.2byte	0x16d
 1999 034a 91000000 		.4byte	0x91
 2000 034e 03       		.uleb128 0x3
 2001 034f 91       		.byte	0x91
 2002 0350 987E     		.sleb128 -232
 2003 0352 11       		.uleb128 0x11
 2004 0353 4A050000 		.4byte	.LASF52
 2005 0357 01       		.byte	0x1
 2006 0358 6F01     		.2byte	0x16f
 2007 035a 91000000 		.4byte	0x91
 2008 035e 03       		.uleb128 0x3
 2009 035f 91       		.byte	0x91
 2010 0360 807E     		.sleb128 -256
 2011 0362 11       		.uleb128 0x11
 2012 0363 4A040000 		.4byte	.LASF53
 2013 0367 01       		.byte	0x1
 2014 0368 7001     		.2byte	0x170
 2015 036a 91000000 		.4byte	0x91
 2016 036e 03       		.uleb128 0x3
 2017 036f 91       		.byte	0x91
 2018 0370 E87D     		.sleb128 -280
 2019 0372 00       		.byte	0
 2020 0373 00       		.byte	0
 2021 0374 00       		.byte	0
 2022 0375 00       		.byte	0
 2023 0376 12       		.uleb128 0x12
 2024 0377 43020000 		.4byte	.LASF55
 2025 037b 01       		.byte	0x1
 2026 037c AA01     		.2byte	0x1aa
 2027 037e 00000000 		.4byte	.LFB66
 2028 0382 3E000000 		.4byte	.LFE66-.LFB66
 2029 0386 01       		.uleb128 0x1
 2030 0387 9C       		.byte	0x9c
 2031 0388 9A030000 		.4byte	0x39a
 2032 038c 13       		.uleb128 0x13
 2033 038d 7300     		.ascii	"s\000"
 2034 038f 01       		.byte	0x1
 2035 0390 AA01     		.2byte	0x1aa
 2036 0392 84000000 		.4byte	0x84
 2037 0396 02       		.uleb128 0x2
 2038 0397 91       		.byte	0x91
 2039 0398 74       		.sleb128 -12
 2040 0399 00       		.byte	0
 2041 039a 12       		.uleb128 0x12
 2042 039b 00000000 		.4byte	.LASF56
 2043 039f 01       		.byte	0x1
 2044 03a0 B701     		.2byte	0x1b7
 2045 03a2 00000000 		.4byte	.LFB67
 2046 03a6 26000000 		.4byte	.LFE67-.LFB67
 2047 03aa 01       		.uleb128 0x1
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 45


 2048 03ab 9C       		.byte	0x9c
 2049 03ac BE030000 		.4byte	0x3be
 2050 03b0 13       		.uleb128 0x13
 2051 03b1 6300     		.ascii	"c\000"
 2052 03b3 01       		.byte	0x1
 2053 03b4 B701     		.2byte	0x1b7
 2054 03b6 8A000000 		.4byte	0x8a
 2055 03ba 02       		.uleb128 0x2
 2056 03bb 91       		.byte	0x91
 2057 03bc 77       		.sleb128 -9
 2058 03bd 00       		.byte	0
 2059 03be 14       		.uleb128 0x14
 2060 03bf B0040000 		.4byte	.LASF57
 2061 03c3 06       		.byte	0x6
 2062 03c4 1207     		.2byte	0x712
 2063 03c6 CA030000 		.4byte	0x3ca
 2064 03ca 15       		.uleb128 0x15
 2065 03cb A1000000 		.4byte	0xa1
 2066 03cf 16       		.uleb128 0x16
 2067 03d0 747300   		.ascii	"ts\000"
 2068 03d3 05       		.byte	0x5
 2069 03d4 10       		.byte	0x10
 2070 03d5 AC000000 		.4byte	0xac
 2071 03d9 05       		.uleb128 0x5
 2072 03da 03       		.byte	0x3
 2073 03db 00000000 		.4byte	ts
 2074 03df 17       		.uleb128 0x17
 2075 03e0 12050000 		.4byte	.LASF58
 2076 03e4 05       		.byte	0x5
 2077 03e5 11       		.byte	0x11
 2078 03e6 B8000000 		.4byte	0xb8
 2079 03ea 05       		.uleb128 0x5
 2080 03eb 03       		.byte	0x3
 2081 03ec 00000000 		.4byte	ts_enc
 2082 03f0 17       		.uleb128 0x17
 2083 03f1 19050000 		.4byte	.LASF59
 2084 03f5 05       		.byte	0x5
 2085 03f6 12       		.byte	0x12
 2086 03f7 B8000000 		.4byte	0xb8
 2087 03fb 05       		.uleb128 0x5
 2088 03fc 03       		.byte	0x3
 2089 03fd 00000000 		.4byte	ts_update
 2090 0401 17       		.uleb128 0x17
 2091 0402 09050000 		.4byte	.LASF60
 2092 0406 05       		.byte	0x5
 2093 0407 13       		.byte	0x13
 2094 0408 B8000000 		.4byte	0xb8
 2095 040c 05       		.uleb128 0x5
 2096 040d 03       		.byte	0x3
 2097 040e 00000000 		.4byte	ts_speed
 2098 0412 17       		.uleb128 0x17
 2099 0413 FE040000 		.4byte	.LASF61
 2100 0417 05       		.byte	0x5
 2101 0418 14       		.byte	0x14
 2102 0419 B8000000 		.4byte	0xb8
 2103 041d 05       		.uleb128 0x5
 2104 041e 03       		.byte	0x3
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 46


 2105 041f 00000000 		.4byte	ts_display
 2106 0423 17       		.uleb128 0x17
 2107 0424 CF040000 		.4byte	.LASF62
 2108 0428 05       		.byte	0x5
 2109 0429 16       		.byte	0x16
 2110 042a AC000000 		.4byte	0xac
 2111 042e 05       		.uleb128 0x5
 2112 042f 03       		.byte	0x3
 2113 0430 00000000 		.4byte	flag_ts_enc
 2114 0434 17       		.uleb128 0x17
 2115 0435 55020000 		.4byte	.LASF63
 2116 0439 05       		.byte	0x5
 2117 043a 17       		.byte	0x17
 2118 043b AC000000 		.4byte	0xac
 2119 043f 05       		.uleb128 0x5
 2120 0440 03       		.byte	0x3
 2121 0441 00000000 		.4byte	flag_ts_update
 2122 0445 17       		.uleb128 0x17
 2123 0446 5C000000 		.4byte	.LASF64
 2124 044a 05       		.byte	0x5
 2125 044b 18       		.byte	0x18
 2126 044c AC000000 		.4byte	0xac
 2127 0450 05       		.uleb128 0x5
 2128 0451 03       		.byte	0x3
 2129 0452 00000000 		.4byte	flag_ts_speed
 2130 0456 17       		.uleb128 0x17
 2131 0457 AA020000 		.4byte	.LASF65
 2132 045b 05       		.byte	0x5
 2133 045c 19       		.byte	0x19
 2134 045d AC000000 		.4byte	0xac
 2135 0461 05       		.uleb128 0x5
 2136 0462 03       		.byte	0x3
 2137 0463 00000000 		.4byte	flag_ts_display
 2138 0467 17       		.uleb128 0x17
 2139 0468 6D030000 		.4byte	.LASF66
 2140 046c 05       		.byte	0x5
 2141 046d 1C       		.byte	0x1c
 2142 046e AC000000 		.4byte	0xac
 2143 0472 05       		.uleb128 0x5
 2144 0473 03       		.byte	0x3
 2145 0474 00000000 		.4byte	flag_rx
 2146 0478 17       		.uleb128 0x17
 2147 0479 41000000 		.4byte	.LASF67
 2148 047d 05       		.byte	0x5
 2149 047e 1D       		.byte	0x1d
 2150 047f AC000000 		.4byte	0xac
 2151 0483 05       		.uleb128 0x5
 2152 0484 03       		.byte	0x3
 2153 0485 00000000 		.4byte	flag_packet
 2154 0489 17       		.uleb128 0x17
 2155 048a A0030000 		.4byte	.LASF68
 2156 048e 05       		.byte	0x5
 2157 048f 1E       		.byte	0x1e
 2158 0490 AC000000 		.4byte	0xac
 2159 0494 05       		.uleb128 0x5
 2160 0495 03       		.byte	0x3
 2161 0496 00000000 		.4byte	flag_KB_string
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 47


 2162 049a 17       		.uleb128 0x17
 2163 049b 5E030000 		.4byte	.LASF69
 2164 049f 05       		.byte	0x5
 2165 04a0 20       		.byte	0x20
 2166 04a1 AC000000 		.4byte	0xac
 2167 04a5 05       		.uleb128 0x5
 2168 04a6 03       		.byte	0x3
 2169 04a7 00000000 		.4byte	dataready_flag
 2170 04ab 17       		.uleb128 0x17
 2171 04ac 23050000 		.4byte	.LASF70
 2172 04b0 05       		.byte	0x5
 2173 04b1 22       		.byte	0x22
 2174 04b2 AC000000 		.4byte	0xac
 2175 04b6 05       		.uleb128 0x5
 2176 04b7 03       		.byte	0x3
 2177 04b8 00000000 		.4byte	flag_rf_transmission_active
 2178 04bc 06       		.uleb128 0x6
 2179 04bd 8A000000 		.4byte	0x8a
 2180 04c1 CC040000 		.4byte	0x4cc
 2181 04c5 07       		.uleb128 0x7
 2182 04c6 7D000000 		.4byte	0x7d
 2183 04ca 3F       		.byte	0x3f
 2184 04cb 00       		.byte	0
 2185 04cc 17       		.uleb128 0x17
 2186 04cd 66040000 		.4byte	.LASF71
 2187 04d1 05       		.byte	0x5
 2188 04d2 25       		.byte	0x25
 2189 04d3 BC040000 		.4byte	0x4bc
 2190 04d7 05       		.uleb128 0x5
 2191 04d8 03       		.byte	0x3
 2192 04d9 00000000 		.4byte	displaystring
 2193 04dd 17       		.uleb128 0x17
 2194 04de 16020000 		.4byte	.LASF72
 2195 04e2 05       		.byte	0x5
 2196 04e3 26       		.byte	0x26
 2197 04e4 BC040000 		.4byte	0x4bc
 2198 04e8 05       		.uleb128 0x5
 2199 04e9 03       		.byte	0x3
 2200 04ea 00000000 		.4byte	line
 2201 04ee 17       		.uleb128 0x17
 2202 04ef 11030000 		.4byte	.LASF73
 2203 04f3 05       		.byte	0x5
 2204 04f4 26       		.byte	0x26
 2205 04f5 BC040000 		.4byte	0x4bc
 2206 04f9 05       		.uleb128 0x5
 2207 04fa 03       		.byte	0x3
 2208 04fb 00000000 		.4byte	entry
 2209 04ff 06       		.uleb128 0x6
 2210 0500 AC000000 		.4byte	0xac
 2211 0504 0F050000 		.4byte	0x50f
 2212 0508 07       		.uleb128 0x7
 2213 0509 7D000000 		.4byte	0x7d
 2214 050d 3F       		.byte	0x3f
 2215 050e 00       		.byte	0
 2216 050f 17       		.uleb128 0x17
 2217 0510 B2000000 		.4byte	.LASF74
 2218 0514 05       		.byte	0x5
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 48


 2219 0515 27       		.byte	0x27
 2220 0516 FF040000 		.4byte	0x4ff
 2221 051a 05       		.uleb128 0x5
 2222 051b 03       		.byte	0x3
 2223 051c 00000000 		.4byte	usbBuffer
 2224 0520 17       		.uleb128 0x17
 2225 0521 8F000000 		.4byte	.LASF75
 2226 0525 05       		.byte	0x5
 2227 0526 3C       		.byte	0x3c
 2228 0527 EA000000 		.4byte	0xea
 2229 052b 05       		.uleb128 0x5
 2230 052c 03       		.byte	0x3
 2231 052d 00000000 		.4byte	system_state
 2232 0531 17       		.uleb128 0x17
 2233 0532 AF030000 		.4byte	.LASF76
 2234 0536 01       		.byte	0x1
 2235 0537 2A       		.byte	0x2a
 2236 0538 68000000 		.4byte	0x68
 2237 053c 05       		.uleb128 0x5
 2238 053d 03       		.byte	0x3
 2239 053e 00000000 		.4byte	consecStops
 2240 0542 17       		.uleb128 0x17
 2241 0543 2D020000 		.4byte	.LASF77
 2242 0547 01       		.byte	0x1
 2243 0548 2B       		.byte	0x2b
 2244 0549 68000000 		.4byte	0x68
 2245 054d 05       		.uleb128 0x5
 2246 054e 03       		.byte	0x3
 2247 054f 00000000 		.4byte	started
 2248 0553 17       		.uleb128 0x17
 2249 0554 BD040000 		.4byte	.LASF78
 2250 0558 01       		.byte	0x1
 2251 0559 2C       		.byte	0x2c
 2252 055a 68000000 		.4byte	0x68
 2253 055e 05       		.uleb128 0x5
 2254 055f 03       		.byte	0x3
 2255 0560 00000000 		.4byte	instCounter
 2256 0564 17       		.uleb128 0x17
 2257 0565 34040000 		.4byte	.LASF79
 2258 0569 01       		.byte	0x1
 2259 056a 32       		.byte	0x32
 2260 056b 75050000 		.4byte	0x575
 2261 056f 05       		.uleb128 0x5
 2262 0570 03       		.byte	0x3
 2263 0571 00000000 		.4byte	flag
 2264 0575 15       		.uleb128 0x15
 2265 0576 68000000 		.4byte	0x68
 2266 057a 06       		.uleb128 0x6
 2267 057b 75050000 		.4byte	0x575
 2268 057f 8B050000 		.4byte	0x58b
 2269 0583 18       		.uleb128 0x18
 2270 0584 7D000000 		.4byte	0x7d
 2271 0588 E703     		.2byte	0x3e7
 2272 058a 00       		.byte	0
 2273 058b 17       		.uleb128 0x17
 2274 058c 4F040000 		.4byte	.LASF80
 2275 0590 01       		.byte	0x1
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 49


 2276 0591 33       		.byte	0x33
 2277 0592 9C050000 		.4byte	0x59c
 2278 0596 05       		.uleb128 0x5
 2279 0597 03       		.byte	0x3
 2280 0598 00000000 		.4byte	valuesLeftIntersection
 2281 059c 15       		.uleb128 0x15
 2282 059d 7A050000 		.4byte	0x57a
 2283 05a1 17       		.uleb128 0x17
 2284 05a2 4D000000 		.4byte	.LASF81
 2285 05a6 01       		.byte	0x1
 2286 05a7 34       		.byte	0x34
 2287 05a8 B2050000 		.4byte	0x5b2
 2288 05ac 05       		.uleb128 0x5
 2289 05ad 03       		.byte	0x3
 2290 05ae 00000000 		.4byte	valuesLeftLine
 2291 05b2 15       		.uleb128 0x15
 2292 05b3 7A050000 		.4byte	0x57a
 2293 05b7 17       		.uleb128 0x17
 2294 05b8 F8030000 		.4byte	.LASF82
 2295 05bc 01       		.byte	0x1
 2296 05bd 35       		.byte	0x35
 2297 05be C8050000 		.4byte	0x5c8
 2298 05c2 05       		.uleb128 0x5
 2299 05c3 03       		.byte	0x3
 2300 05c4 00000000 		.4byte	valuesMiddleLine
 2301 05c8 15       		.uleb128 0x15
 2302 05c9 7A050000 		.4byte	0x57a
 2303 05cd 17       		.uleb128 0x17
 2304 05ce 7C000000 		.4byte	.LASF83
 2305 05d2 01       		.byte	0x1
 2306 05d3 36       		.byte	0x36
 2307 05d4 DE050000 		.4byte	0x5de
 2308 05d8 05       		.uleb128 0x5
 2309 05d9 03       		.byte	0x3
 2310 05da 00000000 		.4byte	valuesTurnComplete
 2311 05de 15       		.uleb128 0x15
 2312 05df 7A050000 		.4byte	0x57a
 2313 05e3 17       		.uleb128 0x17
 2314 05e4 AB010000 		.4byte	.LASF84
 2315 05e8 01       		.byte	0x1
 2316 05e9 37       		.byte	0x37
 2317 05ea F4050000 		.4byte	0x5f4
 2318 05ee 05       		.uleb128 0x5
 2319 05ef 03       		.byte	0x3
 2320 05f0 00000000 		.4byte	valuesRightLine
 2321 05f4 15       		.uleb128 0x15
 2322 05f5 7A050000 		.4byte	0x57a
 2323 05f9 17       		.uleb128 0x17
 2324 05fa EE010000 		.4byte	.LASF85
 2325 05fe 01       		.byte	0x1
 2326 05ff 38       		.byte	0x38
 2327 0600 0A060000 		.4byte	0x60a
 2328 0604 05       		.uleb128 0x5
 2329 0605 03       		.byte	0x3
 2330 0606 00000000 		.4byte	valuesRightIntersection
 2331 060a 15       		.uleb128 0x15
 2332 060b 7A050000 		.4byte	0x57a
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 50


 2333 060f 17       		.uleb128 0x17
 2334 0610 C9040000 		.4byte	.LASF86
 2335 0614 01       		.byte	0x1
 2336 0615 39       		.byte	0x39
 2337 0616 75050000 		.4byte	0x575
 2338 061a 05       		.uleb128 0x5
 2339 061b 03       		.byte	0x3
 2340 061c 00000000 		.4byte	count
 2341 0620 17       		.uleb128 0x17
 2342 0621 E5040000 		.4byte	.LASF87
 2343 0625 01       		.byte	0x1
 2344 0626 3A       		.byte	0x3a
 2345 0627 75050000 		.4byte	0x575
 2346 062b 05       		.uleb128 0x5
 2347 062c 03       		.byte	0x3
 2348 062d 00000000 		.4byte	motorUpdateCount
 2349 0631 17       		.uleb128 0x17
 2350 0632 8A020000 		.4byte	.LASF88
 2351 0636 01       		.byte	0x1
 2352 0637 3B       		.byte	0x3b
 2353 0638 75050000 		.4byte	0x575
 2354 063c 05       		.uleb128 0x5
 2355 063d 03       		.byte	0x3
 2356 063e 00000000 		.4byte	lastVeerDirection
 2357 0642 17       		.uleb128 0x17
 2358 0643 DB040000 		.4byte	.LASF89
 2359 0647 01       		.byte	0x1
 2360 0648 3D       		.byte	0x3d
 2361 0649 75050000 		.4byte	0x575
 2362 064d 05       		.uleb128 0x5
 2363 064e 03       		.byte	0x3
 2364 064f 00000000 		.4byte	v1M1
 2365 0653 17       		.uleb128 0x17
 2366 0654 E0040000 		.4byte	.LASF90
 2367 0658 01       		.byte	0x1
 2368 0659 3E       		.byte	0x3e
 2369 065a 75050000 		.4byte	0x575
 2370 065e 05       		.uleb128 0x5
 2371 065f 03       		.byte	0x3
 2372 0660 00000000 		.4byte	v1M2
 2373 0664 17       		.uleb128 0x17
 2374 0665 74040000 		.4byte	.LASF91
 2375 0669 01       		.byte	0x1
 2376 066a 3F       		.byte	0x3f
 2377 066b 75050000 		.4byte	0x575
 2378 066f 05       		.uleb128 0x5
 2379 0670 03       		.byte	0x3
 2380 0671 00000000 		.4byte	v2M1
 2381 0675 17       		.uleb128 0x17
 2382 0676 79040000 		.4byte	.LASF92
 2383 067a 01       		.byte	0x1
 2384 067b 40       		.byte	0x40
 2385 067c 75050000 		.4byte	0x575
 2386 0680 05       		.uleb128 0x5
 2387 0681 03       		.byte	0x3
 2388 0682 00000000 		.4byte	v2M2
 2389 0686 17       		.uleb128 0x17
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 51


 2390 0687 A5000000 		.4byte	.LASF93
 2391 068b 01       		.byte	0x1
 2392 068c 41       		.byte	0x41
 2393 068d 75050000 		.4byte	0x575
 2394 0691 05       		.uleb128 0x5
 2395 0692 03       		.byte	0x3
 2396 0693 00000000 		.4byte	turnComplete
 2397 0697 17       		.uleb128 0x17
 2398 0698 06020000 		.4byte	.LASF94
 2399 069c 01       		.byte	0x1
 2400 069d 42       		.byte	0x42
 2401 069e 68000000 		.4byte	0x68
 2402 06a2 05       		.uleb128 0x5
 2403 06a3 03       		.byte	0x3
 2404 06a4 00000000 		.4byte	pulsesTravelled
 2405 06a8 17       		.uleb128 0x17
 2406 06a9 C6020000 		.4byte	.LASF95
 2407 06ad 01       		.byte	0x1
 2408 06ae 43       		.byte	0x43
 2409 06af 75050000 		.4byte	0x575
 2410 06b3 05       		.uleb128 0x5
 2411 06b4 03       		.byte	0x3
 2412 06b5 00000000 		.4byte	checkDistance
 2413 06b9 17       		.uleb128 0x17
 2414 06ba 74050000 		.4byte	.LASF96
 2415 06be 01       		.byte	0x1
 2416 06bf 44       		.byte	0x44
 2417 06c0 75050000 		.4byte	0x575
 2418 06c4 05       		.uleb128 0x5
 2419 06c5 03       		.byte	0x3
 2420 06c6 00000000 		.4byte	step
 2421 06ca 17       		.uleb128 0x17
 2422 06cb 9C020000 		.4byte	.LASF97
 2423 06cf 01       		.byte	0x1
 2424 06d0 45       		.byte	0x45
 2425 06d1 75050000 		.4byte	0x575
 2426 06d5 05       		.uleb128 0x5
 2427 06d6 03       		.byte	0x3
 2428 06d7 00000000 		.4byte	interruptFlag
 2429 06db 17       		.uleb128 0x17
 2430 06dc 2D000000 		.4byte	.LASF98
 2431 06e0 01       		.byte	0x1
 2432 06e1 47       		.byte	0x47
 2433 06e2 68000000 		.4byte	0x68
 2434 06e6 05       		.uleb128 0x5
 2435 06e7 03       		.byte	0x3
 2436 06e8 00000000 		.4byte	lastAdjustDirection
 2437 06ec 06       		.uleb128 0x6
 2438 06ed 2C000000 		.4byte	0x2c
 2439 06f1 03070000 		.4byte	0x703
 2440 06f5 18       		.uleb128 0x18
 2441 06f6 7D000000 		.4byte	0x7d
 2442 06fa F301     		.2byte	0x1f3
 2443 06fc 07       		.uleb128 0x7
 2444 06fd 7D000000 		.4byte	0x7d
 2445 0701 01       		.byte	0x1
 2446 0702 00       		.byte	0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 52


 2447 0703 17       		.uleb128 0x17
 2448 0704 25000000 		.4byte	.LASF99
 2449 0708 01       		.byte	0x1
 2450 0709 48       		.byte	0x48
 2451 070a EC060000 		.4byte	0x6ec
 2452 070e 05       		.uleb128 0x5
 2453 070f 03       		.byte	0x3
 2454 0710 00000000 		.4byte	squares
 2455 0714 06       		.uleb128 0x6
 2456 0715 2C000000 		.4byte	0x2c
 2457 0719 25070000 		.4byte	0x725
 2458 071d 18       		.uleb128 0x18
 2459 071e 7D000000 		.4byte	0x7d
 2460 0722 F301     		.2byte	0x1f3
 2461 0724 00       		.byte	0
 2462 0725 17       		.uleb128 0x17
 2463 0726 52050000 		.4byte	.LASF100
 2464 072a 01       		.byte	0x1
 2465 072b 49       		.byte	0x49
 2466 072c 14070000 		.4byte	0x714
 2467 0730 05       		.uleb128 0x5
 2468 0731 03       		.byte	0x3
 2469 0732 00000000 		.4byte	instruction
 2470 0736 17       		.uleb128 0x17
 2471 0737 18040000 		.4byte	.LASF101
 2472 073b 01       		.byte	0x1
 2473 073c 4A       		.byte	0x4a
 2474 073d 14070000 		.4byte	0x714
 2475 0741 05       		.uleb128 0x5
 2476 0742 03       		.byte	0x3
 2477 0743 00000000 		.4byte	distance
 2478 0747 00       		.byte	0
 2479              		.section	.debug_abbrev,"",%progbits
 2480              	.Ldebug_abbrev0:
 2481 0000 01       		.uleb128 0x1
 2482 0001 11       		.uleb128 0x11
 2483 0002 01       		.byte	0x1
 2484 0003 25       		.uleb128 0x25
 2485 0004 0E       		.uleb128 0xe
 2486 0005 13       		.uleb128 0x13
 2487 0006 0B       		.uleb128 0xb
 2488 0007 03       		.uleb128 0x3
 2489 0008 0E       		.uleb128 0xe
 2490 0009 1B       		.uleb128 0x1b
 2491 000a 0E       		.uleb128 0xe
 2492 000b 55       		.uleb128 0x55
 2493 000c 17       		.uleb128 0x17
 2494 000d 11       		.uleb128 0x11
 2495 000e 01       		.uleb128 0x1
 2496 000f 10       		.uleb128 0x10
 2497 0010 17       		.uleb128 0x17
 2498 0011 00       		.byte	0
 2499 0012 00       		.byte	0
 2500 0013 02       		.uleb128 0x2
 2501 0014 24       		.uleb128 0x24
 2502 0015 00       		.byte	0
 2503 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 53


 2504 0017 0B       		.uleb128 0xb
 2505 0018 3E       		.uleb128 0x3e
 2506 0019 0B       		.uleb128 0xb
 2507 001a 03       		.uleb128 0x3
 2508 001b 0E       		.uleb128 0xe
 2509 001c 00       		.byte	0
 2510 001d 00       		.byte	0
 2511 001e 03       		.uleb128 0x3
 2512 001f 16       		.uleb128 0x16
 2513 0020 00       		.byte	0
 2514 0021 03       		.uleb128 0x3
 2515 0022 0E       		.uleb128 0xe
 2516 0023 3A       		.uleb128 0x3a
 2517 0024 0B       		.uleb128 0xb
 2518 0025 3B       		.uleb128 0x3b
 2519 0026 0B       		.uleb128 0xb
 2520 0027 49       		.uleb128 0x49
 2521 0028 13       		.uleb128 0x13
 2522 0029 00       		.byte	0
 2523 002a 00       		.byte	0
 2524 002b 04       		.uleb128 0x4
 2525 002c 24       		.uleb128 0x24
 2526 002d 00       		.byte	0
 2527 002e 0B       		.uleb128 0xb
 2528 002f 0B       		.uleb128 0xb
 2529 0030 3E       		.uleb128 0x3e
 2530 0031 0B       		.uleb128 0xb
 2531 0032 03       		.uleb128 0x3
 2532 0033 08       		.uleb128 0x8
 2533 0034 00       		.byte	0
 2534 0035 00       		.byte	0
 2535 0036 05       		.uleb128 0x5
 2536 0037 0F       		.uleb128 0xf
 2537 0038 00       		.byte	0
 2538 0039 0B       		.uleb128 0xb
 2539 003a 0B       		.uleb128 0xb
 2540 003b 49       		.uleb128 0x49
 2541 003c 13       		.uleb128 0x13
 2542 003d 00       		.byte	0
 2543 003e 00       		.byte	0
 2544 003f 06       		.uleb128 0x6
 2545 0040 01       		.uleb128 0x1
 2546 0041 01       		.byte	0x1
 2547 0042 49       		.uleb128 0x49
 2548 0043 13       		.uleb128 0x13
 2549 0044 01       		.uleb128 0x1
 2550 0045 13       		.uleb128 0x13
 2551 0046 00       		.byte	0
 2552 0047 00       		.byte	0
 2553 0048 07       		.uleb128 0x7
 2554 0049 21       		.uleb128 0x21
 2555 004a 00       		.byte	0
 2556 004b 49       		.uleb128 0x49
 2557 004c 13       		.uleb128 0x13
 2558 004d 2F       		.uleb128 0x2f
 2559 004e 0B       		.uleb128 0xb
 2560 004f 00       		.byte	0
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 54


 2561 0050 00       		.byte	0
 2562 0051 08       		.uleb128 0x8
 2563 0052 16       		.uleb128 0x16
 2564 0053 00       		.byte	0
 2565 0054 03       		.uleb128 0x3
 2566 0055 0E       		.uleb128 0xe
 2567 0056 3A       		.uleb128 0x3a
 2568 0057 0B       		.uleb128 0xb
 2569 0058 3B       		.uleb128 0x3b
 2570 0059 05       		.uleb128 0x5
 2571 005a 49       		.uleb128 0x49
 2572 005b 13       		.uleb128 0x13
 2573 005c 00       		.byte	0
 2574 005d 00       		.byte	0
 2575 005e 09       		.uleb128 0x9
 2576 005f 13       		.uleb128 0x13
 2577 0060 01       		.byte	0x1
 2578 0061 03       		.uleb128 0x3
 2579 0062 0E       		.uleb128 0xe
 2580 0063 0B       		.uleb128 0xb
 2581 0064 0B       		.uleb128 0xb
 2582 0065 3A       		.uleb128 0x3a
 2583 0066 0B       		.uleb128 0xb
 2584 0067 3B       		.uleb128 0x3b
 2585 0068 0B       		.uleb128 0xb
 2586 0069 01       		.uleb128 0x1
 2587 006a 13       		.uleb128 0x13
 2588 006b 00       		.byte	0
 2589 006c 00       		.byte	0
 2590 006d 0A       		.uleb128 0xa
 2591 006e 0D       		.uleb128 0xd
 2592 006f 00       		.byte	0
 2593 0070 03       		.uleb128 0x3
 2594 0071 0E       		.uleb128 0xe
 2595 0072 3A       		.uleb128 0x3a
 2596 0073 0B       		.uleb128 0xb
 2597 0074 3B       		.uleb128 0x3b
 2598 0075 0B       		.uleb128 0xb
 2599 0076 49       		.uleb128 0x49
 2600 0077 13       		.uleb128 0x13
 2601 0078 38       		.uleb128 0x38
 2602 0079 0B       		.uleb128 0xb
 2603 007a 00       		.byte	0
 2604 007b 00       		.byte	0
 2605 007c 0B       		.uleb128 0xb
 2606 007d 2E       		.uleb128 0x2e
 2607 007e 00       		.byte	0
 2608 007f 3F       		.uleb128 0x3f
 2609 0080 19       		.uleb128 0x19
 2610 0081 03       		.uleb128 0x3
 2611 0082 08       		.uleb128 0x8
 2612 0083 3A       		.uleb128 0x3a
 2613 0084 0B       		.uleb128 0xb
 2614 0085 3B       		.uleb128 0x3b
 2615 0086 0B       		.uleb128 0xb
 2616 0087 27       		.uleb128 0x27
 2617 0088 19       		.uleb128 0x19
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 55


 2618 0089 11       		.uleb128 0x11
 2619 008a 01       		.uleb128 0x1
 2620 008b 12       		.uleb128 0x12
 2621 008c 06       		.uleb128 0x6
 2622 008d 40       		.uleb128 0x40
 2623 008e 18       		.uleb128 0x18
 2624 008f 9742     		.uleb128 0x2117
 2625 0091 19       		.uleb128 0x19
 2626 0092 00       		.byte	0
 2627 0093 00       		.byte	0
 2628 0094 0C       		.uleb128 0xc
 2629 0095 2E       		.uleb128 0x2e
 2630 0096 01       		.byte	0x1
 2631 0097 3F       		.uleb128 0x3f
 2632 0098 19       		.uleb128 0x19
 2633 0099 03       		.uleb128 0x3
 2634 009a 0E       		.uleb128 0xe
 2635 009b 3A       		.uleb128 0x3a
 2636 009c 0B       		.uleb128 0xb
 2637 009d 3B       		.uleb128 0x3b
 2638 009e 0B       		.uleb128 0xb
 2639 009f 49       		.uleb128 0x49
 2640 00a0 13       		.uleb128 0x13
 2641 00a1 11       		.uleb128 0x11
 2642 00a2 01       		.uleb128 0x1
 2643 00a3 12       		.uleb128 0x12
 2644 00a4 06       		.uleb128 0x6
 2645 00a5 40       		.uleb128 0x40
 2646 00a6 18       		.uleb128 0x18
 2647 00a7 9642     		.uleb128 0x2116
 2648 00a9 19       		.uleb128 0x19
 2649 00aa 01       		.uleb128 0x1
 2650 00ab 13       		.uleb128 0x13
 2651 00ac 00       		.byte	0
 2652 00ad 00       		.byte	0
 2653 00ae 0D       		.uleb128 0xd
 2654 00af 0B       		.uleb128 0xb
 2655 00b0 01       		.byte	0x1
 2656 00b1 11       		.uleb128 0x11
 2657 00b2 01       		.uleb128 0x1
 2658 00b3 12       		.uleb128 0x12
 2659 00b4 06       		.uleb128 0x6
 2660 00b5 01       		.uleb128 0x1
 2661 00b6 13       		.uleb128 0x13
 2662 00b7 00       		.byte	0
 2663 00b8 00       		.byte	0
 2664 00b9 0E       		.uleb128 0xe
 2665 00ba 34       		.uleb128 0x34
 2666 00bb 00       		.byte	0
 2667 00bc 03       		.uleb128 0x3
 2668 00bd 08       		.uleb128 0x8
 2669 00be 3A       		.uleb128 0x3a
 2670 00bf 0B       		.uleb128 0xb
 2671 00c0 3B       		.uleb128 0x3b
 2672 00c1 0B       		.uleb128 0xb
 2673 00c2 49       		.uleb128 0x49
 2674 00c3 13       		.uleb128 0x13
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 56


 2675 00c4 02       		.uleb128 0x2
 2676 00c5 18       		.uleb128 0x18
 2677 00c6 00       		.byte	0
 2678 00c7 00       		.byte	0
 2679 00c8 0F       		.uleb128 0xf
 2680 00c9 0B       		.uleb128 0xb
 2681 00ca 01       		.byte	0x1
 2682 00cb 11       		.uleb128 0x11
 2683 00cc 01       		.uleb128 0x1
 2684 00cd 12       		.uleb128 0x12
 2685 00ce 06       		.uleb128 0x6
 2686 00cf 00       		.byte	0
 2687 00d0 00       		.byte	0
 2688 00d1 10       		.uleb128 0x10
 2689 00d2 34       		.uleb128 0x34
 2690 00d3 00       		.byte	0
 2691 00d4 03       		.uleb128 0x3
 2692 00d5 0E       		.uleb128 0xe
 2693 00d6 3A       		.uleb128 0x3a
 2694 00d7 0B       		.uleb128 0xb
 2695 00d8 3B       		.uleb128 0x3b
 2696 00d9 0B       		.uleb128 0xb
 2697 00da 49       		.uleb128 0x49
 2698 00db 13       		.uleb128 0x13
 2699 00dc 02       		.uleb128 0x2
 2700 00dd 18       		.uleb128 0x18
 2701 00de 00       		.byte	0
 2702 00df 00       		.byte	0
 2703 00e0 11       		.uleb128 0x11
 2704 00e1 34       		.uleb128 0x34
 2705 00e2 00       		.byte	0
 2706 00e3 03       		.uleb128 0x3
 2707 00e4 0E       		.uleb128 0xe
 2708 00e5 3A       		.uleb128 0x3a
 2709 00e6 0B       		.uleb128 0xb
 2710 00e7 3B       		.uleb128 0x3b
 2711 00e8 05       		.uleb128 0x5
 2712 00e9 49       		.uleb128 0x49
 2713 00ea 13       		.uleb128 0x13
 2714 00eb 02       		.uleb128 0x2
 2715 00ec 18       		.uleb128 0x18
 2716 00ed 00       		.byte	0
 2717 00ee 00       		.byte	0
 2718 00ef 12       		.uleb128 0x12
 2719 00f0 2E       		.uleb128 0x2e
 2720 00f1 01       		.byte	0x1
 2721 00f2 3F       		.uleb128 0x3f
 2722 00f3 19       		.uleb128 0x19
 2723 00f4 03       		.uleb128 0x3
 2724 00f5 0E       		.uleb128 0xe
 2725 00f6 3A       		.uleb128 0x3a
 2726 00f7 0B       		.uleb128 0xb
 2727 00f8 3B       		.uleb128 0x3b
 2728 00f9 05       		.uleb128 0x5
 2729 00fa 27       		.uleb128 0x27
 2730 00fb 19       		.uleb128 0x19
 2731 00fc 11       		.uleb128 0x11
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 57


 2732 00fd 01       		.uleb128 0x1
 2733 00fe 12       		.uleb128 0x12
 2734 00ff 06       		.uleb128 0x6
 2735 0100 40       		.uleb128 0x40
 2736 0101 18       		.uleb128 0x18
 2737 0102 9642     		.uleb128 0x2116
 2738 0104 19       		.uleb128 0x19
 2739 0105 01       		.uleb128 0x1
 2740 0106 13       		.uleb128 0x13
 2741 0107 00       		.byte	0
 2742 0108 00       		.byte	0
 2743 0109 13       		.uleb128 0x13
 2744 010a 05       		.uleb128 0x5
 2745 010b 00       		.byte	0
 2746 010c 03       		.uleb128 0x3
 2747 010d 08       		.uleb128 0x8
 2748 010e 3A       		.uleb128 0x3a
 2749 010f 0B       		.uleb128 0xb
 2750 0110 3B       		.uleb128 0x3b
 2751 0111 05       		.uleb128 0x5
 2752 0112 49       		.uleb128 0x49
 2753 0113 13       		.uleb128 0x13
 2754 0114 02       		.uleb128 0x2
 2755 0115 18       		.uleb128 0x18
 2756 0116 00       		.byte	0
 2757 0117 00       		.byte	0
 2758 0118 14       		.uleb128 0x14
 2759 0119 34       		.uleb128 0x34
 2760 011a 00       		.byte	0
 2761 011b 03       		.uleb128 0x3
 2762 011c 0E       		.uleb128 0xe
 2763 011d 3A       		.uleb128 0x3a
 2764 011e 0B       		.uleb128 0xb
 2765 011f 3B       		.uleb128 0x3b
 2766 0120 05       		.uleb128 0x5
 2767 0121 49       		.uleb128 0x49
 2768 0122 13       		.uleb128 0x13
 2769 0123 3F       		.uleb128 0x3f
 2770 0124 19       		.uleb128 0x19
 2771 0125 3C       		.uleb128 0x3c
 2772 0126 19       		.uleb128 0x19
 2773 0127 00       		.byte	0
 2774 0128 00       		.byte	0
 2775 0129 15       		.uleb128 0x15
 2776 012a 35       		.uleb128 0x35
 2777 012b 00       		.byte	0
 2778 012c 49       		.uleb128 0x49
 2779 012d 13       		.uleb128 0x13
 2780 012e 00       		.byte	0
 2781 012f 00       		.byte	0
 2782 0130 16       		.uleb128 0x16
 2783 0131 34       		.uleb128 0x34
 2784 0132 00       		.byte	0
 2785 0133 03       		.uleb128 0x3
 2786 0134 08       		.uleb128 0x8
 2787 0135 3A       		.uleb128 0x3a
 2788 0136 0B       		.uleb128 0xb
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 58


 2789 0137 3B       		.uleb128 0x3b
 2790 0138 0B       		.uleb128 0xb
 2791 0139 49       		.uleb128 0x49
 2792 013a 13       		.uleb128 0x13
 2793 013b 3F       		.uleb128 0x3f
 2794 013c 19       		.uleb128 0x19
 2795 013d 02       		.uleb128 0x2
 2796 013e 18       		.uleb128 0x18
 2797 013f 00       		.byte	0
 2798 0140 00       		.byte	0
 2799 0141 17       		.uleb128 0x17
 2800 0142 34       		.uleb128 0x34
 2801 0143 00       		.byte	0
 2802 0144 03       		.uleb128 0x3
 2803 0145 0E       		.uleb128 0xe
 2804 0146 3A       		.uleb128 0x3a
 2805 0147 0B       		.uleb128 0xb
 2806 0148 3B       		.uleb128 0x3b
 2807 0149 0B       		.uleb128 0xb
 2808 014a 49       		.uleb128 0x49
 2809 014b 13       		.uleb128 0x13
 2810 014c 3F       		.uleb128 0x3f
 2811 014d 19       		.uleb128 0x19
 2812 014e 02       		.uleb128 0x2
 2813 014f 18       		.uleb128 0x18
 2814 0150 00       		.byte	0
 2815 0151 00       		.byte	0
 2816 0152 18       		.uleb128 0x18
 2817 0153 21       		.uleb128 0x21
 2818 0154 00       		.byte	0
 2819 0155 49       		.uleb128 0x49
 2820 0156 13       		.uleb128 0x13
 2821 0157 2F       		.uleb128 0x2f
 2822 0158 05       		.uleb128 0x5
 2823 0159 00       		.byte	0
 2824 015a 00       		.byte	0
 2825 015b 00       		.byte	0
 2826              		.section	.debug_aranges,"",%progbits
 2827 0000 34000000 		.4byte	0x34
 2828 0004 0200     		.2byte	0x2
 2829 0006 00000000 		.4byte	.Ldebug_info0
 2830 000a 04       		.byte	0x4
 2831 000b 00       		.byte	0
 2832 000c 0000     		.2byte	0
 2833 000e 0000     		.2byte	0
 2834 0010 00000000 		.4byte	.LFB64
 2835 0014 18000000 		.4byte	.LFE64-.LFB64
 2836 0018 00000000 		.4byte	.LFB65
 2837 001c 30090000 		.4byte	.LFE65-.LFB65
 2838 0020 00000000 		.4byte	.LFB66
 2839 0024 3E000000 		.4byte	.LFE66-.LFB66
 2840 0028 00000000 		.4byte	.LFB67
 2841 002c 26000000 		.4byte	.LFE67-.LFB67
 2842 0030 00000000 		.4byte	0
 2843 0034 00000000 		.4byte	0
 2844              		.section	.debug_ranges,"",%progbits
 2845              	.Ldebug_ranges0:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 59


 2846 0000 00000000 		.4byte	.LFB64
 2847 0004 18000000 		.4byte	.LFE64
 2848 0008 00000000 		.4byte	.LFB65
 2849 000c 30090000 		.4byte	.LFE65
 2850 0010 00000000 		.4byte	.LFB66
 2851 0014 3E000000 		.4byte	.LFE66
 2852 0018 00000000 		.4byte	.LFB67
 2853 001c 26000000 		.4byte	.LFE67
 2854 0020 00000000 		.4byte	0
 2855 0024 00000000 		.4byte	0
 2856              		.section	.debug_line,"",%progbits
 2857              	.Ldebug_line0:
 2858 0000 CB030000 		.section	.debug_str,"MS",%progbits,1
 2858      02005601 
 2858      00000201 
 2858      FB0E0D00 
 2858      01010101 
 2859              	.LASF56:
 2860 0000 75736250 		.ascii	"usbPutChar\000"
 2860      75744368 
 2860      617200
 2861              	.LASF37:
 2862 000b 68696768 		.ascii	"highCountLeftIntersection\000"
 2862      436F756E 
 2862      744C6566 
 2862      74496E74 
 2862      65727365 
 2863              	.LASF99:
 2864 0025 73717561 		.ascii	"squares\000"
 2864      72657300 
 2865              	.LASF98:
 2866 002d 6C617374 		.ascii	"lastAdjustDirection\000"
 2866      41646A75 
 2866      73744469 
 2866      72656374 
 2866      696F6E00 
 2867              	.LASF67:
 2868 0041 666C6167 		.ascii	"flag_packet\000"
 2868      5F706163 
 2868      6B657400 
 2869              	.LASF81:
 2870 004d 76616C75 		.ascii	"valuesLeftLine\000"
 2870      65734C65 
 2870      66744C69 
 2870      6E6500
 2871              	.LASF64:
 2872 005c 666C6167 		.ascii	"flag_ts_speed\000"
 2872      5F74735F 
 2872      73706565 
 2872      6400
 2873              	.LASF33:
 2874 006a 67325F78 		.ascii	"g2_xpos\000"
 2874      706F7300 
 2875              	.LASF2:
 2876 0072 73686F72 		.ascii	"short int\000"
 2876      7420696E 
 2876      7400
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 60


 2877              	.LASF83:
 2878 007c 76616C75 		.ascii	"valuesTurnComplete\000"
 2878      65735475 
 2878      726E436F 
 2878      6D706C65 
 2878      746500
 2879              	.LASF75:
 2880 008f 73797374 		.ascii	"system_state\000"
 2880      656D5F73 
 2880      74617465 
 2880      00
 2881              	.LASF10:
 2882 009c 73697A65 		.ascii	"sizetype\000"
 2882      74797065 
 2882      00
 2883              	.LASF93:
 2884 00a5 7475726E 		.ascii	"turnComplete\000"
 2884      436F6D70 
 2884      6C657465 
 2884      00
 2885              	.LASF74:
 2886 00b2 75736242 		.ascii	"usbBuffer\000"
 2886      75666665 
 2886      7200
 2887              	.LASF102:
 2888 00bc 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2888      43313120 
 2888      352E342E 
 2888      31203230 
 2888      31363036 
 2889 00ef 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2889      20726576 
 2889      6973696F 
 2889      6E203233 
 2889      37373135 
 2890 0122 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2890      66756E63 
 2890      74696F6E 
 2890      2D736563 
 2890      74696F6E 
 2891              	.LASF54:
 2892 014a 6D61696E 		.ascii	"main\000"
 2892      00
 2893              	.LASF104:
 2894 014f 483A5C44 		.ascii	"H:\\Documents\\GitHub\\team14\\301_lab_tasks\\psoc "
 2894      6F63756D 
 2894      656E7473 
 2894      5C476974 
 2894      4875625C 
 2895 017d 73747564 		.ascii	"student pack\\psoc_code_base\\CS301_Class.cydsn\000"
 2895      656E7420 
 2895      7061636B 
 2895      5C70736F 
 2895      635F636F 
 2896              	.LASF84:
 2897 01ab 76616C75 		.ascii	"valuesRightLine\000"
 2897      65735269 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 61


 2897      6768744C 
 2897      696E6500 
 2898              	.LASF36:
 2899 01bb 67325F64 		.ascii	"g2_direction\000"
 2899      69726563 
 2899      74696F6E 
 2899      00
 2900              	.LASF15:
 2901 01c8 75696E74 		.ascii	"uint16\000"
 2901      313600
 2902              	.LASF21:
 2903 01cf 696E6465 		.ascii	"index\000"
 2903      7800
 2904              	.LASF17:
 2905 01d5 696E7431 		.ascii	"int16\000"
 2905      3600
 2906              	.LASF14:
 2907 01db 75696E74 		.ascii	"uint8\000"
 2907      3800
 2908              	.LASF32:
 2909 01e1 67315F64 		.ascii	"g1_direction\000"
 2909      69726563 
 2909      74696F6E 
 2909      00
 2910              	.LASF85:
 2911 01ee 76616C75 		.ascii	"valuesRightIntersection\000"
 2911      65735269 
 2911      67687449 
 2911      6E746572 
 2911      73656374 
 2912              	.LASF94:
 2913 0206 70756C73 		.ascii	"pulsesTravelled\000"
 2913      65735472 
 2913      6176656C 
 2913      6C656400 
 2914              	.LASF72:
 2915 0216 6C696E65 		.ascii	"line\000"
 2915      00
 2916              	.LASF0:
 2917 021b 7369676E 		.ascii	"signed char\000"
 2917      65642063 
 2917      68617200 
 2918              	.LASF18:
 2919 0227 666C6F61 		.ascii	"float\000"
 2919      7400
 2920              	.LASF77:
 2921 022d 73746172 		.ascii	"started\000"
 2921      74656400 
 2922              	.LASF6:
 2923 0235 6C6F6E67 		.ascii	"long long int\000"
 2923      206C6F6E 
 2923      6720696E 
 2923      7400
 2924              	.LASF55:
 2925 0243 75736250 		.ascii	"usbPutString\000"
 2925      75745374 
 2925      72696E67 
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 62


 2925      00
 2926              	.LASF16:
 2927 0250 696E7438 		.ascii	"int8\000"
 2927      00
 2928              	.LASF63:
 2929 0255 666C6167 		.ascii	"flag_ts_update\000"
 2929      5F74735F 
 2929      75706461 
 2929      746500
 2930              	.LASF34:
 2931 0264 67325F79 		.ascii	"g2_ypos\000"
 2931      706F7300 
 2932              	.LASF28:
 2933 026c 67305F64 		.ascii	"g0_direction\000"
 2933      69726563 
 2933      74696F6E 
 2933      00
 2934              	.LASF25:
 2935 0279 67305F78 		.ascii	"g0_xpos\000"
 2935      706F7300 
 2936              	.LASF4:
 2937 0281 6C6F6E67 		.ascii	"long int\000"
 2937      20696E74 
 2937      00
 2938              	.LASF88:
 2939 028a 6C617374 		.ascii	"lastVeerDirection\000"
 2939      56656572 
 2939      44697265 
 2939      6374696F 
 2939      6E00
 2940              	.LASF97:
 2941 029c 696E7465 		.ascii	"interruptFlag\000"
 2941      72727570 
 2941      74466C61 
 2941      6700
 2942              	.LASF65:
 2943 02aa 666C6167 		.ascii	"flag_ts_display\000"
 2943      5F74735F 
 2943      64697370 
 2943      6C617900 
 2944              	.LASF46:
 2945 02ba 63757272 		.ascii	"currentInst\000"
 2945      656E7449 
 2945      6E737400 
 2946              	.LASF95:
 2947 02c6 63686563 		.ascii	"checkDistance\000"
 2947      6B446973 
 2947      74616E63 
 2947      6500
 2948              	.LASF42:
 2949 02d4 68696768 		.ascii	"highCountRightIntersection\000"
 2949      436F756E 
 2949      74526967 
 2949      6874496E 
 2949      74657273 
 2950              	.LASF1:
 2951 02ef 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 63


 2951      676E6564 
 2951      20636861 
 2951      7200
 2952              	.LASF30:
 2953 02fd 67315F79 		.ascii	"g1_ypos\000"
 2953      706F7300 
 2954              	.LASF9:
 2955 0305 6C6F6E67 		.ascii	"long double\000"
 2955      20646F75 
 2955      626C6500 
 2956              	.LASF73:
 2957 0311 656E7472 		.ascii	"entry\000"
 2957      7900
 2958              	.LASF43:
 2959 0317 72657375 		.ascii	"result1\000"
 2959      6C743100 
 2960              	.LASF44:
 2961 031f 72657375 		.ascii	"result2\000"
 2961      6C743200 
 2962              	.LASF45:
 2963 0327 66697273 		.ascii	"firstNonZeroIndex\000"
 2963      744E6F6E 
 2963      5A65726F 
 2963      496E6465 
 2963      7800
 2964              	.LASF27:
 2965 0339 67305F73 		.ascii	"g0_speed\000"
 2965      70656564 
 2965      00
 2966              	.LASF31:
 2967 0342 67315F73 		.ascii	"g1_speed\000"
 2967      70656564 
 2967      00
 2968              	.LASF41:
 2969 034b 68696768 		.ascii	"highCountRightLine\000"
 2969      436F756E 
 2969      74526967 
 2969      68744C69 
 2969      6E6500
 2970              	.LASF69:
 2971 035e 64617461 		.ascii	"dataready_flag\000"
 2971      72656164 
 2971      795F666C 
 2971      616700
 2972              	.LASF66:
 2973 036d 666C6167 		.ascii	"flag_rx\000"
 2973      5F727800 
 2974              	.LASF51:
 2975 0375 7365636F 		.ascii	"second\000"
 2975      6E6400
 2976              	.LASF7:
 2977 037c 6C6F6E67 		.ascii	"long long unsigned int\000"
 2977      206C6F6E 
 2977      6720756E 
 2977      7369676E 
 2977      65642069 
 2978              	.LASF8:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 64


 2979 0393 756E7369 		.ascii	"unsigned int\000"
 2979      676E6564 
 2979      20696E74 
 2979      00
 2980              	.LASF68:
 2981 03a0 666C6167 		.ascii	"flag_KB_string\000"
 2981      5F4B425F 
 2981      73747269 
 2981      6E6700
 2982              	.LASF76:
 2983 03af 636F6E73 		.ascii	"consecStops\000"
 2983      65635374 
 2983      6F707300 
 2984              	.LASF35:
 2985 03bb 67325F73 		.ascii	"g2_speed\000"
 2985      70656564 
 2985      00
 2986              	.LASF48:
 2987 03c4 64697374 		.ascii	"dist\000"
 2987      00
 2988              	.LASF29:
 2989 03c9 67315F78 		.ascii	"g1_xpos\000"
 2989      706F7300 
 2990              	.LASF3:
 2991 03d1 73686F72 		.ascii	"short unsigned int\000"
 2991      7420756E 
 2991      7369676E 
 2991      65642069 
 2991      6E7400
 2992              	.LASF39:
 2993 03e4 68696768 		.ascii	"highCountMiddleLine\000"
 2993      436F756E 
 2993      744D6964 
 2993      646C654C 
 2993      696E6500 
 2994              	.LASF82:
 2995 03f8 76616C75 		.ascii	"valuesMiddleLine\000"
 2995      65734D69 
 2995      64646C65 
 2995      4C696E65 
 2995      00
 2996              	.LASF105:
 2997 0409 64617461 		.ascii	"data_main\000"
 2997      5F6D6169 
 2997      6E00
 2998              	.LASF11:
 2999 0413 63686172 		.ascii	"char\000"
 2999      00
 3000              	.LASF101:
 3001 0418 64697374 		.ascii	"distance\000"
 3001      616E6365 
 3001      00
 3002              	.LASF22:
 3003 0421 726F626F 		.ascii	"robot_xpos\000"
 3003      745F7870 
 3003      6F7300
 3004              	.LASF13:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 65


 3005 042c 696E7433 		.ascii	"int32_t\000"
 3005      325F7400 
 3006              	.LASF79:
 3007 0434 666C6167 		.ascii	"flag\000"
 3007      00
 3008              	.LASF12:
 3009 0439 5F5F696E 		.ascii	"__int32_t\000"
 3009      7433325F 
 3009      7400
 3010              	.LASF49:
 3011 0443 70756C73 		.ascii	"pulses\000"
 3011      657300
 3012              	.LASF53:
 3013 044a 6356616C 		.ascii	"cVal\000"
 3013      00
 3014              	.LASF80:
 3015 044f 76616C75 		.ascii	"valuesLeftIntersection\000"
 3015      65734C65 
 3015      6674496E 
 3015      74657273 
 3015      65637469 
 3016              	.LASF71:
 3017 0466 64697370 		.ascii	"displaystring\000"
 3017      6C617973 
 3017      7472696E 
 3017      6700
 3018              	.LASF91:
 3019 0474 76324D31 		.ascii	"v2M1\000"
 3019      00
 3020              	.LASF92:
 3021 0479 76324D32 		.ascii	"v2M2\000"
 3021      00
 3022              	.LASF38:
 3023 047e 68696768 		.ascii	"highCountLeftLine\000"
 3023      436F756E 
 3023      744C6566 
 3023      744C696E 
 3023      6500
 3024              	.LASF103:
 3025 0490 6D61696E 		.ascii	"main.c\000"
 3025      2E6300
 3026              	.LASF5:
 3027 0497 6C6F6E67 		.ascii	"long unsigned int\000"
 3027      20756E73 
 3027      69676E65 
 3027      6420696E 
 3027      7400
 3028              	.LASF19:
 3029 04a9 646F7562 		.ascii	"double\000"
 3029      6C6500
 3030              	.LASF57:
 3031 04b0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3031      52784275 
 3031      66666572 
 3031      00
 3032              	.LASF78:
 3033 04bd 696E7374 		.ascii	"instCounter\000"
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 66


 3033      436F756E 
 3033      74657200 
 3034              	.LASF86:
 3035 04c9 636F756E 		.ascii	"count\000"
 3035      7400
 3036              	.LASF62:
 3037 04cf 666C6167 		.ascii	"flag_ts_enc\000"
 3037      5F74735F 
 3037      656E6300 
 3038              	.LASF89:
 3039 04db 76314D31 		.ascii	"v1M1\000"
 3039      00
 3040              	.LASF90:
 3041 04e0 76314D32 		.ascii	"v1M2\000"
 3041      00
 3042              	.LASF87:
 3043 04e5 6D6F746F 		.ascii	"motorUpdateCount\000"
 3043      72557064 
 3043      61746543 
 3043      6F756E74 
 3043      00
 3044              	.LASF26:
 3045 04f6 67305F79 		.ascii	"g0_ypos\000"
 3045      706F7300 
 3046              	.LASF61:
 3047 04fe 74735F64 		.ascii	"ts_display\000"
 3047      6973706C 
 3047      617900
 3048              	.LASF60:
 3049 0509 74735F73 		.ascii	"ts_speed\000"
 3049      70656564 
 3049      00
 3050              	.LASF58:
 3051 0512 74735F65 		.ascii	"ts_enc\000"
 3051      6E6300
 3052              	.LASF59:
 3053 0519 74735F75 		.ascii	"ts_update\000"
 3053      70646174 
 3053      6500
 3054              	.LASF70:
 3055 0523 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3055      5F72665F 
 3055      7472616E 
 3055      736D6973 
 3055      73696F6E 
 3056              	.LASF23:
 3057 053f 726F626F 		.ascii	"robot_ypos\000"
 3057      745F7970 
 3057      6F7300
 3058              	.LASF52:
 3059 054a 696E7374 		.ascii	"instStr\000"
 3059      53747200 
 3060              	.LASF100:
 3061 0552 696E7374 		.ascii	"instruction\000"
 3061      72756374 
 3061      696F6E00 
 3062              	.LASF40:
ARM GAS  C:\Users\hsal869\AppData\Local\Temp\ccs0hoAL.s 			page 67


 3063 055e 68696768 		.ascii	"highCountTurnComplete\000"
 3063      436F756E 
 3063      74547572 
 3063      6E436F6D 
 3063      706C6574 
 3064              	.LASF96:
 3065 0574 73746570 		.ascii	"step\000"
 3065      00
 3066              	.LASF20:
 3067 0579 72737369 		.ascii	"rssi\000"
 3067      00
 3068              	.LASF24:
 3069 057e 726F626F 		.ascii	"robot_orientation\000"
 3069      745F6F72 
 3069      69656E74 
 3069      6174696F 
 3069      6E00
 3070              	.LASF50:
 3071 0590 66697273 		.ascii	"first\000"
 3071      7400
 3072              	.LASF47:
 3073 0596 6E657874 		.ascii	"nextInst\000"
 3073      496E7374 
 3073      00
 3074              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
