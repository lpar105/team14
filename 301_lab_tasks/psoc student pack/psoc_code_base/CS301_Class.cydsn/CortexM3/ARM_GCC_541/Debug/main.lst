ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	TARGET_SPEED
 107              		.align	2
 108              		.type	TARGET_SPEED, %object
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 3


 109              		.size	TARGET_SPEED, 4
 110              	TARGET_SPEED:
 111 0044 00007041 		.word	1097859072
 112              		.global	restoring
 113              		.align	2
 114              		.type	restoring, %object
 115              		.size	restoring, 4
 116              	restoring:
 117 0048 1E000000 		.word	30
 118              		.global	turningDirection
 119              		.bss
 120 0012 0000     		.align	2
 121              		.type	turningDirection, %object
 122              		.size	turningDirection, 4
 123              	turningDirection:
 124 0014 00000000 		.space	4
 125              		.global	turningCount
 126              		.data
 127              		.align	2
 128              		.type	turningCount, %object
 129              		.size	turningCount, 4
 130              	turningCount:
 131 004c 1E000000 		.word	30
 132              		.global	shouldUpdate
 133              		.align	2
 134              		.type	shouldUpdate, %object
 135              		.size	shouldUpdate, 4
 136              	shouldUpdate:
 137 0050 01000000 		.word	1
 138              		.global	dotsTravelled
 139              		.bss
 140              		.align	2
 141              		.type	dotsTravelled, %object
 142              		.size	dotsTravelled, 4
 143              	dotsTravelled:
 144 0018 00000000 		.space	4
 145              		.global	consecStops
 146              		.align	2
 147              		.type	consecStops, %object
 148              		.size	consecStops, 4
 149              	consecStops:
 150 001c 00000000 		.space	4
 151              		.global	started
 152              		.align	2
 153              		.type	started, %object
 154              		.size	started, 4
 155              	started:
 156 0020 00000000 		.space	4
 157              		.global	instCounter
 158              		.align	2
 159              		.type	instCounter, %object
 160              		.size	instCounter, 4
 161              	instCounter:
 162 0024 00000000 		.space	4
 163              		.global	flag
 164              		.align	2
 165              		.type	flag, %object
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 4


 166              		.size	flag, 4
 167              	flag:
 168 0028 00000000 		.space	4
 169              		.comm	valuesLeftIntersection,4000,4
 170              		.comm	valuesLeftLine,4000,4
 171              		.comm	valuesMiddleLine,4000,4
 172              		.comm	valuesTurnComplete,4000,4
 173              		.comm	valuesRightLine,4000,4
 174              		.comm	valuesRightIntersection,4000,4
 175              		.global	count
 176              		.align	2
 177              		.type	count, %object
 178              		.size	count, 4
 179              	count:
 180 002c 00000000 		.space	4
 181              		.global	turningLeft
 182              		.align	2
 183              		.type	turningLeft, %object
 184              		.size	turningLeft, 4
 185              	turningLeft:
 186 0030 00000000 		.space	4
 187              		.global	turningRight
 188              		.align	2
 189              		.type	turningRight, %object
 190              		.size	turningRight, 4
 191              	turningRight:
 192 0034 00000000 		.space	4
 193              		.global	lastVeerDirection
 194              		.align	2
 195              		.type	lastVeerDirection, %object
 196              		.size	lastVeerDirection, 4
 197              	lastVeerDirection:
 198 0038 00000000 		.space	4
 199              		.global	motorFlag
 200              		.align	2
 201              		.type	motorFlag, %object
 202              		.size	motorFlag, 4
 203              	motorFlag:
 204 003c 00000000 		.space	4
 205              		.global	step
 206              		.align	2
 207              		.type	step, %object
 208              		.size	step, 4
 209              	step:
 210 0040 00000000 		.space	4
 211              		.comm	v1L,4,4
 212              		.comm	v2L,4,4
 213              		.comm	v1R,4,4
 214              		.comm	v2R,4,4
 215              		.comm	numRotationsL,4,4
 216              		.comm	numRotationsR,4,4
 217              		.comm	turnCount,4,4
 218              		.global	distanceTravelled
 219              		.align	2
 220              		.type	distanceTravelled, %object
 221              		.size	distanceTravelled, 4
 222              	distanceTravelled:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 5


 223 0044 00000000 		.space	4
 224              		.global	distancePerSecondL
 225              		.align	2
 226              		.type	distancePerSecondL, %object
 227              		.size	distancePerSecondL, 4
 228              	distancePerSecondL:
 229 0048 00000000 		.space	4
 230              		.global	distancePerSecondR
 231              		.align	2
 232              		.type	distancePerSecondR, %object
 233              		.size	distancePerSecondR, 4
 234              	distancePerSecondR:
 235 004c 00000000 		.space	4
 236              		.global	distancePerSecondAvg
 237              		.align	2
 238              		.type	distancePerSecondAvg, %object
 239              		.size	distancePerSecondAvg, 4
 240              	distancePerSecondAvg:
 241 0050 00000000 		.space	4
 242              		.global	prevTurnState
 243              		.align	2
 244              		.type	prevTurnState, %object
 245              		.size	prevTurnState, 4
 246              	prevTurnState:
 247 0054 00000000 		.space	4
 248              		.global	turnState
 249              		.align	2
 250              		.type	turnState, %object
 251              		.size	turnState, 4
 252              	turnState:
 253 0058 00000000 		.space	4
 254              		.global	turnEnable
 255              		.align	2
 256              		.type	turnEnable, %object
 257              		.size	turnEnable, 4
 258              	turnEnable:
 259 005c 00000000 		.space	4
 260              		.global	turnTimer
 261              		.align	2
 262              		.type	turnTimer, %object
 263              		.size	turnTimer, 4
 264              	turnTimer:
 265 0060 00000000 		.space	4
 266              		.global	lastAdjustDirection
 267              		.align	2
 268              		.type	lastAdjustDirection, %object
 269              		.size	lastAdjustDirection, 4
 270              	lastAdjustDirection:
 271 0064 00000000 		.space	4
 272              		.comm	squares,1000,4
 273              		.comm	instruction,500,4
 274              		.comm	distance,500,4
 275              		.section	.text.eoc,"ax",%progbits
 276              		.align	2
 277              		.global	eoc
 278              		.thumb
 279              		.thumb_func
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 6


 280              		.type	eoc, %function
 281              	eoc:
 282              	.LFB64:
 283              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** #include "pathfind.h"
  30:main.c        **** 
  31:main.c        **** #include "vars.h"
  32:main.c        **** 
  33:main.c        **** #define ADC_COUNT 1000
  34:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 150
  35:main.c        **** #define R_INT_BLACK highCountRightIntersection < 150
  36:main.c        **** #define L_LINE_BLACK highCountLeftLine < 150
  37:main.c        **** #define R_LINE_BLACK highCountRightLine < 150
  38:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 150
  39:main.c        **** #define TC_BLACK highCountTurnComplete < 150
  40:main.c        **** float TARGET_SPEED = 15; //speed in cm^-1
  41:main.c        **** int restoring = 30;
  42:main.c        **** int turningDirection = 0;
  43:main.c        **** int turningCount = 30;
  44:main.c        **** volatile int shouldUpdate = 1;
  45:main.c        **** #define MOVE_DISTANCE 9999999 //cm
  46:main.c        **** volatile int dotsTravelled = 0;
  47:main.c        **** int consecStops = 0;
  48:main.c        **** int started = 0;
  49:main.c        **** int instCounter = 0;
  50:main.c        **** //* ========================================
  51:main.c        **** void usbPutString(char * s);
  52:main.c        **** void usbPutChar(char c);
  53:main.c        **** void printSensorDebug(int highCountLeftIntersection, int highCountLeftLine, int highCountMiddleLine
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 7


  54:main.c        **** //* ========================================
  55:main.c        **** 
  56:main.c        **** volatile int flag = 0;
  57:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  58:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  59:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  60:main.c        **** volatile int valuesTurnComplete[ADC_COUNT];
  61:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  62:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  63:main.c        **** volatile int count = 0;
  64:main.c        **** volatile int turningLeft = 0;
  65:main.c        **** volatile int turningRight = 0;
  66:main.c        **** volatile int lastVeerDirection = 0;
  67:main.c        **** 
  68:main.c        **** volatile int motorFlag = 0;
  69:main.c        **** volatile int step = 0; // are we on first measuring step or second step?
  70:main.c        **** volatile int v1L; // allocating storage for measure number of holes (ahead) - LEFT WHEEL
  71:main.c        **** volatile int v2L; // allocating storage for measure number of holes (behind) - LEFT WHEEL
  72:main.c        **** volatile int v1R; // allocating storage for measure number of holes (ahead) - RIGHT WHEEL
  73:main.c        **** volatile int v2R; // allocating storage for measure number of holes (behind) - RIGHT WHEEL
  74:main.c        **** volatile int numRotationsL; //
  75:main.c        **** volatile int numRotationsR; //
  76:main.c        **** volatile int turnCount;
  77:main.c        **** volatile int distanceTravelled = 0;
  78:main.c        **** volatile int distancePerSecondL = 0;
  79:main.c        **** volatile int distancePerSecondR = 0;
  80:main.c        **** volatile int distancePerSecondAvg = 0;
  81:main.c        **** volatile int prevTurnState = 0;
  82:main.c        **** volatile int turnState = 0;
  83:main.c        **** volatile int turnEnable = 0;
  84:main.c        **** volatile int turnTimer = 0;
  85:main.c        **** int lastAdjustDirection = 0;
  86:main.c        ****   unsigned char squares[500][2];
  87:main.c        ****   unsigned char instruction[500];
  88:main.c        ****   unsigned char distance[500];
  89:main.c        **** 
  90:main.c        **** CY_ISR(eoc) {
 284              		.loc 1 90 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289 0000 80B4     		push	{r7}
 290              		.cfi_def_cfa_offset 4
 291              		.cfi_offset 7, -4
 292 0002 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
  91:main.c        ****   flag = 1;
 294              		.loc 1 91 0
 295 0004 034B     		ldr	r3, .L2
 296 0006 0122     		movs	r2, #1
 297 0008 1A60     		str	r2, [r3]
  92:main.c        **** }
 298              		.loc 1 92 0
 299 000a 00BF     		nop
 300 000c BD46     		mov	sp, r7
 301              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 8


 302              		@ sp needed
 303 000e 80BC     		pop	{r7}
 304              		.cfi_restore 7
 305              		.cfi_def_cfa_offset 0
 306 0010 7047     		bx	lr
 307              	.L3:
 308 0012 00BF     		.align	2
 309              	.L2:
 310 0014 00000000 		.word	flag
 311              		.cfi_endproc
 312              	.LFE64:
 313              		.size	eoc, .-eoc
 314              		.global	__aeabi_f2iz
 315              		.section	.text.main,"ax",%progbits
 316              		.align	2
 317              		.global	main
 318              		.thumb
 319              		.thumb_func
 320              		.type	main, %function
 321              	main:
 322              	.LFB65:
  93:main.c        **** 
  94:main.c        **** int main() {
 323              		.loc 1 94 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 40
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327 0000 90B5     		push	{r4, r7, lr}
 328              		.cfi_def_cfa_offset 12
 329              		.cfi_offset 4, -12
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 8BB0     		sub	sp, sp, #44
 333              		.cfi_def_cfa_offset 56
 334 0004 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
  95:main.c        ****   CYGlobalIntEnable;
 336              		.loc 1 95 0
 337              		.syntax unified
 338              	@ 95 "main.c" 1
 339 0006 62B6     		CPSIE   i
 340              	@ 0 "" 2
  96:main.c        ****   //USBUART_Start(0, USBUART_5V_OPERATION);
  97:main.c        ****   //UART_Start();
  98:main.c        **** 
  99:main.c        ****   //QuadDec_M1_Start();
 100:main.c        ****   //QuadDec_M2_Start();
 101:main.c        **** 
 102:main.c        ****   //isr_TS_StartEx(MyISR);
 103:main.c        **** 
 104:main.c        ****   //RF_BT_SELECT_Write(1);
 105:main.c        ****     //ADC1_IRQ_Enable();
 106:main.c        ****   ADC1_Start();
 341              		.loc 1 106 0
 342              		.thumb
 343              		.syntax unified
 344 0008 FFF7FEFF 		bl	ADC1_Start
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 9


 107:main.c        **** 
 108:main.c        ****   ADC1_StartConvert();
 345              		.loc 1 108 0
 346 000c FFF7FEFF 		bl	ADC1_StartConvert
 109:main.c        ****   
 110:main.c        ****   eoc_StartEx(eoc);
 347              		.loc 1 110 0
 348 0010 A248     		ldr	r0, .L51
 349 0012 FFF7FEFF 		bl	eoc_StartEx
 111:main.c        **** 
 112:main.c        ****   initMotors();
 350              		.loc 1 112 0
 351 0016 FFF7FEFF 		bl	initMotors
 113:main.c        **** 
 114:main.c        ****   stop();
 352              		.loc 1 114 0
 353 001a FFF7FEFF 		bl	stop
 354              	.LBB2:
 115:main.c        ****   //isr_TS_StartEx(MyISR);
 116:main.c        ****   //Timer_TS_Start();
 117:main.c        ****     
 118:main.c        **** 
 119:main.c        ****     // Loop through the arrays and set each element to 55 or 0
 120:main.c        ****     for (int i = 0; i < 500; i++) {
 355              		.loc 1 120 0
 356 001e 0023     		movs	r3, #0
 357 0020 7B62     		str	r3, [r7, #36]
 358 0022 1CE0     		b	.L5
 359              	.L6:
 121:main.c        ****         squares[i][0] = 55;
 360              		.loc 1 121 0 discriminator 3
 361 0024 9E4A     		ldr	r2, .L51+4
 362 0026 7B6A     		ldr	r3, [r7, #36]
 363 0028 3721     		movs	r1, #55
 364 002a 02F81310 		strb	r1, [r2, r3, lsl #1]
 122:main.c        ****         squares[i][1] = 55;
 365              		.loc 1 122 0 discriminator 3
 366 002e 9C4A     		ldr	r2, .L51+4
 367 0030 7B6A     		ldr	r3, [r7, #36]
 368 0032 5B00     		lsls	r3, r3, #1
 369 0034 1344     		add	r3, r3, r2
 370 0036 3722     		movs	r2, #55
 371 0038 5A70     		strb	r2, [r3, #1]
 123:main.c        ****         instruction[i] = 0;
 372              		.loc 1 123 0 discriminator 3
 373 003a 9A4A     		ldr	r2, .L51+8
 374 003c 7B6A     		ldr	r3, [r7, #36]
 375 003e 1344     		add	r3, r3, r2
 376 0040 0022     		movs	r2, #0
 377 0042 1A70     		strb	r2, [r3]
 124:main.c        ****         distance[i] = 0;
 378              		.loc 1 124 0 discriminator 3
 379 0044 984A     		ldr	r2, .L51+12
 380 0046 7B6A     		ldr	r3, [r7, #36]
 381 0048 1344     		add	r3, r3, r2
 382 004a 0022     		movs	r2, #0
 383 004c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 10


 125:main.c        ****         distance[i] = 55;
 384              		.loc 1 125 0 discriminator 3
 385 004e 964A     		ldr	r2, .L51+12
 386 0050 7B6A     		ldr	r3, [r7, #36]
 387 0052 1344     		add	r3, r3, r2
 388 0054 3722     		movs	r2, #55
 389 0056 1A70     		strb	r2, [r3]
 120:main.c        ****         squares[i][0] = 55;
 390              		.loc 1 120 0 discriminator 3
 391 0058 7B6A     		ldr	r3, [r7, #36]
 392 005a 0133     		adds	r3, r3, #1
 393 005c 7B62     		str	r3, [r7, #36]
 394              	.L5:
 120:main.c        ****         squares[i][0] = 55;
 395              		.loc 1 120 0 is_stmt 0 discriminator 1
 396 005e 7B6A     		ldr	r3, [r7, #36]
 397 0060 B3F5FA7F 		cmp	r3, #500
 398 0064 DEDB     		blt	.L6
 399              	.LBE2:
 126:main.c        ****     }
 127:main.c        ****     pathfind(instruction, distance, squares);
 400              		.loc 1 127 0 is_stmt 1
 401 0066 8E4A     		ldr	r2, .L51+4
 402 0068 8F49     		ldr	r1, .L51+12
 403 006a 8E48     		ldr	r0, .L51+8
 404 006c FFF7FEFF 		bl	pathfind
 405              	.L49:
 128:main.c        **** 
 129:main.c        ****   for (;;) {
 130:main.c        ****       LED_PIN_4_Write(0);
 406              		.loc 1 130 0
 407 0070 0020     		movs	r0, #0
 408 0072 FFF7FEFF 		bl	LED_PIN_4_Write
 131:main.c        ****       if (flag == 1) {
 409              		.loc 1 131 0
 410 0076 8D4B     		ldr	r3, .L51+16
 411 0078 1B68     		ldr	r3, [r3]
 412 007a 012B     		cmp	r3, #1
 413 007c F8D1     		bne	.L49
 132:main.c        **** 
 133:main.c        ****         ADC1_IRQ_Disable();
 414              		.loc 1 133 0
 415 007e FFF7FEFF 		bl	ADC1_IRQ_Disable
 134:main.c        ****         valuesLeftIntersection[count] = ADC1_GetResult16(0);
 416              		.loc 1 134 0
 417 0082 8B4B     		ldr	r3, .L51+20
 418 0084 1C68     		ldr	r4, [r3]
 419 0086 0020     		movs	r0, #0
 420 0088 FFF7FEFF 		bl	ADC1_GetResult16
 421 008c 0346     		mov	r3, r0
 422 008e 1A46     		mov	r2, r3
 423 0090 884B     		ldr	r3, .L51+24
 424 0092 43F82420 		str	r2, [r3, r4, lsl #2]
 135:main.c        ****         valuesLeftLine[count] = ADC1_GetResult16(1);
 425              		.loc 1 135 0
 426 0096 864B     		ldr	r3, .L51+20
 427 0098 1C68     		ldr	r4, [r3]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 11


 428 009a 0120     		movs	r0, #1
 429 009c FFF7FEFF 		bl	ADC1_GetResult16
 430 00a0 0346     		mov	r3, r0
 431 00a2 1A46     		mov	r2, r3
 432 00a4 844B     		ldr	r3, .L51+28
 433 00a6 43F82420 		str	r2, [r3, r4, lsl #2]
 136:main.c        ****         valuesMiddleLine[count] = ADC1_GetResult16(2);
 434              		.loc 1 136 0
 435 00aa 814B     		ldr	r3, .L51+20
 436 00ac 1C68     		ldr	r4, [r3]
 437 00ae 0220     		movs	r0, #2
 438 00b0 FFF7FEFF 		bl	ADC1_GetResult16
 439 00b4 0346     		mov	r3, r0
 440 00b6 1A46     		mov	r2, r3
 441 00b8 804B     		ldr	r3, .L51+32
 442 00ba 43F82420 		str	r2, [r3, r4, lsl #2]
 137:main.c        ****         valuesTurnComplete[count] = ADC1_GetResult16(3);
 443              		.loc 1 137 0
 444 00be 7C4B     		ldr	r3, .L51+20
 445 00c0 1C68     		ldr	r4, [r3]
 446 00c2 0320     		movs	r0, #3
 447 00c4 FFF7FEFF 		bl	ADC1_GetResult16
 448 00c8 0346     		mov	r3, r0
 449 00ca 1A46     		mov	r2, r3
 450 00cc 7C4B     		ldr	r3, .L51+36
 451 00ce 43F82420 		str	r2, [r3, r4, lsl #2]
 138:main.c        ****         valuesRightLine[count] = ADC1_GetResult16(4);
 452              		.loc 1 138 0
 453 00d2 774B     		ldr	r3, .L51+20
 454 00d4 1C68     		ldr	r4, [r3]
 455 00d6 0420     		movs	r0, #4
 456 00d8 FFF7FEFF 		bl	ADC1_GetResult16
 457 00dc 0346     		mov	r3, r0
 458 00de 1A46     		mov	r2, r3
 459 00e0 784B     		ldr	r3, .L51+40
 460 00e2 43F82420 		str	r2, [r3, r4, lsl #2]
 139:main.c        ****         valuesRightIntersection[count] = ADC1_GetResult16(5);
 461              		.loc 1 139 0
 462 00e6 724B     		ldr	r3, .L51+20
 463 00e8 1C68     		ldr	r4, [r3]
 464 00ea 0520     		movs	r0, #5
 465 00ec FFF7FEFF 		bl	ADC1_GetResult16
 466 00f0 0346     		mov	r3, r0
 467 00f2 1A46     		mov	r2, r3
 468 00f4 744B     		ldr	r3, .L51+44
 469 00f6 43F82420 		str	r2, [r3, r4, lsl #2]
 140:main.c        **** 
 141:main.c        ****         count++;
 470              		.loc 1 141 0
 471 00fa 6D4B     		ldr	r3, .L51+20
 472 00fc 1B68     		ldr	r3, [r3]
 473 00fe 0133     		adds	r3, r3, #1
 474 0100 6B4A     		ldr	r2, .L51+20
 475 0102 1360     		str	r3, [r2]
 142:main.c        ****         if (count == ADC_COUNT) {
 476              		.loc 1 142 0
 477 0104 6A4B     		ldr	r3, .L51+20
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 12


 478 0106 1B68     		ldr	r3, [r3]
 479 0108 B3F57A7F 		cmp	r3, #1000
 480 010c 40F04D82 		bne	.L8
 481              	.LBB3:
 143:main.c        ****             LED_PIN_4_Write(1);
 482              		.loc 1 143 0
 483 0110 0120     		movs	r0, #1
 484 0112 FFF7FEFF 		bl	LED_PIN_4_Write
 144:main.c        ****           count = 0;
 485              		.loc 1 144 0
 486 0116 664B     		ldr	r3, .L51+20
 487 0118 0022     		movs	r2, #0
 488 011a 1A60     		str	r2, [r3]
 145:main.c        ****           int highCountLeftIntersection = 0;
 489              		.loc 1 145 0
 490 011c 0023     		movs	r3, #0
 491 011e 3B62     		str	r3, [r7, #32]
 146:main.c        ****           int highCountLeftLine = 0;
 492              		.loc 1 146 0
 493 0120 0023     		movs	r3, #0
 494 0122 FB61     		str	r3, [r7, #28]
 147:main.c        ****           int highCountMiddleLine = 0;
 495              		.loc 1 147 0
 496 0124 0023     		movs	r3, #0
 497 0126 BB61     		str	r3, [r7, #24]
 148:main.c        ****           int highCountTurnComplete = 0;
 498              		.loc 1 148 0
 499 0128 0023     		movs	r3, #0
 500 012a 7B61     		str	r3, [r7, #20]
 149:main.c        ****           int highCountRightLine = 0;
 501              		.loc 1 149 0
 502 012c 0023     		movs	r3, #0
 503 012e 3B61     		str	r3, [r7, #16]
 150:main.c        ****           int highCountRightIntersection = 0;
 504              		.loc 1 150 0
 505 0130 0023     		movs	r3, #0
 506 0132 FB60     		str	r3, [r7, #12]
 507              	.LBB4:
 151:main.c        ****           for (int i = 0; i < ADC_COUNT; i++) {
 508              		.loc 1 151 0
 509 0134 0023     		movs	r3, #0
 510 0136 BB60     		str	r3, [r7, #8]
 511 0138 44E0     		b	.L9
 512              	.L16:
 152:main.c        **** 
 153:main.c        ****             if (valuesLeftIntersection[i] > 3000) {
 513              		.loc 1 153 0
 514 013a 5E4A     		ldr	r2, .L51+24
 515 013c BB68     		ldr	r3, [r7, #8]
 516 013e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 517 0142 40F6B832 		movw	r2, #3000
 518 0146 9342     		cmp	r3, r2
 519 0148 02DD     		ble	.L10
 154:main.c        ****               highCountLeftIntersection++;
 520              		.loc 1 154 0
 521 014a 3B6A     		ldr	r3, [r7, #32]
 522 014c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 13


 523 014e 3B62     		str	r3, [r7, #32]
 524              	.L10:
 155:main.c        **** 
 156:main.c        ****             }
 157:main.c        **** 
 158:main.c        ****             if (valuesLeftLine[i] > 3000) {
 525              		.loc 1 158 0
 526 0150 594A     		ldr	r2, .L51+28
 527 0152 BB68     		ldr	r3, [r7, #8]
 528 0154 52F82330 		ldr	r3, [r2, r3, lsl #2]
 529 0158 40F6B832 		movw	r2, #3000
 530 015c 9342     		cmp	r3, r2
 531 015e 02DD     		ble	.L11
 159:main.c        ****               highCountLeftLine++;
 532              		.loc 1 159 0
 533 0160 FB69     		ldr	r3, [r7, #28]
 534 0162 0133     		adds	r3, r3, #1
 535 0164 FB61     		str	r3, [r7, #28]
 536              	.L11:
 160:main.c        **** 
 161:main.c        ****             }
 162:main.c        **** 
 163:main.c        ****             if (valuesMiddleLine[i] > 3000) {
 537              		.loc 1 163 0
 538 0166 554A     		ldr	r2, .L51+32
 539 0168 BB68     		ldr	r3, [r7, #8]
 540 016a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 541 016e 40F6B832 		movw	r2, #3000
 542 0172 9342     		cmp	r3, r2
 543 0174 02DD     		ble	.L12
 164:main.c        ****               highCountMiddleLine++;
 544              		.loc 1 164 0
 545 0176 BB69     		ldr	r3, [r7, #24]
 546 0178 0133     		adds	r3, r3, #1
 547 017a BB61     		str	r3, [r7, #24]
 548              	.L12:
 165:main.c        **** 
 166:main.c        ****             }
 167:main.c        **** 
 168:main.c        ****             if (valuesTurnComplete[i] > 3000) {
 549              		.loc 1 168 0
 550 017c 504A     		ldr	r2, .L51+36
 551 017e BB68     		ldr	r3, [r7, #8]
 552 0180 52F82330 		ldr	r3, [r2, r3, lsl #2]
 553 0184 40F6B832 		movw	r2, #3000
 554 0188 9342     		cmp	r3, r2
 555 018a 02DD     		ble	.L13
 169:main.c        ****               highCountTurnComplete++;
 556              		.loc 1 169 0
 557 018c 7B69     		ldr	r3, [r7, #20]
 558 018e 0133     		adds	r3, r3, #1
 559 0190 7B61     		str	r3, [r7, #20]
 560              	.L13:
 170:main.c        **** 
 171:main.c        ****             }
 172:main.c        **** 
 173:main.c        ****             if (valuesRightLine[i] > 3000) {
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 14


 561              		.loc 1 173 0
 562 0192 4C4A     		ldr	r2, .L51+40
 563 0194 BB68     		ldr	r3, [r7, #8]
 564 0196 52F82330 		ldr	r3, [r2, r3, lsl #2]
 565 019a 40F6B832 		movw	r2, #3000
 566 019e 9342     		cmp	r3, r2
 567 01a0 02DD     		ble	.L14
 174:main.c        ****               highCountRightLine++;
 568              		.loc 1 174 0
 569 01a2 3B69     		ldr	r3, [r7, #16]
 570 01a4 0133     		adds	r3, r3, #1
 571 01a6 3B61     		str	r3, [r7, #16]
 572              	.L14:
 175:main.c        **** 
 176:main.c        ****             }
 177:main.c        **** 
 178:main.c        ****             if (valuesRightIntersection[i] > 3000) {
 573              		.loc 1 178 0
 574 01a8 474A     		ldr	r2, .L51+44
 575 01aa BB68     		ldr	r3, [r7, #8]
 576 01ac 52F82330 		ldr	r3, [r2, r3, lsl #2]
 577 01b0 40F6B832 		movw	r2, #3000
 578 01b4 9342     		cmp	r3, r2
 579 01b6 02DD     		ble	.L15
 179:main.c        ****               highCountRightIntersection++;
 580              		.loc 1 179 0
 581 01b8 FB68     		ldr	r3, [r7, #12]
 582 01ba 0133     		adds	r3, r3, #1
 583 01bc FB60     		str	r3, [r7, #12]
 584              	.L15:
 151:main.c        **** 
 585              		.loc 1 151 0 discriminator 2
 586 01be BB68     		ldr	r3, [r7, #8]
 587 01c0 0133     		adds	r3, r3, #1
 588 01c2 BB60     		str	r3, [r7, #8]
 589              	.L9:
 151:main.c        **** 
 590              		.loc 1 151 0 is_stmt 0 discriminator 1
 591 01c4 BB68     		ldr	r3, [r7, #8]
 592 01c6 B3F57A7F 		cmp	r3, #1000
 593 01ca B6DB     		blt	.L16
 594              	.LBE4:
 180:main.c        **** 
 181:main.c        ****             }
 182:main.c        **** 
 183:main.c        ****           }
 184:main.c        **** 
 185:main.c        ****          
 186:main.c        ****           shouldUpdate = 0;
 595              		.loc 1 186 0 is_stmt 1
 596 01cc 3F4B     		ldr	r3, .L51+48
 597 01ce 0022     		movs	r2, #0
 598 01d0 1A60     		str	r2, [r3]
 187:main.c        ****           turnTimer = 0;
 599              		.loc 1 187 0
 600 01d2 3F4B     		ldr	r3, .L51+52
 601 01d4 0022     		movs	r2, #0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 15


 602 01d6 1A60     		str	r2, [r3]
 188:main.c        ****         if (instruction[instCounter] == 0 && (started == 0 || consecStops >= 6)) {
 603              		.loc 1 188 0
 604 01d8 3E4B     		ldr	r3, .L51+56
 605 01da 1B68     		ldr	r3, [r3]
 606 01dc 314A     		ldr	r2, .L51+8
 607 01de D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 608 01e0 002B     		cmp	r3, #0
 609 01e2 40F00481 		bne	.L17
 610              		.loc 1 188 0 is_stmt 0 discriminator 1
 611 01e6 3C4B     		ldr	r3, .L51+60
 612 01e8 1B68     		ldr	r3, [r3]
 613 01ea 002B     		cmp	r3, #0
 614 01ec 04D0     		beq	.L18
 615              		.loc 1 188 0 discriminator 2
 616 01ee 3B4B     		ldr	r3, .L51+64
 617 01f0 1B68     		ldr	r3, [r3]
 618 01f2 052B     		cmp	r3, #5
 619 01f4 40F3FB80 		ble	.L17
 620              	.L18:
 189:main.c        ****             //LED_PIN_1_Write(!LED_PIN_1_Read());
 190:main.c        ****             // Look for start using a coarse grain approach, gradually get more fine
 191:main.c        ****             if(instruction[instCounter+248] == 0 && instruction[instCounter+249] == 0&& instruction
 621              		.loc 1 191 0 is_stmt 1
 622 01f8 364B     		ldr	r3, .L51+56
 623 01fa 1B68     		ldr	r3, [r3]
 624 01fc F833     		adds	r3, r3, #248
 625 01fe 294A     		ldr	r2, .L51+8
 626 0200 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 627 0202 002B     		cmp	r3, #0
 628 0204 13D1     		bne	.L19
 629              		.loc 1 191 0 is_stmt 0 discriminator 1
 630 0206 334B     		ldr	r3, .L51+56
 631 0208 1B68     		ldr	r3, [r3]
 632 020a F933     		adds	r3, r3, #249
 633 020c 254A     		ldr	r2, .L51+8
 634 020e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 635 0210 002B     		cmp	r3, #0
 636 0212 0CD1     		bne	.L19
 637              		.loc 1 191 0 discriminator 2
 638 0214 2F4B     		ldr	r3, .L51+56
 639 0216 1B68     		ldr	r3, [r3]
 640 0218 FA33     		adds	r3, r3, #250
 641 021a 224A     		ldr	r2, .L51+8
 642 021c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 643 021e 002B     		cmp	r3, #0
 644 0220 05D1     		bne	.L19
 192:main.c        ****                 instCounter = instCounter+250;
 645              		.loc 1 192 0 is_stmt 1
 646 0222 2C4B     		ldr	r3, .L51+56
 647 0224 1B68     		ldr	r3, [r3]
 648 0226 FA33     		adds	r3, r3, #250
 649 0228 2A4A     		ldr	r2, .L51+56
 650 022a 1360     		str	r3, [r2]
 651 022c DEE0     		b	.L20
 652              	.L19:
 193:main.c        ****             } else if(instruction[instCounter+98] == 0 && instruction[instCounter+99] == 0&& instru
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 16


 653              		.loc 1 193 0
 654 022e 294B     		ldr	r3, .L51+56
 655 0230 1B68     		ldr	r3, [r3]
 656 0232 6233     		adds	r3, r3, #98
 657 0234 1B4A     		ldr	r2, .L51+8
 658 0236 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 659 0238 002B     		cmp	r3, #0
 660 023a 13D1     		bne	.L21
 661              		.loc 1 193 0 is_stmt 0 discriminator 1
 662 023c 254B     		ldr	r3, .L51+56
 663 023e 1B68     		ldr	r3, [r3]
 664 0240 6333     		adds	r3, r3, #99
 665 0242 184A     		ldr	r2, .L51+8
 666 0244 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 667 0246 002B     		cmp	r3, #0
 668 0248 0CD1     		bne	.L21
 669              		.loc 1 193 0 discriminator 2
 670 024a 224B     		ldr	r3, .L51+56
 671 024c 1B68     		ldr	r3, [r3]
 672 024e 6433     		adds	r3, r3, #100
 673 0250 144A     		ldr	r2, .L51+8
 674 0252 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 675 0254 002B     		cmp	r3, #0
 676 0256 05D1     		bne	.L21
 194:main.c        ****                 instCounter = instCounter+100;
 677              		.loc 1 194 0 is_stmt 1
 678 0258 1E4B     		ldr	r3, .L51+56
 679 025a 1B68     		ldr	r3, [r3]
 680 025c 6433     		adds	r3, r3, #100
 681 025e 1D4A     		ldr	r2, .L51+56
 682 0260 1360     		str	r3, [r2]
 683 0262 C3E0     		b	.L20
 684              	.L21:
 195:main.c        ****             } else if(instruction[instCounter+48] == 0 && instruction[instCounter+49] == 0&& instru
 685              		.loc 1 195 0
 686 0264 1B4B     		ldr	r3, .L51+56
 687 0266 1B68     		ldr	r3, [r3]
 688 0268 3033     		adds	r3, r3, #48
 689 026a 0E4A     		ldr	r2, .L51+8
 690 026c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 691 026e 002B     		cmp	r3, #0
 692 0270 36D1     		bne	.L22
 693              		.loc 1 195 0 is_stmt 0 discriminator 1
 694 0272 184B     		ldr	r3, .L51+56
 695 0274 1B68     		ldr	r3, [r3]
 696 0276 3133     		adds	r3, r3, #49
 697 0278 0A4A     		ldr	r2, .L51+8
 698 027a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 699 027c 002B     		cmp	r3, #0
 700 027e 2FD1     		bne	.L22
 701              		.loc 1 195 0 discriminator 2
 702 0280 144B     		ldr	r3, .L51+56
 703 0282 1B68     		ldr	r3, [r3]
 704 0284 3233     		adds	r3, r3, #50
 705 0286 074A     		ldr	r2, .L51+8
 706 0288 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 707 028a 002B     		cmp	r3, #0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 17


 708 028c 28D1     		bne	.L22
 196:main.c        ****                 instCounter = instCounter+50;
 709              		.loc 1 196 0 is_stmt 1
 710 028e 114B     		ldr	r3, .L51+56
 711 0290 1B68     		ldr	r3, [r3]
 712 0292 3233     		adds	r3, r3, #50
 713 0294 0F4A     		ldr	r2, .L51+56
 714 0296 1360     		str	r3, [r2]
 715 0298 A8E0     		b	.L20
 716              	.L52:
 717 029a 00BF     		.align	2
 718              	.L51:
 719 029c 00000000 		.word	eoc
 720 02a0 00000000 		.word	squares
 721 02a4 00000000 		.word	instruction
 722 02a8 00000000 		.word	distance
 723 02ac 00000000 		.word	flag
 724 02b0 00000000 		.word	count
 725 02b4 00000000 		.word	valuesLeftIntersection
 726 02b8 00000000 		.word	valuesLeftLine
 727 02bc 00000000 		.word	valuesMiddleLine
 728 02c0 00000000 		.word	valuesTurnComplete
 729 02c4 00000000 		.word	valuesRightLine
 730 02c8 00000000 		.word	valuesRightIntersection
 731 02cc 00000000 		.word	shouldUpdate
 732 02d0 00000000 		.word	turnTimer
 733 02d4 00000000 		.word	instCounter
 734 02d8 00000000 		.word	started
 735 02dc 00000000 		.word	consecStops
 736              	.L22:
 197:main.c        ****             } else if(instruction[instCounter+23] == 0 && instruction[instCounter+24] == 0&& instru
 737              		.loc 1 197 0
 738 02e0 9A4B     		ldr	r3, .L53
 739 02e2 1B68     		ldr	r3, [r3]
 740 02e4 1733     		adds	r3, r3, #23
 741 02e6 9A4A     		ldr	r2, .L53+4
 742 02e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 743 02ea 002B     		cmp	r3, #0
 744 02ec 13D1     		bne	.L23
 745              		.loc 1 197 0 is_stmt 0 discriminator 1
 746 02ee 974B     		ldr	r3, .L53
 747 02f0 1B68     		ldr	r3, [r3]
 748 02f2 1833     		adds	r3, r3, #24
 749 02f4 964A     		ldr	r2, .L53+4
 750 02f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 751 02f8 002B     		cmp	r3, #0
 752 02fa 0CD1     		bne	.L23
 753              		.loc 1 197 0 discriminator 2
 754 02fc 934B     		ldr	r3, .L53
 755 02fe 1B68     		ldr	r3, [r3]
 756 0300 1933     		adds	r3, r3, #25
 757 0302 934A     		ldr	r2, .L53+4
 758 0304 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 759 0306 002B     		cmp	r3, #0
 760 0308 05D1     		bne	.L23
 198:main.c        ****                 instCounter = instCounter+25;
 761              		.loc 1 198 0 is_stmt 1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 18


 762 030a 904B     		ldr	r3, .L53
 763 030c 1B68     		ldr	r3, [r3]
 764 030e 1933     		adds	r3, r3, #25
 765 0310 8E4A     		ldr	r2, .L53
 766 0312 1360     		str	r3, [r2]
 767 0314 6AE0     		b	.L20
 768              	.L23:
 199:main.c        ****             } else if(instruction[instCounter+8] == 0 && instruction[instCounter+9] == 0&& instruct
 769              		.loc 1 199 0
 770 0316 8D4B     		ldr	r3, .L53
 771 0318 1B68     		ldr	r3, [r3]
 772 031a 0833     		adds	r3, r3, #8
 773 031c 8C4A     		ldr	r2, .L53+4
 774 031e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 775 0320 002B     		cmp	r3, #0
 776 0322 13D1     		bne	.L24
 777              		.loc 1 199 0 is_stmt 0 discriminator 1
 778 0324 894B     		ldr	r3, .L53
 779 0326 1B68     		ldr	r3, [r3]
 780 0328 0933     		adds	r3, r3, #9
 781 032a 894A     		ldr	r2, .L53+4
 782 032c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 783 032e 002B     		cmp	r3, #0
 784 0330 0CD1     		bne	.L24
 785              		.loc 1 199 0 discriminator 2
 786 0332 864B     		ldr	r3, .L53
 787 0334 1B68     		ldr	r3, [r3]
 788 0336 0A33     		adds	r3, r3, #10
 789 0338 854A     		ldr	r2, .L53+4
 790 033a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 791 033c 002B     		cmp	r3, #0
 792 033e 05D1     		bne	.L24
 200:main.c        ****                 instCounter = instCounter+10;
 793              		.loc 1 200 0 is_stmt 1
 794 0340 824B     		ldr	r3, .L53
 795 0342 1B68     		ldr	r3, [r3]
 796 0344 0A33     		adds	r3, r3, #10
 797 0346 814A     		ldr	r2, .L53
 798 0348 1360     		str	r3, [r2]
 799 034a 4FE0     		b	.L20
 800              	.L24:
 201:main.c        ****             } else if (instruction[instCounter+3] == 0 && instruction[instCounter+4] == 0&& instruc
 801              		.loc 1 201 0
 802 034c 7F4B     		ldr	r3, .L53
 803 034e 1B68     		ldr	r3, [r3]
 804 0350 0333     		adds	r3, r3, #3
 805 0352 7F4A     		ldr	r2, .L53+4
 806 0354 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 807 0356 002B     		cmp	r3, #0
 808 0358 13D1     		bne	.L25
 809              		.loc 1 201 0 is_stmt 0 discriminator 1
 810 035a 7C4B     		ldr	r3, .L53
 811 035c 1B68     		ldr	r3, [r3]
 812 035e 0433     		adds	r3, r3, #4
 813 0360 7B4A     		ldr	r2, .L53+4
 814 0362 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 815 0364 002B     		cmp	r3, #0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 19


 816 0366 0CD1     		bne	.L25
 817              		.loc 1 201 0 discriminator 2
 818 0368 784B     		ldr	r3, .L53
 819 036a 1B68     		ldr	r3, [r3]
 820 036c 0533     		adds	r3, r3, #5
 821 036e 784A     		ldr	r2, .L53+4
 822 0370 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 823 0372 002B     		cmp	r3, #0
 824 0374 05D1     		bne	.L25
 202:main.c        ****                 instCounter = instCounter+5;
 825              		.loc 1 202 0 is_stmt 1
 826 0376 754B     		ldr	r3, .L53
 827 0378 1B68     		ldr	r3, [r3]
 828 037a 0533     		adds	r3, r3, #5
 829 037c 734A     		ldr	r2, .L53
 830 037e 1360     		str	r3, [r2]
 831 0380 34E0     		b	.L20
 832              	.L25:
 203:main.c        ****             } else {
 204:main.c        ****                 if(instruction[instCounter + 1] == 0) {
 833              		.loc 1 204 0
 834 0382 724B     		ldr	r3, .L53
 835 0384 1B68     		ldr	r3, [r3]
 836 0386 0133     		adds	r3, r3, #1
 837 0388 714A     		ldr	r2, .L53+4
 838 038a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 839 038c 002B     		cmp	r3, #0
 840 038e 05D1     		bne	.L26
 205:main.c        ****                     instCounter++; 
 841              		.loc 1 205 0
 842 0390 6E4B     		ldr	r3, .L53
 843 0392 1B68     		ldr	r3, [r3]
 844 0394 0133     		adds	r3, r3, #1
 845 0396 6D4A     		ldr	r2, .L53
 846 0398 1360     		str	r3, [r2]
 191:main.c        ****                 instCounter = instCounter+250;
 847              		.loc 1 191 0
 848 039a 05E1     		b	.L50
 849              	.L26:
 206:main.c        ****                 } else if(instruction[instCounter + 2] == 0) {
 850              		.loc 1 206 0
 851 039c 6B4B     		ldr	r3, .L53
 852 039e 1B68     		ldr	r3, [r3]
 853 03a0 0233     		adds	r3, r3, #2
 854 03a2 6B4A     		ldr	r2, .L53+4
 855 03a4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 856 03a6 002B     		cmp	r3, #0
 857 03a8 05D1     		bne	.L27
 207:main.c        ****                     instCounter = instCounter +2;
 858              		.loc 1 207 0
 859 03aa 684B     		ldr	r3, .L53
 860 03ac 1B68     		ldr	r3, [r3]
 861 03ae 0233     		adds	r3, r3, #2
 862 03b0 664A     		ldr	r2, .L53
 863 03b2 1360     		str	r3, [r2]
 191:main.c        ****                 instCounter = instCounter+250;
 864              		.loc 1 191 0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 20


 865 03b4 F8E0     		b	.L50
 866              	.L27:
 208:main.c        ****                 } else if(instruction[instCounter + 3] == 0) {
 867              		.loc 1 208 0
 868 03b6 654B     		ldr	r3, .L53
 869 03b8 1B68     		ldr	r3, [r3]
 870 03ba 0333     		adds	r3, r3, #3
 871 03bc 644A     		ldr	r2, .L53+4
 872 03be D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 873 03c0 002B     		cmp	r3, #0
 874 03c2 05D1     		bne	.L28
 209:main.c        ****                     instCounter = instCounter +3;
 875              		.loc 1 209 0
 876 03c4 614B     		ldr	r3, .L53
 877 03c6 1B68     		ldr	r3, [r3]
 878 03c8 0333     		adds	r3, r3, #3
 879 03ca 604A     		ldr	r2, .L53
 880 03cc 1360     		str	r3, [r2]
 191:main.c        ****                 instCounter = instCounter+250;
 881              		.loc 1 191 0
 882 03ce EBE0     		b	.L50
 883              	.L28:
 210:main.c        ****                 } else if(instruction[instCounter + 4] == 0) {
 884              		.loc 1 210 0
 885 03d0 5E4B     		ldr	r3, .L53
 886 03d2 1B68     		ldr	r3, [r3]
 887 03d4 0433     		adds	r3, r3, #4
 888 03d6 5E4A     		ldr	r2, .L53+4
 889 03d8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 890 03da 002B     		cmp	r3, #0
 891 03dc 40F0E480 		bne	.L50
 211:main.c        ****                     instCounter = instCounter +4;
 892              		.loc 1 211 0
 893 03e0 5A4B     		ldr	r3, .L53
 894 03e2 1B68     		ldr	r3, [r3]
 895 03e4 0433     		adds	r3, r3, #4
 896 03e6 594A     		ldr	r2, .L53
 897 03e8 1360     		str	r3, [r2]
 191:main.c        ****                 instCounter = instCounter+250;
 898              		.loc 1 191 0
 899 03ea DDE0     		b	.L50
 900              	.L20:
 901 03ec DCE0     		b	.L50
 902              	.L17:
 903              	.LBB5:
 212:main.c        ****                 } 
 213:main.c        ****             }
 214:main.c        **** 
 215:main.c        ****         } else {
 216:main.c        ****             turnTimer = 0;
 904              		.loc 1 216 0
 905 03ee 594B     		ldr	r3, .L53+8
 906 03f0 0022     		movs	r2, #0
 907 03f2 1A60     		str	r2, [r3]
 217:main.c        ****             started = 1;
 908              		.loc 1 217 0
 909 03f4 584B     		ldr	r3, .L53+12
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 21


 910 03f6 0122     		movs	r2, #1
 911 03f8 1A60     		str	r2, [r3]
 218:main.c        ****             
 219:main.c        ****             char currentInst = instruction[instCounter];
 912              		.loc 1 219 0
 913 03fa 544B     		ldr	r3, .L53
 914 03fc 1B68     		ldr	r3, [r3]
 915 03fe 544A     		ldr	r2, .L53+4
 916 0400 D35C     		ldrb	r3, [r2, r3]
 917 0402 FB71     		strb	r3, [r7, #7]
 220:main.c        ****             if (currentInst == 0) {
 918              		.loc 1 220 0
 919 0404 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 920 0406 002B     		cmp	r3, #0
 921 0408 06D1     		bne	.L29
 221:main.c        ****                 LED_PIN_1_Write(0);
 922              		.loc 1 221 0
 923 040a 0020     		movs	r0, #0
 924 040c FFF7FEFF 		bl	LED_PIN_1_Write
 222:main.c        ****                 LED_PIN_6_Write(0);
 925              		.loc 1 222 0
 926 0410 0020     		movs	r0, #0
 927 0412 FFF7FEFF 		bl	LED_PIN_6_Write
 928 0416 4EE0     		b	.L30
 929              	.L29:
 223:main.c        ****                 // Stop
 224:main.c        ****                 
 225:main.c        ****             } else if (currentInst == 1) {
 930              		.loc 1 225 0
 931 0418 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 932 041a 012B     		cmp	r3, #1
 933 041c 06D1     		bne	.L31
 226:main.c        ****                 LED_PIN_1_Write(1);
 934              		.loc 1 226 0
 935 041e 0120     		movs	r0, #1
 936 0420 FFF7FEFF 		bl	LED_PIN_1_Write
 227:main.c        ****                 LED_PIN_6_Write(0);
 937              		.loc 1 227 0
 938 0424 0020     		movs	r0, #0
 939 0426 FFF7FEFF 		bl	LED_PIN_6_Write
 940 042a 44E0     		b	.L30
 941              	.L31:
 228:main.c        ****                 // Complete a left turn, then follow line
 229:main.c        ****                
 230:main.c        ****             } else if (currentInst == 2) {
 942              		.loc 1 230 0
 943 042c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 944 042e 022B     		cmp	r3, #2
 945 0430 06D1     		bne	.L32
 231:main.c        ****                 LED_PIN_1_Write(1);
 946              		.loc 1 231 0
 947 0432 0120     		movs	r0, #1
 948 0434 FFF7FEFF 		bl	LED_PIN_1_Write
 232:main.c        ****                 LED_PIN_6_Write(1);
 949              		.loc 1 232 0
 950 0438 0120     		movs	r0, #1
 951 043a FFF7FEFF 		bl	LED_PIN_6_Write
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 22


 952 043e 3AE0     		b	.L30
 953              	.L32:
 233:main.c        ****                 // Drive straight
 234:main.c        ****             } else if (currentInst == 3) {
 954              		.loc 1 234 0
 955 0440 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 956 0442 032B     		cmp	r3, #3
 957 0444 06D1     		bne	.L33
 235:main.c        ****                 LED_PIN_1_Write(0);
 958              		.loc 1 235 0
 959 0446 0020     		movs	r0, #0
 960 0448 FFF7FEFF 		bl	LED_PIN_1_Write
 236:main.c        ****                 LED_PIN_6_Write(1);
 961              		.loc 1 236 0
 962 044c 0120     		movs	r0, #1
 963 044e FFF7FEFF 		bl	LED_PIN_6_Write
 964 0452 30E0     		b	.L30
 965              	.L33:
 237:main.c        ****                 // Complete a right turn then follow line
 238:main.c        ****                 
 239:main.c        ****             } else if (currentInst == 4) {
 966              		.loc 1 239 0
 967 0454 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 968 0456 042B     		cmp	r3, #4
 969 0458 06D1     		bne	.L34
 240:main.c        ****                 LED_PIN_1_Write(0);
 970              		.loc 1 240 0
 971 045a 0020     		movs	r0, #0
 972 045c FFF7FEFF 		bl	LED_PIN_1_Write
 241:main.c        ****                 LED_PIN_6_Write(0);
 973              		.loc 1 241 0
 974 0460 0020     		movs	r0, #0
 975 0462 FFF7FEFF 		bl	LED_PIN_6_Write
 976 0466 26E0     		b	.L30
 977              	.L34:
 242:main.c        ****                 // Do a 180, then follow line
 243:main.c        ****             } else if (currentInst == 5) {
 978              		.loc 1 243 0
 979 0468 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 980 046a 052B     		cmp	r3, #5
 981 046c 06D1     		bne	.L35
 244:main.c        ****                 LED_PIN_1_Write(1);
 982              		.loc 1 244 0
 983 046e 0120     		movs	r0, #1
 984 0470 FFF7FEFF 		bl	LED_PIN_1_Write
 245:main.c        ****                 LED_PIN_6_Write(0);
 985              		.loc 1 245 0
 986 0474 0020     		movs	r0, #0
 987 0476 FFF7FEFF 		bl	LED_PIN_6_Write
 988 047a 1CE0     		b	.L30
 989              	.L35:
 246:main.c        ****                 // Complete a left turn, then follow line until end of encoder position
 247:main.c        ****             } else if (currentInst == 6) {
 990              		.loc 1 247 0
 991 047c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 992 047e 062B     		cmp	r3, #6
 993 0480 06D1     		bne	.L36
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 23


 248:main.c        ****                 LED_PIN_1_Write(1);
 994              		.loc 1 248 0
 995 0482 0120     		movs	r0, #1
 996 0484 FFF7FEFF 		bl	LED_PIN_1_Write
 249:main.c        ****                 LED_PIN_6_Write(1);
 997              		.loc 1 249 0
 998 0488 0120     		movs	r0, #1
 999 048a FFF7FEFF 		bl	LED_PIN_6_Write
 1000 048e 12E0     		b	.L30
 1001              	.L36:
 250:main.c        ****                 // Follow line until end of encoder position
 251:main.c        ****             } else if (currentInst == 7) {
 1002              		.loc 1 251 0
 1003 0490 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1004 0492 072B     		cmp	r3, #7
 1005 0494 06D1     		bne	.L37
 252:main.c        ****                 LED_PIN_1_Write(0);
 1006              		.loc 1 252 0
 1007 0496 0020     		movs	r0, #0
 1008 0498 FFF7FEFF 		bl	LED_PIN_1_Write
 253:main.c        ****                 LED_PIN_6_Write(1);
 1009              		.loc 1 253 0
 1010 049c 0120     		movs	r0, #1
 1011 049e FFF7FEFF 		bl	LED_PIN_6_Write
 1012 04a2 08E0     		b	.L30
 1013              	.L37:
 254:main.c        ****                 // Complete a right turn, then follow line until end of encoder position
 255:main.c        ****             } else if (currentInst == 8) {
 1014              		.loc 1 255 0
 1015 04a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1016 04a6 082B     		cmp	r3, #8
 1017 04a8 05D1     		bne	.L30
 256:main.c        ****                 LED_PIN_1_Write(0);
 1018              		.loc 1 256 0
 1019 04aa 0020     		movs	r0, #0
 1020 04ac FFF7FEFF 		bl	LED_PIN_1_Write
 257:main.c        ****                 LED_PIN_6_Write(0);
 1021              		.loc 1 257 0
 1022 04b0 0020     		movs	r0, #0
 1023 04b2 FFF7FEFF 		bl	LED_PIN_6_Write
 1024              	.L30:
 258:main.c        ****                 // Complete a 180 turn, then follow line until end of encoder position
 259:main.c        ****             }
 260:main.c        ****             
 261:main.c        ****             
 262:main.c        ****                 if (M_LINE_BLACK && L_LINE_BLACK) { // if robot slightly too far right
 1025              		.loc 1 262 0
 1026 04b6 BB69     		ldr	r3, [r7, #24]
 1027 04b8 952B     		cmp	r3, #149
 1028 04ba 08DC     		bgt	.L38
 1029              		.loc 1 262 0 is_stmt 0 discriminator 1
 1030 04bc FB69     		ldr	r3, [r7, #28]
 1031 04be 952B     		cmp	r3, #149
 1032 04c0 05DC     		bgt	.L38
 263:main.c        ****             adjustLeft();
 1033              		.loc 1 263 0 is_stmt 1
 1034 04c2 FFF7FEFF 		bl	adjustLeft
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 24


 264:main.c        ****             
 265:main.c        ****             lastAdjustDirection = 0;
 1035              		.loc 1 265 0
 1036 04c6 254B     		ldr	r3, .L53+16
 1037 04c8 0022     		movs	r2, #0
 1038 04ca 1A60     		str	r2, [r3]
 1039 04cc 4EE0     		b	.L39
 1040              	.L38:
 266:main.c        **** 
 267:main.c        ****           } else if (M_LINE_BLACK && R_LINE_BLACK) { //  if robot slightly too far left
 1041              		.loc 1 267 0
 1042 04ce BB69     		ldr	r3, [r7, #24]
 1043 04d0 952B     		cmp	r3, #149
 1044 04d2 08DC     		bgt	.L40
 1045              		.loc 1 267 0 is_stmt 0 discriminator 1
 1046 04d4 3B69     		ldr	r3, [r7, #16]
 1047 04d6 952B     		cmp	r3, #149
 1048 04d8 05DC     		bgt	.L40
 268:main.c        ****             adjustRight();
 1049              		.loc 1 268 0 is_stmt 1
 1050 04da FFF7FEFF 		bl	adjustRight
 269:main.c        ****             lastAdjustDirection = 2;
 1051              		.loc 1 269 0
 1052 04de 1F4B     		ldr	r3, .L53+16
 1053 04e0 0222     		movs	r2, #2
 1054 04e2 1A60     		str	r2, [r3]
 1055 04e4 42E0     		b	.L39
 1056              	.L40:
 270:main.c        ****             
 271:main.c        **** 
 272:main.c        ****           } else if (M_LINE_BLACK) { // if robot in the center keep moving straight
 1057              		.loc 1 272 0
 1058 04e6 BB69     		ldr	r3, [r7, #24]
 1059 04e8 952B     		cmp	r3, #149
 1060 04ea 0FDC     		bgt	.L41
 273:main.c        ****             
 274:main.c        ****             lastAdjustDirection = 1;
 1061              		.loc 1 274 0
 1062 04ec 1B4B     		ldr	r3, .L53+16
 1063 04ee 0122     		movs	r2, #1
 1064 04f0 1A60     		str	r2, [r3]
 275:main.c        ****             
 276:main.c        ****             driveForward(distanceTravelled, TARGET_SPEED);
 1065              		.loc 1 276 0
 1066 04f2 1B4B     		ldr	r3, .L53+20
 1067 04f4 1C68     		ldr	r4, [r3]
 1068 04f6 1B4B     		ldr	r3, .L53+24
 1069 04f8 1B68     		ldr	r3, [r3]	@ float
 1070 04fa 1846     		mov	r0, r3
 1071 04fc FFF7FEFF 		bl	__aeabi_f2iz
 1072 0500 0346     		mov	r3, r0
 1073 0502 1946     		mov	r1, r3
 1074 0504 2046     		mov	r0, r4
 1075 0506 FFF7FEFF 		bl	driveForward
 1076 050a 2FE0     		b	.L39
 1077              	.L41:
 277:main.c        **** 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 25


 278:main.c        ****           } else if (R_LINE_BLACK) { // if robot too far left
 1078              		.loc 1 278 0
 1079 050c 3B69     		ldr	r3, [r7, #16]
 1080 050e 952B     		cmp	r3, #149
 1081 0510 05DC     		bgt	.L42
 279:main.c        ****             adjustRight();
 1082              		.loc 1 279 0
 1083 0512 FFF7FEFF 		bl	adjustRight
 280:main.c        ****             
 281:main.c        ****             lastAdjustDirection = 2;
 1084              		.loc 1 281 0
 1085 0516 114B     		ldr	r3, .L53+16
 1086 0518 0222     		movs	r2, #2
 1087 051a 1A60     		str	r2, [r3]
 1088 051c 26E0     		b	.L39
 1089              	.L42:
 282:main.c        **** 
 283:main.c        ****           } else if (L_LINE_BLACK) { // if robot too far right
 1090              		.loc 1 283 0
 1091 051e FB69     		ldr	r3, [r7, #28]
 1092 0520 952B     		cmp	r3, #149
 1093 0522 05DC     		bgt	.L43
 284:main.c        ****             adjustLeft();
 1094              		.loc 1 284 0
 1095 0524 FFF7FEFF 		bl	adjustLeft
 285:main.c        ****             
 286:main.c        ****             lastAdjustDirection = 0;
 1096              		.loc 1 286 0
 1097 0528 0C4B     		ldr	r3, .L53+16
 1098 052a 0022     		movs	r2, #0
 1099 052c 1A60     		str	r2, [r3]
 1100 052e 1DE0     		b	.L39
 1101              	.L43:
 287:main.c        **** 
 288:main.c        ****           } else { // completely lost find way
 289:main.c        ****             if (lastAdjustDirection == 0) {
 1102              		.loc 1 289 0
 1103 0530 0A4B     		ldr	r3, .L53+16
 1104 0532 1B68     		ldr	r3, [r3]
 1105 0534 002B     		cmp	r3, #0
 1106 0536 02D1     		bne	.L44
 290:main.c        ****               turnLeft();
 1107              		.loc 1 290 0
 1108 0538 FFF7FEFF 		bl	turnLeft
 1109 053c 16E0     		b	.L39
 1110              	.L44:
 291:main.c        ****             } else if (lastAdjustDirection == 1) { // last movement was forward (middle sensor sens
 1111              		.loc 1 291 0
 1112 053e 074B     		ldr	r3, .L53+16
 1113 0540 1B68     		ldr	r3, [r3]
 1114 0542 012B     		cmp	r3, #1
 1115 0544 10D1     		bne	.L45
 292:main.c        ****               //hardAdjustLeft();
 293:main.c        ****               turnRight();
 1116              		.loc 1 293 0
 1117 0546 FFF7FEFF 		bl	turnRight
 1118 054a 0FE0     		b	.L39
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 26


 1119              	.L54:
 1120              		.align	2
 1121              	.L53:
 1122 054c 00000000 		.word	instCounter
 1123 0550 00000000 		.word	instruction
 1124 0554 00000000 		.word	turnTimer
 1125 0558 00000000 		.word	started
 1126 055c 00000000 		.word	lastAdjustDirection
 1127 0560 00000000 		.word	distanceTravelled
 1128 0564 00000000 		.word	TARGET_SPEED
 1129              	.L45:
 294:main.c        ****             } else {
 295:main.c        ****               turnRight();
 1130              		.loc 1 295 0
 1131 0568 FFF7FEFF 		bl	turnRight
 1132              	.L39:
 296:main.c        ****             }
 297:main.c        ****             
 298:main.c        ****         }
 299:main.c        ****             
 300:main.c        ****            
 301:main.c        ****             // UPDATE INSTRUCTION LOGIC GOES HERE this needs dramatic improving
 302:main.c        ****             LED_PIN_2_Write(0);
 1133              		.loc 1 302 0
 1134 056c 0020     		movs	r0, #0
 1135 056e FFF7FEFF 		bl	LED_PIN_2_Write
 303:main.c        ****             LED_PIN_3_Write(0);
 1136              		.loc 1 303 0
 1137 0572 0020     		movs	r0, #0
 1138 0574 FFF7FEFF 		bl	LED_PIN_3_Write
 304:main.c        ****             if (L_INT_BLACK || R_INT_BLACK) {
 1139              		.loc 1 304 0
 1140 0578 3B6A     		ldr	r3, [r7, #32]
 1141 057a 952B     		cmp	r3, #149
 1142 057c 02DD     		ble	.L46
 1143              		.loc 1 304 0 is_stmt 0 discriminator 1
 1144 057e FB68     		ldr	r3, [r7, #12]
 1145 0580 952B     		cmp	r3, #149
 1146 0582 04DC     		bgt	.L47
 1147              	.L46:
 305:main.c        ****                 instCounter ++;
 1148              		.loc 1 305 0 is_stmt 1
 1149 0584 0C4B     		ldr	r3, .L55
 1150 0586 1B68     		ldr	r3, [r3]
 1151 0588 0133     		adds	r3, r3, #1
 1152 058a 0B4A     		ldr	r2, .L55
 1153 058c 1360     		str	r3, [r2]
 1154              	.L47:
 306:main.c        ****             }
 307:main.c        ****             if (L_INT_BLACK) {
 1155              		.loc 1 307 0
 1156 058e 3B6A     		ldr	r3, [r7, #32]
 1157 0590 952B     		cmp	r3, #149
 1158 0592 02DC     		bgt	.L48
 308:main.c        ****                 LED_PIN_2_Write(1);
 1159              		.loc 1 308 0
 1160 0594 0120     		movs	r0, #1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 27


 1161 0596 FFF7FEFF 		bl	LED_PIN_2_Write
 1162              	.L48:
 309:main.c        ****             }
 310:main.c        ****         
 311:main.c        ****             if (R_INT_BLACK) {
 1163              		.loc 1 311 0
 1164 059a FB68     		ldr	r3, [r7, #12]
 1165 059c 952B     		cmp	r3, #149
 1166 059e 04DC     		bgt	.L8
 312:main.c        ****                 LED_PIN_3_Write(1);
 1167              		.loc 1 312 0
 1168 05a0 0120     		movs	r0, #1
 1169 05a2 FFF7FEFF 		bl	LED_PIN_3_Write
 1170 05a6 00E0     		b	.L8
 1171              	.L50:
 1172              	.LBE5:
 191:main.c        ****                 instCounter = instCounter+250;
 1173              		.loc 1 191 0
 1174 05a8 00BF     		nop
 1175              	.L8:
 1176              	.LBE3:
 313:main.c        ****             }
 314:main.c        ****             
 315:main.c        ****             
 316:main.c        ****             
 317:main.c        ****             /*if (instruction[instCounter] == 0) {
 318:main.c        ****                 consecStops++;
 319:main.c        ****             } else {
 320:main.c        ****                 consecStops = 0;
 321:main.c        ****             }*/
 322:main.c        ****         }
 323:main.c        ****         }
 324:main.c        **** 
 325:main.c        ****         flag = 0;
 1177              		.loc 1 325 0
 1178 05aa 044B     		ldr	r3, .L55+4
 1179 05ac 0022     		movs	r2, #0
 1180 05ae 1A60     		str	r2, [r3]
 326:main.c        ****         ADC1_IRQ_Enable();
 1181              		.loc 1 326 0
 1182 05b0 FFF7FEFF 		bl	ADC1_IRQ_Enable
 327:main.c        ****       }
 328:main.c        ****     
 329:main.c        ****   }
 1183              		.loc 1 329 0
 1184 05b4 5CE5     		b	.L49
 1185              	.L56:
 1186 05b6 00BF     		.align	2
 1187              	.L55:
 1188 05b8 00000000 		.word	instCounter
 1189 05bc 00000000 		.word	flag
 1190              		.cfi_endproc
 1191              	.LFE65:
 1192              		.size	main, .-main
 1193              		.text
 1194              	.Letext0:
 1195              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 28


 1196              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1197              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1198              		.file 5 "vars.h"
 1199              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1200              		.section	.debug_info,"",%progbits
 1201              	.Ldebug_info0:
 1202 0000 07070000 		.4byte	0x707
 1203 0004 0400     		.2byte	0x4
 1204 0006 00000000 		.4byte	.Ldebug_abbrev0
 1205 000a 04       		.byte	0x4
 1206 000b 01       		.uleb128 0x1
 1207 000c C9000000 		.4byte	.LASF100
 1208 0010 0C       		.byte	0xc
 1209 0011 AB040000 		.4byte	.LASF101
 1210 0015 2A020000 		.4byte	.LASF102
 1211 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1212 001d 00000000 		.4byte	0
 1213 0021 00000000 		.4byte	.Ldebug_line0
 1214 0025 02       		.uleb128 0x2
 1215 0026 01       		.byte	0x1
 1216 0027 06       		.byte	0x6
 1217 0028 F2010000 		.4byte	.LASF0
 1218 002c 02       		.uleb128 0x2
 1219 002d 01       		.byte	0x1
 1220 002e 08       		.byte	0x8
 1221 002f 47030000 		.4byte	.LASF1
 1222 0033 02       		.uleb128 0x2
 1223 0034 02       		.byte	0x2
 1224 0035 05       		.byte	0x5
 1225 0036 8A000000 		.4byte	.LASF2
 1226 003a 02       		.uleb128 0x2
 1227 003b 02       		.byte	0x2
 1228 003c 07       		.byte	0x7
 1229 003d 4E040000 		.4byte	.LASF3
 1230 0041 03       		.uleb128 0x3
 1231 0042 1A050000 		.4byte	.LASF12
 1232 0046 02       		.byte	0x2
 1233 0047 3F       		.byte	0x3f
 1234 0048 4C000000 		.4byte	0x4c
 1235 004c 02       		.uleb128 0x2
 1236 004d 04       		.byte	0x4
 1237 004e 05       		.byte	0x5
 1238 004f D5020000 		.4byte	.LASF4
 1239 0053 02       		.uleb128 0x2
 1240 0054 04       		.byte	0x4
 1241 0055 07       		.byte	0x7
 1242 0056 B2040000 		.4byte	.LASF5
 1243 005a 02       		.uleb128 0x2
 1244 005b 08       		.byte	0x8
 1245 005c 05       		.byte	0x5
 1246 005d E9050000 		.4byte	.LASF6
 1247 0061 02       		.uleb128 0x2
 1248 0062 08       		.byte	0x8
 1249 0063 07       		.byte	0x7
 1250 0064 88030000 		.4byte	.LASF7
 1251 0068 04       		.uleb128 0x4
 1252 0069 04       		.byte	0x4
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 29


 1253 006a 05       		.byte	0x5
 1254 006b 696E7400 		.ascii	"int\000"
 1255 006f 02       		.uleb128 0x2
 1256 0070 04       		.byte	0x4
 1257 0071 07       		.byte	0x7
 1258 0072 9F030000 		.4byte	.LASF8
 1259 0076 02       		.uleb128 0x2
 1260 0077 08       		.byte	0x8
 1261 0078 04       		.byte	0x4
 1262 0079 35030000 		.4byte	.LASF9
 1263 007d 02       		.uleb128 0x2
 1264 007e 04       		.byte	0x4
 1265 007f 07       		.byte	0x7
 1266 0080 B1000000 		.4byte	.LASF10
 1267 0084 02       		.uleb128 0x2
 1268 0085 01       		.byte	0x1
 1269 0086 08       		.byte	0x8
 1270 0087 1B040000 		.4byte	.LASF11
 1271 008b 03       		.uleb128 0x3
 1272 008c 34040000 		.4byte	.LASF13
 1273 0090 03       		.byte	0x3
 1274 0091 2C       		.byte	0x2c
 1275 0092 41000000 		.4byte	0x41
 1276 0096 05       		.uleb128 0x5
 1277 0097 6E040000 		.4byte	.LASF14
 1278 009b 04       		.byte	0x4
 1279 009c E701     		.2byte	0x1e7
 1280 009e 2C000000 		.4byte	0x2c
 1281 00a2 05       		.uleb128 0x5
 1282 00a3 81010000 		.4byte	.LASF15
 1283 00a7 04       		.byte	0x4
 1284 00a8 E801     		.2byte	0x1e8
 1285 00aa 3A000000 		.4byte	0x3a
 1286 00ae 05       		.uleb128 0x5
 1287 00af 9A020000 		.4byte	.LASF16
 1288 00b3 04       		.byte	0x4
 1289 00b4 EA01     		.2byte	0x1ea
 1290 00b6 25000000 		.4byte	0x25
 1291 00ba 05       		.uleb128 0x5
 1292 00bb A1010000 		.4byte	.LASF17
 1293 00bf 04       		.byte	0x4
 1294 00c0 EB01     		.2byte	0x1eb
 1295 00c2 33000000 		.4byte	0x33
 1296 00c6 02       		.uleb128 0x2
 1297 00c7 04       		.byte	0x4
 1298 00c8 04       		.byte	0x4
 1299 00c9 FE010000 		.4byte	.LASF18
 1300 00cd 02       		.uleb128 0x2
 1301 00ce 08       		.byte	0x8
 1302 00cf 04       		.byte	0x4
 1303 00d0 C4040000 		.4byte	.LASF19
 1304 00d4 06       		.uleb128 0x6
 1305 00d5 11040000 		.4byte	.LASF103
 1306 00d9 20       		.byte	0x20
 1307 00da 05       		.byte	0x5
 1308 00db 29       		.byte	0x29
 1309 00dc AD010000 		.4byte	0x1ad
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 30


 1310 00e0 07       		.uleb128 0x7
 1311 00e1 E4050000 		.4byte	.LASF20
 1312 00e5 05       		.byte	0x5
 1313 00e6 2A       		.byte	0x2a
 1314 00e7 AE000000 		.4byte	0xae
 1315 00eb 00       		.byte	0
 1316 00ec 07       		.uleb128 0x7
 1317 00ed 9B010000 		.4byte	.LASF21
 1318 00f1 05       		.byte	0x5
 1319 00f2 2B       		.byte	0x2b
 1320 00f3 96000000 		.4byte	0x96
 1321 00f7 01       		.byte	0x1
 1322 00f8 07       		.uleb128 0x7
 1323 00f9 29040000 		.4byte	.LASF22
 1324 00fd 05       		.byte	0x5
 1325 00fe 2C       		.byte	0x2c
 1326 00ff BA000000 		.4byte	0xba
 1327 0103 02       		.byte	0x2
 1328 0104 07       		.uleb128 0x7
 1329 0105 8A050000 		.4byte	.LASF23
 1330 0109 05       		.byte	0x5
 1331 010a 2D       		.byte	0x2d
 1332 010b BA000000 		.4byte	0xba
 1333 010f 04       		.byte	0x4
 1334 0110 07       		.uleb128 0x7
 1335 0111 2C050000 		.4byte	.LASF24
 1336 0115 05       		.byte	0x5
 1337 0116 2E       		.byte	0x2e
 1338 0117 BA000000 		.4byte	0xba
 1339 011b 06       		.byte	0x6
 1340 011c 07       		.uleb128 0x7
 1341 011d CD020000 		.4byte	.LASF25
 1342 0121 05       		.byte	0x5
 1343 0122 2F       		.byte	0x2f
 1344 0123 BA000000 		.4byte	0xba
 1345 0127 08       		.byte	0x8
 1346 0128 07       		.uleb128 0x7
 1347 0129 24050000 		.4byte	.LASF26
 1348 012d 05       		.byte	0x5
 1349 012e 30       		.byte	0x30
 1350 012f BA000000 		.4byte	0xba
 1351 0133 0A       		.byte	0xa
 1352 0134 07       		.uleb128 0x7
 1353 0135 55030000 		.4byte	.LASF27
 1354 0139 05       		.byte	0x5
 1355 013a 31       		.byte	0x31
 1356 013b BA000000 		.4byte	0xba
 1357 013f 0C       		.byte	0xc
 1358 0140 07       		.uleb128 0x7
 1359 0141 C0020000 		.4byte	.LASF28
 1360 0145 05       		.byte	0x5
 1361 0146 32       		.byte	0x32
 1362 0147 BA000000 		.4byte	0xba
 1363 014b 0E       		.byte	0xe
 1364 014c 07       		.uleb128 0x7
 1365 014d DA030000 		.4byte	.LASF29
 1366 0151 05       		.byte	0x5
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 31


 1367 0152 33       		.byte	0x33
 1368 0153 BA000000 		.4byte	0xba
 1369 0157 10       		.byte	0x10
 1370 0158 07       		.uleb128 0x7
 1371 0159 2D030000 		.4byte	.LASF30
 1372 015d 05       		.byte	0x5
 1373 015e 34       		.byte	0x34
 1374 015f BA000000 		.4byte	0xba
 1375 0163 12       		.byte	0x12
 1376 0164 07       		.uleb128 0x7
 1377 0165 0C020000 		.4byte	.LASF31
 1378 0169 05       		.byte	0x5
 1379 016a 35       		.byte	0x35
 1380 016b BA000000 		.4byte	0xba
 1381 016f 14       		.byte	0x14
 1382 0170 07       		.uleb128 0x7
 1383 0171 BA010000 		.4byte	.LASF32
 1384 0175 05       		.byte	0x5
 1385 0176 36       		.byte	0x36
 1386 0177 BA000000 		.4byte	0xba
 1387 017b 16       		.byte	0x16
 1388 017c 07       		.uleb128 0x7
 1389 017d 82000000 		.4byte	.LASF33
 1390 0181 05       		.byte	0x5
 1391 0182 37       		.byte	0x37
 1392 0183 BA000000 		.4byte	0xba
 1393 0187 18       		.byte	0x18
 1394 0188 07       		.uleb128 0x7
 1395 0189 92020000 		.4byte	.LASF34
 1396 018d 05       		.byte	0x5
 1397 018e 38       		.byte	0x38
 1398 018f BA000000 		.4byte	0xba
 1399 0193 1A       		.byte	0x1a
 1400 0194 07       		.uleb128 0x7
 1401 0195 C7030000 		.4byte	.LASF35
 1402 0199 05       		.byte	0x5
 1403 019a 39       		.byte	0x39
 1404 019b BA000000 		.4byte	0xba
 1405 019f 1C       		.byte	0x1c
 1406 01a0 07       		.uleb128 0x7
 1407 01a1 41040000 		.4byte	.LASF36
 1408 01a5 05       		.byte	0x5
 1409 01a6 3A       		.byte	0x3a
 1410 01a7 BA000000 		.4byte	0xba
 1411 01ab 1E       		.byte	0x1e
 1412 01ac 00       		.byte	0
 1413 01ad 08       		.uleb128 0x8
 1414 01ae 656F6300 		.ascii	"eoc\000"
 1415 01b2 01       		.byte	0x1
 1416 01b3 5A       		.byte	0x5a
 1417 01b4 00000000 		.4byte	.LFB64
 1418 01b8 18000000 		.4byte	.LFE64-.LFB64
 1419 01bc 01       		.uleb128 0x1
 1420 01bd 9C       		.byte	0x9c
 1421 01be 09       		.uleb128 0x9
 1422 01bf BA000000 		.4byte	.LASF104
 1423 01c3 01       		.byte	0x1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 32


 1424 01c4 5E       		.byte	0x5e
 1425 01c5 68000000 		.4byte	0x68
 1426 01c9 00000000 		.4byte	.LFB65
 1427 01cd C0050000 		.4byte	.LFE65-.LFB65
 1428 01d1 01       		.uleb128 0x1
 1429 01d2 9C       		.byte	0x9c
 1430 01d3 82020000 		.4byte	0x282
 1431 01d7 0A       		.uleb128 0xa
 1432 01d8 1E000000 		.4byte	.LBB2
 1433 01dc 48000000 		.4byte	.LBE2-.LBB2
 1434 01e0 F1010000 		.4byte	0x1f1
 1435 01e4 0B       		.uleb128 0xb
 1436 01e5 6900     		.ascii	"i\000"
 1437 01e7 01       		.byte	0x1
 1438 01e8 78       		.byte	0x78
 1439 01e9 68000000 		.4byte	0x68
 1440 01ed 02       		.uleb128 0x2
 1441 01ee 91       		.byte	0x91
 1442 01ef 6C       		.sleb128 -20
 1443 01f0 00       		.byte	0
 1444 01f1 0C       		.uleb128 0xc
 1445 01f2 10010000 		.4byte	.LBB3
 1446 01f6 9A040000 		.4byte	.LBE3-.LBB3
 1447 01fa 0D       		.uleb128 0xd
 1448 01fb CA050000 		.4byte	.LASF37
 1449 01ff 01       		.byte	0x1
 1450 0200 91       		.byte	0x91
 1451 0201 68000000 		.4byte	0x68
 1452 0205 02       		.uleb128 0x2
 1453 0206 91       		.byte	0x91
 1454 0207 68       		.sleb128 -24
 1455 0208 0D       		.uleb128 0xd
 1456 0209 99040000 		.4byte	.LASF38
 1457 020d 01       		.byte	0x1
 1458 020e 92       		.byte	0x92
 1459 020f 68000000 		.4byte	0x68
 1460 0213 02       		.uleb128 0x2
 1461 0214 91       		.byte	0x91
 1462 0215 64       		.sleb128 -28
 1463 0216 0D       		.uleb128 0xd
 1464 0217 EC030000 		.4byte	.LASF39
 1465 021b 01       		.byte	0x1
 1466 021c 93       		.byte	0x93
 1467 021d 68000000 		.4byte	0x68
 1468 0221 02       		.uleb128 0x2
 1469 0222 91       		.byte	0x91
 1470 0223 60       		.sleb128 -32
 1471 0224 0D       		.uleb128 0xd
 1472 0225 A1050000 		.4byte	.LASF40
 1473 0229 01       		.byte	0x1
 1474 022a 94       		.byte	0x94
 1475 022b 68000000 		.4byte	0x68
 1476 022f 02       		.uleb128 0x2
 1477 0230 91       		.byte	0x91
 1478 0231 5C       		.sleb128 -36
 1479 0232 0D       		.uleb128 0xd
 1480 0233 5E030000 		.4byte	.LASF41
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 33


 1481 0237 01       		.byte	0x1
 1482 0238 95       		.byte	0x95
 1483 0239 68000000 		.4byte	0x68
 1484 023d 02       		.uleb128 0x2
 1485 023e 91       		.byte	0x91
 1486 023f 58       		.sleb128 -40
 1487 0240 0D       		.uleb128 0xd
 1488 0241 0D000000 		.4byte	.LASF42
 1489 0245 01       		.byte	0x1
 1490 0246 96       		.byte	0x96
 1491 0247 68000000 		.4byte	0x68
 1492 024b 02       		.uleb128 0x2
 1493 024c 91       		.byte	0x91
 1494 024d 54       		.sleb128 -44
 1495 024e 0A       		.uleb128 0xa
 1496 024f 34010000 		.4byte	.LBB4
 1497 0253 98000000 		.4byte	.LBE4-.LBB4
 1498 0257 68020000 		.4byte	0x268
 1499 025b 0B       		.uleb128 0xb
 1500 025c 6900     		.ascii	"i\000"
 1501 025e 01       		.byte	0x1
 1502 025f 97       		.byte	0x97
 1503 0260 68000000 		.4byte	0x68
 1504 0264 02       		.uleb128 0x2
 1505 0265 91       		.byte	0x91
 1506 0266 50       		.sleb128 -48
 1507 0267 00       		.byte	0
 1508 0268 0C       		.uleb128 0xc
 1509 0269 EE030000 		.4byte	.LBB5
 1510 026d BA010000 		.4byte	.LBE5-.LBB5
 1511 0271 0D       		.uleb128 0xd
 1512 0272 0E030000 		.4byte	.LASF43
 1513 0276 01       		.byte	0x1
 1514 0277 DB       		.byte	0xdb
 1515 0278 84000000 		.4byte	0x84
 1516 027c 02       		.uleb128 0x2
 1517 027d 91       		.byte	0x91
 1518 027e 4F       		.sleb128 -49
 1519 027f 00       		.byte	0
 1520 0280 00       		.byte	0
 1521 0281 00       		.byte	0
 1522 0282 0E       		.uleb128 0xe
 1523 0283 D8040000 		.4byte	.LASF44
 1524 0287 06       		.byte	0x6
 1525 0288 1207     		.2byte	0x712
 1526 028a 8E020000 		.4byte	0x28e
 1527 028e 0F       		.uleb128 0xf
 1528 028f 8B000000 		.4byte	0x8b
 1529 0293 10       		.uleb128 0x10
 1530 0294 747300   		.ascii	"ts\000"
 1531 0297 05       		.byte	0x5
 1532 0298 10       		.byte	0x10
 1533 0299 96000000 		.4byte	0x96
 1534 029d 05       		.uleb128 0x5
 1535 029e 03       		.byte	0x3
 1536 029f 00000000 		.4byte	ts
 1537 02a3 11       		.uleb128 0x11
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 34


 1538 02a4 53050000 		.4byte	.LASF45
 1539 02a8 05       		.byte	0x5
 1540 02a9 11       		.byte	0x11
 1541 02aa A2000000 		.4byte	0xa2
 1542 02ae 05       		.uleb128 0x5
 1543 02af 03       		.byte	0x3
 1544 02b0 00000000 		.4byte	ts_enc
 1545 02b4 11       		.uleb128 0x11
 1546 02b5 5A050000 		.4byte	.LASF46
 1547 02b9 05       		.byte	0x5
 1548 02ba 12       		.byte	0x12
 1549 02bb A2000000 		.4byte	0xa2
 1550 02bf 05       		.uleb128 0x5
 1551 02c0 03       		.byte	0x3
 1552 02c1 00000000 		.4byte	ts_update
 1553 02c5 11       		.uleb128 0x11
 1554 02c6 4A050000 		.4byte	.LASF47
 1555 02ca 05       		.byte	0x5
 1556 02cb 13       		.byte	0x13
 1557 02cc A2000000 		.4byte	0xa2
 1558 02d0 05       		.uleb128 0x5
 1559 02d1 03       		.byte	0x3
 1560 02d2 00000000 		.4byte	ts_speed
 1561 02d6 11       		.uleb128 0x11
 1562 02d7 57010000 		.4byte	.LASF48
 1563 02db 05       		.byte	0x5
 1564 02dc 14       		.byte	0x14
 1565 02dd A2000000 		.4byte	0xa2
 1566 02e1 05       		.uleb128 0x5
 1567 02e2 03       		.byte	0x3
 1568 02e3 00000000 		.4byte	ts_display
 1569 02e7 11       		.uleb128 0x11
 1570 02e8 0E050000 		.4byte	.LASF49
 1571 02ec 05       		.byte	0x5
 1572 02ed 16       		.byte	0x16
 1573 02ee 96000000 		.4byte	0x96
 1574 02f2 05       		.uleb128 0x5
 1575 02f3 03       		.byte	0x3
 1576 02f4 00000000 		.4byte	flag_ts_enc
 1577 02f8 11       		.uleb128 0x11
 1578 02f9 9F020000 		.4byte	.LASF50
 1579 02fd 05       		.byte	0x5
 1580 02fe 17       		.byte	0x17
 1581 02ff 96000000 		.4byte	0x96
 1582 0303 05       		.uleb128 0x5
 1583 0304 03       		.byte	0x3
 1584 0305 00000000 		.4byte	flag_ts_update
 1585 0309 11       		.uleb128 0x11
 1586 030a 74000000 		.4byte	.LASF51
 1587 030e 05       		.byte	0x5
 1588 030f 18       		.byte	0x18
 1589 0310 96000000 		.4byte	0x96
 1590 0314 05       		.uleb128 0x5
 1591 0315 03       		.byte	0x3
 1592 0316 00000000 		.4byte	flag_ts_speed
 1593 031a 11       		.uleb128 0x11
 1594 031b FE020000 		.4byte	.LASF52
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 35


 1595 031f 05       		.byte	0x5
 1596 0320 19       		.byte	0x19
 1597 0321 96000000 		.4byte	0x96
 1598 0325 05       		.uleb128 0x5
 1599 0326 03       		.byte	0x3
 1600 0327 00000000 		.4byte	flag_ts_display
 1601 032b 11       		.uleb128 0x11
 1602 032c 80030000 		.4byte	.LASF53
 1603 0330 05       		.byte	0x5
 1604 0331 1C       		.byte	0x1c
 1605 0332 96000000 		.4byte	0x96
 1606 0336 05       		.uleb128 0x5
 1607 0337 03       		.byte	0x3
 1608 0338 00000000 		.4byte	flag_rx
 1609 033c 11       		.uleb128 0x11
 1610 033d 4F000000 		.4byte	.LASF54
 1611 0341 05       		.byte	0x5
 1612 0342 1D       		.byte	0x1d
 1613 0343 96000000 		.4byte	0x96
 1614 0347 05       		.uleb128 0x5
 1615 0348 03       		.byte	0x3
 1616 0349 00000000 		.4byte	flag_packet
 1617 034d 11       		.uleb128 0x11
 1618 034e AC030000 		.4byte	.LASF55
 1619 0352 05       		.byte	0x5
 1620 0353 1E       		.byte	0x1e
 1621 0354 96000000 		.4byte	0x96
 1622 0358 05       		.uleb128 0x5
 1623 0359 03       		.byte	0x3
 1624 035a 00000000 		.4byte	flag_KB_string
 1625 035e 11       		.uleb128 0x11
 1626 035f 71030000 		.4byte	.LASF56
 1627 0363 05       		.byte	0x5
 1628 0364 20       		.byte	0x20
 1629 0365 96000000 		.4byte	0x96
 1630 0369 05       		.uleb128 0x5
 1631 036a 03       		.byte	0x3
 1632 036b 00000000 		.4byte	dataready_flag
 1633 036f 11       		.uleb128 0x11
 1634 0370 6E050000 		.4byte	.LASF57
 1635 0374 05       		.byte	0x5
 1636 0375 22       		.byte	0x22
 1637 0376 96000000 		.4byte	0x96
 1638 037a 05       		.uleb128 0x5
 1639 037b 03       		.byte	0x3
 1640 037c 00000000 		.4byte	flag_rf_transmission_active
 1641 0380 12       		.uleb128 0x12
 1642 0381 84000000 		.4byte	0x84
 1643 0385 90030000 		.4byte	0x390
 1644 0389 13       		.uleb128 0x13
 1645 038a 7D000000 		.4byte	0x7d
 1646 038e 3F       		.byte	0x3f
 1647 038f 00       		.byte	0
 1648 0390 11       		.uleb128 0x11
 1649 0391 8B040000 		.4byte	.LASF58
 1650 0395 05       		.byte	0x5
 1651 0396 25       		.byte	0x25
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 36


 1652 0397 80030000 		.4byte	0x380
 1653 039b 05       		.uleb128 0x5
 1654 039c 03       		.byte	0x3
 1655 039d 00000000 		.4byte	displaystring
 1656 03a1 11       		.uleb128 0x11
 1657 03a2 DF010000 		.4byte	.LASF59
 1658 03a6 05       		.byte	0x5
 1659 03a7 26       		.byte	0x26
 1660 03a8 80030000 		.4byte	0x380
 1661 03ac 05       		.uleb128 0x5
 1662 03ad 03       		.byte	0x3
 1663 03ae 00000000 		.4byte	line
 1664 03b2 11       		.uleb128 0x11
 1665 03b3 41030000 		.4byte	.LASF60
 1666 03b7 05       		.byte	0x5
 1667 03b8 26       		.byte	0x26
 1668 03b9 80030000 		.4byte	0x380
 1669 03bd 05       		.uleb128 0x5
 1670 03be 03       		.byte	0x3
 1671 03bf 00000000 		.4byte	entry
 1672 03c3 12       		.uleb128 0x12
 1673 03c4 96000000 		.4byte	0x96
 1674 03c8 D3030000 		.4byte	0x3d3
 1675 03cc 13       		.uleb128 0x13
 1676 03cd 7D000000 		.4byte	0x7d
 1677 03d1 3F       		.byte	0x3f
 1678 03d2 00       		.byte	0
 1679 03d3 11       		.uleb128 0x11
 1680 03d4 BF000000 		.4byte	.LASF61
 1681 03d8 05       		.byte	0x5
 1682 03d9 27       		.byte	0x27
 1683 03da C3030000 		.4byte	0x3c3
 1684 03de 05       		.uleb128 0x5
 1685 03df 03       		.byte	0x3
 1686 03e0 00000000 		.4byte	usbBuffer
 1687 03e4 11       		.uleb128 0x11
 1688 03e5 A4000000 		.4byte	.LASF62
 1689 03e9 05       		.byte	0x5
 1690 03ea 3C       		.byte	0x3c
 1691 03eb D4000000 		.4byte	0xd4
 1692 03ef 05       		.uleb128 0x5
 1693 03f0 03       		.byte	0x3
 1694 03f1 00000000 		.4byte	system_state
 1695 03f5 11       		.uleb128 0x11
 1696 03f6 00000000 		.4byte	.LASF63
 1697 03fa 01       		.byte	0x1
 1698 03fb 28       		.byte	0x28
 1699 03fc C6000000 		.4byte	0xc6
 1700 0400 05       		.uleb128 0x5
 1701 0401 03       		.byte	0x3
 1702 0402 00000000 		.4byte	TARGET_SPEED
 1703 0406 11       		.uleb128 0x11
 1704 0407 E2030000 		.4byte	.LASF64
 1705 040b 01       		.byte	0x1
 1706 040c 29       		.byte	0x29
 1707 040d 68000000 		.4byte	0x68
 1708 0411 05       		.uleb128 0x5
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 37


 1709 0412 03       		.byte	0x3
 1710 0413 00000000 		.4byte	restoring
 1711 0417 11       		.uleb128 0x11
 1712 0418 70010000 		.4byte	.LASF65
 1713 041c 01       		.byte	0x1
 1714 041d 2A       		.byte	0x2a
 1715 041e 68000000 		.4byte	0x68
 1716 0422 05       		.uleb128 0x5
 1717 0423 03       		.byte	0x3
 1718 0424 00000000 		.4byte	turningDirection
 1719 0428 11       		.uleb128 0x11
 1720 0429 EF040000 		.4byte	.LASF66
 1721 042d 01       		.byte	0x1
 1722 042e 2B       		.byte	0x2b
 1723 042f 68000000 		.4byte	0x68
 1724 0433 05       		.uleb128 0x5
 1725 0434 03       		.byte	0x3
 1726 0435 00000000 		.4byte	turningCount
 1727 0439 11       		.uleb128 0x11
 1728 043a 61040000 		.4byte	.LASF67
 1729 043e 01       		.byte	0x1
 1730 043f 2C       		.byte	0x2c
 1731 0440 4A040000 		.4byte	0x44a
 1732 0444 05       		.uleb128 0x5
 1733 0445 03       		.byte	0x3
 1734 0446 00000000 		.4byte	shouldUpdate
 1735 044a 0F       		.uleb128 0xf
 1736 044b 68000000 		.4byte	0x68
 1737 044f 11       		.uleb128 0x11
 1738 0450 F0020000 		.4byte	.LASF68
 1739 0454 01       		.byte	0x1
 1740 0455 2E       		.byte	0x2e
 1741 0456 4A040000 		.4byte	0x44a
 1742 045a 05       		.uleb128 0x5
 1743 045b 03       		.byte	0x3
 1744 045c 00000000 		.4byte	dotsTravelled
 1745 0460 11       		.uleb128 0x11
 1746 0461 BB030000 		.4byte	.LASF69
 1747 0465 01       		.byte	0x1
 1748 0466 2F       		.byte	0x2f
 1749 0467 68000000 		.4byte	0x68
 1750 046b 05       		.uleb128 0x5
 1751 046c 03       		.byte	0x3
 1752 046d 00000000 		.4byte	consecStops
 1753 0471 11       		.uleb128 0x11
 1754 0472 04020000 		.4byte	.LASF70
 1755 0476 01       		.byte	0x1
 1756 0477 30       		.byte	0x30
 1757 0478 68000000 		.4byte	0x68
 1758 047c 05       		.uleb128 0x5
 1759 047d 03       		.byte	0x3
 1760 047e 00000000 		.4byte	started
 1761 0482 11       		.uleb128 0x11
 1762 0483 FC040000 		.4byte	.LASF71
 1763 0487 01       		.byte	0x1
 1764 0488 31       		.byte	0x31
 1765 0489 68000000 		.4byte	0x68
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 38


 1766 048d 05       		.uleb128 0x5
 1767 048e 03       		.byte	0x3
 1768 048f 00000000 		.4byte	instCounter
 1769 0493 11       		.uleb128 0x11
 1770 0494 3C040000 		.4byte	.LASF72
 1771 0498 01       		.byte	0x1
 1772 0499 38       		.byte	0x38
 1773 049a 4A040000 		.4byte	0x44a
 1774 049e 05       		.uleb128 0x5
 1775 049f 03       		.byte	0x3
 1776 04a0 00000000 		.4byte	flag
 1777 04a4 12       		.uleb128 0x12
 1778 04a5 4A040000 		.4byte	0x44a
 1779 04a9 B5040000 		.4byte	0x4b5
 1780 04ad 14       		.uleb128 0x14
 1781 04ae 7D000000 		.4byte	0x7d
 1782 04b2 E703     		.2byte	0x3e7
 1783 04b4 00       		.byte	0
 1784 04b5 11       		.uleb128 0x11
 1785 04b6 74040000 		.4byte	.LASF73
 1786 04ba 01       		.byte	0x1
 1787 04bb 39       		.byte	0x39
 1788 04bc C6040000 		.4byte	0x4c6
 1789 04c0 05       		.uleb128 0x5
 1790 04c1 03       		.byte	0x3
 1791 04c2 00000000 		.4byte	valuesLeftIntersection
 1792 04c6 0F       		.uleb128 0xf
 1793 04c7 A4040000 		.4byte	0x4a4
 1794 04cb 11       		.uleb128 0x11
 1795 04cc 65000000 		.4byte	.LASF74
 1796 04d0 01       		.byte	0x1
 1797 04d1 3A       		.byte	0x3a
 1798 04d2 DC040000 		.4byte	0x4dc
 1799 04d6 05       		.uleb128 0x5
 1800 04d7 03       		.byte	0x3
 1801 04d8 00000000 		.4byte	valuesLeftLine
 1802 04dc 0F       		.uleb128 0xf
 1803 04dd A4040000 		.4byte	0x4a4
 1804 04e1 11       		.uleb128 0x11
 1805 04e2 00040000 		.4byte	.LASF75
 1806 04e6 01       		.byte	0x1
 1807 04e7 3B       		.byte	0x3b
 1808 04e8 F2040000 		.4byte	0x4f2
 1809 04ec 05       		.uleb128 0x5
 1810 04ed 03       		.byte	0x3
 1811 04ee 00000000 		.4byte	valuesMiddleLine
 1812 04f2 0F       		.uleb128 0xf
 1813 04f3 A4040000 		.4byte	0x4a4
 1814 04f7 11       		.uleb128 0x11
 1815 04f8 1A030000 		.4byte	.LASF76
 1816 04fc 01       		.byte	0x1
 1817 04fd 3C       		.byte	0x3c
 1818 04fe 08050000 		.4byte	0x508
 1819 0502 05       		.uleb128 0x5
 1820 0503 03       		.byte	0x3
 1821 0504 00000000 		.4byte	valuesTurnComplete
 1822 0508 0F       		.uleb128 0xf
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 39


 1823 0509 A4040000 		.4byte	0x4a4
 1824 050d 11       		.uleb128 0x11
 1825 050e 94000000 		.4byte	.LASF77
 1826 0512 01       		.byte	0x1
 1827 0513 3D       		.byte	0x3d
 1828 0514 1E050000 		.4byte	0x51e
 1829 0518 05       		.uleb128 0x5
 1830 0519 03       		.byte	0x3
 1831 051a 00000000 		.4byte	valuesRightLine
 1832 051e 0F       		.uleb128 0xf
 1833 051f A4040000 		.4byte	0x4a4
 1834 0523 11       		.uleb128 0x11
 1835 0524 C7010000 		.4byte	.LASF78
 1836 0528 01       		.byte	0x1
 1837 0529 3E       		.byte	0x3e
 1838 052a 34050000 		.4byte	0x534
 1839 052e 05       		.uleb128 0x5
 1840 052f 03       		.byte	0x3
 1841 0530 00000000 		.4byte	valuesRightIntersection
 1842 0534 0F       		.uleb128 0xf
 1843 0535 A4040000 		.4byte	0x4a4
 1844 0539 11       		.uleb128 0x11
 1845 053a 08050000 		.4byte	.LASF79
 1846 053e 01       		.byte	0x1
 1847 053f 3F       		.byte	0x3f
 1848 0540 4A040000 		.4byte	0x44a
 1849 0544 05       		.uleb128 0x5
 1850 0545 03       		.byte	0x3
 1851 0546 00000000 		.4byte	count
 1852 054a 11       		.uleb128 0x11
 1853 054b 3E050000 		.4byte	.LASF80
 1854 054f 01       		.byte	0x1
 1855 0550 40       		.byte	0x40
 1856 0551 4A040000 		.4byte	0x44a
 1857 0555 05       		.uleb128 0x5
 1858 0556 03       		.byte	0x3
 1859 0557 00000000 		.4byte	turningLeft
 1860 055b 11       		.uleb128 0x11
 1861 055c CB040000 		.4byte	.LASF81
 1862 0560 01       		.byte	0x1
 1863 0561 41       		.byte	0x41
 1864 0562 4A040000 		.4byte	0x44a
 1865 0566 05       		.uleb128 0x5
 1866 0567 03       		.byte	0x3
 1867 0568 00000000 		.4byte	turningRight
 1868 056c 11       		.uleb128 0x11
 1869 056d DE020000 		.4byte	.LASF82
 1870 0571 01       		.byte	0x1
 1871 0572 42       		.byte	0x42
 1872 0573 4A040000 		.4byte	0x44a
 1873 0577 05       		.uleb128 0x5
 1874 0578 03       		.byte	0x3
 1875 0579 00000000 		.4byte	lastVeerDirection
 1876 057d 11       		.uleb128 0x11
 1877 057e E5040000 		.4byte	.LASF83
 1878 0582 01       		.byte	0x1
 1879 0583 44       		.byte	0x44
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 40


 1880 0584 4A040000 		.4byte	0x44a
 1881 0588 05       		.uleb128 0x5
 1882 0589 03       		.byte	0x3
 1883 058a 00000000 		.4byte	motorFlag
 1884 058e 11       		.uleb128 0x11
 1885 058f C5050000 		.4byte	.LASF84
 1886 0593 01       		.byte	0x1
 1887 0594 45       		.byte	0x45
 1888 0595 4A040000 		.4byte	0x44a
 1889 0599 05       		.uleb128 0x5
 1890 059a 03       		.byte	0x3
 1891 059b 00000000 		.4byte	step
 1892 059f 10       		.uleb128 0x10
 1893 05a0 76314C00 		.ascii	"v1L\000"
 1894 05a4 01       		.byte	0x1
 1895 05a5 46       		.byte	0x46
 1896 05a6 4A040000 		.4byte	0x44a
 1897 05aa 05       		.uleb128 0x5
 1898 05ab 03       		.byte	0x3
 1899 05ac 00000000 		.4byte	v1L
 1900 05b0 10       		.uleb128 0x10
 1901 05b1 76324C00 		.ascii	"v2L\000"
 1902 05b5 01       		.byte	0x1
 1903 05b6 47       		.byte	0x47
 1904 05b7 4A040000 		.4byte	0x44a
 1905 05bb 05       		.uleb128 0x5
 1906 05bc 03       		.byte	0x3
 1907 05bd 00000000 		.4byte	v2L
 1908 05c1 10       		.uleb128 0x10
 1909 05c2 76315200 		.ascii	"v1R\000"
 1910 05c6 01       		.byte	0x1
 1911 05c7 48       		.byte	0x48
 1912 05c8 4A040000 		.4byte	0x44a
 1913 05cc 05       		.uleb128 0x5
 1914 05cd 03       		.byte	0x3
 1915 05ce 00000000 		.4byte	v1R
 1916 05d2 10       		.uleb128 0x10
 1917 05d3 76325200 		.ascii	"v2R\000"
 1918 05d7 01       		.byte	0x1
 1919 05d8 49       		.byte	0x49
 1920 05d9 4A040000 		.4byte	0x44a
 1921 05dd 05       		.uleb128 0x5
 1922 05de 03       		.byte	0x3
 1923 05df 00000000 		.4byte	v2R
 1924 05e3 11       		.uleb128 0x11
 1925 05e4 E4010000 		.4byte	.LASF85
 1926 05e8 01       		.byte	0x1
 1927 05e9 4A       		.byte	0x4a
 1928 05ea 4A040000 		.4byte	0x44a
 1929 05ee 05       		.uleb128 0x5
 1930 05ef 03       		.byte	0x3
 1931 05f0 00000000 		.4byte	numRotationsL
 1932 05f4 11       		.uleb128 0x11
 1933 05f5 B7050000 		.4byte	.LASF86
 1934 05f9 01       		.byte	0x1
 1935 05fa 4B       		.byte	0x4b
 1936 05fb 4A040000 		.4byte	0x44a
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 41


 1937 05ff 05       		.uleb128 0x5
 1938 0600 03       		.byte	0x3
 1939 0601 00000000 		.4byte	numRotationsR
 1940 0605 11       		.uleb128 0x11
 1941 0606 D0030000 		.4byte	.LASF87
 1942 060a 01       		.byte	0x1
 1943 060b 4C       		.byte	0x4c
 1944 060c 4A040000 		.4byte	0x44a
 1945 0610 05       		.uleb128 0x5
 1946 0611 03       		.byte	0x3
 1947 0612 00000000 		.4byte	turnCount
 1948 0616 11       		.uleb128 0x11
 1949 0617 AE020000 		.4byte	.LASF88
 1950 061b 01       		.byte	0x1
 1951 061c 4D       		.byte	0x4d
 1952 061d 4A040000 		.4byte	0x44a
 1953 0621 05       		.uleb128 0x5
 1954 0622 03       		.byte	0x3
 1955 0623 00000000 		.4byte	distanceTravelled
 1956 0627 11       		.uleb128 0x11
 1957 0628 88010000 		.4byte	.LASF89
 1958 062c 01       		.byte	0x1
 1959 062d 4E       		.byte	0x4e
 1960 062e 4A040000 		.4byte	0x44a
 1961 0632 05       		.uleb128 0x5
 1962 0633 03       		.byte	0x3
 1963 0634 00000000 		.4byte	distancePerSecondL
 1964 0638 11       		.uleb128 0x11
 1965 0639 A7010000 		.4byte	.LASF90
 1966 063d 01       		.byte	0x1
 1967 063e 4F       		.byte	0x4f
 1968 063f 4A040000 		.4byte	0x44a
 1969 0643 05       		.uleb128 0x5
 1970 0644 03       		.byte	0x3
 1971 0645 00000000 		.4byte	distancePerSecondR
 1972 0649 11       		.uleb128 0x11
 1973 064a 15020000 		.4byte	.LASF91
 1974 064e 01       		.byte	0x1
 1975 064f 50       		.byte	0x50
 1976 0650 4A040000 		.4byte	0x44a
 1977 0654 05       		.uleb128 0x5
 1978 0655 03       		.byte	0x3
 1979 0656 00000000 		.4byte	distancePerSecondAvg
 1980 065a 11       		.uleb128 0x11
 1981 065b 62010000 		.4byte	.LASF92
 1982 065f 01       		.byte	0x1
 1983 0660 51       		.byte	0x51
 1984 0661 4A040000 		.4byte	0x44a
 1985 0665 05       		.uleb128 0x5
 1986 0666 03       		.byte	0x3
 1987 0667 00000000 		.4byte	prevTurnState
 1988 066b 11       		.uleb128 0x11
 1989 066c 64050000 		.4byte	.LASF93
 1990 0670 01       		.byte	0x1
 1991 0671 52       		.byte	0x52
 1992 0672 4A040000 		.4byte	0x44a
 1993 0676 05       		.uleb128 0x5
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 42


 1994 0677 03       		.byte	0x3
 1995 0678 00000000 		.4byte	turnState
 1996 067c 11       		.uleb128 0x11
 1997 067d 28000000 		.4byte	.LASF94
 1998 0681 01       		.byte	0x1
 1999 0682 53       		.byte	0x53
 2000 0683 4A040000 		.4byte	0x44a
 2001 0687 05       		.uleb128 0x5
 2002 0688 03       		.byte	0x3
 2003 0689 00000000 		.4byte	turnEnable
 2004 068d 11       		.uleb128 0x11
 2005 068e 5B000000 		.4byte	.LASF95
 2006 0692 01       		.byte	0x1
 2007 0693 54       		.byte	0x54
 2008 0694 4A040000 		.4byte	0x44a
 2009 0698 05       		.uleb128 0x5
 2010 0699 03       		.byte	0x3
 2011 069a 00000000 		.4byte	turnTimer
 2012 069e 11       		.uleb128 0x11
 2013 069f 3B000000 		.4byte	.LASF96
 2014 06a3 01       		.byte	0x1
 2015 06a4 55       		.byte	0x55
 2016 06a5 68000000 		.4byte	0x68
 2017 06a9 05       		.uleb128 0x5
 2018 06aa 03       		.byte	0x3
 2019 06ab 00000000 		.4byte	lastAdjustDirection
 2020 06af 12       		.uleb128 0x12
 2021 06b0 2C000000 		.4byte	0x2c
 2022 06b4 C6060000 		.4byte	0x6c6
 2023 06b8 14       		.uleb128 0x14
 2024 06b9 7D000000 		.4byte	0x7d
 2025 06bd F301     		.2byte	0x1f3
 2026 06bf 13       		.uleb128 0x13
 2027 06c0 7D000000 		.4byte	0x7d
 2028 06c4 01       		.byte	0x1
 2029 06c5 00       		.byte	0
 2030 06c6 11       		.uleb128 0x11
 2031 06c7 33000000 		.4byte	.LASF97
 2032 06cb 01       		.byte	0x1
 2033 06cc 56       		.byte	0x56
 2034 06cd AF060000 		.4byte	0x6af
 2035 06d1 05       		.uleb128 0x5
 2036 06d2 03       		.byte	0x3
 2037 06d3 00000000 		.4byte	squares
 2038 06d7 12       		.uleb128 0x12
 2039 06d8 2C000000 		.4byte	0x2c
 2040 06dc E8060000 		.4byte	0x6e8
 2041 06e0 14       		.uleb128 0x14
 2042 06e1 7D000000 		.4byte	0x7d
 2043 06e5 F301     		.2byte	0x1f3
 2044 06e7 00       		.byte	0
 2045 06e8 11       		.uleb128 0x11
 2046 06e9 95050000 		.4byte	.LASF98
 2047 06ed 01       		.byte	0x1
 2048 06ee 57       		.byte	0x57
 2049 06ef D7060000 		.4byte	0x6d7
 2050 06f3 05       		.uleb128 0x5
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 43


 2051 06f4 03       		.byte	0x3
 2052 06f5 00000000 		.4byte	instruction
 2053 06f9 11       		.uleb128 0x11
 2054 06fa 20040000 		.4byte	.LASF99
 2055 06fe 01       		.byte	0x1
 2056 06ff 58       		.byte	0x58
 2057 0700 D7060000 		.4byte	0x6d7
 2058 0704 05       		.uleb128 0x5
 2059 0705 03       		.byte	0x3
 2060 0706 00000000 		.4byte	distance
 2061 070a 00       		.byte	0
 2062              		.section	.debug_abbrev,"",%progbits
 2063              	.Ldebug_abbrev0:
 2064 0000 01       		.uleb128 0x1
 2065 0001 11       		.uleb128 0x11
 2066 0002 01       		.byte	0x1
 2067 0003 25       		.uleb128 0x25
 2068 0004 0E       		.uleb128 0xe
 2069 0005 13       		.uleb128 0x13
 2070 0006 0B       		.uleb128 0xb
 2071 0007 03       		.uleb128 0x3
 2072 0008 0E       		.uleb128 0xe
 2073 0009 1B       		.uleb128 0x1b
 2074 000a 0E       		.uleb128 0xe
 2075 000b 55       		.uleb128 0x55
 2076 000c 17       		.uleb128 0x17
 2077 000d 11       		.uleb128 0x11
 2078 000e 01       		.uleb128 0x1
 2079 000f 10       		.uleb128 0x10
 2080 0010 17       		.uleb128 0x17
 2081 0011 00       		.byte	0
 2082 0012 00       		.byte	0
 2083 0013 02       		.uleb128 0x2
 2084 0014 24       		.uleb128 0x24
 2085 0015 00       		.byte	0
 2086 0016 0B       		.uleb128 0xb
 2087 0017 0B       		.uleb128 0xb
 2088 0018 3E       		.uleb128 0x3e
 2089 0019 0B       		.uleb128 0xb
 2090 001a 03       		.uleb128 0x3
 2091 001b 0E       		.uleb128 0xe
 2092 001c 00       		.byte	0
 2093 001d 00       		.byte	0
 2094 001e 03       		.uleb128 0x3
 2095 001f 16       		.uleb128 0x16
 2096 0020 00       		.byte	0
 2097 0021 03       		.uleb128 0x3
 2098 0022 0E       		.uleb128 0xe
 2099 0023 3A       		.uleb128 0x3a
 2100 0024 0B       		.uleb128 0xb
 2101 0025 3B       		.uleb128 0x3b
 2102 0026 0B       		.uleb128 0xb
 2103 0027 49       		.uleb128 0x49
 2104 0028 13       		.uleb128 0x13
 2105 0029 00       		.byte	0
 2106 002a 00       		.byte	0
 2107 002b 04       		.uleb128 0x4
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 44


 2108 002c 24       		.uleb128 0x24
 2109 002d 00       		.byte	0
 2110 002e 0B       		.uleb128 0xb
 2111 002f 0B       		.uleb128 0xb
 2112 0030 3E       		.uleb128 0x3e
 2113 0031 0B       		.uleb128 0xb
 2114 0032 03       		.uleb128 0x3
 2115 0033 08       		.uleb128 0x8
 2116 0034 00       		.byte	0
 2117 0035 00       		.byte	0
 2118 0036 05       		.uleb128 0x5
 2119 0037 16       		.uleb128 0x16
 2120 0038 00       		.byte	0
 2121 0039 03       		.uleb128 0x3
 2122 003a 0E       		.uleb128 0xe
 2123 003b 3A       		.uleb128 0x3a
 2124 003c 0B       		.uleb128 0xb
 2125 003d 3B       		.uleb128 0x3b
 2126 003e 05       		.uleb128 0x5
 2127 003f 49       		.uleb128 0x49
 2128 0040 13       		.uleb128 0x13
 2129 0041 00       		.byte	0
 2130 0042 00       		.byte	0
 2131 0043 06       		.uleb128 0x6
 2132 0044 13       		.uleb128 0x13
 2133 0045 01       		.byte	0x1
 2134 0046 03       		.uleb128 0x3
 2135 0047 0E       		.uleb128 0xe
 2136 0048 0B       		.uleb128 0xb
 2137 0049 0B       		.uleb128 0xb
 2138 004a 3A       		.uleb128 0x3a
 2139 004b 0B       		.uleb128 0xb
 2140 004c 3B       		.uleb128 0x3b
 2141 004d 0B       		.uleb128 0xb
 2142 004e 01       		.uleb128 0x1
 2143 004f 13       		.uleb128 0x13
 2144 0050 00       		.byte	0
 2145 0051 00       		.byte	0
 2146 0052 07       		.uleb128 0x7
 2147 0053 0D       		.uleb128 0xd
 2148 0054 00       		.byte	0
 2149 0055 03       		.uleb128 0x3
 2150 0056 0E       		.uleb128 0xe
 2151 0057 3A       		.uleb128 0x3a
 2152 0058 0B       		.uleb128 0xb
 2153 0059 3B       		.uleb128 0x3b
 2154 005a 0B       		.uleb128 0xb
 2155 005b 49       		.uleb128 0x49
 2156 005c 13       		.uleb128 0x13
 2157 005d 38       		.uleb128 0x38
 2158 005e 0B       		.uleb128 0xb
 2159 005f 00       		.byte	0
 2160 0060 00       		.byte	0
 2161 0061 08       		.uleb128 0x8
 2162 0062 2E       		.uleb128 0x2e
 2163 0063 00       		.byte	0
 2164 0064 3F       		.uleb128 0x3f
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 45


 2165 0065 19       		.uleb128 0x19
 2166 0066 03       		.uleb128 0x3
 2167 0067 08       		.uleb128 0x8
 2168 0068 3A       		.uleb128 0x3a
 2169 0069 0B       		.uleb128 0xb
 2170 006a 3B       		.uleb128 0x3b
 2171 006b 0B       		.uleb128 0xb
 2172 006c 27       		.uleb128 0x27
 2173 006d 19       		.uleb128 0x19
 2174 006e 11       		.uleb128 0x11
 2175 006f 01       		.uleb128 0x1
 2176 0070 12       		.uleb128 0x12
 2177 0071 06       		.uleb128 0x6
 2178 0072 40       		.uleb128 0x40
 2179 0073 18       		.uleb128 0x18
 2180 0074 9742     		.uleb128 0x2117
 2181 0076 19       		.uleb128 0x19
 2182 0077 00       		.byte	0
 2183 0078 00       		.byte	0
 2184 0079 09       		.uleb128 0x9
 2185 007a 2E       		.uleb128 0x2e
 2186 007b 01       		.byte	0x1
 2187 007c 3F       		.uleb128 0x3f
 2188 007d 19       		.uleb128 0x19
 2189 007e 03       		.uleb128 0x3
 2190 007f 0E       		.uleb128 0xe
 2191 0080 3A       		.uleb128 0x3a
 2192 0081 0B       		.uleb128 0xb
 2193 0082 3B       		.uleb128 0x3b
 2194 0083 0B       		.uleb128 0xb
 2195 0084 49       		.uleb128 0x49
 2196 0085 13       		.uleb128 0x13
 2197 0086 11       		.uleb128 0x11
 2198 0087 01       		.uleb128 0x1
 2199 0088 12       		.uleb128 0x12
 2200 0089 06       		.uleb128 0x6
 2201 008a 40       		.uleb128 0x40
 2202 008b 18       		.uleb128 0x18
 2203 008c 9642     		.uleb128 0x2116
 2204 008e 19       		.uleb128 0x19
 2205 008f 01       		.uleb128 0x1
 2206 0090 13       		.uleb128 0x13
 2207 0091 00       		.byte	0
 2208 0092 00       		.byte	0
 2209 0093 0A       		.uleb128 0xa
 2210 0094 0B       		.uleb128 0xb
 2211 0095 01       		.byte	0x1
 2212 0096 11       		.uleb128 0x11
 2213 0097 01       		.uleb128 0x1
 2214 0098 12       		.uleb128 0x12
 2215 0099 06       		.uleb128 0x6
 2216 009a 01       		.uleb128 0x1
 2217 009b 13       		.uleb128 0x13
 2218 009c 00       		.byte	0
 2219 009d 00       		.byte	0
 2220 009e 0B       		.uleb128 0xb
 2221 009f 34       		.uleb128 0x34
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 46


 2222 00a0 00       		.byte	0
 2223 00a1 03       		.uleb128 0x3
 2224 00a2 08       		.uleb128 0x8
 2225 00a3 3A       		.uleb128 0x3a
 2226 00a4 0B       		.uleb128 0xb
 2227 00a5 3B       		.uleb128 0x3b
 2228 00a6 0B       		.uleb128 0xb
 2229 00a7 49       		.uleb128 0x49
 2230 00a8 13       		.uleb128 0x13
 2231 00a9 02       		.uleb128 0x2
 2232 00aa 18       		.uleb128 0x18
 2233 00ab 00       		.byte	0
 2234 00ac 00       		.byte	0
 2235 00ad 0C       		.uleb128 0xc
 2236 00ae 0B       		.uleb128 0xb
 2237 00af 01       		.byte	0x1
 2238 00b0 11       		.uleb128 0x11
 2239 00b1 01       		.uleb128 0x1
 2240 00b2 12       		.uleb128 0x12
 2241 00b3 06       		.uleb128 0x6
 2242 00b4 00       		.byte	0
 2243 00b5 00       		.byte	0
 2244 00b6 0D       		.uleb128 0xd
 2245 00b7 34       		.uleb128 0x34
 2246 00b8 00       		.byte	0
 2247 00b9 03       		.uleb128 0x3
 2248 00ba 0E       		.uleb128 0xe
 2249 00bb 3A       		.uleb128 0x3a
 2250 00bc 0B       		.uleb128 0xb
 2251 00bd 3B       		.uleb128 0x3b
 2252 00be 0B       		.uleb128 0xb
 2253 00bf 49       		.uleb128 0x49
 2254 00c0 13       		.uleb128 0x13
 2255 00c1 02       		.uleb128 0x2
 2256 00c2 18       		.uleb128 0x18
 2257 00c3 00       		.byte	0
 2258 00c4 00       		.byte	0
 2259 00c5 0E       		.uleb128 0xe
 2260 00c6 34       		.uleb128 0x34
 2261 00c7 00       		.byte	0
 2262 00c8 03       		.uleb128 0x3
 2263 00c9 0E       		.uleb128 0xe
 2264 00ca 3A       		.uleb128 0x3a
 2265 00cb 0B       		.uleb128 0xb
 2266 00cc 3B       		.uleb128 0x3b
 2267 00cd 05       		.uleb128 0x5
 2268 00ce 49       		.uleb128 0x49
 2269 00cf 13       		.uleb128 0x13
 2270 00d0 3F       		.uleb128 0x3f
 2271 00d1 19       		.uleb128 0x19
 2272 00d2 3C       		.uleb128 0x3c
 2273 00d3 19       		.uleb128 0x19
 2274 00d4 00       		.byte	0
 2275 00d5 00       		.byte	0
 2276 00d6 0F       		.uleb128 0xf
 2277 00d7 35       		.uleb128 0x35
 2278 00d8 00       		.byte	0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 47


 2279 00d9 49       		.uleb128 0x49
 2280 00da 13       		.uleb128 0x13
 2281 00db 00       		.byte	0
 2282 00dc 00       		.byte	0
 2283 00dd 10       		.uleb128 0x10
 2284 00de 34       		.uleb128 0x34
 2285 00df 00       		.byte	0
 2286 00e0 03       		.uleb128 0x3
 2287 00e1 08       		.uleb128 0x8
 2288 00e2 3A       		.uleb128 0x3a
 2289 00e3 0B       		.uleb128 0xb
 2290 00e4 3B       		.uleb128 0x3b
 2291 00e5 0B       		.uleb128 0xb
 2292 00e6 49       		.uleb128 0x49
 2293 00e7 13       		.uleb128 0x13
 2294 00e8 3F       		.uleb128 0x3f
 2295 00e9 19       		.uleb128 0x19
 2296 00ea 02       		.uleb128 0x2
 2297 00eb 18       		.uleb128 0x18
 2298 00ec 00       		.byte	0
 2299 00ed 00       		.byte	0
 2300 00ee 11       		.uleb128 0x11
 2301 00ef 34       		.uleb128 0x34
 2302 00f0 00       		.byte	0
 2303 00f1 03       		.uleb128 0x3
 2304 00f2 0E       		.uleb128 0xe
 2305 00f3 3A       		.uleb128 0x3a
 2306 00f4 0B       		.uleb128 0xb
 2307 00f5 3B       		.uleb128 0x3b
 2308 00f6 0B       		.uleb128 0xb
 2309 00f7 49       		.uleb128 0x49
 2310 00f8 13       		.uleb128 0x13
 2311 00f9 3F       		.uleb128 0x3f
 2312 00fa 19       		.uleb128 0x19
 2313 00fb 02       		.uleb128 0x2
 2314 00fc 18       		.uleb128 0x18
 2315 00fd 00       		.byte	0
 2316 00fe 00       		.byte	0
 2317 00ff 12       		.uleb128 0x12
 2318 0100 01       		.uleb128 0x1
 2319 0101 01       		.byte	0x1
 2320 0102 49       		.uleb128 0x49
 2321 0103 13       		.uleb128 0x13
 2322 0104 01       		.uleb128 0x1
 2323 0105 13       		.uleb128 0x13
 2324 0106 00       		.byte	0
 2325 0107 00       		.byte	0
 2326 0108 13       		.uleb128 0x13
 2327 0109 21       		.uleb128 0x21
 2328 010a 00       		.byte	0
 2329 010b 49       		.uleb128 0x49
 2330 010c 13       		.uleb128 0x13
 2331 010d 2F       		.uleb128 0x2f
 2332 010e 0B       		.uleb128 0xb
 2333 010f 00       		.byte	0
 2334 0110 00       		.byte	0
 2335 0111 14       		.uleb128 0x14
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 48


 2336 0112 21       		.uleb128 0x21
 2337 0113 00       		.byte	0
 2338 0114 49       		.uleb128 0x49
 2339 0115 13       		.uleb128 0x13
 2340 0116 2F       		.uleb128 0x2f
 2341 0117 05       		.uleb128 0x5
 2342 0118 00       		.byte	0
 2343 0119 00       		.byte	0
 2344 011a 00       		.byte	0
 2345              		.section	.debug_aranges,"",%progbits
 2346 0000 24000000 		.4byte	0x24
 2347 0004 0200     		.2byte	0x2
 2348 0006 00000000 		.4byte	.Ldebug_info0
 2349 000a 04       		.byte	0x4
 2350 000b 00       		.byte	0
 2351 000c 0000     		.2byte	0
 2352 000e 0000     		.2byte	0
 2353 0010 00000000 		.4byte	.LFB64
 2354 0014 18000000 		.4byte	.LFE64-.LFB64
 2355 0018 00000000 		.4byte	.LFB65
 2356 001c C0050000 		.4byte	.LFE65-.LFB65
 2357 0020 00000000 		.4byte	0
 2358 0024 00000000 		.4byte	0
 2359              		.section	.debug_ranges,"",%progbits
 2360              	.Ldebug_ranges0:
 2361 0000 00000000 		.4byte	.LFB64
 2362 0004 18000000 		.4byte	.LFE64
 2363 0008 00000000 		.4byte	.LFB65
 2364 000c C0050000 		.4byte	.LFE65
 2365 0010 00000000 		.4byte	0
 2366 0014 00000000 		.4byte	0
 2367              		.section	.debug_line,"",%progbits
 2368              	.Ldebug_line0:
 2369 0000 B8020000 		.section	.debug_str,"MS",%progbits,1
 2369      02005601 
 2369      00000201 
 2369      FB0E0D00 
 2369      01010101 
 2370              	.LASF63:
 2371 0000 54415247 		.ascii	"TARGET_SPEED\000"
 2371      45545F53 
 2371      50454544 
 2371      00
 2372              	.LASF42:
 2373 000d 68696768 		.ascii	"highCountRightIntersection\000"
 2373      436F756E 
 2373      74526967 
 2373      6874496E 
 2373      74657273 
 2374              	.LASF94:
 2375 0028 7475726E 		.ascii	"turnEnable\000"
 2375      456E6162 
 2375      6C6500
 2376              	.LASF97:
 2377 0033 73717561 		.ascii	"squares\000"
 2377      72657300 
 2378              	.LASF96:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 49


 2379 003b 6C617374 		.ascii	"lastAdjustDirection\000"
 2379      41646A75 
 2379      73744469 
 2379      72656374 
 2379      696F6E00 
 2380              	.LASF54:
 2381 004f 666C6167 		.ascii	"flag_packet\000"
 2381      5F706163 
 2381      6B657400 
 2382              	.LASF95:
 2383 005b 7475726E 		.ascii	"turnTimer\000"
 2383      54696D65 
 2383      7200
 2384              	.LASF74:
 2385 0065 76616C75 		.ascii	"valuesLeftLine\000"
 2385      65734C65 
 2385      66744C69 
 2385      6E6500
 2386              	.LASF51:
 2387 0074 666C6167 		.ascii	"flag_ts_speed\000"
 2387      5F74735F 
 2387      73706565 
 2387      6400
 2388              	.LASF33:
 2389 0082 67325F78 		.ascii	"g2_xpos\000"
 2389      706F7300 
 2390              	.LASF2:
 2391 008a 73686F72 		.ascii	"short int\000"
 2391      7420696E 
 2391      7400
 2392              	.LASF77:
 2393 0094 76616C75 		.ascii	"valuesRightLine\000"
 2393      65735269 
 2393      6768744C 
 2393      696E6500 
 2394              	.LASF62:
 2395 00a4 73797374 		.ascii	"system_state\000"
 2395      656D5F73 
 2395      74617465 
 2395      00
 2396              	.LASF10:
 2397 00b1 73697A65 		.ascii	"sizetype\000"
 2397      74797065 
 2397      00
 2398              	.LASF104:
 2399 00ba 6D61696E 		.ascii	"main\000"
 2399      00
 2400              	.LASF61:
 2401 00bf 75736242 		.ascii	"usbBuffer\000"
 2401      75666665 
 2401      7200
 2402              	.LASF100:
 2403 00c9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2403      43313120 
 2403      352E342E 
 2403      31203230 
 2403      31363036 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 50


 2404 00fc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2404      20726576 
 2404      6973696F 
 2404      6E203233 
 2404      37373135 
 2405 012f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2405      66756E63 
 2405      74696F6E 
 2405      2D736563 
 2405      74696F6E 
 2406              	.LASF48:
 2407 0157 74735F64 		.ascii	"ts_display\000"
 2407      6973706C 
 2407      617900
 2408              	.LASF92:
 2409 0162 70726576 		.ascii	"prevTurnState\000"
 2409      5475726E 
 2409      53746174 
 2409      6500
 2410              	.LASF65:
 2411 0170 7475726E 		.ascii	"turningDirection\000"
 2411      696E6744 
 2411      69726563 
 2411      74696F6E 
 2411      00
 2412              	.LASF15:
 2413 0181 75696E74 		.ascii	"uint16\000"
 2413      313600
 2414              	.LASF89:
 2415 0188 64697374 		.ascii	"distancePerSecondL\000"
 2415      616E6365 
 2415      50657253 
 2415      65636F6E 
 2415      644C00
 2416              	.LASF21:
 2417 019b 696E6465 		.ascii	"index\000"
 2417      7800
 2418              	.LASF17:
 2419 01a1 696E7431 		.ascii	"int16\000"
 2419      3600
 2420              	.LASF90:
 2421 01a7 64697374 		.ascii	"distancePerSecondR\000"
 2421      616E6365 
 2421      50657253 
 2421      65636F6E 
 2421      645200
 2422              	.LASF32:
 2423 01ba 67315F64 		.ascii	"g1_direction\000"
 2423      69726563 
 2423      74696F6E 
 2423      00
 2424              	.LASF78:
 2425 01c7 76616C75 		.ascii	"valuesRightIntersection\000"
 2425      65735269 
 2425      67687449 
 2425      6E746572 
 2425      73656374 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 51


 2426              	.LASF59:
 2427 01df 6C696E65 		.ascii	"line\000"
 2427      00
 2428              	.LASF85:
 2429 01e4 6E756D52 		.ascii	"numRotationsL\000"
 2429      6F746174 
 2429      696F6E73 
 2429      4C00
 2430              	.LASF0:
 2431 01f2 7369676E 		.ascii	"signed char\000"
 2431      65642063 
 2431      68617200 
 2432              	.LASF18:
 2433 01fe 666C6F61 		.ascii	"float\000"
 2433      7400
 2434              	.LASF70:
 2435 0204 73746172 		.ascii	"started\000"
 2435      74656400 
 2436              	.LASF31:
 2437 020c 67315F73 		.ascii	"g1_speed\000"
 2437      70656564 
 2437      00
 2438              	.LASF91:
 2439 0215 64697374 		.ascii	"distancePerSecondAvg\000"
 2439      616E6365 
 2439      50657253 
 2439      65636F6E 
 2439      64417667 
 2440              	.LASF102:
 2441 022a 483A5C44 		.ascii	"H:\\Documents\\301\\Post-Benchmark\\team14\\301_lab"
 2441      6F63756D 
 2441      656E7473 
 2441      5C333031 
 2441      5C506F73 
 2442 0258 5F746173 		.ascii	"_tasks\\psoc student pack\\psoc_code_base\\CS301_Cl"
 2442      6B735C70 
 2442      736F6320 
 2442      73747564 
 2442      656E7420 
 2443 0288 6173732E 		.ascii	"ass.cydsn\000"
 2443      63796473 
 2443      6E00
 2444              	.LASF34:
 2445 0292 67325F79 		.ascii	"g2_ypos\000"
 2445      706F7300 
 2446              	.LASF16:
 2447 029a 696E7438 		.ascii	"int8\000"
 2447      00
 2448              	.LASF50:
 2449 029f 666C6167 		.ascii	"flag_ts_update\000"
 2449      5F74735F 
 2449      75706461 
 2449      746500
 2450              	.LASF88:
 2451 02ae 64697374 		.ascii	"distanceTravelled\000"
 2451      616E6365 
 2451      54726176 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 52


 2451      656C6C65 
 2451      6400
 2452              	.LASF28:
 2453 02c0 67305F64 		.ascii	"g0_direction\000"
 2453      69726563 
 2453      74696F6E 
 2453      00
 2454              	.LASF25:
 2455 02cd 67305F78 		.ascii	"g0_xpos\000"
 2455      706F7300 
 2456              	.LASF4:
 2457 02d5 6C6F6E67 		.ascii	"long int\000"
 2457      20696E74 
 2457      00
 2458              	.LASF82:
 2459 02de 6C617374 		.ascii	"lastVeerDirection\000"
 2459      56656572 
 2459      44697265 
 2459      6374696F 
 2459      6E00
 2460              	.LASF68:
 2461 02f0 646F7473 		.ascii	"dotsTravelled\000"
 2461      54726176 
 2461      656C6C65 
 2461      6400
 2462              	.LASF52:
 2463 02fe 666C6167 		.ascii	"flag_ts_display\000"
 2463      5F74735F 
 2463      64697370 
 2463      6C617900 
 2464              	.LASF43:
 2465 030e 63757272 		.ascii	"currentInst\000"
 2465      656E7449 
 2465      6E737400 
 2466              	.LASF76:
 2467 031a 76616C75 		.ascii	"valuesTurnComplete\000"
 2467      65735475 
 2467      726E436F 
 2467      6D706C65 
 2467      746500
 2468              	.LASF30:
 2469 032d 67315F79 		.ascii	"g1_ypos\000"
 2469      706F7300 
 2470              	.LASF9:
 2471 0335 6C6F6E67 		.ascii	"long double\000"
 2471      20646F75 
 2471      626C6500 
 2472              	.LASF60:
 2473 0341 656E7472 		.ascii	"entry\000"
 2473      7900
 2474              	.LASF1:
 2475 0347 756E7369 		.ascii	"unsigned char\000"
 2475      676E6564 
 2475      20636861 
 2475      7200
 2476              	.LASF27:
 2477 0355 67305F73 		.ascii	"g0_speed\000"
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 53


 2477      70656564 
 2477      00
 2478              	.LASF41:
 2479 035e 68696768 		.ascii	"highCountRightLine\000"
 2479      436F756E 
 2479      74526967 
 2479      68744C69 
 2479      6E6500
 2480              	.LASF56:
 2481 0371 64617461 		.ascii	"dataready_flag\000"
 2481      72656164 
 2481      795F666C 
 2481      616700
 2482              	.LASF53:
 2483 0380 666C6167 		.ascii	"flag_rx\000"
 2483      5F727800 
 2484              	.LASF7:
 2485 0388 6C6F6E67 		.ascii	"long long unsigned int\000"
 2485      206C6F6E 
 2485      6720756E 
 2485      7369676E 
 2485      65642069 
 2486              	.LASF8:
 2487 039f 756E7369 		.ascii	"unsigned int\000"
 2487      676E6564 
 2487      20696E74 
 2487      00
 2488              	.LASF55:
 2489 03ac 666C6167 		.ascii	"flag_KB_string\000"
 2489      5F4B425F 
 2489      73747269 
 2489      6E6700
 2490              	.LASF69:
 2491 03bb 636F6E73 		.ascii	"consecStops\000"
 2491      65635374 
 2491      6F707300 
 2492              	.LASF35:
 2493 03c7 67325F73 		.ascii	"g2_speed\000"
 2493      70656564 
 2493      00
 2494              	.LASF87:
 2495 03d0 7475726E 		.ascii	"turnCount\000"
 2495      436F756E 
 2495      7400
 2496              	.LASF29:
 2497 03da 67315F78 		.ascii	"g1_xpos\000"
 2497      706F7300 
 2498              	.LASF64:
 2499 03e2 72657374 		.ascii	"restoring\000"
 2499      6F72696E 
 2499      6700
 2500              	.LASF39:
 2501 03ec 68696768 		.ascii	"highCountMiddleLine\000"
 2501      436F756E 
 2501      744D6964 
 2501      646C654C 
 2501      696E6500 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 54


 2502              	.LASF75:
 2503 0400 76616C75 		.ascii	"valuesMiddleLine\000"
 2503      65734D69 
 2503      64646C65 
 2503      4C696E65 
 2503      00
 2504              	.LASF103:
 2505 0411 64617461 		.ascii	"data_main\000"
 2505      5F6D6169 
 2505      6E00
 2506              	.LASF11:
 2507 041b 63686172 		.ascii	"char\000"
 2507      00
 2508              	.LASF99:
 2509 0420 64697374 		.ascii	"distance\000"
 2509      616E6365 
 2509      00
 2510              	.LASF22:
 2511 0429 726F626F 		.ascii	"robot_xpos\000"
 2511      745F7870 
 2511      6F7300
 2512              	.LASF13:
 2513 0434 696E7433 		.ascii	"int32_t\000"
 2513      325F7400 
 2514              	.LASF72:
 2515 043c 666C6167 		.ascii	"flag\000"
 2515      00
 2516              	.LASF36:
 2517 0441 67325F64 		.ascii	"g2_direction\000"
 2517      69726563 
 2517      74696F6E 
 2517      00
 2518              	.LASF3:
 2519 044e 73686F72 		.ascii	"short unsigned int\000"
 2519      7420756E 
 2519      7369676E 
 2519      65642069 
 2519      6E7400
 2520              	.LASF67:
 2521 0461 73686F75 		.ascii	"shouldUpdate\000"
 2521      6C645570 
 2521      64617465 
 2521      00
 2522              	.LASF14:
 2523 046e 75696E74 		.ascii	"uint8\000"
 2523      3800
 2524              	.LASF73:
 2525 0474 76616C75 		.ascii	"valuesLeftIntersection\000"
 2525      65734C65 
 2525      6674496E 
 2525      74657273 
 2525      65637469 
 2526              	.LASF58:
 2527 048b 64697370 		.ascii	"displaystring\000"
 2527      6C617973 
 2527      7472696E 
 2527      6700
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 55


 2528              	.LASF38:
 2529 0499 68696768 		.ascii	"highCountLeftLine\000"
 2529      436F756E 
 2529      744C6566 
 2529      744C696E 
 2529      6500
 2530              	.LASF101:
 2531 04ab 6D61696E 		.ascii	"main.c\000"
 2531      2E6300
 2532              	.LASF5:
 2533 04b2 6C6F6E67 		.ascii	"long unsigned int\000"
 2533      20756E73 
 2533      69676E65 
 2533      6420696E 
 2533      7400
 2534              	.LASF19:
 2535 04c4 646F7562 		.ascii	"double\000"
 2535      6C6500
 2536              	.LASF81:
 2537 04cb 7475726E 		.ascii	"turningRight\000"
 2537      696E6752 
 2537      69676874 
 2537      00
 2538              	.LASF44:
 2539 04d8 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2539      52784275 
 2539      66666572 
 2539      00
 2540              	.LASF83:
 2541 04e5 6D6F746F 		.ascii	"motorFlag\000"
 2541      72466C61 
 2541      6700
 2542              	.LASF66:
 2543 04ef 7475726E 		.ascii	"turningCount\000"
 2543      696E6743 
 2543      6F756E74 
 2543      00
 2544              	.LASF71:
 2545 04fc 696E7374 		.ascii	"instCounter\000"
 2545      436F756E 
 2545      74657200 
 2546              	.LASF79:
 2547 0508 636F756E 		.ascii	"count\000"
 2547      7400
 2548              	.LASF49:
 2549 050e 666C6167 		.ascii	"flag_ts_enc\000"
 2549      5F74735F 
 2549      656E6300 
 2550              	.LASF12:
 2551 051a 5F5F696E 		.ascii	"__int32_t\000"
 2551      7433325F 
 2551      7400
 2552              	.LASF26:
 2553 0524 67305F79 		.ascii	"g0_ypos\000"
 2553      706F7300 
 2554              	.LASF24:
 2555 052c 726F626F 		.ascii	"robot_orientation\000"
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 56


 2555      745F6F72 
 2555      69656E74 
 2555      6174696F 
 2555      6E00
 2556              	.LASF80:
 2557 053e 7475726E 		.ascii	"turningLeft\000"
 2557      696E674C 
 2557      65667400 
 2558              	.LASF47:
 2559 054a 74735F73 		.ascii	"ts_speed\000"
 2559      70656564 
 2559      00
 2560              	.LASF45:
 2561 0553 74735F65 		.ascii	"ts_enc\000"
 2561      6E6300
 2562              	.LASF46:
 2563 055a 74735F75 		.ascii	"ts_update\000"
 2563      70646174 
 2563      6500
 2564              	.LASF93:
 2565 0564 7475726E 		.ascii	"turnState\000"
 2565      53746174 
 2565      6500
 2566              	.LASF57:
 2567 056e 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2567      5F72665F 
 2567      7472616E 
 2567      736D6973 
 2567      73696F6E 
 2568              	.LASF23:
 2569 058a 726F626F 		.ascii	"robot_ypos\000"
 2569      745F7970 
 2569      6F7300
 2570              	.LASF98:
 2571 0595 696E7374 		.ascii	"instruction\000"
 2571      72756374 
 2571      696F6E00 
 2572              	.LASF40:
 2573 05a1 68696768 		.ascii	"highCountTurnComplete\000"
 2573      436F756E 
 2573      74547572 
 2573      6E436F6D 
 2573      706C6574 
 2574              	.LASF86:
 2575 05b7 6E756D52 		.ascii	"numRotationsR\000"
 2575      6F746174 
 2575      696F6E73 
 2575      5200
 2576              	.LASF84:
 2577 05c5 73746570 		.ascii	"step\000"
 2577      00
 2578              	.LASF37:
 2579 05ca 68696768 		.ascii	"highCountLeftIntersection\000"
 2579      436F756E 
 2579      744C6566 
 2579      74496E74 
 2579      65727365 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\cccxb8JK.s 			page 57


 2580              	.LASF20:
 2581 05e4 72737369 		.ascii	"rssi\000"
 2581      00
 2582              	.LASF6:
 2583 05e9 6C6F6E67 		.ascii	"long long int\000"
 2583      206C6F6E 
 2583      6720696E 
 2583      7400
 2584              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
