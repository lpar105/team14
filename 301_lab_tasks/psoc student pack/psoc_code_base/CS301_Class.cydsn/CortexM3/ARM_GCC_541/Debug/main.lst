ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	TARGET_SPEED
 107              		.align	2
 108              		.type	TARGET_SPEED, %object
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 3


 109              		.size	TARGET_SPEED, 4
 110              	TARGET_SPEED:
 111 0044 00007041 		.word	1097859072
 112              		.global	restoring
 113              		.align	2
 114              		.type	restoring, %object
 115              		.size	restoring, 4
 116              	restoring:
 117 0048 1E000000 		.word	30
 118              		.global	turningDirection
 119              		.bss
 120 0012 0000     		.align	2
 121              		.type	turningDirection, %object
 122              		.size	turningDirection, 4
 123              	turningDirection:
 124 0014 00000000 		.space	4
 125              		.global	turningCount
 126              		.data
 127              		.align	2
 128              		.type	turningCount, %object
 129              		.size	turningCount, 4
 130              	turningCount:
 131 004c 1E000000 		.word	30
 132              		.global	shouldUpdate
 133              		.align	2
 134              		.type	shouldUpdate, %object
 135              		.size	shouldUpdate, 4
 136              	shouldUpdate:
 137 0050 01000000 		.word	1
 138              		.global	dotsTravelled
 139              		.bss
 140              		.align	2
 141              		.type	dotsTravelled, %object
 142              		.size	dotsTravelled, 4
 143              	dotsTravelled:
 144 0018 00000000 		.space	4
 145              		.global	flag
 146              		.align	2
 147              		.type	flag, %object
 148              		.size	flag, 4
 149              	flag:
 150 001c 00000000 		.space	4
 151              		.comm	valuesLeftIntersection,4000,4
 152              		.comm	valuesLeftLine,4000,4
 153              		.comm	valuesMiddleLine,4000,4
 154              		.comm	valuesTurnComplete,4000,4
 155              		.comm	valuesRightLine,4000,4
 156              		.comm	valuesRightIntersection,4000,4
 157              		.global	count
 158              		.align	2
 159              		.type	count, %object
 160              		.size	count, 4
 161              	count:
 162 0020 00000000 		.space	4
 163              		.global	turningLeft
 164              		.align	2
 165              		.type	turningLeft, %object
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 4


 166              		.size	turningLeft, 4
 167              	turningLeft:
 168 0024 00000000 		.space	4
 169              		.global	turningRight
 170              		.align	2
 171              		.type	turningRight, %object
 172              		.size	turningRight, 4
 173              	turningRight:
 174 0028 00000000 		.space	4
 175              		.global	lastVeerDirection
 176              		.align	2
 177              		.type	lastVeerDirection, %object
 178              		.size	lastVeerDirection, 4
 179              	lastVeerDirection:
 180 002c 00000000 		.space	4
 181              		.global	motorFlag
 182              		.align	2
 183              		.type	motorFlag, %object
 184              		.size	motorFlag, 4
 185              	motorFlag:
 186 0030 00000000 		.space	4
 187              		.global	step
 188              		.align	2
 189              		.type	step, %object
 190              		.size	step, 4
 191              	step:
 192 0034 00000000 		.space	4
 193              		.comm	v1L,4,4
 194              		.comm	v2L,4,4
 195              		.comm	v1R,4,4
 196              		.comm	v2R,4,4
 197              		.comm	numRotationsL,4,4
 198              		.comm	numRotationsR,4,4
 199              		.comm	turnCount,4,4
 200              		.global	distanceTravelled
 201              		.align	2
 202              		.type	distanceTravelled, %object
 203              		.size	distanceTravelled, 4
 204              	distanceTravelled:
 205 0038 00000000 		.space	4
 206              		.global	distancePerSecondL
 207              		.align	2
 208              		.type	distancePerSecondL, %object
 209              		.size	distancePerSecondL, 4
 210              	distancePerSecondL:
 211 003c 00000000 		.space	4
 212              		.global	distancePerSecondR
 213              		.align	2
 214              		.type	distancePerSecondR, %object
 215              		.size	distancePerSecondR, 4
 216              	distancePerSecondR:
 217 0040 00000000 		.space	4
 218              		.global	distancePerSecondAvg
 219              		.align	2
 220              		.type	distancePerSecondAvg, %object
 221              		.size	distancePerSecondAvg, 4
 222              	distancePerSecondAvg:
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 5


 223 0044 00000000 		.space	4
 224              		.global	prevTurnState
 225              		.align	2
 226              		.type	prevTurnState, %object
 227              		.size	prevTurnState, 4
 228              	prevTurnState:
 229 0048 00000000 		.space	4
 230              		.global	turnState
 231              		.align	2
 232              		.type	turnState, %object
 233              		.size	turnState, 4
 234              	turnState:
 235 004c 00000000 		.space	4
 236              		.global	turnEnable
 237              		.align	2
 238              		.type	turnEnable, %object
 239              		.size	turnEnable, 4
 240              	turnEnable:
 241 0050 00000000 		.space	4
 242              		.global	turnTimer
 243              		.align	2
 244              		.type	turnTimer, %object
 245              		.size	turnTimer, 4
 246              	turnTimer:
 247 0054 00000000 		.space	4
 248              		.global	lastAdjustDirection
 249              		.align	2
 250              		.type	lastAdjustDirection, %object
 251              		.size	lastAdjustDirection, 4
 252              	lastAdjustDirection:
 253 0058 00000000 		.space	4
 254              		.section	.text.eoc,"ax",%progbits
 255              		.align	2
 256              		.global	eoc
 257              		.thumb
 258              		.thumb_func
 259              		.type	eoc, %function
 260              	eoc:
 261              	.LFB64:
 262              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 6


  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** #include "pathfind.h"
  30:main.c        **** 
  31:main.c        **** #include "vars.h"
  32:main.c        **** 
  33:main.c        **** #define ADC_COUNT 1000
  34:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 150
  35:main.c        **** #define R_INT_BLACK highCountRightIntersection < 150
  36:main.c        **** #define L_LINE_BLACK highCountLeftLine < 150
  37:main.c        **** #define R_LINE_BLACK highCountRightLine < 150
  38:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 150
  39:main.c        **** #define TC_BLACK highCountTurnComplete < 150
  40:main.c        **** float TARGET_SPEED = 15; //speed in cm^-1
  41:main.c        **** int restoring = 30;
  42:main.c        **** int turningDirection = 0;
  43:main.c        **** int turningCount = 30;
  44:main.c        **** volatile int shouldUpdate = 1;
  45:main.c        **** #define MOVE_DISTANCE 9999999 //cm
  46:main.c        **** volatile int dotsTravelled = 0;
  47:main.c        **** //* ========================================
  48:main.c        **** void usbPutString(char * s);
  49:main.c        **** void usbPutChar(char c);
  50:main.c        **** void printSensorDebug(int highCountLeftIntersection, int highCountLeftLine, int highCountMiddleLine
  51:main.c        **** //* ========================================
  52:main.c        **** 
  53:main.c        **** volatile int flag = 0;
  54:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  55:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  56:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  57:main.c        **** volatile int valuesTurnComplete[ADC_COUNT];
  58:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  59:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  60:main.c        **** volatile int count = 0;
  61:main.c        **** volatile int turningLeft = 0;
  62:main.c        **** volatile int turningRight = 0;
  63:main.c        **** volatile int lastVeerDirection = 0;
  64:main.c        **** 
  65:main.c        **** volatile int motorFlag = 0;
  66:main.c        **** volatile int step = 0; // are we on first measuring step or second step?
  67:main.c        **** volatile int v1L; // allocating storage for measure number of holes (ahead) - LEFT WHEEL
  68:main.c        **** volatile int v2L; // allocating storage for measure number of holes (behind) - LEFT WHEEL
  69:main.c        **** volatile int v1R; // allocating storage for measure number of holes (ahead) - RIGHT WHEEL
  70:main.c        **** volatile int v2R; // allocating storage for measure number of holes (behind) - RIGHT WHEEL
  71:main.c        **** volatile int numRotationsL; //
  72:main.c        **** volatile int numRotationsR; //
  73:main.c        **** volatile int turnCount;
  74:main.c        **** volatile int distanceTravelled = 0;
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 7


  75:main.c        **** volatile int distancePerSecondL = 0;
  76:main.c        **** volatile int distancePerSecondR = 0;
  77:main.c        **** volatile int distancePerSecondAvg = 0;
  78:main.c        **** volatile int prevTurnState = 0;
  79:main.c        **** volatile int turnState = 0;
  80:main.c        **** volatile int turnEnable = 0;
  81:main.c        **** volatile int turnTimer = 0;
  82:main.c        **** int lastAdjustDirection = 0;
  83:main.c        **** 
  84:main.c        **** CY_ISR(eoc) {
 263              		.loc 1 84 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268 0000 80B4     		push	{r7}
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 7, -4
 271 0002 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
  85:main.c        ****   flag = 1;
 273              		.loc 1 85 0
 274 0004 034B     		ldr	r3, .L2
 275 0006 0122     		movs	r2, #1
 276 0008 1A60     		str	r2, [r3]
  86:main.c        **** }
 277              		.loc 1 86 0
 278 000a 00BF     		nop
 279 000c BD46     		mov	sp, r7
 280              		.cfi_def_cfa_register 13
 281              		@ sp needed
 282 000e 80BC     		pop	{r7}
 283              		.cfi_restore 7
 284              		.cfi_def_cfa_offset 0
 285 0010 7047     		bx	lr
 286              	.L3:
 287 0012 00BF     		.align	2
 288              	.L2:
 289 0014 00000000 		.word	flag
 290              		.cfi_endproc
 291              	.LFE64:
 292              		.size	eoc, .-eoc
 293              		.section	.text.MyISR,"ax",%progbits
 294              		.align	2
 295              		.global	MyISR
 296              		.thumb
 297              		.thumb_func
 298              		.type	MyISR, %function
 299              	MyISR:
 300              	.LFB65:
  87:main.c        **** 
  88:main.c        **** CY_ISR(MyISR) {
 301              		.loc 1 88 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305              		@ link register save eliminated.
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 8


 306 0000 80B4     		push	{r7}
 307              		.cfi_def_cfa_offset 4
 308              		.cfi_offset 7, -4
 309 0002 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
  89:main.c        ****   motorFlag = 1;
 311              		.loc 1 89 0
 312 0004 034B     		ldr	r3, .L5
 313 0006 0122     		movs	r2, #1
 314 0008 1A60     		str	r2, [r3]
  90:main.c        **** }
 315              		.loc 1 90 0
 316 000a 00BF     		nop
 317 000c BD46     		mov	sp, r7
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 000e 80BC     		pop	{r7}
 321              		.cfi_restore 7
 322              		.cfi_def_cfa_offset 0
 323 0010 7047     		bx	lr
 324              	.L6:
 325 0012 00BF     		.align	2
 326              	.L5:
 327 0014 00000000 		.word	motorFlag
 328              		.cfi_endproc
 329              	.LFE65:
 330              		.size	MyISR, .-MyISR
 331              		.section	.rodata
 332              		.align	2
 333              	.LC1:
 334 0000 53746172 		.ascii	"Starting Pathfind\015\012\000"
 334      74696E67 
 334      20506174 
 334      6866696E 
 334      640D0A00 
 335              		.align	2
 336              	.LC2:
 337 0014 53515541 		.ascii	"SQUARES\015\012\000"
 337      5245530D 
 337      0A00
 338 001e 0000     		.align	2
 339              	.LC3:
 340 0020 25752025 		.ascii	"%u %u \015\012\000"
 340      75200D0A 
 340      00
 341 0029 000000   		.align	2
 342              	.LC4:
 343 002c 494E5354 		.ascii	"INSTRUCTIONS - DISTANCES\015\012\000"
 343      52554354 
 343      494F4E53 
 343      202D2044 
 343      49535441 
 344 0047 00       		.align	2
 345              	.LC5:
 346 0048 2575202D 		.ascii	"%u - %u \015\012\000"
 346      20257520 
 346      0D0A00
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 9


 347 0053 00       		.align	2
 348              	.LC6:
 349 0054 2575202D 		.ascii	"%u - %u FALSE %u \015\012\000"
 349      20257520 
 349      46414C53 
 349      45202575 
 349      200D0A00 
 350              		.global	__aeabi_i2f
 351              		.global	__aeabi_fmul
 352              		.global	__aeabi_f2iz
 353              		.align	2
 354              	.LC0:
 355 0068 04000000 		.word	4
 356 006c 02000000 		.word	2
 357 0070 02000000 		.word	2
 358 0074 02000000 		.word	2
 359 0078 02000000 		.word	2
 360 007c 02000000 		.word	2
 361 0080 02000000 		.word	2
 362 0084 02000000 		.word	2
 363 0088 02000000 		.word	2
 364 008c 02000000 		.word	2
 365 0090 02000000 		.word	2
 366 0094 01000000 		.word	1
 367 0098 02000000 		.word	2
 368 009c 04000000 		.word	4
 369 00a0 01000000 		.word	1
 370 00a4 02000000 		.word	2
 371 00a8 06000000 		.word	6
 372 00ac 02000000 		.word	2
 373 00b0 06000000 		.word	6
 374 00b4 02000000 		.word	2
 375 00b8 04000000 		.word	4
 376 00bc 04000000 		.word	4
 377 00c0 02000000 		.word	2
 378 00c4 06000000 		.word	6
 379 00c8 02000000 		.word	2
 380 00cc 02000000 		.word	2
 381 00d0 02000000 		.word	2
 382 00d4 04000000 		.word	4
 383 00d8 02000000 		.word	2
 384 00dc 00000000 		.word	0
 385 00e0 00000000 		.word	0
 386 00e4 00000000 		.word	0
 387 00e8 00000000 		.word	0
 388 00ec 00000000 		.word	0
 389 00f0 00000000 		.word	0
 390              		.section	.text.main,"ax",%progbits
 391              		.align	2
 392              		.global	main
 393              		.thumb
 394              		.thumb_func
 395              		.type	main, %function
 396              	main:
 397              	.LFB66:
  91:main.c        **** 
  92:main.c        **** int main() {
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 10


 398              		.loc 1 92 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 2232
 401              		@ frame_needed = 1, uses_anonymous_args = 0
 402 0000 90B5     		push	{r4, r7, lr}
 403              		.cfi_def_cfa_offset 12
 404              		.cfi_offset 4, -12
 405              		.cfi_offset 7, -8
 406              		.cfi_offset 14, -4
 407 0002 ADF6C40D 		subw	sp, sp, #2244
 408              		.cfi_def_cfa_offset 2256
 409 0006 02AF     		add	r7, sp, #8
 410              		.cfi_def_cfa 7, 2248
  93:main.c        **** 
  94:main.c        ****   // --------------------------------    
  95:main.c        ****   // ----- INITIALIZATIONS ----------
  96:main.c        ****   CYGlobalIntEnable;
 411              		.loc 1 96 0
 412              		.syntax unified
 413              	@ 96 "main.c" 1
 414 0008 62B6     		CPSIE   i
 415              	@ 0 "" 2
  97:main.c        **** 
  98:main.c        ****   // ------USB SETUP ----------------    
  99:main.c        **** 
 100:main.c        ****   USBUART_Start(0, USBUART_5V_OPERATION);
 416              		.loc 1 100 0
 417              		.thumb
 418              		.syntax unified
 419 000a 0121     		movs	r1, #1
 420 000c 0020     		movs	r0, #0
 421 000e FFF7FEFF 		bl	USBUART_Start
 101:main.c        ****   UART_Start();
 422              		.loc 1 101 0
 423 0012 FFF7FEFF 		bl	UART_Start
 102:main.c        **** 
 103:main.c        ****   QuadDec_M1_Start();
 424              		.loc 1 103 0
 425 0016 FFF7FEFF 		bl	QuadDec_M1_Start
 104:main.c        ****   QuadDec_M2_Start();
 426              		.loc 1 104 0
 427 001a FFF7FEFF 		bl	QuadDec_M2_Start
 105:main.c        **** 
 106:main.c        ****   isr_TS_StartEx(MyISR);
 428              		.loc 1 106 0
 429 001e C748     		ldr	r0, .L66
 430 0020 FFF7FEFF 		bl	isr_TS_StartEx
 107:main.c        **** 
 108:main.c        ****   RF_BT_SELECT_Write(1);
 431              		.loc 1 108 0
 432 0024 0120     		movs	r0, #1
 433 0026 FFF7FEFF 		bl	RF_BT_SELECT_Write
 109:main.c        **** 
 110:main.c        ****   ADC_Start();
 434              		.loc 1 110 0
 435 002a FFF7FEFF 		bl	ADC_Start
 111:main.c        ****   ADC_StartConvert();
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 11


 436              		.loc 1 111 0
 437 002e FFF7FEFF 		bl	ADC_StartConvert
 112:main.c        ****   eoc_StartEx(eoc);
 438              		.loc 1 112 0
 439 0032 C348     		ldr	r0, .L66+4
 440 0034 FFF7FEFF 		bl	eoc_StartEx
 113:main.c        **** 
 114:main.c        ****   initMotors();
 441              		.loc 1 114 0
 442 0038 FFF7FEFF 		bl	initMotors
 115:main.c        **** 
 116:main.c        ****   stop();
 443              		.loc 1 116 0
 444 003c FFF7FEFF 		bl	stop
 117:main.c        **** 
 118:main.c        ****   isr_TS_StartEx(MyISR);
 445              		.loc 1 118 0
 446 0040 BE48     		ldr	r0, .L66
 447 0042 FFF7FEFF 		bl	isr_TS_StartEx
 119:main.c        ****   Timer_TS_Start();
 448              		.loc 1 119 0
 449 0046 FFF7FEFF 		bl	Timer_TS_Start
 450              	.LBB2:
 120:main.c        **** 
 121:main.c        ****   unsigned char squares[500][2];
 122:main.c        **** 
 123:main.c        ****   unsigned char instruction[500];
 124:main.c        ****   unsigned char distance[500];
 125:main.c        **** 
 126:main.c        **** // Loop through the arrays and set each element to 55 or 0
 127:main.c        ****     for (int i = 0; i < 500; i++) {
 451              		.loc 1 127 0
 452 004a 0023     		movs	r3, #0
 453 004c C7F8B438 		str	r3, [r7, #2228]
 454 0050 21E0     		b	.L8
 455              	.L9:
 128:main.c        ****         squares[i][0] = 55;
 456              		.loc 1 128 0 discriminator 3
 457 0052 07F59363 		add	r3, r7, #1176
 458 0056 D7F8B428 		ldr	r2, [r7, #2228]
 459 005a 3721     		movs	r1, #55
 460 005c 03F81210 		strb	r1, [r3, r2, lsl #1]
 129:main.c        ****         squares[i][1] = 55;
 461              		.loc 1 129 0 discriminator 3
 462 0060 07F59362 		add	r2, r7, #1176
 463 0064 D7F8B438 		ldr	r3, [r7, #2228]
 464 0068 5B00     		lsls	r3, r3, #1
 465 006a 1344     		add	r3, r3, r2
 466 006c 3722     		movs	r2, #55
 467 006e 5A70     		strb	r2, [r3, #1]
 130:main.c        ****         instruction[i] = 0;
 468              		.loc 1 130 0 discriminator 3
 469 0070 07F52972 		add	r2, r7, #676
 470 0074 D7F8B438 		ldr	r3, [r7, #2228]
 471 0078 1344     		add	r3, r3, r2
 472 007a 0022     		movs	r2, #0
 473 007c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 12


 131:main.c        ****         distance[i] = 0;
 474              		.loc 1 131 0 discriminator 3
 475 007e 07F1B002 		add	r2, r7, #176
 476 0082 D7F8B438 		ldr	r3, [r7, #2228]
 477 0086 1344     		add	r3, r3, r2
 478 0088 0022     		movs	r2, #0
 479 008a 1A70     		strb	r2, [r3]
 127:main.c        ****         squares[i][0] = 55;
 480              		.loc 1 127 0 discriminator 3
 481 008c D7F8B438 		ldr	r3, [r7, #2228]
 482 0090 0133     		adds	r3, r3, #1
 483 0092 C7F8B438 		str	r3, [r7, #2228]
 484              	.L8:
 127:main.c        ****         squares[i][0] = 55;
 485              		.loc 1 127 0 is_stmt 0 discriminator 1
 486 0096 D7F8B438 		ldr	r3, [r7, #2228]
 487 009a B3F5FA7F 		cmp	r3, #500
 488 009e D8DB     		blt	.L9
 489              	.LBE2:
 132:main.c        ****     }
 133:main.c        **** 
 134:main.c        **** 
 135:main.c        **** 
 136:main.c        ****   CyDelay(4000);
 490              		.loc 1 136 0 is_stmt 1
 491 00a0 4FF47A60 		mov	r0, #4000
 492 00a4 FFF7FEFF 		bl	CyDelay
 137:main.c        ****   usbPutString("Starting Pathfind\r\n");
 493              		.loc 1 137 0
 494 00a8 A648     		ldr	r0, .L66+8
 495 00aa FFF7FEFF 		bl	usbPutString
 138:main.c        ****   pathfind(instruction, distance, squares);
 496              		.loc 1 138 0
 497 00ae 07F59362 		add	r2, r7, #1176
 498 00b2 07F1B001 		add	r1, r7, #176
 499 00b6 07F52973 		add	r3, r7, #676
 500 00ba 1846     		mov	r0, r3
 501 00bc FFF7FEFF 		bl	pathfind
 139:main.c        **** 
 140:main.c        ****     usbPutString("SQUARES\r\n");
 502              		.loc 1 140 0
 503 00c0 A148     		ldr	r0, .L66+12
 504 00c2 FFF7FEFF 		bl	usbPutString
 505              	.LBB3:
 141:main.c        ****     for (int i = 0; i < 500; i++) {
 506              		.loc 1 141 0
 507 00c6 0023     		movs	r3, #0
 508 00c8 C7F8B038 		str	r3, [r7, #2224]
 509 00cc 27E0     		b	.L10
 510              	.L12:
 142:main.c        ****         if (squares[i][0] != 55) {
 511              		.loc 1 142 0
 512 00ce 07F59363 		add	r3, r7, #1176
 513 00d2 D7F8B028 		ldr	r2, [r7, #2224]
 514 00d6 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 515 00da 372B     		cmp	r3, #55
 516 00dc 1AD0     		beq	.L11
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 13


 517              	.LBB4:
 143:main.c        ****             char squareStr[10]; 
 144:main.c        ****             snprintf(squareStr, sizeof(squareStr), "%u %u \r\n", (unsigned char)squares[i][0], (uns
 518              		.loc 1 144 0
 519 00de 07F59363 		add	r3, r7, #1176
 520 00e2 D7F8B028 		ldr	r2, [r7, #2224]
 521 00e6 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 522 00ea 1946     		mov	r1, r3
 523 00ec 07F59362 		add	r2, r7, #1176
 524 00f0 D7F8B038 		ldr	r3, [r7, #2224]
 525 00f4 5B00     		lsls	r3, r3, #1
 526 00f6 1344     		add	r3, r3, r2
 527 00f8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 528 00fa 07F11800 		add	r0, r7, #24
 529 00fe 0093     		str	r3, [sp]
 530 0100 0B46     		mov	r3, r1
 531 0102 924A     		ldr	r2, .L66+16
 532 0104 0A21     		movs	r1, #10
 533 0106 FFF7FEFF 		bl	snprintf
 145:main.c        ****             usbPutString(squareStr);
 534              		.loc 1 145 0
 535 010a 07F11803 		add	r3, r7, #24
 536 010e 1846     		mov	r0, r3
 537 0110 FFF7FEFF 		bl	usbPutString
 538              	.L11:
 539              	.LBE4:
 141:main.c        ****         if (squares[i][0] != 55) {
 540              		.loc 1 141 0 discriminator 2
 541 0114 D7F8B038 		ldr	r3, [r7, #2224]
 542 0118 0133     		adds	r3, r3, #1
 543 011a C7F8B038 		str	r3, [r7, #2224]
 544              	.L10:
 141:main.c        ****         if (squares[i][0] != 55) {
 545              		.loc 1 141 0 is_stmt 0 discriminator 1
 546 011e D7F8B038 		ldr	r3, [r7, #2224]
 547 0122 B3F5FA7F 		cmp	r3, #500
 548 0126 D2DB     		blt	.L12
 549              	.LBE3:
 146:main.c        ****         }
 147:main.c        ****     }
 148:main.c        ****     
 149:main.c        **** usbPutString("INSTRUCTIONS - DISTANCES\r\n");
 550              		.loc 1 149 0 is_stmt 1
 551 0128 8948     		ldr	r0, .L66+20
 552 012a FFF7FEFF 		bl	usbPutString
 150:main.c        **** // Print all instructions
 151:main.c        ****     int started = 0;
 553              		.loc 1 151 0
 554 012e 0023     		movs	r3, #0
 555 0130 C7F8AC38 		str	r3, [r7, #2220]
 152:main.c        ****     int consecStops = 0;
 556              		.loc 1 152 0
 557 0134 0023     		movs	r3, #0
 558 0136 C7F8A838 		str	r3, [r7, #2216]
 153:main.c        ****     int desired[] = {4,2,2,2,2,2,2,2,2,2,2,1,2,4,1,2,6,2,6,2,4,4,2,6,2,2,2,4,2,0,0,0,0,0,0};
 559              		.loc 1 153 0
 560 013a 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 14


 561 013e 854A     		ldr	r2, .L66+24
 562 0140 1846     		mov	r0, r3
 563 0142 1146     		mov	r1, r2
 564 0144 8C23     		movs	r3, #140
 565 0146 1A46     		mov	r2, r3
 566 0148 FFF7FEFF 		bl	memcpy
 154:main.c        ****     int d = 0;
 567              		.loc 1 154 0
 568 014c 0023     		movs	r3, #0
 569 014e C7F8A438 		str	r3, [r7, #2212]
 570              	.LBB5:
 155:main.c        **** 
 156:main.c        ****     for (int i = 0; i < 500; i++) {
 571              		.loc 1 156 0
 572 0152 0023     		movs	r3, #0
 573 0154 C7F8A038 		str	r3, [r7, #2208]
 574 0158 75E0     		b	.L13
 575              	.L21:
 157:main.c        ****         if (instruction[i] == 0 && (started == 0 || consecStops >= 6)) {
 576              		.loc 1 157 0
 577 015a 07F52972 		add	r2, r7, #676
 578 015e D7F8A038 		ldr	r3, [r7, #2208]
 579 0162 1344     		add	r3, r3, r2
 580 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 581 0166 002B     		cmp	r3, #0
 582 0168 07D1     		bne	.L14
 583              		.loc 1 157 0 is_stmt 0 discriminator 1
 584 016a D7F8AC38 		ldr	r3, [r7, #2220]
 585 016e 002B     		cmp	r3, #0
 586 0170 63D0     		beq	.L65
 587              		.loc 1 157 0 discriminator 2
 588 0172 D7F8A838 		ldr	r3, [r7, #2216]
 589 0176 052B     		cmp	r3, #5
 590 0178 5FDC     		bgt	.L65
 591              	.L14:
 592              	.LBB6:
 158:main.c        ****         } else {
 159:main.c        ****             started = 4;
 593              		.loc 1 159 0 is_stmt 1
 594 017a 0423     		movs	r3, #4
 595 017c C7F8AC38 		str	r3, [r7, #2220]
 160:main.c        ****             char instStr[24]; 
 161:main.c        ****             if ((unsigned char) distance[i] == (unsigned char)desired[d]) {
 596              		.loc 1 161 0
 597 0180 07F1B002 		add	r2, r7, #176
 598 0184 D7F8A038 		ldr	r3, [r7, #2208]
 599 0188 1344     		add	r3, r3, r2
 600 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 601 018c 1946     		mov	r1, r3
 602 018e 07F12403 		add	r3, r7, #36
 603 0192 D7F8A428 		ldr	r2, [r7, #2212]
 604 0196 53F82230 		ldr	r3, [r3, r2, lsl #2]
 605 019a DBB2     		uxtb	r3, r3
 606 019c 9942     		cmp	r1, r3
 607 019e 14D1     		bne	.L17
 162:main.c        ****             snprintf(instStr, sizeof(instStr), "%u - %u \r\n", (unsigned char)instruction[i], (unsi
 608              		.loc 1 162 0
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 15


 609 01a0 07F52972 		add	r2, r7, #676
 610 01a4 D7F8A038 		ldr	r3, [r7, #2208]
 611 01a8 1344     		add	r3, r3, r2
 612 01aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 613 01ac 1946     		mov	r1, r3
 614 01ae 07F1B002 		add	r2, r7, #176
 615 01b2 D7F8A038 		ldr	r3, [r7, #2208]
 616 01b6 1344     		add	r3, r3, r2
 617 01b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 618 01ba 3846     		mov	r0, r7
 619 01bc 0093     		str	r3, [sp]
 620 01be 0B46     		mov	r3, r1
 621 01c0 654A     		ldr	r2, .L66+28
 622 01c2 1821     		movs	r1, #24
 623 01c4 FFF7FEFF 		bl	snprintf
 624 01c8 1CE0     		b	.L18
 625              	.L17:
 163:main.c        ****             } else {
 164:main.c        ****                 snprintf(instStr, sizeof(instStr), "%u - %u FALSE %u \r\n", (unsigned char)instruct
 626              		.loc 1 164 0
 627 01ca 07F52972 		add	r2, r7, #676
 628 01ce D7F8A038 		ldr	r3, [r7, #2208]
 629 01d2 1344     		add	r3, r3, r2
 630 01d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 631 01d6 1C46     		mov	r4, r3
 632 01d8 07F1B002 		add	r2, r7, #176
 633 01dc D7F8A038 		ldr	r3, [r7, #2208]
 634 01e0 1344     		add	r3, r3, r2
 635 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 636 01e4 1946     		mov	r1, r3
 637 01e6 07F12403 		add	r3, r7, #36
 638 01ea D7F8A428 		ldr	r2, [r7, #2212]
 639 01ee 53F82230 		ldr	r3, [r3, r2, lsl #2]
 640 01f2 DBB2     		uxtb	r3, r3
 641 01f4 3846     		mov	r0, r7
 642 01f6 0193     		str	r3, [sp, #4]
 643 01f8 0091     		str	r1, [sp]
 644 01fa 2346     		mov	r3, r4
 645 01fc 574A     		ldr	r2, .L66+32
 646 01fe 1821     		movs	r1, #24
 647 0200 FFF7FEFF 		bl	snprintf
 648              	.L18:
 165:main.c        ****             }
 166:main.c        ****             usbPutString(instStr);
 649              		.loc 1 166 0
 650 0204 3B46     		mov	r3, r7
 651 0206 1846     		mov	r0, r3
 652 0208 FFF7FEFF 		bl	usbPutString
 167:main.c        ****             d++;
 653              		.loc 1 167 0
 654 020c D7F8A438 		ldr	r3, [r7, #2212]
 655 0210 0133     		adds	r3, r3, #1
 656 0212 C7F8A438 		str	r3, [r7, #2212]
 168:main.c        ****             if (instruction[i] == 0) {
 657              		.loc 1 168 0
 658 0216 07F52972 		add	r2, r7, #676
 659 021a D7F8A038 		ldr	r3, [r7, #2208]
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 16


 660 021e 1344     		add	r3, r3, r2
 661 0220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 662 0222 002B     		cmp	r3, #0
 663 0224 05D1     		bne	.L19
 169:main.c        ****                 consecStops++;
 664              		.loc 1 169 0
 665 0226 D7F8A838 		ldr	r3, [r7, #2216]
 666 022a 0133     		adds	r3, r3, #1
 667 022c C7F8A838 		str	r3, [r7, #2216]
 668 0230 04E0     		b	.L16
 669              	.L19:
 170:main.c        ****             } else {
 171:main.c        ****                 consecStops = 0;
 670              		.loc 1 171 0
 671 0232 0023     		movs	r3, #0
 672 0234 C7F8A838 		str	r3, [r7, #2216]
 673 0238 00E0     		b	.L16
 674              	.L65:
 675              	.LBE6:
 157:main.c        ****         } else {
 676              		.loc 1 157 0
 677 023a 00BF     		nop
 678              	.L16:
 156:main.c        ****         if (instruction[i] == 0 && (started == 0 || consecStops >= 6)) {
 679              		.loc 1 156 0 discriminator 2
 680 023c D7F8A038 		ldr	r3, [r7, #2208]
 681 0240 0133     		adds	r3, r3, #1
 682 0242 C7F8A038 		str	r3, [r7, #2208]
 683              	.L13:
 156:main.c        ****         if (instruction[i] == 0 && (started == 0 || consecStops >= 6)) {
 684              		.loc 1 156 0 is_stmt 0 discriminator 1
 685 0246 D7F8A038 		ldr	r3, [r7, #2208]
 686 024a B3F5FA7F 		cmp	r3, #500
 687 024e 84DB     		blt	.L21
 688              	.L64:
 689              	.LBE5:
 172:main.c        ****             }
 173:main.c        ****         }
 174:main.c        ****     }
 175:main.c        ****     
 176:main.c        **** 
 177:main.c        **** 
 178:main.c        ****     /*usbPutString("DISTANCES\r\n");
 179:main.c        ****     // Print all distances
 180:main.c        ****     for (int i = 0; i < 500; i++) {
 181:main.c        ****         char distanceStr[10];  // Assuming distances are integers and can fit in 10 characters
 182:main.c        ****         snprintf(distanceStr, sizeof(distanceStr), "%u", (unsigned int)distance[i]);
 183:main.c        ****         usbPutString(distanceStr);
 184:main.c        ****         usbPutString("\r\n");
 185:main.c        ****     }*/
 186:main.c        **** 
 187:main.c        ****   for (;;) {
 188:main.c        **** 
 189:main.c        ****     if (motorFlag == 1) { // timer has counted 0.1s 
 690              		.loc 1 189 0 is_stmt 1
 691 0250 434B     		ldr	r3, .L66+36
 692 0252 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 17


 693 0254 012B     		cmp	r3, #1
 694 0256 68D1     		bne	.L22
 190:main.c        **** 
 191:main.c        ****       isr_TS_Disable(); // disabling the interrupts
 695              		.loc 1 191 0
 696 0258 FFF7FEFF 		bl	isr_TS_Disable
 192:main.c        ****       if (step == 0) { //takes the first measurement, sets steps to 2, the next time the timer goes
 697              		.loc 1 192 0
 698 025c 414B     		ldr	r3, .L66+40
 699 025e 1B68     		ldr	r3, [r3]
 700 0260 002B     		cmp	r3, #0
 701 0262 11D1     		bne	.L23
 193:main.c        ****         v1L = QuadDec_M1_GetCounter(); // first measurement taken - LEFT
 702              		.loc 1 193 0
 703 0264 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 704 0268 0346     		mov	r3, r0
 705 026a 1A46     		mov	r2, r3
 706 026c 3E4B     		ldr	r3, .L66+44
 707 026e 1A60     		str	r2, [r3]
 194:main.c        ****         v1R = QuadDec_M2_GetCounter(); // first measurement taken - RIGHT
 708              		.loc 1 194 0
 709 0270 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 710 0274 0346     		mov	r3, r0
 711 0276 1A46     		mov	r2, r3
 712 0278 3C4B     		ldr	r3, .L66+48
 713 027a 1A60     		str	r2, [r3]
 195:main.c        ****         step++;
 714              		.loc 1 195 0
 715 027c 394B     		ldr	r3, .L66+40
 716 027e 1B68     		ldr	r3, [r3]
 717 0280 0133     		adds	r3, r3, #1
 718 0282 384A     		ldr	r2, .L66+40
 719 0284 1360     		str	r3, [r2]
 720 0286 4BE0     		b	.L24
 721              	.L23:
 722              	.LBB7:
 196:main.c        ****       } else { // second measure
 197:main.c        ****         step = 0;
 723              		.loc 1 197 0
 724 0288 364B     		ldr	r3, .L66+40
 725 028a 0022     		movs	r2, #0
 726 028c 1A60     		str	r2, [r3]
 198:main.c        **** 
 199:main.c        ****         v2L = QuadDec_M1_GetCounter(); // second measurement taken - LEFT
 727              		.loc 1 199 0
 728 028e FFF7FEFF 		bl	QuadDec_M1_GetCounter
 729 0292 0346     		mov	r3, r0
 730 0294 1A46     		mov	r2, r3
 731 0296 364B     		ldr	r3, .L66+52
 732 0298 1A60     		str	r2, [r3]
 200:main.c        ****         v2R = QuadDec_M2_GetCounter(); // second measurement taken - RIGHT
 733              		.loc 1 200 0
 734 029a FFF7FEFF 		bl	QuadDec_M2_GetCounter
 735 029e 0346     		mov	r3, r0
 736 02a0 1A46     		mov	r2, r3
 737 02a2 344B     		ldr	r3, .L66+56
 738 02a4 1A60     		str	r2, [r3]
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 18


 201:main.c        **** 
 202:main.c        ****         numRotationsL = (v2L - v1L);
 739              		.loc 1 202 0
 740 02a6 324B     		ldr	r3, .L66+52
 741 02a8 1A68     		ldr	r2, [r3]
 742 02aa 2F4B     		ldr	r3, .L66+44
 743 02ac 1B68     		ldr	r3, [r3]
 744 02ae D31A     		subs	r3, r2, r3
 745 02b0 314A     		ldr	r2, .L66+60
 746 02b2 1360     		str	r3, [r2]
 203:main.c        ****         numRotationsR = (v2R - v1R);
 747              		.loc 1 203 0
 748 02b4 2F4B     		ldr	r3, .L66+56
 749 02b6 1A68     		ldr	r2, [r3]
 750 02b8 2C4B     		ldr	r3, .L66+48
 751 02ba 1B68     		ldr	r3, [r3]
 752 02bc D31A     		subs	r3, r2, r3
 753 02be 2F4A     		ldr	r2, .L66+64
 754 02c0 1360     		str	r3, [r2]
 204:main.c        **** 
 205:main.c        ****         int changeInDots = (((abs(numRotationsR) + abs(numRotationsL)) ) / 2);
 755              		.loc 1 205 0
 756 02c2 2E4B     		ldr	r3, .L66+64
 757 02c4 1B68     		ldr	r3, [r3]
 758 02c6 83EAE372 		eor	r2, r3, r3, asr #31
 759 02ca A2EBE372 		sub	r2, r2, r3, asr #31
 760 02ce 2A4B     		ldr	r3, .L66+60
 761 02d0 1B68     		ldr	r3, [r3]
 762 02d2 002B     		cmp	r3, #0
 763 02d4 B8BF     		it	lt
 764 02d6 5B42     		rsblt	r3, r3, #0
 765 02d8 1344     		add	r3, r3, r2
 766 02da DA0F     		lsrs	r2, r3, #31
 767 02dc 1344     		add	r3, r3, r2
 768 02de 5B10     		asrs	r3, r3, #1
 769 02e0 C7F88038 		str	r3, [r7, #2176]
 206:main.c        ****         dotsTravelled = changeInDots + dotsTravelled;
 770              		.loc 1 206 0
 771 02e4 264B     		ldr	r3, .L66+68
 772 02e6 1A68     		ldr	r2, [r3]
 773 02e8 D7F88038 		ldr	r3, [r7, #2176]
 774 02ec 1344     		add	r3, r3, r2
 775 02ee 244A     		ldr	r2, .L66+68
 776 02f0 1360     		str	r3, [r2]
 207:main.c        ****         distanceTravelled = (dotsTravelled * (float)(1.217375 / 6.105)); //increase 6.1 to go furth
 777              		.loc 1 207 0
 778 02f2 234B     		ldr	r3, .L66+68
 779 02f4 1B68     		ldr	r3, [r3]
 780 02f6 1846     		mov	r0, r3
 781 02f8 FFF7FEFF 		bl	__aeabi_i2f
 782 02fc 0346     		mov	r3, r0
 783 02fe 2149     		ldr	r1, .L66+72
 784 0300 1846     		mov	r0, r3
 785 0302 FFF7FEFF 		bl	__aeabi_fmul
 786 0306 0346     		mov	r3, r0
 787 0308 1846     		mov	r0, r3
 788 030a FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 19


 789 030e 0246     		mov	r2, r0
 790 0310 1D4B     		ldr	r3, .L66+76
 791 0312 1A60     		str	r2, [r3]
 208:main.c        ****                                                                          //6.2 for low, 6.1 for nor
 209:main.c        **** 
 210:main.c        ****         QuadDec_M1_SetCounter(0); // set quad counter to 0 to avoid overflow
 792              		.loc 1 210 0
 793 0314 0020     		movs	r0, #0
 794 0316 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 211:main.c        ****         QuadDec_M2_SetCounter(0); // set quad counter to 0 to avoid overflow 
 795              		.loc 1 211 0
 796 031a 0020     		movs	r0, #0
 797 031c FFF7FEFF 		bl	QuadDec_M2_SetCounter
 798              	.L24:
 799              	.LBE7:
 212:main.c        **** 
 213:main.c        ****       }
 214:main.c        ****       motorFlag = 0; // interrupt flag is back to 0
 800              		.loc 1 214 0
 801 0320 0F4B     		ldr	r3, .L66+36
 802 0322 0022     		movs	r2, #0
 803 0324 1A60     		str	r2, [r3]
 215:main.c        ****       isr_TS_Enable(); // interrupt enabled
 804              		.loc 1 215 0
 805 0326 FFF7FEFF 		bl	isr_TS_Enable
 806              	.L22:
 216:main.c        **** 
 217:main.c        ****     }
 218:main.c        **** 
 219:main.c        ****     if (distanceTravelled > MOVE_DISTANCE) {
 807              		.loc 1 219 0
 808 032a 174B     		ldr	r3, .L66+76
 809 032c 1B68     		ldr	r3, [r3]
 810 032e 174A     		ldr	r2, .L66+80
 811 0330 9342     		cmp	r3, r2
 812 0332 2DDD     		ble	.L25
 220:main.c        ****       stop();
 813              		.loc 1 220 0
 814 0334 FFF7FEFF 		bl	stop
 815 0338 8AE7     		b	.L64
 816              	.L67:
 817 033a 00BF     		.align	2
 818              	.L66:
 819 033c 00000000 		.word	MyISR
 820 0340 00000000 		.word	eoc
 821 0344 00000000 		.word	.LC1
 822 0348 14000000 		.word	.LC2
 823 034c 20000000 		.word	.LC3
 824 0350 2C000000 		.word	.LC4
 825 0354 68000000 		.word	.LC0
 826 0358 48000000 		.word	.LC5
 827 035c 54000000 		.word	.LC6
 828 0360 00000000 		.word	motorFlag
 829 0364 00000000 		.word	step
 830 0368 00000000 		.word	v1L
 831 036c 00000000 		.word	v1R
 832 0370 00000000 		.word	v2L
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 20


 833 0374 00000000 		.word	v2R
 834 0378 00000000 		.word	numRotationsL
 835 037c 00000000 		.word	numRotationsR
 836 0380 00000000 		.word	dotsTravelled
 837 0384 25314C3E 		.word	1045180709
 838 0388 00000000 		.word	distanceTravelled
 839 038c 7F969800 		.word	9999999
 840              	.L25:
 221:main.c        **** 
 222:main.c        ****     } else {
 223:main.c        **** 
 224:main.c        ****       LED_PIN_4_Write(0);
 841              		.loc 1 224 0
 842 0390 0020     		movs	r0, #0
 843 0392 FFF7FEFF 		bl	LED_PIN_4_Write
 225:main.c        ****       if (flag == 1) {
 844              		.loc 1 225 0
 845 0396 BA4B     		ldr	r3, .L68
 846 0398 1B68     		ldr	r3, [r3]
 847 039a 012B     		cmp	r3, #1
 848 039c 7FF458AF 		bne	.L64
 226:main.c        **** 
 227:main.c        ****         ADC_IRQ_Disable();
 849              		.loc 1 227 0
 850 03a0 FFF7FEFF 		bl	ADC_IRQ_Disable
 228:main.c        ****         valuesLeftIntersection[count] = ADC_GetResult16(0);
 851              		.loc 1 228 0
 852 03a4 B74B     		ldr	r3, .L68+4
 853 03a6 1C68     		ldr	r4, [r3]
 854 03a8 0020     		movs	r0, #0
 855 03aa FFF7FEFF 		bl	ADC_GetResult16
 856 03ae 0346     		mov	r3, r0
 857 03b0 1A46     		mov	r2, r3
 858 03b2 B54B     		ldr	r3, .L68+8
 859 03b4 43F82420 		str	r2, [r3, r4, lsl #2]
 229:main.c        ****         valuesLeftLine[count] = ADC_GetResult16(1);
 860              		.loc 1 229 0
 861 03b8 B24B     		ldr	r3, .L68+4
 862 03ba 1C68     		ldr	r4, [r3]
 863 03bc 0120     		movs	r0, #1
 864 03be FFF7FEFF 		bl	ADC_GetResult16
 865 03c2 0346     		mov	r3, r0
 866 03c4 1A46     		mov	r2, r3
 867 03c6 B14B     		ldr	r3, .L68+12
 868 03c8 43F82420 		str	r2, [r3, r4, lsl #2]
 230:main.c        ****         valuesMiddleLine[count] = ADC_GetResult16(2);
 869              		.loc 1 230 0
 870 03cc AD4B     		ldr	r3, .L68+4
 871 03ce 1C68     		ldr	r4, [r3]
 872 03d0 0220     		movs	r0, #2
 873 03d2 FFF7FEFF 		bl	ADC_GetResult16
 874 03d6 0346     		mov	r3, r0
 875 03d8 1A46     		mov	r2, r3
 876 03da AD4B     		ldr	r3, .L68+16
 877 03dc 43F82420 		str	r2, [r3, r4, lsl #2]
 231:main.c        ****         valuesTurnComplete[count] = ADC_GetResult16(3);
 878              		.loc 1 231 0
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 21


 879 03e0 A84B     		ldr	r3, .L68+4
 880 03e2 1C68     		ldr	r4, [r3]
 881 03e4 0320     		movs	r0, #3
 882 03e6 FFF7FEFF 		bl	ADC_GetResult16
 883 03ea 0346     		mov	r3, r0
 884 03ec 1A46     		mov	r2, r3
 885 03ee A94B     		ldr	r3, .L68+20
 886 03f0 43F82420 		str	r2, [r3, r4, lsl #2]
 232:main.c        ****         valuesRightLine[count] = ADC_GetResult16(4);
 887              		.loc 1 232 0
 888 03f4 A34B     		ldr	r3, .L68+4
 889 03f6 1C68     		ldr	r4, [r3]
 890 03f8 0420     		movs	r0, #4
 891 03fa FFF7FEFF 		bl	ADC_GetResult16
 892 03fe 0346     		mov	r3, r0
 893 0400 1A46     		mov	r2, r3
 894 0402 A54B     		ldr	r3, .L68+24
 895 0404 43F82420 		str	r2, [r3, r4, lsl #2]
 233:main.c        ****         valuesRightIntersection[count] = ADC_GetResult16(5);
 896              		.loc 1 233 0
 897 0408 9E4B     		ldr	r3, .L68+4
 898 040a 1C68     		ldr	r4, [r3]
 899 040c 0520     		movs	r0, #5
 900 040e FFF7FEFF 		bl	ADC_GetResult16
 901 0412 0346     		mov	r3, r0
 902 0414 1A46     		mov	r2, r3
 903 0416 A14B     		ldr	r3, .L68+28
 904 0418 43F82420 		str	r2, [r3, r4, lsl #2]
 234:main.c        **** 
 235:main.c        ****         count++;
 905              		.loc 1 235 0
 906 041c 994B     		ldr	r3, .L68+4
 907 041e 1B68     		ldr	r3, [r3]
 908 0420 0133     		adds	r3, r3, #1
 909 0422 984A     		ldr	r2, .L68+4
 910 0424 1360     		str	r3, [r2]
 236:main.c        ****         if (count == ADC_COUNT) {
 911              		.loc 1 236 0
 912 0426 974B     		ldr	r3, .L68+4
 913 0428 1B68     		ldr	r3, [r3]
 914 042a B3F57A7F 		cmp	r3, #1000
 915 042e 40F0D081 		bne	.L27
 916              	.LBB8:
 237:main.c        ****           LED_PIN_4_Write(1);
 917              		.loc 1 237 0
 918 0432 0120     		movs	r0, #1
 919 0434 FFF7FEFF 		bl	LED_PIN_4_Write
 238:main.c        ****           count = 0;
 920              		.loc 1 238 0
 921 0438 924B     		ldr	r3, .L68+4
 922 043a 0022     		movs	r2, #0
 923 043c 1A60     		str	r2, [r3]
 239:main.c        ****           int highCountLeftIntersection = 0;
 924              		.loc 1 239 0
 925 043e 0023     		movs	r3, #0
 926 0440 C7F89C38 		str	r3, [r7, #2204]
 240:main.c        ****           int highCountLeftLine = 0;
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 22


 927              		.loc 1 240 0
 928 0444 0023     		movs	r3, #0
 929 0446 C7F89838 		str	r3, [r7, #2200]
 241:main.c        ****           int highCountMiddleLine = 0;
 930              		.loc 1 241 0
 931 044a 0023     		movs	r3, #0
 932 044c C7F89438 		str	r3, [r7, #2196]
 242:main.c        ****           int highCountTurnComplete = 0;
 933              		.loc 1 242 0
 934 0450 0023     		movs	r3, #0
 935 0452 C7F89038 		str	r3, [r7, #2192]
 243:main.c        ****           int highCountRightLine = 0;
 936              		.loc 1 243 0
 937 0456 0023     		movs	r3, #0
 938 0458 C7F88C38 		str	r3, [r7, #2188]
 244:main.c        ****           int highCountRightIntersection = 0;
 939              		.loc 1 244 0
 940 045c 0023     		movs	r3, #0
 941 045e C7F88838 		str	r3, [r7, #2184]
 942              	.LBB9:
 245:main.c        ****           for (int i = 0; i < ADC_COUNT; i++) {
 943              		.loc 1 245 0
 944 0462 0023     		movs	r3, #0
 945 0464 C7F88438 		str	r3, [r7, #2180]
 946 0468 58E0     		b	.L28
 947              	.L35:
 246:main.c        **** 
 247:main.c        ****             if (valuesLeftIntersection[i] > 3000) {
 948              		.loc 1 247 0
 949 046a 874A     		ldr	r2, .L68+8
 950 046c D7F88438 		ldr	r3, [r7, #2180]
 951 0470 52F82330 		ldr	r3, [r2, r3, lsl #2]
 952 0474 40F6B832 		movw	r2, #3000
 953 0478 9342     		cmp	r3, r2
 954 047a 04DD     		ble	.L29
 248:main.c        ****               highCountLeftIntersection++;
 955              		.loc 1 248 0
 956 047c D7F89C38 		ldr	r3, [r7, #2204]
 957 0480 0133     		adds	r3, r3, #1
 958 0482 C7F89C38 		str	r3, [r7, #2204]
 959              	.L29:
 249:main.c        **** 
 250:main.c        ****             }
 251:main.c        **** 
 252:main.c        ****             if (valuesLeftLine[i] > 3000) {
 960              		.loc 1 252 0
 961 0486 814A     		ldr	r2, .L68+12
 962 0488 D7F88438 		ldr	r3, [r7, #2180]
 963 048c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 964 0490 40F6B832 		movw	r2, #3000
 965 0494 9342     		cmp	r3, r2
 966 0496 04DD     		ble	.L30
 253:main.c        ****               highCountLeftLine++;
 967              		.loc 1 253 0
 968 0498 D7F89838 		ldr	r3, [r7, #2200]
 969 049c 0133     		adds	r3, r3, #1
 970 049e C7F89838 		str	r3, [r7, #2200]
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 23


 971              	.L30:
 254:main.c        **** 
 255:main.c        ****             }
 256:main.c        **** 
 257:main.c        ****             if (valuesMiddleLine[i] > 3000) {
 972              		.loc 1 257 0
 973 04a2 7B4A     		ldr	r2, .L68+16
 974 04a4 D7F88438 		ldr	r3, [r7, #2180]
 975 04a8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 976 04ac 40F6B832 		movw	r2, #3000
 977 04b0 9342     		cmp	r3, r2
 978 04b2 04DD     		ble	.L31
 258:main.c        ****               highCountMiddleLine++;
 979              		.loc 1 258 0
 980 04b4 D7F89438 		ldr	r3, [r7, #2196]
 981 04b8 0133     		adds	r3, r3, #1
 982 04ba C7F89438 		str	r3, [r7, #2196]
 983              	.L31:
 259:main.c        **** 
 260:main.c        ****             }
 261:main.c        **** 
 262:main.c        ****             if (valuesTurnComplete[i] > 3000) {
 984              		.loc 1 262 0
 985 04be 754A     		ldr	r2, .L68+20
 986 04c0 D7F88438 		ldr	r3, [r7, #2180]
 987 04c4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 988 04c8 40F6B832 		movw	r2, #3000
 989 04cc 9342     		cmp	r3, r2
 990 04ce 04DD     		ble	.L32
 263:main.c        ****               highCountTurnComplete++;
 991              		.loc 1 263 0
 992 04d0 D7F89038 		ldr	r3, [r7, #2192]
 993 04d4 0133     		adds	r3, r3, #1
 994 04d6 C7F89038 		str	r3, [r7, #2192]
 995              	.L32:
 264:main.c        **** 
 265:main.c        ****             }
 266:main.c        **** 
 267:main.c        ****             if (valuesRightLine[i] > 3000) {
 996              		.loc 1 267 0
 997 04da 6F4A     		ldr	r2, .L68+24
 998 04dc D7F88438 		ldr	r3, [r7, #2180]
 999 04e0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1000 04e4 40F6B832 		movw	r2, #3000
 1001 04e8 9342     		cmp	r3, r2
 1002 04ea 04DD     		ble	.L33
 268:main.c        ****               highCountRightLine++;
 1003              		.loc 1 268 0
 1004 04ec D7F88C38 		ldr	r3, [r7, #2188]
 1005 04f0 0133     		adds	r3, r3, #1
 1006 04f2 C7F88C38 		str	r3, [r7, #2188]
 1007              	.L33:
 269:main.c        **** 
 270:main.c        ****             }
 271:main.c        **** 
 272:main.c        ****             if (valuesRightIntersection[i] > 3000) {
 1008              		.loc 1 272 0
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 24


 1009 04f6 694A     		ldr	r2, .L68+28
 1010 04f8 D7F88438 		ldr	r3, [r7, #2180]
 1011 04fc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1012 0500 40F6B832 		movw	r2, #3000
 1013 0504 9342     		cmp	r3, r2
 1014 0506 04DD     		ble	.L34
 273:main.c        ****               highCountRightIntersection++;
 1015              		.loc 1 273 0
 1016 0508 D7F88838 		ldr	r3, [r7, #2184]
 1017 050c 0133     		adds	r3, r3, #1
 1018 050e C7F88838 		str	r3, [r7, #2184]
 1019              	.L34:
 245:main.c        **** 
 1020              		.loc 1 245 0 discriminator 2
 1021 0512 D7F88438 		ldr	r3, [r7, #2180]
 1022 0516 0133     		adds	r3, r3, #1
 1023 0518 C7F88438 		str	r3, [r7, #2180]
 1024              	.L28:
 245:main.c        **** 
 1025              		.loc 1 245 0 is_stmt 0 discriminator 1
 1026 051c D7F88438 		ldr	r3, [r7, #2180]
 1027 0520 B3F57A7F 		cmp	r3, #1000
 1028 0524 A1DB     		blt	.L35
 1029              	.LBE9:
 274:main.c        **** 
 275:main.c        ****             }
 276:main.c        **** 
 277:main.c        ****           }
 278:main.c        **** 
 279:main.c        ****           if (L_LINE_BLACK) {
 1030              		.loc 1 279 0 is_stmt 1
 1031 0526 D7F89838 		ldr	r3, [r7, #2200]
 1032 052a 952B     		cmp	r3, #149
 1033 052c 03DC     		bgt	.L36
 280:main.c        ****             LED_PIN_1_Write(0);
 1034              		.loc 1 280 0
 1035 052e 0020     		movs	r0, #0
 1036 0530 FFF7FEFF 		bl	LED_PIN_1_Write
 1037 0534 02E0     		b	.L37
 1038              	.L36:
 281:main.c        ****           } else {
 282:main.c        ****             LED_PIN_1_Write(1);
 1039              		.loc 1 282 0
 1040 0536 0120     		movs	r0, #1
 1041 0538 FFF7FEFF 		bl	LED_PIN_1_Write
 1042              	.L37:
 283:main.c        ****           }
 284:main.c        **** 
 285:main.c        ****           if (M_LINE_BLACK) {
 1043              		.loc 1 285 0
 1044 053c D7F89438 		ldr	r3, [r7, #2196]
 1045 0540 952B     		cmp	r3, #149
 1046 0542 03DC     		bgt	.L38
 286:main.c        ****             LED_PIN_2_Write(0);
 1047              		.loc 1 286 0
 1048 0544 0020     		movs	r0, #0
 1049 0546 FFF7FEFF 		bl	LED_PIN_2_Write
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 25


 1050 054a 02E0     		b	.L39
 1051              	.L38:
 287:main.c        ****           } else {
 288:main.c        ****             LED_PIN_2_Write(1);
 1052              		.loc 1 288 0
 1053 054c 0120     		movs	r0, #1
 1054 054e FFF7FEFF 		bl	LED_PIN_2_Write
 1055              	.L39:
 289:main.c        ****           }
 290:main.c        **** 
 291:main.c        ****           if (R_LINE_BLACK) {
 1056              		.loc 1 291 0
 1057 0552 D7F88C38 		ldr	r3, [r7, #2188]
 1058 0556 952B     		cmp	r3, #149
 1059 0558 03DC     		bgt	.L40
 292:main.c        ****             LED_PIN_3_Write(0);
 1060              		.loc 1 292 0
 1061 055a 0020     		movs	r0, #0
 1062 055c FFF7FEFF 		bl	LED_PIN_3_Write
 1063 0560 02E0     		b	.L41
 1064              	.L40:
 293:main.c        ****           } else {
 294:main.c        ****             LED_PIN_3_Write(1);
 1065              		.loc 1 294 0
 1066 0562 0120     		movs	r0, #1
 1067 0564 FFF7FEFF 		bl	LED_PIN_3_Write
 1068              	.L41:
 295:main.c        ****           }
 296:main.c        **** 
 297:main.c        ****           shouldUpdate = 0;
 1069              		.loc 1 297 0
 1070 0568 4D4B     		ldr	r3, .L68+32
 1071 056a 0022     		movs	r2, #0
 1072 056c 1A60     		str	r2, [r3]
 298:main.c        ****           turnTimer = 0;
 1073              		.loc 1 298 0
 1074 056e 4D4B     		ldr	r3, .L68+36
 1075 0570 0022     		movs	r2, #0
 1076 0572 1A60     		str	r2, [r3]
 299:main.c        **** 
 300:main.c        ****           // If all the sensors are under black light, stop the robot
 301:main.c        ****           if (L_INT_BLACK && M_LINE_BLACK && R_INT_BLACK && TC_BLACK && L_LINE_BLACK && R_LINE_BLAC
 1077              		.loc 1 301 0
 1078 0574 D7F89C38 		ldr	r3, [r7, #2204]
 1079 0578 952B     		cmp	r3, #149
 1080 057a 16DC     		bgt	.L42
 1081              		.loc 1 301 0 is_stmt 0 discriminator 1
 1082 057c D7F89438 		ldr	r3, [r7, #2196]
 1083 0580 952B     		cmp	r3, #149
 1084 0582 12DC     		bgt	.L42
 1085              		.loc 1 301 0 discriminator 2
 1086 0584 D7F88838 		ldr	r3, [r7, #2184]
 1087 0588 952B     		cmp	r3, #149
 1088 058a 0EDC     		bgt	.L42
 1089              		.loc 1 301 0 discriminator 3
 1090 058c D7F89038 		ldr	r3, [r7, #2192]
 1091 0590 952B     		cmp	r3, #149
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 26


 1092 0592 0ADC     		bgt	.L42
 1093              		.loc 1 301 0 discriminator 4
 1094 0594 D7F89838 		ldr	r3, [r7, #2200]
 1095 0598 952B     		cmp	r3, #149
 1096 059a 06DC     		bgt	.L42
 1097              		.loc 1 301 0 discriminator 5
 1098 059c D7F88C38 		ldr	r3, [r7, #2188]
 1099 05a0 952B     		cmp	r3, #149
 1100 05a2 02DC     		bgt	.L42
 302:main.c        **** 
 303:main.c        ****             stop();
 1101              		.loc 1 303 0 is_stmt 1
 1102 05a4 FFF7FEFF 		bl	stop
 1103 05a8 13E1     		b	.L27
 1104              	.L42:
 304:main.c        **** 
 305:main.c        ****           } else if (turningLeft == 1) { // if robot is turning left
 1105              		.loc 1 305 0
 1106 05aa 3F4B     		ldr	r3, .L68+40
 1107 05ac 1B68     		ldr	r3, [r3]
 1108 05ae 012B     		cmp	r3, #1
 1109 05b0 14D1     		bne	.L43
 306:main.c        ****             while (turnTimer != 10000) {
 1110              		.loc 1 306 0
 1111 05b2 06E0     		b	.L44
 1112              	.L45:
 307:main.c        ****               turnLeft();
 1113              		.loc 1 307 0
 1114 05b4 FFF7FEFF 		bl	turnLeft
 308:main.c        ****               turnTimer++;
 1115              		.loc 1 308 0
 1116 05b8 3A4B     		ldr	r3, .L68+36
 1117 05ba 1B68     		ldr	r3, [r3]
 1118 05bc 0133     		adds	r3, r3, #1
 1119 05be 394A     		ldr	r2, .L68+36
 1120 05c0 1360     		str	r3, [r2]
 1121              	.L44:
 306:main.c        ****             while (turnTimer != 10000) {
 1122              		.loc 1 306 0
 1123 05c2 384B     		ldr	r3, .L68+36
 1124 05c4 1B68     		ldr	r3, [r3]
 1125 05c6 42F21072 		movw	r2, #10000
 1126 05ca 9342     		cmp	r3, r2
 1127 05cc F2D1     		bne	.L45
 309:main.c        ****             }
 310:main.c        ****             turnEnable = 0;
 1128              		.loc 1 310 0
 1129 05ce 374B     		ldr	r3, .L68+44
 1130 05d0 0022     		movs	r2, #0
 1131 05d2 1A60     		str	r2, [r3]
 311:main.c        ****             turningLeft = 0;
 1132              		.loc 1 311 0
 1133 05d4 344B     		ldr	r3, .L68+40
 1134 05d6 0022     		movs	r2, #0
 1135 05d8 1A60     		str	r2, [r3]
 1136 05da FAE0     		b	.L27
 1137              	.L43:
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 27


 312:main.c        **** 
 313:main.c        ****           } else if (turningRight == 1) { // if robot is turning right
 1138              		.loc 1 313 0
 1139 05dc 344B     		ldr	r3, .L68+48
 1140 05de 1B68     		ldr	r3, [r3]
 1141 05e0 012B     		cmp	r3, #1
 1142 05e2 14D1     		bne	.L46
 314:main.c        ****             while (turnTimer != 10000) {
 1143              		.loc 1 314 0
 1144 05e4 06E0     		b	.L47
 1145              	.L48:
 315:main.c        ****               turnRight();
 1146              		.loc 1 315 0
 1147 05e6 FFF7FEFF 		bl	turnRight
 316:main.c        ****               turnTimer++;
 1148              		.loc 1 316 0
 1149 05ea 2E4B     		ldr	r3, .L68+36
 1150 05ec 1B68     		ldr	r3, [r3]
 1151 05ee 0133     		adds	r3, r3, #1
 1152 05f0 2C4A     		ldr	r2, .L68+36
 1153 05f2 1360     		str	r3, [r2]
 1154              	.L47:
 314:main.c        ****             while (turnTimer != 10000) {
 1155              		.loc 1 314 0
 1156 05f4 2B4B     		ldr	r3, .L68+36
 1157 05f6 1B68     		ldr	r3, [r3]
 1158 05f8 42F21072 		movw	r2, #10000
 1159 05fc 9342     		cmp	r3, r2
 1160 05fe F2D1     		bne	.L48
 317:main.c        ****             }
 318:main.c        ****             turnEnable = 0;
 1161              		.loc 1 318 0
 1162 0600 2A4B     		ldr	r3, .L68+44
 1163 0602 0022     		movs	r2, #0
 1164 0604 1A60     		str	r2, [r3]
 319:main.c        ****             turningRight = 0;
 1165              		.loc 1 319 0
 1166 0606 2A4B     		ldr	r3, .L68+48
 1167 0608 0022     		movs	r2, #0
 1168 060a 1A60     		str	r2, [r3]
 1169 060c E1E0     		b	.L27
 1170              	.L46:
 320:main.c        **** 
 321:main.c        ****           } else if (L_INT_BLACK && (M_LINE_BLACK || L_LINE_BLACK) && turnEnable == 1) { //initiate
 1171              		.loc 1 321 0
 1172 060e D7F89C38 		ldr	r3, [r7, #2204]
 1173 0612 952B     		cmp	r3, #149
 1174 0614 17DC     		bgt	.L49
 1175              		.loc 1 321 0 is_stmt 0 discriminator 1
 1176 0616 D7F89438 		ldr	r3, [r7, #2196]
 1177 061a 952B     		cmp	r3, #149
 1178 061c 03DD     		ble	.L50
 1179              		.loc 1 321 0 discriminator 3
 1180 061e D7F89838 		ldr	r3, [r7, #2200]
 1181 0622 952B     		cmp	r3, #149
 1182 0624 0FDC     		bgt	.L49
 1183              	.L50:
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 28


 1184              		.loc 1 321 0 discriminator 4
 1185 0626 214B     		ldr	r3, .L68+44
 1186 0628 1B68     		ldr	r3, [r3]
 1187 062a 012B     		cmp	r3, #1
 1188 062c 0BD1     		bne	.L49
 322:main.c        **** 
 323:main.c        ****             turnTimer++;
 1189              		.loc 1 323 0 is_stmt 1
 1190 062e 1D4B     		ldr	r3, .L68+36
 1191 0630 1B68     		ldr	r3, [r3]
 1192 0632 0133     		adds	r3, r3, #1
 1193 0634 1B4A     		ldr	r2, .L68+36
 1194 0636 1360     		str	r3, [r2]
 324:main.c        ****             turningLeft = 1;
 1195              		.loc 1 324 0
 1196 0638 1B4B     		ldr	r3, .L68+40
 1197 063a 0122     		movs	r2, #1
 1198 063c 1A60     		str	r2, [r3]
 325:main.c        ****             lastAdjustDirection = 0;
 1199              		.loc 1 325 0
 1200 063e 1D4B     		ldr	r3, .L68+52
 1201 0640 0022     		movs	r2, #0
 1202 0642 1A60     		str	r2, [r3]
 1203 0644 C5E0     		b	.L27
 1204              	.L49:
 326:main.c        **** 
 327:main.c        ****           } else if (R_INT_BLACK && (M_LINE_BLACK || R_LINE_BLACK) && turnEnable == 1) { //initiate
 1205              		.loc 1 327 0
 1206 0646 D7F88838 		ldr	r3, [r7, #2184]
 1207 064a 952B     		cmp	r3, #149
 1208 064c 34DC     		bgt	.L51
 1209              		.loc 1 327 0 is_stmt 0 discriminator 1
 1210 064e D7F89438 		ldr	r3, [r7, #2196]
 1211 0652 952B     		cmp	r3, #149
 1212 0654 03DD     		ble	.L52
 1213              		.loc 1 327 0 discriminator 3
 1214 0656 D7F88C38 		ldr	r3, [r7, #2188]
 1215 065a 952B     		cmp	r3, #149
 1216 065c 2CDC     		bgt	.L51
 1217              	.L52:
 1218              		.loc 1 327 0 discriminator 4
 1219 065e 134B     		ldr	r3, .L68+44
 1220 0660 1B68     		ldr	r3, [r3]
 1221 0662 012B     		cmp	r3, #1
 1222 0664 28D1     		bne	.L51
 328:main.c        **** 
 329:main.c        ****             turnTimer++;
 1223              		.loc 1 329 0 is_stmt 1
 1224 0666 0F4B     		ldr	r3, .L68+36
 1225 0668 1B68     		ldr	r3, [r3]
 1226 066a 0133     		adds	r3, r3, #1
 1227 066c 0D4A     		ldr	r2, .L68+36
 1228 066e 1360     		str	r3, [r2]
 330:main.c        ****             turningRight = 1;
 1229              		.loc 1 330 0
 1230 0670 0F4B     		ldr	r3, .L68+48
 1231 0672 0122     		movs	r2, #1
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 29


 1232 0674 1A60     		str	r2, [r3]
 331:main.c        ****             lastAdjustDirection = 2;
 1233              		.loc 1 331 0
 1234 0676 0F4B     		ldr	r3, .L68+52
 1235 0678 0222     		movs	r2, #2
 1236 067a 1A60     		str	r2, [r3]
 1237 067c A9E0     		b	.L27
 1238              	.L69:
 1239 067e 00BF     		.align	2
 1240              	.L68:
 1241 0680 00000000 		.word	flag
 1242 0684 00000000 		.word	count
 1243 0688 00000000 		.word	valuesLeftIntersection
 1244 068c 00000000 		.word	valuesLeftLine
 1245 0690 00000000 		.word	valuesMiddleLine
 1246 0694 00000000 		.word	valuesTurnComplete
 1247 0698 00000000 		.word	valuesRightLine
 1248 069c 00000000 		.word	valuesRightIntersection
 1249 06a0 00000000 		.word	shouldUpdate
 1250 06a4 00000000 		.word	turnTimer
 1251 06a8 00000000 		.word	turningLeft
 1252 06ac 00000000 		.word	turnEnable
 1253 06b0 00000000 		.word	turningRight
 1254 06b4 00000000 		.word	lastAdjustDirection
 1255              	.L51:
 332:main.c        **** 
 333:main.c        ****           } else if (R_LINE_BLACK && L_LINE_BLACK) {
 1256              		.loc 1 333 0
 1257 06b8 D7F88C38 		ldr	r3, [r7, #2188]
 1258 06bc 952B     		cmp	r3, #149
 1259 06be 04DC     		bgt	.L53
 1260              		.loc 1 333 0 is_stmt 0 discriminator 1
 1261 06c0 D7F89838 		ldr	r3, [r7, #2200]
 1262 06c4 952B     		cmp	r3, #149
 1263 06c6 40F38480 		ble	.L27
 1264              	.L53:
 334:main.c        ****             // do nothing for now
 335:main.c        **** 
 336:main.c        ****           } else if (L_INT_BLACK && R_INT_BLACK) {
 1265              		.loc 1 336 0 is_stmt 1
 1266 06ca D7F89C38 		ldr	r3, [r7, #2204]
 1267 06ce 952B     		cmp	r3, #149
 1268 06d0 03DC     		bgt	.L54
 1269              		.loc 1 336 0 is_stmt 0 discriminator 1
 1270 06d2 D7F88838 		ldr	r3, [r7, #2184]
 1271 06d6 952B     		cmp	r3, #149
 1272 06d8 7BDD     		ble	.L27
 1273              	.L54:
 337:main.c        ****             // do nothing for now
 338:main.c        **** 
 339:main.c        ****           } else if (M_LINE_BLACK && L_LINE_BLACK) { // if robot slightly too far right
 1274              		.loc 1 339 0 is_stmt 1
 1275 06da D7F89438 		ldr	r3, [r7, #2196]
 1276 06de 952B     		cmp	r3, #149
 1277 06e0 0CDC     		bgt	.L55
 1278              		.loc 1 339 0 is_stmt 0 discriminator 1
 1279 06e2 D7F89838 		ldr	r3, [r7, #2200]
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 30


 1280 06e6 952B     		cmp	r3, #149
 1281 06e8 08DC     		bgt	.L55
 340:main.c        ****             adjustLeft();
 1282              		.loc 1 340 0 is_stmt 1
 1283 06ea FFF7FEFF 		bl	adjustLeft
 341:main.c        ****             turnEnable = 1;
 1284              		.loc 1 341 0
 1285 06ee 3C4B     		ldr	r3, .L70
 1286 06f0 0122     		movs	r2, #1
 1287 06f2 1A60     		str	r2, [r3]
 342:main.c        ****             lastAdjustDirection = 0;
 1288              		.loc 1 342 0
 1289 06f4 3B4B     		ldr	r3, .L70+4
 1290 06f6 0022     		movs	r2, #0
 1291 06f8 1A60     		str	r2, [r3]
 1292 06fa 6AE0     		b	.L27
 1293              	.L55:
 343:main.c        **** 
 344:main.c        ****           } else if (M_LINE_BLACK && R_LINE_BLACK) { //  if robot slightly too far left
 1294              		.loc 1 344 0
 1295 06fc D7F89438 		ldr	r3, [r7, #2196]
 1296 0700 952B     		cmp	r3, #149
 1297 0702 0CDC     		bgt	.L56
 1298              		.loc 1 344 0 is_stmt 0 discriminator 1
 1299 0704 D7F88C38 		ldr	r3, [r7, #2188]
 1300 0708 952B     		cmp	r3, #149
 1301 070a 08DC     		bgt	.L56
 345:main.c        ****             adjustRight();
 1302              		.loc 1 345 0 is_stmt 1
 1303 070c FFF7FEFF 		bl	adjustRight
 346:main.c        ****             lastAdjustDirection = 2;
 1304              		.loc 1 346 0
 1305 0710 344B     		ldr	r3, .L70+4
 1306 0712 0222     		movs	r2, #2
 1307 0714 1A60     		str	r2, [r3]
 347:main.c        ****             turnEnable = 1;
 1308              		.loc 1 347 0
 1309 0716 324B     		ldr	r3, .L70
 1310 0718 0122     		movs	r2, #1
 1311 071a 1A60     		str	r2, [r3]
 1312 071c 59E0     		b	.L27
 1313              	.L56:
 348:main.c        **** 
 349:main.c        ****           } else if (M_LINE_BLACK) { // if robot in the center keep moving straight
 1314              		.loc 1 349 0
 1315 071e D7F89438 		ldr	r3, [r7, #2196]
 1316 0722 952B     		cmp	r3, #149
 1317 0724 15DC     		bgt	.L57
 350:main.c        ****             shouldUpdate = 1;
 1318              		.loc 1 350 0
 1319 0726 304B     		ldr	r3, .L70+8
 1320 0728 0122     		movs	r2, #1
 1321 072a 1A60     		str	r2, [r3]
 351:main.c        ****             lastAdjustDirection = 1;
 1322              		.loc 1 351 0
 1323 072c 2D4B     		ldr	r3, .L70+4
 1324 072e 0122     		movs	r2, #1
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 31


 1325 0730 1A60     		str	r2, [r3]
 352:main.c        ****             turnEnable = 1;
 1326              		.loc 1 352 0
 1327 0732 2B4B     		ldr	r3, .L70
 1328 0734 0122     		movs	r2, #1
 1329 0736 1A60     		str	r2, [r3]
 353:main.c        ****             driveForward(distanceTravelled, TARGET_SPEED);
 1330              		.loc 1 353 0
 1331 0738 2C4B     		ldr	r3, .L70+12
 1332 073a 1C68     		ldr	r4, [r3]
 1333 073c 2C4B     		ldr	r3, .L70+16
 1334 073e 1B68     		ldr	r3, [r3]	@ float
 1335 0740 1846     		mov	r0, r3
 1336 0742 FFF7FEFF 		bl	__aeabi_f2iz
 1337 0746 0346     		mov	r3, r0
 1338 0748 1946     		mov	r1, r3
 1339 074a 2046     		mov	r0, r4
 1340 074c FFF7FEFF 		bl	driveForward
 1341 0750 3FE0     		b	.L27
 1342              	.L57:
 354:main.c        **** 
 355:main.c        ****           } else if (R_LINE_BLACK) { // if robot too far left
 1343              		.loc 1 355 0
 1344 0752 D7F88C38 		ldr	r3, [r7, #2188]
 1345 0756 952B     		cmp	r3, #149
 1346 0758 08DC     		bgt	.L58
 356:main.c        ****             adjustRight();
 1347              		.loc 1 356 0
 1348 075a FFF7FEFF 		bl	adjustRight
 357:main.c        ****             turnEnable = 1;
 1349              		.loc 1 357 0
 1350 075e 204B     		ldr	r3, .L70
 1351 0760 0122     		movs	r2, #1
 1352 0762 1A60     		str	r2, [r3]
 358:main.c        ****             lastAdjustDirection = 2;
 1353              		.loc 1 358 0
 1354 0764 1F4B     		ldr	r3, .L70+4
 1355 0766 0222     		movs	r2, #2
 1356 0768 1A60     		str	r2, [r3]
 1357 076a 32E0     		b	.L27
 1358              	.L58:
 359:main.c        **** 
 360:main.c        ****           } else if (L_LINE_BLACK) { // if robot too far right
 1359              		.loc 1 360 0
 1360 076c D7F89838 		ldr	r3, [r7, #2200]
 1361 0770 952B     		cmp	r3, #149
 1362 0772 08DC     		bgt	.L59
 361:main.c        ****             adjustLeft();
 1363              		.loc 1 361 0
 1364 0774 FFF7FEFF 		bl	adjustLeft
 362:main.c        ****             turnEnable = 1;
 1365              		.loc 1 362 0
 1366 0778 194B     		ldr	r3, .L70
 1367 077a 0122     		movs	r2, #1
 1368 077c 1A60     		str	r2, [r3]
 363:main.c        ****             lastAdjustDirection = 0;
 1369              		.loc 1 363 0
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 32


 1370 077e 194B     		ldr	r3, .L70+4
 1371 0780 0022     		movs	r2, #0
 1372 0782 1A60     		str	r2, [r3]
 1373 0784 25E0     		b	.L27
 1374              	.L59:
 364:main.c        **** 
 365:main.c        ****           } else if (L_INT_BLACK) {
 1375              		.loc 1 365 0
 1376 0786 D7F89C38 		ldr	r3, [r7, #2204]
 1377 078a 952B     		cmp	r3, #149
 1378 078c 06DC     		bgt	.L60
 366:main.c        ****             //hardAdjustLeft();
 367:main.c        ****             turningLeft = 1;
 1379              		.loc 1 367 0
 1380 078e 194B     		ldr	r3, .L70+20
 1381 0790 0122     		movs	r2, #1
 1382 0792 1A60     		str	r2, [r3]
 368:main.c        ****             lastAdjustDirection = 0;
 1383              		.loc 1 368 0
 1384 0794 134B     		ldr	r3, .L70+4
 1385 0796 0022     		movs	r2, #0
 1386 0798 1A60     		str	r2, [r3]
 1387 079a 1AE0     		b	.L27
 1388              	.L60:
 369:main.c        **** 
 370:main.c        ****           } else if (R_INT_BLACK) {
 1389              		.loc 1 370 0
 1390 079c D7F88838 		ldr	r3, [r7, #2184]
 1391 07a0 952B     		cmp	r3, #149
 1392 07a2 06DC     		bgt	.L61
 371:main.c        ****             //hardAdjustRight();
 372:main.c        ****             turningRight = 1;
 1393              		.loc 1 372 0
 1394 07a4 144B     		ldr	r3, .L70+24
 1395 07a6 0122     		movs	r2, #1
 1396 07a8 1A60     		str	r2, [r3]
 373:main.c        ****             lastAdjustDirection = 2;
 1397              		.loc 1 373 0
 1398 07aa 0E4B     		ldr	r3, .L70+4
 1399 07ac 0222     		movs	r2, #2
 1400 07ae 1A60     		str	r2, [r3]
 1401 07b0 0FE0     		b	.L27
 1402              	.L61:
 374:main.c        **** //          } else if (highCountLeftIntersection > 150 && highCountRightIntersection > 150 && highC
 375:main.c        **** //            driveForward(distanceTravelled, TARGET_SPEED);
 376:main.c        **** //            
 377:main.c        **** //        }
 378:main.c        ****         }
 379:main.c        ****             else { // completely lost find way
 380:main.c        ****             if (lastAdjustDirection == 0) {
 1403              		.loc 1 380 0
 1404 07b2 0C4B     		ldr	r3, .L70+4
 1405 07b4 1B68     		ldr	r3, [r3]
 1406 07b6 002B     		cmp	r3, #0
 1407 07b8 02D1     		bne	.L62
 381:main.c        ****               turnLeft();
 1408              		.loc 1 381 0
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 33


 1409 07ba FFF7FEFF 		bl	turnLeft
 1410 07be 08E0     		b	.L27
 1411              	.L62:
 382:main.c        ****             } else if (lastAdjustDirection == 1) { // last movement was forward (middle sensor sens
 1412              		.loc 1 382 0
 1413 07c0 084B     		ldr	r3, .L70+4
 1414 07c2 1B68     		ldr	r3, [r3]
 1415 07c4 012B     		cmp	r3, #1
 1416 07c6 02D1     		bne	.L63
 383:main.c        ****               //hardAdjustLeft();
 384:main.c        ****               turnRight();
 1417              		.loc 1 384 0
 1418 07c8 FFF7FEFF 		bl	turnRight
 1419 07cc 01E0     		b	.L27
 1420              	.L63:
 385:main.c        ****               //reverse(3000); // random number 3000
 386:main.c        ****             } else {
 387:main.c        ****               turnRight();
 1421              		.loc 1 387 0
 1422 07ce FFF7FEFF 		bl	turnRight
 1423              	.L27:
 1424              	.LBE8:
 388:main.c        ****             }
 389:main.c        ****             }
 390:main.c        ****         }
 391:main.c        **** 
 392:main.c        ****         flag = 0;
 1425              		.loc 1 392 0
 1426 07d2 0A4B     		ldr	r3, .L70+28
 1427 07d4 0022     		movs	r2, #0
 1428 07d6 1A60     		str	r2, [r3]
 393:main.c        ****         ADC_IRQ_Enable();
 1429              		.loc 1 393 0
 1430 07d8 FFF7FEFF 		bl	ADC_IRQ_Enable
 394:main.c        ****       }
 395:main.c        ****     }
 396:main.c        ****   }
 1431              		.loc 1 396 0
 1432 07dc 38E5     		b	.L64
 1433              	.L71:
 1434 07de 00BF     		.align	2
 1435              	.L70:
 1436 07e0 00000000 		.word	turnEnable
 1437 07e4 00000000 		.word	lastAdjustDirection
 1438 07e8 00000000 		.word	shouldUpdate
 1439 07ec 00000000 		.word	distanceTravelled
 1440 07f0 00000000 		.word	TARGET_SPEED
 1441 07f4 00000000 		.word	turningLeft
 1442 07f8 00000000 		.word	turningRight
 1443 07fc 00000000 		.word	flag
 1444              		.cfi_endproc
 1445              	.LFE66:
 1446              		.size	main, .-main
 1447              		.section	.text.usbPutString,"ax",%progbits
 1448              		.align	2
 1449              		.global	usbPutString
 1450              		.thumb
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 34


 1451              		.thumb_func
 1452              		.type	usbPutString, %function
 1453              	usbPutString:
 1454              	.LFB67:
 397:main.c        **** }
 398:main.c        **** 
 399:main.c        **** void usbPutString(char * s) {
 1455              		.loc 1 399 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 8
 1458              		@ frame_needed = 1, uses_anonymous_args = 0
 1459 0000 80B5     		push	{r7, lr}
 1460              		.cfi_def_cfa_offset 8
 1461              		.cfi_offset 7, -8
 1462              		.cfi_offset 14, -4
 1463 0002 82B0     		sub	sp, sp, #8
 1464              		.cfi_def_cfa_offset 16
 1465 0004 00AF     		add	r7, sp, #0
 1466              		.cfi_def_cfa_register 7
 1467 0006 7860     		str	r0, [r7, #4]
 400:main.c        ****   // !! Assumes that *s is a string with allocated space >=64 chars     
 401:main.c        ****   //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 402:main.c        ****   //  length to 62 char (63rd char is a '!')
 403:main.c        **** 
 404:main.c        ****   #ifdef USE_USB
 405:main.c        ****   while (USBUART_CDCIsReady() == 0);
 1468              		.loc 1 405 0
 1469 0008 00BF     		nop
 1470              	.L73:
 1471              		.loc 1 405 0 is_stmt 0 discriminator 1
 1472 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1473 000e 0346     		mov	r3, r0
 1474 0010 002B     		cmp	r3, #0
 1475 0012 FAD0     		beq	.L73
 406:main.c        ****   s[63] = '\0';
 1476              		.loc 1 406 0 is_stmt 1
 1477 0014 7B68     		ldr	r3, [r7, #4]
 1478 0016 3F33     		adds	r3, r3, #63
 1479 0018 0022     		movs	r2, #0
 1480 001a 1A70     		strb	r2, [r3]
 407:main.c        ****   s[62] = '!';
 1481              		.loc 1 407 0
 1482 001c 7B68     		ldr	r3, [r7, #4]
 1483 001e 3E33     		adds	r3, r3, #62
 1484 0020 2122     		movs	r2, #33
 1485 0022 1A70     		strb	r2, [r3]
 408:main.c        ****   USBUART_PutData((uint8 * ) s, strlen(s));
 1486              		.loc 1 408 0
 1487 0024 7868     		ldr	r0, [r7, #4]
 1488 0026 FFF7FEFF 		bl	strlen
 1489 002a 0346     		mov	r3, r0
 1490 002c 9BB2     		uxth	r3, r3
 1491 002e 1946     		mov	r1, r3
 1492 0030 7868     		ldr	r0, [r7, #4]
 1493 0032 FFF7FEFF 		bl	USBUART_PutData
 409:main.c        ****   #endif
 410:main.c        **** }
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 35


 1494              		.loc 1 410 0
 1495 0036 00BF     		nop
 1496 0038 0837     		adds	r7, r7, #8
 1497              		.cfi_def_cfa_offset 8
 1498 003a BD46     		mov	sp, r7
 1499              		.cfi_def_cfa_register 13
 1500              		@ sp needed
 1501 003c 80BD     		pop	{r7, pc}
 1502              		.cfi_endproc
 1503              	.LFE67:
 1504              		.size	usbPutString, .-usbPutString
 1505 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1506              		.align	2
 1507              		.global	usbPutChar
 1508              		.thumb
 1509              		.thumb_func
 1510              		.type	usbPutChar, %function
 1511              	usbPutChar:
 1512              	.LFB68:
 411:main.c        **** //* ========================================
 412:main.c        **** void usbPutChar(char c) {
 1513              		.loc 1 412 0
 1514              		.cfi_startproc
 1515              		@ args = 0, pretend = 0, frame = 8
 1516              		@ frame_needed = 1, uses_anonymous_args = 0
 1517 0000 80B5     		push	{r7, lr}
 1518              		.cfi_def_cfa_offset 8
 1519              		.cfi_offset 7, -8
 1520              		.cfi_offset 14, -4
 1521 0002 82B0     		sub	sp, sp, #8
 1522              		.cfi_def_cfa_offset 16
 1523 0004 00AF     		add	r7, sp, #0
 1524              		.cfi_def_cfa_register 7
 1525 0006 0346     		mov	r3, r0
 1526 0008 FB71     		strb	r3, [r7, #7]
 413:main.c        ****   #ifdef USE_USB
 414:main.c        ****   while (USBUART_CDCIsReady() == 0);
 1527              		.loc 1 414 0
 1528 000a 00BF     		nop
 1529              	.L75:
 1530              		.loc 1 414 0 is_stmt 0 discriminator 1
 1531 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1532 0010 0346     		mov	r3, r0
 1533 0012 002B     		cmp	r3, #0
 1534 0014 FAD0     		beq	.L75
 415:main.c        ****   USBUART_PutChar(c);
 1535              		.loc 1 415 0 is_stmt 1
 1536 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1537 0018 1846     		mov	r0, r3
 1538 001a FFF7FEFF 		bl	USBUART_PutChar
 416:main.c        ****   #endif
 417:main.c        **** }...
 1539              		.loc 1 417 0
 1540 001e 00BF     		nop
 1541 0020 0837     		adds	r7, r7, #8
 1542              		.cfi_def_cfa_offset 8
 1543 0022 BD46     		mov	sp, r7
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 36


 1544              		.cfi_def_cfa_register 13
 1545              		@ sp needed
 1546 0024 80BD     		pop	{r7, pc}
 1547              		.cfi_endproc
 1548              	.LFE68:
 1549              		.size	usbPutChar, .-usbPutChar
 1550 0026 00BF     		.text
 1551              	.Letext0:
 1552              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1553              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1554              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1555              		.file 5 "vars.h"
 1556              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1557              		.section	.debug_info,"",%progbits
 1558              	.Ldebug_info0:
 1559 0000 FC070000 		.4byte	0x7fc
 1560 0004 0400     		.2byte	0x4
 1561 0006 00000000 		.4byte	.Ldebug_abbrev0
 1562 000a 04       		.byte	0x4
 1563 000b 01       		.uleb128 0x1
 1564 000c BF000000 		.4byte	.LASF106
 1565 0010 0C       		.byte	0xc
 1566 0011 D2040000 		.4byte	.LASF107
 1567 0015 28020000 		.4byte	.LASF108
 1568 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1569 001d 00000000 		.4byte	0
 1570 0021 00000000 		.4byte	.Ldebug_line0
 1571 0025 02       		.uleb128 0x2
 1572 0026 01       		.byte	0x1
 1573 0027 06       		.byte	0x6
 1574 0028 E8010000 		.4byte	.LASF0
 1575 002c 02       		.uleb128 0x2
 1576 002d 01       		.byte	0x1
 1577 002e 08       		.byte	0x8
 1578 002f 5E030000 		.4byte	.LASF1
 1579 0033 02       		.uleb128 0x2
 1580 0034 02       		.byte	0x2
 1581 0035 05       		.byte	0x5
 1582 0036 6D000000 		.4byte	.LASF2
 1583 003a 02       		.uleb128 0x2
 1584 003b 02       		.byte	0x2
 1585 003c 07       		.byte	0x7
 1586 003d 75040000 		.4byte	.LASF3
 1587 0041 03       		.uleb128 0x3
 1588 0042 33050000 		.4byte	.LASF12
 1589 0046 02       		.byte	0x2
 1590 0047 3F       		.byte	0x3f
 1591 0048 4C000000 		.4byte	0x4c
 1592 004c 02       		.uleb128 0x2
 1593 004d 04       		.byte	0x4
 1594 004e 05       		.byte	0x5
 1595 004f E2020000 		.4byte	.LASF4
 1596 0053 02       		.uleb128 0x2
 1597 0054 04       		.byte	0x4
 1598 0055 07       		.byte	0x7
 1599 0056 D9040000 		.4byte	.LASF5
 1600 005a 02       		.uleb128 0x2
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 37


 1601 005b 08       		.byte	0x8
 1602 005c 05       		.byte	0x5
 1603 005d 16060000 		.4byte	.LASF6
 1604 0061 02       		.uleb128 0x2
 1605 0062 08       		.byte	0x8
 1606 0063 07       		.byte	0x7
 1607 0064 A2030000 		.4byte	.LASF7
 1608 0068 04       		.uleb128 0x4
 1609 0069 04       		.byte	0x4
 1610 006a 05       		.byte	0x5
 1611 006b 696E7400 		.ascii	"int\000"
 1612 006f 02       		.uleb128 0x2
 1613 0070 04       		.byte	0x4
 1614 0071 07       		.byte	0x7
 1615 0072 B9030000 		.4byte	.LASF8
 1616 0076 02       		.uleb128 0x2
 1617 0077 08       		.byte	0x8
 1618 0078 04       		.byte	0x4
 1619 0079 4C030000 		.4byte	.LASF9
 1620 007d 02       		.uleb128 0x2
 1621 007e 04       		.byte	0x4
 1622 007f 07       		.byte	0x7
 1623 0080 A7000000 		.4byte	.LASF10
 1624 0084 05       		.uleb128 0x5
 1625 0085 04       		.byte	0x4
 1626 0086 8A000000 		.4byte	0x8a
 1627 008a 02       		.uleb128 0x2
 1628 008b 01       		.byte	0x1
 1629 008c 08       		.byte	0x8
 1630 008d 3E040000 		.4byte	.LASF11
 1631 0091 06       		.uleb128 0x6
 1632 0092 8A000000 		.4byte	0x8a
 1633 0096 A1000000 		.4byte	0xa1
 1634 009a 07       		.uleb128 0x7
 1635 009b 7D000000 		.4byte	0x7d
 1636 009f 17       		.byte	0x17
 1637 00a0 00       		.byte	0
 1638 00a1 03       		.uleb128 0x3
 1639 00a2 5B040000 		.4byte	.LASF13
 1640 00a6 03       		.byte	0x3
 1641 00a7 2C       		.byte	0x2c
 1642 00a8 41000000 		.4byte	0x41
 1643 00ac 08       		.uleb128 0x8
 1644 00ad 95040000 		.4byte	.LASF14
 1645 00b1 04       		.byte	0x4
 1646 00b2 E701     		.2byte	0x1e7
 1647 00b4 2C000000 		.4byte	0x2c
 1648 00b8 08       		.uleb128 0x8
 1649 00b9 77010000 		.4byte	.LASF15
 1650 00bd 04       		.byte	0x4
 1651 00be E801     		.2byte	0x1e8
 1652 00c0 3A000000 		.4byte	0x3a
 1653 00c4 08       		.uleb128 0x8
 1654 00c5 9D020000 		.4byte	.LASF16
 1655 00c9 04       		.byte	0x4
 1656 00ca EA01     		.2byte	0x1ea
 1657 00cc 25000000 		.4byte	0x25
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 38


 1658 00d0 08       		.uleb128 0x8
 1659 00d1 97010000 		.4byte	.LASF17
 1660 00d5 04       		.byte	0x4
 1661 00d6 EB01     		.2byte	0x1eb
 1662 00d8 33000000 		.4byte	0x33
 1663 00dc 02       		.uleb128 0x2
 1664 00dd 04       		.byte	0x4
 1665 00de 04       		.byte	0x4
 1666 00df F4010000 		.4byte	.LASF18
 1667 00e3 02       		.uleb128 0x2
 1668 00e4 08       		.byte	0x8
 1669 00e5 04       		.byte	0x4
 1670 00e6 EB040000 		.4byte	.LASF19
 1671 00ea 09       		.uleb128 0x9
 1672 00eb 2B040000 		.4byte	.LASF109
 1673 00ef 20       		.byte	0x20
 1674 00f0 05       		.byte	0x5
 1675 00f1 29       		.byte	0x29
 1676 00f2 C3010000 		.4byte	0x1c3
 1677 00f6 0A       		.uleb128 0xa
 1678 00f7 11060000 		.4byte	.LASF20
 1679 00fb 05       		.byte	0x5
 1680 00fc 2A       		.byte	0x2a
 1681 00fd C4000000 		.4byte	0xc4
 1682 0101 00       		.byte	0
 1683 0102 0A       		.uleb128 0xa
 1684 0103 91010000 		.4byte	.LASF21
 1685 0107 05       		.byte	0x5
 1686 0108 2B       		.byte	0x2b
 1687 0109 AC000000 		.4byte	0xac
 1688 010d 01       		.byte	0x1
 1689 010e 0A       		.uleb128 0xa
 1690 010f 50040000 		.4byte	.LASF22
 1691 0113 05       		.byte	0x5
 1692 0114 2C       		.byte	0x2c
 1693 0115 D0000000 		.4byte	0xd0
 1694 0119 02       		.byte	0x2
 1695 011a 0A       		.uleb128 0xa
 1696 011b 9A050000 		.4byte	.LASF23
 1697 011f 05       		.byte	0x5
 1698 0120 2D       		.byte	0x2d
 1699 0121 D0000000 		.4byte	0xd0
 1700 0125 04       		.byte	0x4
 1701 0126 0A       		.uleb128 0xa
 1702 0127 45050000 		.4byte	.LASF24
 1703 012b 05       		.byte	0x5
 1704 012c 2E       		.byte	0x2e
 1705 012d D0000000 		.4byte	0xd0
 1706 0131 06       		.byte	0x6
 1707 0132 0A       		.uleb128 0xa
 1708 0133 D0020000 		.4byte	.LASF25
 1709 0137 05       		.byte	0x5
 1710 0138 2F       		.byte	0x2f
 1711 0139 D0000000 		.4byte	0xd0
 1712 013d 08       		.byte	0x8
 1713 013e 0A       		.uleb128 0xa
 1714 013f 3D050000 		.4byte	.LASF26
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 39


 1715 0143 05       		.byte	0x5
 1716 0144 30       		.byte	0x30
 1717 0145 D0000000 		.4byte	0xd0
 1718 0149 0A       		.byte	0xa
 1719 014a 0A       		.uleb128 0xa
 1720 014b 6C030000 		.4byte	.LASF27
 1721 014f 05       		.byte	0x5
 1722 0150 31       		.byte	0x31
 1723 0151 D0000000 		.4byte	0xd0
 1724 0155 0C       		.byte	0xc
 1725 0156 0A       		.uleb128 0xa
 1726 0157 C3020000 		.4byte	.LASF28
 1727 015b 05       		.byte	0x5
 1728 015c 32       		.byte	0x32
 1729 015d D0000000 		.4byte	0xd0
 1730 0161 0E       		.byte	0xe
 1731 0162 0A       		.uleb128 0xa
 1732 0163 F4030000 		.4byte	.LASF29
 1733 0167 05       		.byte	0x5
 1734 0168 33       		.byte	0x33
 1735 0169 D0000000 		.4byte	0xd0
 1736 016d 10       		.byte	0x10
 1737 016e 0A       		.uleb128 0xa
 1738 016f 44030000 		.4byte	.LASF30
 1739 0173 05       		.byte	0x5
 1740 0174 34       		.byte	0x34
 1741 0175 D0000000 		.4byte	0xd0
 1742 0179 12       		.byte	0x12
 1743 017a 0A       		.uleb128 0xa
 1744 017b 0A020000 		.4byte	.LASF31
 1745 017f 05       		.byte	0x5
 1746 0180 35       		.byte	0x35
 1747 0181 D0000000 		.4byte	0xd0
 1748 0185 14       		.byte	0x14
 1749 0186 0A       		.uleb128 0xa
 1750 0187 B0010000 		.4byte	.LASF32
 1751 018b 05       		.byte	0x5
 1752 018c 36       		.byte	0x36
 1753 018d D0000000 		.4byte	0xd0
 1754 0191 16       		.byte	0x16
 1755 0192 0A       		.uleb128 0xa
 1756 0193 65000000 		.4byte	.LASF33
 1757 0197 05       		.byte	0x5
 1758 0198 37       		.byte	0x37
 1759 0199 D0000000 		.4byte	0xd0
 1760 019d 18       		.byte	0x18
 1761 019e 0A       		.uleb128 0xa
 1762 019f 02020000 		.4byte	.LASF34
 1763 01a3 05       		.byte	0x5
 1764 01a4 38       		.byte	0x38
 1765 01a5 D0000000 		.4byte	0xd0
 1766 01a9 1A       		.byte	0x1a
 1767 01aa 0A       		.uleb128 0xa
 1768 01ab E1030000 		.4byte	.LASF35
 1769 01af 05       		.byte	0x5
 1770 01b0 39       		.byte	0x39
 1771 01b1 D0000000 		.4byte	0xd0
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 40


 1772 01b5 1C       		.byte	0x1c
 1773 01b6 0A       		.uleb128 0xa
 1774 01b7 68040000 		.4byte	.LASF36
 1775 01bb 05       		.byte	0x5
 1776 01bc 3A       		.byte	0x3a
 1777 01bd D0000000 		.4byte	0xd0
 1778 01c1 1E       		.byte	0x1e
 1779 01c2 00       		.byte	0
 1780 01c3 0B       		.uleb128 0xb
 1781 01c4 656F6300 		.ascii	"eoc\000"
 1782 01c8 01       		.byte	0x1
 1783 01c9 54       		.byte	0x54
 1784 01ca 00000000 		.4byte	.LFB64
 1785 01ce 18000000 		.4byte	.LFE64-.LFB64
 1786 01d2 01       		.uleb128 0x1
 1787 01d3 9C       		.byte	0x9c
 1788 01d4 0C       		.uleb128 0xc
 1789 01d5 23030000 		.4byte	.LASF37
 1790 01d9 01       		.byte	0x1
 1791 01da 58       		.byte	0x58
 1792 01db 00000000 		.4byte	.LFB65
 1793 01df 18000000 		.4byte	.LFE65-.LFB65
 1794 01e3 01       		.uleb128 0x1
 1795 01e4 9C       		.byte	0x9c
 1796 01e5 0D       		.uleb128 0xd
 1797 01e6 B0000000 		.4byte	.LASF53
 1798 01ea 01       		.byte	0x1
 1799 01eb 5C       		.byte	0x5c
 1800 01ec 68000000 		.4byte	0x68
 1801 01f0 00000000 		.4byte	.LFB66
 1802 01f4 00080000 		.4byte	.LFE66-.LFB66
 1803 01f8 01       		.uleb128 0x1
 1804 01f9 9C       		.byte	0x9c
 1805 01fa 75030000 		.4byte	0x375
 1806 01fe 0E       		.uleb128 0xe
 1807 01ff 16000000 		.4byte	.LASF38
 1808 0203 01       		.byte	0x1
 1809 0204 79       		.byte	0x79
 1810 0205 75030000 		.4byte	0x375
 1811 0209 03       		.uleb128 0x3
 1812 020a 91       		.byte	0x91
 1813 020b D077     		.sleb128 -1072
 1814 020d 0E       		.uleb128 0xe
 1815 020e BA050000 		.4byte	.LASF39
 1816 0212 01       		.byte	0x1
 1817 0213 7B       		.byte	0x7b
 1818 0214 8C030000 		.4byte	0x38c
 1819 0218 03       		.uleb128 0x3
 1820 0219 91       		.byte	0x91
 1821 021a DC73     		.sleb128 -1572
 1822 021c 0E       		.uleb128 0xe
 1823 021d 35040000 		.4byte	.LASF40
 1824 0221 01       		.byte	0x1
 1825 0222 7C       		.byte	0x7c
 1826 0223 8C030000 		.4byte	0x38c
 1827 0227 03       		.uleb128 0x3
 1828 0228 91       		.byte	0x91
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 41


 1829 0229 E86F     		.sleb128 -2072
 1830 022b 0E       		.uleb128 0xe
 1831 022c FA010000 		.4byte	.LASF41
 1832 0230 01       		.byte	0x1
 1833 0231 97       		.byte	0x97
 1834 0232 68000000 		.4byte	0x68
 1835 0236 02       		.uleb128 0x2
 1836 0237 91       		.byte	0x91
 1837 0238 64       		.sleb128 -28
 1838 0239 0E       		.uleb128 0xe
 1839 023a D5030000 		.4byte	.LASF42
 1840 023e 01       		.byte	0x1
 1841 023f 98       		.byte	0x98
 1842 0240 68000000 		.4byte	0x68
 1843 0244 02       		.uleb128 0x2
 1844 0245 91       		.byte	0x91
 1845 0246 60       		.sleb128 -32
 1846 0247 0E       		.uleb128 0xe
 1847 0248 DC050000 		.4byte	.LASF43
 1848 024c 01       		.byte	0x1
 1849 024d 99       		.byte	0x99
 1850 024e 9D030000 		.4byte	0x39d
 1851 0252 03       		.uleb128 0x3
 1852 0253 91       		.byte	0x91
 1853 0254 DC6E     		.sleb128 -2212
 1854 0256 0F       		.uleb128 0xf
 1855 0257 6400     		.ascii	"d\000"
 1856 0259 01       		.byte	0x1
 1857 025a 9A       		.byte	0x9a
 1858 025b 68000000 		.4byte	0x68
 1859 025f 02       		.uleb128 0x2
 1860 0260 91       		.byte	0x91
 1861 0261 5C       		.sleb128 -36
 1862 0262 10       		.uleb128 0x10
 1863 0263 4A000000 		.4byte	.LBB2
 1864 0267 56000000 		.4byte	.LBE2-.LBB2
 1865 026b 7C020000 		.4byte	0x27c
 1866 026f 0F       		.uleb128 0xf
 1867 0270 6900     		.ascii	"i\000"
 1868 0272 01       		.byte	0x1
 1869 0273 7F       		.byte	0x7f
 1870 0274 68000000 		.4byte	0x68
 1871 0278 02       		.uleb128 0x2
 1872 0279 91       		.byte	0x91
 1873 027a 6C       		.sleb128 -20
 1874 027b 00       		.byte	0
 1875 027c 10       		.uleb128 0x10
 1876 027d C6000000 		.4byte	.LBB3
 1877 0281 62000000 		.4byte	.LBE3-.LBB3
 1878 0285 AF020000 		.4byte	0x2af
 1879 0289 0F       		.uleb128 0xf
 1880 028a 6900     		.ascii	"i\000"
 1881 028c 01       		.byte	0x1
 1882 028d 8D       		.byte	0x8d
 1883 028e 68000000 		.4byte	0x68
 1884 0292 02       		.uleb128 0x2
 1885 0293 91       		.byte	0x91
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 42


 1886 0294 68       		.sleb128 -24
 1887 0295 11       		.uleb128 0x11
 1888 0296 DE000000 		.4byte	.LBB4
 1889 029a 36000000 		.4byte	.LBE4-.LBB4
 1890 029e 0E       		.uleb128 0xe
 1891 029f D8020000 		.4byte	.LASF44
 1892 02a3 01       		.byte	0x1
 1893 02a4 8F       		.byte	0x8f
 1894 02a5 AD030000 		.4byte	0x3ad
 1895 02a9 03       		.uleb128 0x3
 1896 02aa 91       		.byte	0x91
 1897 02ab D06E     		.sleb128 -2224
 1898 02ad 00       		.byte	0
 1899 02ae 00       		.byte	0
 1900 02af 10       		.uleb128 0x10
 1901 02b0 52010000 		.4byte	.LBB5
 1902 02b4 FE000000 		.4byte	.LBE5-.LBB5
 1903 02b8 E2020000 		.4byte	0x2e2
 1904 02bc 0F       		.uleb128 0xf
 1905 02bd 6900     		.ascii	"i\000"
 1906 02bf 01       		.byte	0x1
 1907 02c0 9C       		.byte	0x9c
 1908 02c1 68000000 		.4byte	0x68
 1909 02c5 02       		.uleb128 0x2
 1910 02c6 91       		.byte	0x91
 1911 02c7 58       		.sleb128 -40
 1912 02c8 11       		.uleb128 0x11
 1913 02c9 7A010000 		.4byte	.LBB6
 1914 02cd C0000000 		.4byte	.LBE6-.LBB6
 1915 02d1 0E       		.uleb128 0xe
 1916 02d2 B2050000 		.4byte	.LASF45
 1917 02d6 01       		.byte	0x1
 1918 02d7 A0       		.byte	0xa0
 1919 02d8 91000000 		.4byte	0x91
 1920 02dc 03       		.uleb128 0x3
 1921 02dd 91       		.byte	0x91
 1922 02de B86E     		.sleb128 -2248
 1923 02e0 00       		.byte	0
 1924 02e1 00       		.byte	0
 1925 02e2 10       		.uleb128 0x10
 1926 02e3 88020000 		.4byte	.LBB7
 1927 02e7 98000000 		.4byte	.LBE7-.LBB7
 1928 02eb FF020000 		.4byte	0x2ff
 1929 02ef 0E       		.uleb128 0xe
 1930 02f0 88030000 		.4byte	.LASF46
 1931 02f4 01       		.byte	0x1
 1932 02f5 CD       		.byte	0xcd
 1933 02f6 68000000 		.4byte	0x68
 1934 02fa 03       		.uleb128 0x3
 1935 02fb 91       		.byte	0x91
 1936 02fc B87F     		.sleb128 -72
 1937 02fe 00       		.byte	0
 1938 02ff 11       		.uleb128 0x11
 1939 0300 32040000 		.4byte	.LBB8
 1940 0304 A0030000 		.4byte	.LBE8-.LBB8
 1941 0308 0E       		.uleb128 0xe
 1942 0309 F7050000 		.4byte	.LASF47
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 43


 1943 030d 01       		.byte	0x1
 1944 030e EF       		.byte	0xef
 1945 030f 68000000 		.4byte	0x68
 1946 0313 02       		.uleb128 0x2
 1947 0314 91       		.byte	0x91
 1948 0315 54       		.sleb128 -44
 1949 0316 0E       		.uleb128 0xe
 1950 0317 C0040000 		.4byte	.LASF48
 1951 031b 01       		.byte	0x1
 1952 031c F0       		.byte	0xf0
 1953 031d 68000000 		.4byte	0x68
 1954 0321 02       		.uleb128 0x2
 1955 0322 91       		.byte	0x91
 1956 0323 50       		.sleb128 -48
 1957 0324 0E       		.uleb128 0xe
 1958 0325 06040000 		.4byte	.LASF49
 1959 0329 01       		.byte	0x1
 1960 032a F1       		.byte	0xf1
 1961 032b 68000000 		.4byte	0x68
 1962 032f 02       		.uleb128 0x2
 1963 0330 91       		.byte	0x91
 1964 0331 4C       		.sleb128 -52
 1965 0332 0E       		.uleb128 0xe
 1966 0333 C6050000 		.4byte	.LASF50
 1967 0337 01       		.byte	0x1
 1968 0338 F2       		.byte	0xf2
 1969 0339 68000000 		.4byte	0x68
 1970 033d 02       		.uleb128 0x2
 1971 033e 91       		.byte	0x91
 1972 033f 48       		.sleb128 -56
 1973 0340 0E       		.uleb128 0xe
 1974 0341 75030000 		.4byte	.LASF51
 1975 0345 01       		.byte	0x1
 1976 0346 F3       		.byte	0xf3
 1977 0347 68000000 		.4byte	0x68
 1978 034b 02       		.uleb128 0x2
 1979 034c 91       		.byte	0x91
 1980 034d 44       		.sleb128 -60
 1981 034e 0E       		.uleb128 0xe
 1982 034f 29030000 		.4byte	.LASF52
 1983 0353 01       		.byte	0x1
 1984 0354 F4       		.byte	0xf4
 1985 0355 68000000 		.4byte	0x68
 1986 0359 02       		.uleb128 0x2
 1987 035a 91       		.byte	0x91
 1988 035b 40       		.sleb128 -64
 1989 035c 11       		.uleb128 0x11
 1990 035d 62040000 		.4byte	.LBB9
 1991 0361 C4000000 		.4byte	.LBE9-.LBB9
 1992 0365 0F       		.uleb128 0xf
 1993 0366 6900     		.ascii	"i\000"
 1994 0368 01       		.byte	0x1
 1995 0369 F5       		.byte	0xf5
 1996 036a 68000000 		.4byte	0x68
 1997 036e 03       		.uleb128 0x3
 1998 036f 91       		.byte	0x91
 1999 0370 BC7F     		.sleb128 -68
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 44


 2000 0372 00       		.byte	0
 2001 0373 00       		.byte	0
 2002 0374 00       		.byte	0
 2003 0375 06       		.uleb128 0x6
 2004 0376 2C000000 		.4byte	0x2c
 2005 037a 8C030000 		.4byte	0x38c
 2006 037e 12       		.uleb128 0x12
 2007 037f 7D000000 		.4byte	0x7d
 2008 0383 F301     		.2byte	0x1f3
 2009 0385 07       		.uleb128 0x7
 2010 0386 7D000000 		.4byte	0x7d
 2011 038a 01       		.byte	0x1
 2012 038b 00       		.byte	0
 2013 038c 06       		.uleb128 0x6
 2014 038d 2C000000 		.4byte	0x2c
 2015 0391 9D030000 		.4byte	0x39d
 2016 0395 12       		.uleb128 0x12
 2017 0396 7D000000 		.4byte	0x7d
 2018 039a F301     		.2byte	0x1f3
 2019 039c 00       		.byte	0
 2020 039d 06       		.uleb128 0x6
 2021 039e 68000000 		.4byte	0x68
 2022 03a2 AD030000 		.4byte	0x3ad
 2023 03a6 07       		.uleb128 0x7
 2024 03a7 7D000000 		.4byte	0x7d
 2025 03ab 22       		.byte	0x22
 2026 03ac 00       		.byte	0
 2027 03ad 06       		.uleb128 0x6
 2028 03ae 8A000000 		.4byte	0x8a
 2029 03b2 BD030000 		.4byte	0x3bd
 2030 03b6 07       		.uleb128 0x7
 2031 03b7 7D000000 		.4byte	0x7d
 2032 03bb 09       		.byte	0x9
 2033 03bc 00       		.byte	0
 2034 03bd 13       		.uleb128 0x13
 2035 03be 90020000 		.4byte	.LASF54
 2036 03c2 01       		.byte	0x1
 2037 03c3 8F01     		.2byte	0x18f
 2038 03c5 00000000 		.4byte	.LFB67
 2039 03c9 3E000000 		.4byte	.LFE67-.LFB67
 2040 03cd 01       		.uleb128 0x1
 2041 03ce 9C       		.byte	0x9c
 2042 03cf E1030000 		.4byte	0x3e1
 2043 03d3 14       		.uleb128 0x14
 2044 03d4 7300     		.ascii	"s\000"
 2045 03d6 01       		.byte	0x1
 2046 03d7 8F01     		.2byte	0x18f
 2047 03d9 84000000 		.4byte	0x84
 2048 03dd 02       		.uleb128 0x2
 2049 03de 91       		.byte	0x91
 2050 03df 74       		.sleb128 -12
 2051 03e0 00       		.byte	0
 2052 03e1 13       		.uleb128 0x13
 2053 03e2 00000000 		.4byte	.LASF55
 2054 03e6 01       		.byte	0x1
 2055 03e7 9C01     		.2byte	0x19c
 2056 03e9 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 45


 2057 03ed 26000000 		.4byte	.LFE68-.LFB68
 2058 03f1 01       		.uleb128 0x1
 2059 03f2 9C       		.byte	0x9c
 2060 03f3 05040000 		.4byte	0x405
 2061 03f7 14       		.uleb128 0x14
 2062 03f8 6300     		.ascii	"c\000"
 2063 03fa 01       		.byte	0x1
 2064 03fb 9C01     		.2byte	0x19c
 2065 03fd 8A000000 		.4byte	0x8a
 2066 0401 02       		.uleb128 0x2
 2067 0402 91       		.byte	0x91
 2068 0403 77       		.sleb128 -9
 2069 0404 00       		.byte	0
 2070 0405 15       		.uleb128 0x15
 2071 0406 43040000 		.4byte	.LASF56
 2072 040a 06       		.byte	0x6
 2073 040b 1207     		.2byte	0x712
 2074 040d 11040000 		.4byte	0x411
 2075 0411 16       		.uleb128 0x16
 2076 0412 A1000000 		.4byte	0xa1
 2077 0416 17       		.uleb128 0x17
 2078 0417 747300   		.ascii	"ts\000"
 2079 041a 05       		.byte	0x5
 2080 041b 10       		.byte	0x10
 2081 041c AC000000 		.4byte	0xac
 2082 0420 05       		.uleb128 0x5
 2083 0421 03       		.byte	0x3
 2084 0422 00000000 		.4byte	ts
 2085 0426 18       		.uleb128 0x18
 2086 0427 63050000 		.4byte	.LASF57
 2087 042b 05       		.byte	0x5
 2088 042c 11       		.byte	0x11
 2089 042d B8000000 		.4byte	0xb8
 2090 0431 05       		.uleb128 0x5
 2091 0432 03       		.byte	0x3
 2092 0433 00000000 		.4byte	ts_enc
 2093 0437 18       		.uleb128 0x18
 2094 0438 6A050000 		.4byte	.LASF58
 2095 043c 05       		.byte	0x5
 2096 043d 12       		.byte	0x12
 2097 043e B8000000 		.4byte	0xb8
 2098 0442 05       		.uleb128 0x5
 2099 0443 03       		.byte	0x3
 2100 0444 00000000 		.4byte	ts_update
 2101 0448 18       		.uleb128 0x18
 2102 0449 18050000 		.4byte	.LASF59
 2103 044d 05       		.byte	0x5
 2104 044e 13       		.byte	0x13
 2105 044f B8000000 		.4byte	0xb8
 2106 0453 05       		.uleb128 0x5
 2107 0454 03       		.byte	0x3
 2108 0455 00000000 		.4byte	ts_speed
 2109 0459 18       		.uleb128 0x18
 2110 045a 4D010000 		.4byte	.LASF60
 2111 045e 05       		.byte	0x5
 2112 045f 14       		.byte	0x14
 2113 0460 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 46


 2114 0464 05       		.uleb128 0x5
 2115 0465 03       		.byte	0x3
 2116 0466 00000000 		.4byte	ts_display
 2117 046a 18       		.uleb128 0x18
 2118 046b 27050000 		.4byte	.LASF61
 2119 046f 05       		.byte	0x5
 2120 0470 16       		.byte	0x16
 2121 0471 AC000000 		.4byte	0xac
 2122 0475 05       		.uleb128 0x5
 2123 0476 03       		.byte	0x3
 2124 0477 00000000 		.4byte	flag_ts_enc
 2125 047b 18       		.uleb128 0x18
 2126 047c A2020000 		.4byte	.LASF62
 2127 0480 05       		.byte	0x5
 2128 0481 17       		.byte	0x17
 2129 0482 AC000000 		.4byte	0xac
 2130 0486 05       		.uleb128 0x5
 2131 0487 03       		.byte	0x3
 2132 0488 00000000 		.4byte	flag_ts_update
 2133 048c 18       		.uleb128 0x18
 2134 048d 57000000 		.4byte	.LASF63
 2135 0491 05       		.byte	0x5
 2136 0492 18       		.byte	0x18
 2137 0493 AC000000 		.4byte	0xac
 2138 0497 05       		.uleb128 0x5
 2139 0498 03       		.byte	0x3
 2140 0499 00000000 		.4byte	flag_ts_speed
 2141 049d 18       		.uleb128 0x18
 2142 049e 0B030000 		.4byte	.LASF64
 2143 04a2 05       		.byte	0x5
 2144 04a3 19       		.byte	0x19
 2145 04a4 AC000000 		.4byte	0xac
 2146 04a8 05       		.uleb128 0x5
 2147 04a9 03       		.byte	0x3
 2148 04aa 00000000 		.4byte	flag_ts_display
 2149 04ae 18       		.uleb128 0x18
 2150 04af 1B030000 		.4byte	.LASF65
 2151 04b3 05       		.byte	0x5
 2152 04b4 1C       		.byte	0x1c
 2153 04b5 AC000000 		.4byte	0xac
 2154 04b9 05       		.uleb128 0x5
 2155 04ba 03       		.byte	0x3
 2156 04bb 00000000 		.4byte	flag_rx
 2157 04bf 18       		.uleb128 0x18
 2158 04c0 32000000 		.4byte	.LASF66
 2159 04c4 05       		.byte	0x5
 2160 04c5 1D       		.byte	0x1d
 2161 04c6 AC000000 		.4byte	0xac
 2162 04ca 05       		.uleb128 0x5
 2163 04cb 03       		.byte	0x3
 2164 04cc 00000000 		.4byte	flag_packet
 2165 04d0 18       		.uleb128 0x18
 2166 04d1 C6030000 		.4byte	.LASF67
 2167 04d5 05       		.byte	0x5
 2168 04d6 1E       		.byte	0x1e
 2169 04d7 AC000000 		.4byte	0xac
 2170 04db 05       		.uleb128 0x5
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 47


 2171 04dc 03       		.byte	0x3
 2172 04dd 00000000 		.4byte	flag_KB_string
 2173 04e1 18       		.uleb128 0x18
 2174 04e2 F2040000 		.4byte	.LASF68
 2175 04e6 05       		.byte	0x5
 2176 04e7 20       		.byte	0x20
 2177 04e8 AC000000 		.4byte	0xac
 2178 04ec 05       		.uleb128 0x5
 2179 04ed 03       		.byte	0x3
 2180 04ee 00000000 		.4byte	dataready_flag
 2181 04f2 18       		.uleb128 0x18
 2182 04f3 7E050000 		.4byte	.LASF69
 2183 04f7 05       		.byte	0x5
 2184 04f8 22       		.byte	0x22
 2185 04f9 AC000000 		.4byte	0xac
 2186 04fd 05       		.uleb128 0x5
 2187 04fe 03       		.byte	0x3
 2188 04ff 00000000 		.4byte	flag_rf_transmission_active
 2189 0503 06       		.uleb128 0x6
 2190 0504 8A000000 		.4byte	0x8a
 2191 0508 13050000 		.4byte	0x513
 2192 050c 07       		.uleb128 0x7
 2193 050d 7D000000 		.4byte	0x7d
 2194 0511 3F       		.byte	0x3f
 2195 0512 00       		.byte	0
 2196 0513 18       		.uleb128 0x18
 2197 0514 B2040000 		.4byte	.LASF70
 2198 0518 05       		.byte	0x5
 2199 0519 25       		.byte	0x25
 2200 051a 03050000 		.4byte	0x503
 2201 051e 05       		.uleb128 0x5
 2202 051f 03       		.byte	0x3
 2203 0520 00000000 		.4byte	displaystring
 2204 0524 18       		.uleb128 0x18
 2205 0525 D5010000 		.4byte	.LASF71
 2206 0529 05       		.byte	0x5
 2207 052a 26       		.byte	0x26
 2208 052b 03050000 		.4byte	0x503
 2209 052f 05       		.uleb128 0x5
 2210 0530 03       		.byte	0x3
 2211 0531 00000000 		.4byte	line
 2212 0535 18       		.uleb128 0x18
 2213 0536 58030000 		.4byte	.LASF72
 2214 053a 05       		.byte	0x5
 2215 053b 26       		.byte	0x26
 2216 053c 03050000 		.4byte	0x503
 2217 0540 05       		.uleb128 0x5
 2218 0541 03       		.byte	0x3
 2219 0542 00000000 		.4byte	entry
 2220 0546 06       		.uleb128 0x6
 2221 0547 AC000000 		.4byte	0xac
 2222 054b 56050000 		.4byte	0x556
 2223 054f 07       		.uleb128 0x7
 2224 0550 7D000000 		.4byte	0x7d
 2225 0554 3F       		.byte	0x3f
 2226 0555 00       		.byte	0
 2227 0556 18       		.uleb128 0x18
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 48


 2228 0557 B5000000 		.4byte	.LASF73
 2229 055b 05       		.byte	0x5
 2230 055c 27       		.byte	0x27
 2231 055d 46050000 		.4byte	0x546
 2232 0561 05       		.uleb128 0x5
 2233 0562 03       		.byte	0x3
 2234 0563 00000000 		.4byte	usbBuffer
 2235 0567 18       		.uleb128 0x18
 2236 0568 9A000000 		.4byte	.LASF74
 2237 056c 05       		.byte	0x5
 2238 056d 3C       		.byte	0x3c
 2239 056e EA000000 		.4byte	0xea
 2240 0572 05       		.uleb128 0x5
 2241 0573 03       		.byte	0x3
 2242 0574 00000000 		.4byte	system_state
 2243 0578 18       		.uleb128 0x18
 2244 0579 A5050000 		.4byte	.LASF75
 2245 057d 01       		.byte	0x1
 2246 057e 28       		.byte	0x28
 2247 057f DC000000 		.4byte	0xdc
 2248 0583 05       		.uleb128 0x5
 2249 0584 03       		.byte	0x3
 2250 0585 00000000 		.4byte	TARGET_SPEED
 2251 0589 18       		.uleb128 0x18
 2252 058a FC030000 		.4byte	.LASF76
 2253 058e 01       		.byte	0x1
 2254 058f 29       		.byte	0x29
 2255 0590 68000000 		.4byte	0x68
 2256 0594 05       		.uleb128 0x5
 2257 0595 03       		.byte	0x3
 2258 0596 00000000 		.4byte	restoring
 2259 059a 18       		.uleb128 0x18
 2260 059b 66010000 		.4byte	.LASF77
 2261 059f 01       		.byte	0x1
 2262 05a0 2A       		.byte	0x2a
 2263 05a1 68000000 		.4byte	0x68
 2264 05a5 05       		.uleb128 0x5
 2265 05a6 03       		.byte	0x3
 2266 05a7 00000000 		.4byte	turningDirection
 2267 05ab 18       		.uleb128 0x18
 2268 05ac 0B050000 		.4byte	.LASF78
 2269 05b0 01       		.byte	0x1
 2270 05b1 2B       		.byte	0x2b
 2271 05b2 68000000 		.4byte	0x68
 2272 05b6 05       		.uleb128 0x5
 2273 05b7 03       		.byte	0x3
 2274 05b8 00000000 		.4byte	turningCount
 2275 05bc 18       		.uleb128 0x18
 2276 05bd 88040000 		.4byte	.LASF79
 2277 05c1 01       		.byte	0x1
 2278 05c2 2C       		.byte	0x2c
 2279 05c3 CD050000 		.4byte	0x5cd
 2280 05c7 05       		.uleb128 0x5
 2281 05c8 03       		.byte	0x3
 2282 05c9 00000000 		.4byte	shouldUpdate
 2283 05cd 16       		.uleb128 0x16
 2284 05ce 68000000 		.4byte	0x68
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 49


 2285 05d2 18       		.uleb128 0x18
 2286 05d3 FD020000 		.4byte	.LASF80
 2287 05d7 01       		.byte	0x1
 2288 05d8 2E       		.byte	0x2e
 2289 05d9 CD050000 		.4byte	0x5cd
 2290 05dd 05       		.uleb128 0x5
 2291 05de 03       		.byte	0x3
 2292 05df 00000000 		.4byte	dotsTravelled
 2293 05e3 18       		.uleb128 0x18
 2294 05e4 63040000 		.4byte	.LASF81
 2295 05e8 01       		.byte	0x1
 2296 05e9 35       		.byte	0x35
 2297 05ea CD050000 		.4byte	0x5cd
 2298 05ee 05       		.uleb128 0x5
 2299 05ef 03       		.byte	0x3
 2300 05f0 00000000 		.4byte	flag
 2301 05f4 06       		.uleb128 0x6
 2302 05f5 CD050000 		.4byte	0x5cd
 2303 05f9 05060000 		.4byte	0x605
 2304 05fd 12       		.uleb128 0x12
 2305 05fe 7D000000 		.4byte	0x7d
 2306 0602 E703     		.2byte	0x3e7
 2307 0604 00       		.byte	0
 2308 0605 18       		.uleb128 0x18
 2309 0606 9B040000 		.4byte	.LASF82
 2310 060a 01       		.byte	0x1
 2311 060b 36       		.byte	0x36
 2312 060c 16060000 		.4byte	0x616
 2313 0610 05       		.uleb128 0x5
 2314 0611 03       		.byte	0x3
 2315 0612 00000000 		.4byte	valuesLeftIntersection
 2316 0616 16       		.uleb128 0x16
 2317 0617 F4050000 		.4byte	0x5f4
 2318 061b 18       		.uleb128 0x18
 2319 061c 48000000 		.4byte	.LASF83
 2320 0620 01       		.byte	0x1
 2321 0621 37       		.byte	0x37
 2322 0622 2C060000 		.4byte	0x62c
 2323 0626 05       		.uleb128 0x5
 2324 0627 03       		.byte	0x3
 2325 0628 00000000 		.4byte	valuesLeftLine
 2326 062c 16       		.uleb128 0x16
 2327 062d F4050000 		.4byte	0x5f4
 2328 0631 18       		.uleb128 0x18
 2329 0632 1A040000 		.4byte	.LASF84
 2330 0636 01       		.byte	0x1
 2331 0637 38       		.byte	0x38
 2332 0638 42060000 		.4byte	0x642
 2333 063c 05       		.uleb128 0x5
 2334 063d 03       		.byte	0x3
 2335 063e 00000000 		.4byte	valuesMiddleLine
 2336 0642 16       		.uleb128 0x16
 2337 0643 F4050000 		.4byte	0x5f4
 2338 0647 18       		.uleb128 0x18
 2339 0648 77000000 		.4byte	.LASF85
 2340 064c 01       		.byte	0x1
 2341 064d 39       		.byte	0x39
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 50


 2342 064e 58060000 		.4byte	0x658
 2343 0652 05       		.uleb128 0x5
 2344 0653 03       		.byte	0x3
 2345 0654 00000000 		.4byte	valuesTurnComplete
 2346 0658 16       		.uleb128 0x16
 2347 0659 F4050000 		.4byte	0x5f4
 2348 065d 18       		.uleb128 0x18
 2349 065e 8A000000 		.4byte	.LASF86
 2350 0662 01       		.byte	0x1
 2351 0663 3A       		.byte	0x3a
 2352 0664 6E060000 		.4byte	0x66e
 2353 0668 05       		.uleb128 0x5
 2354 0669 03       		.byte	0x3
 2355 066a 00000000 		.4byte	valuesRightLine
 2356 066e 16       		.uleb128 0x16
 2357 066f F4050000 		.4byte	0x5f4
 2358 0673 18       		.uleb128 0x18
 2359 0674 BD010000 		.4byte	.LASF87
 2360 0678 01       		.byte	0x1
 2361 0679 3B       		.byte	0x3b
 2362 067a 84060000 		.4byte	0x684
 2363 067e 05       		.uleb128 0x5
 2364 067f 03       		.byte	0x3
 2365 0680 00000000 		.4byte	valuesRightIntersection
 2366 0684 16       		.uleb128 0x16
 2367 0685 F4050000 		.4byte	0x5f4
 2368 0689 18       		.uleb128 0x18
 2369 068a 21050000 		.4byte	.LASF88
 2370 068e 01       		.byte	0x1
 2371 068f 3C       		.byte	0x3c
 2372 0690 CD050000 		.4byte	0x5cd
 2373 0694 05       		.uleb128 0x5
 2374 0695 03       		.byte	0x3
 2375 0696 00000000 		.4byte	count
 2376 069a 18       		.uleb128 0x18
 2377 069b 57050000 		.4byte	.LASF89
 2378 069f 01       		.byte	0x1
 2379 06a0 3D       		.byte	0x3d
 2380 06a1 CD050000 		.4byte	0x5cd
 2381 06a5 05       		.uleb128 0x5
 2382 06a6 03       		.byte	0x3
 2383 06a7 00000000 		.4byte	turningLeft
 2384 06ab 18       		.uleb128 0x18
 2385 06ac 95030000 		.4byte	.LASF90
 2386 06b0 01       		.byte	0x1
 2387 06b1 3E       		.byte	0x3e
 2388 06b2 CD050000 		.4byte	0x5cd
 2389 06b6 05       		.uleb128 0x5
 2390 06b7 03       		.byte	0x3
 2391 06b8 00000000 		.4byte	turningRight
 2392 06bc 18       		.uleb128 0x18
 2393 06bd EB020000 		.4byte	.LASF91
 2394 06c1 01       		.byte	0x1
 2395 06c2 3F       		.byte	0x3f
 2396 06c3 CD050000 		.4byte	0x5cd
 2397 06c7 05       		.uleb128 0x5
 2398 06c8 03       		.byte	0x3
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 51


 2399 06c9 00000000 		.4byte	lastVeerDirection
 2400 06cd 18       		.uleb128 0x18
 2401 06ce 01050000 		.4byte	.LASF92
 2402 06d2 01       		.byte	0x1
 2403 06d3 41       		.byte	0x41
 2404 06d4 CD050000 		.4byte	0x5cd
 2405 06d8 05       		.uleb128 0x5
 2406 06d9 03       		.byte	0x3
 2407 06da 00000000 		.4byte	motorFlag
 2408 06de 18       		.uleb128 0x18
 2409 06df F2050000 		.4byte	.LASF93
 2410 06e3 01       		.byte	0x1
 2411 06e4 42       		.byte	0x42
 2412 06e5 CD050000 		.4byte	0x5cd
 2413 06e9 05       		.uleb128 0x5
 2414 06ea 03       		.byte	0x3
 2415 06eb 00000000 		.4byte	step
 2416 06ef 17       		.uleb128 0x17
 2417 06f0 76314C00 		.ascii	"v1L\000"
 2418 06f4 01       		.byte	0x1
 2419 06f5 43       		.byte	0x43
 2420 06f6 CD050000 		.4byte	0x5cd
 2421 06fa 05       		.uleb128 0x5
 2422 06fb 03       		.byte	0x3
 2423 06fc 00000000 		.4byte	v1L
 2424 0700 17       		.uleb128 0x17
 2425 0701 76324C00 		.ascii	"v2L\000"
 2426 0705 01       		.byte	0x1
 2427 0706 44       		.byte	0x44
 2428 0707 CD050000 		.4byte	0x5cd
 2429 070b 05       		.uleb128 0x5
 2430 070c 03       		.byte	0x3
 2431 070d 00000000 		.4byte	v2L
 2432 0711 17       		.uleb128 0x17
 2433 0712 76315200 		.ascii	"v1R\000"
 2434 0716 01       		.byte	0x1
 2435 0717 45       		.byte	0x45
 2436 0718 CD050000 		.4byte	0x5cd
 2437 071c 05       		.uleb128 0x5
 2438 071d 03       		.byte	0x3
 2439 071e 00000000 		.4byte	v1R
 2440 0722 17       		.uleb128 0x17
 2441 0723 76325200 		.ascii	"v2R\000"
 2442 0727 01       		.byte	0x1
 2443 0728 46       		.byte	0x46
 2444 0729 CD050000 		.4byte	0x5cd
 2445 072d 05       		.uleb128 0x5
 2446 072e 03       		.byte	0x3
 2447 072f 00000000 		.4byte	v2R
 2448 0733 18       		.uleb128 0x18
 2449 0734 DA010000 		.4byte	.LASF94
 2450 0738 01       		.byte	0x1
 2451 0739 47       		.byte	0x47
 2452 073a CD050000 		.4byte	0x5cd
 2453 073e 05       		.uleb128 0x5
 2454 073f 03       		.byte	0x3
 2455 0740 00000000 		.4byte	numRotationsL
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 52


 2456 0744 18       		.uleb128 0x18
 2457 0745 E4050000 		.4byte	.LASF95
 2458 0749 01       		.byte	0x1
 2459 074a 48       		.byte	0x48
 2460 074b CD050000 		.4byte	0x5cd
 2461 074f 05       		.uleb128 0x5
 2462 0750 03       		.byte	0x3
 2463 0751 00000000 		.4byte	numRotationsR
 2464 0755 18       		.uleb128 0x18
 2465 0756 EA030000 		.4byte	.LASF96
 2466 075a 01       		.byte	0x1
 2467 075b 49       		.byte	0x49
 2468 075c CD050000 		.4byte	0x5cd
 2469 0760 05       		.uleb128 0x5
 2470 0761 03       		.byte	0x3
 2471 0762 00000000 		.4byte	turnCount
 2472 0766 18       		.uleb128 0x18
 2473 0767 B1020000 		.4byte	.LASF97
 2474 076b 01       		.byte	0x1
 2475 076c 4A       		.byte	0x4a
 2476 076d CD050000 		.4byte	0x5cd
 2477 0771 05       		.uleb128 0x5
 2478 0772 03       		.byte	0x3
 2479 0773 00000000 		.4byte	distanceTravelled
 2480 0777 18       		.uleb128 0x18
 2481 0778 7E010000 		.4byte	.LASF98
 2482 077c 01       		.byte	0x1
 2483 077d 4B       		.byte	0x4b
 2484 077e CD050000 		.4byte	0x5cd
 2485 0782 05       		.uleb128 0x5
 2486 0783 03       		.byte	0x3
 2487 0784 00000000 		.4byte	distancePerSecondL
 2488 0788 18       		.uleb128 0x18
 2489 0789 9D010000 		.4byte	.LASF99
 2490 078d 01       		.byte	0x1
 2491 078e 4C       		.byte	0x4c
 2492 078f CD050000 		.4byte	0x5cd
 2493 0793 05       		.uleb128 0x5
 2494 0794 03       		.byte	0x3
 2495 0795 00000000 		.4byte	distancePerSecondR
 2496 0799 18       		.uleb128 0x18
 2497 079a 13020000 		.4byte	.LASF100
 2498 079e 01       		.byte	0x1
 2499 079f 4D       		.byte	0x4d
 2500 07a0 CD050000 		.4byte	0x5cd
 2501 07a4 05       		.uleb128 0x5
 2502 07a5 03       		.byte	0x3
 2503 07a6 00000000 		.4byte	distancePerSecondAvg
 2504 07aa 18       		.uleb128 0x18
 2505 07ab 58010000 		.4byte	.LASF101
 2506 07af 01       		.byte	0x1
 2507 07b0 4E       		.byte	0x4e
 2508 07b1 CD050000 		.4byte	0x5cd
 2509 07b5 05       		.uleb128 0x5
 2510 07b6 03       		.byte	0x3
 2511 07b7 00000000 		.4byte	prevTurnState
 2512 07bb 18       		.uleb128 0x18
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 53


 2513 07bc 74050000 		.4byte	.LASF102
 2514 07c0 01       		.byte	0x1
 2515 07c1 4F       		.byte	0x4f
 2516 07c2 CD050000 		.4byte	0x5cd
 2517 07c6 05       		.uleb128 0x5
 2518 07c7 03       		.byte	0x3
 2519 07c8 00000000 		.4byte	turnState
 2520 07cc 18       		.uleb128 0x18
 2521 07cd 0B000000 		.4byte	.LASF103
 2522 07d1 01       		.byte	0x1
 2523 07d2 50       		.byte	0x50
 2524 07d3 CD050000 		.4byte	0x5cd
 2525 07d7 05       		.uleb128 0x5
 2526 07d8 03       		.byte	0x3
 2527 07d9 00000000 		.4byte	turnEnable
 2528 07dd 18       		.uleb128 0x18
 2529 07de 3E000000 		.4byte	.LASF104
 2530 07e2 01       		.byte	0x1
 2531 07e3 51       		.byte	0x51
 2532 07e4 CD050000 		.4byte	0x5cd
 2533 07e8 05       		.uleb128 0x5
 2534 07e9 03       		.byte	0x3
 2535 07ea 00000000 		.4byte	turnTimer
 2536 07ee 18       		.uleb128 0x18
 2537 07ef 1E000000 		.4byte	.LASF105
 2538 07f3 01       		.byte	0x1
 2539 07f4 52       		.byte	0x52
 2540 07f5 68000000 		.4byte	0x68
 2541 07f9 05       		.uleb128 0x5
 2542 07fa 03       		.byte	0x3
 2543 07fb 00000000 		.4byte	lastAdjustDirection
 2544 07ff 00       		.byte	0
 2545              		.section	.debug_abbrev,"",%progbits
 2546              	.Ldebug_abbrev0:
 2547 0000 01       		.uleb128 0x1
 2548 0001 11       		.uleb128 0x11
 2549 0002 01       		.byte	0x1
 2550 0003 25       		.uleb128 0x25
 2551 0004 0E       		.uleb128 0xe
 2552 0005 13       		.uleb128 0x13
 2553 0006 0B       		.uleb128 0xb
 2554 0007 03       		.uleb128 0x3
 2555 0008 0E       		.uleb128 0xe
 2556 0009 1B       		.uleb128 0x1b
 2557 000a 0E       		.uleb128 0xe
 2558 000b 55       		.uleb128 0x55
 2559 000c 17       		.uleb128 0x17
 2560 000d 11       		.uleb128 0x11
 2561 000e 01       		.uleb128 0x1
 2562 000f 10       		.uleb128 0x10
 2563 0010 17       		.uleb128 0x17
 2564 0011 00       		.byte	0
 2565 0012 00       		.byte	0
 2566 0013 02       		.uleb128 0x2
 2567 0014 24       		.uleb128 0x24
 2568 0015 00       		.byte	0
 2569 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 54


 2570 0017 0B       		.uleb128 0xb
 2571 0018 3E       		.uleb128 0x3e
 2572 0019 0B       		.uleb128 0xb
 2573 001a 03       		.uleb128 0x3
 2574 001b 0E       		.uleb128 0xe
 2575 001c 00       		.byte	0
 2576 001d 00       		.byte	0
 2577 001e 03       		.uleb128 0x3
 2578 001f 16       		.uleb128 0x16
 2579 0020 00       		.byte	0
 2580 0021 03       		.uleb128 0x3
 2581 0022 0E       		.uleb128 0xe
 2582 0023 3A       		.uleb128 0x3a
 2583 0024 0B       		.uleb128 0xb
 2584 0025 3B       		.uleb128 0x3b
 2585 0026 0B       		.uleb128 0xb
 2586 0027 49       		.uleb128 0x49
 2587 0028 13       		.uleb128 0x13
 2588 0029 00       		.byte	0
 2589 002a 00       		.byte	0
 2590 002b 04       		.uleb128 0x4
 2591 002c 24       		.uleb128 0x24
 2592 002d 00       		.byte	0
 2593 002e 0B       		.uleb128 0xb
 2594 002f 0B       		.uleb128 0xb
 2595 0030 3E       		.uleb128 0x3e
 2596 0031 0B       		.uleb128 0xb
 2597 0032 03       		.uleb128 0x3
 2598 0033 08       		.uleb128 0x8
 2599 0034 00       		.byte	0
 2600 0035 00       		.byte	0
 2601 0036 05       		.uleb128 0x5
 2602 0037 0F       		.uleb128 0xf
 2603 0038 00       		.byte	0
 2604 0039 0B       		.uleb128 0xb
 2605 003a 0B       		.uleb128 0xb
 2606 003b 49       		.uleb128 0x49
 2607 003c 13       		.uleb128 0x13
 2608 003d 00       		.byte	0
 2609 003e 00       		.byte	0
 2610 003f 06       		.uleb128 0x6
 2611 0040 01       		.uleb128 0x1
 2612 0041 01       		.byte	0x1
 2613 0042 49       		.uleb128 0x49
 2614 0043 13       		.uleb128 0x13
 2615 0044 01       		.uleb128 0x1
 2616 0045 13       		.uleb128 0x13
 2617 0046 00       		.byte	0
 2618 0047 00       		.byte	0
 2619 0048 07       		.uleb128 0x7
 2620 0049 21       		.uleb128 0x21
 2621 004a 00       		.byte	0
 2622 004b 49       		.uleb128 0x49
 2623 004c 13       		.uleb128 0x13
 2624 004d 2F       		.uleb128 0x2f
 2625 004e 0B       		.uleb128 0xb
 2626 004f 00       		.byte	0
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 55


 2627 0050 00       		.byte	0
 2628 0051 08       		.uleb128 0x8
 2629 0052 16       		.uleb128 0x16
 2630 0053 00       		.byte	0
 2631 0054 03       		.uleb128 0x3
 2632 0055 0E       		.uleb128 0xe
 2633 0056 3A       		.uleb128 0x3a
 2634 0057 0B       		.uleb128 0xb
 2635 0058 3B       		.uleb128 0x3b
 2636 0059 05       		.uleb128 0x5
 2637 005a 49       		.uleb128 0x49
 2638 005b 13       		.uleb128 0x13
 2639 005c 00       		.byte	0
 2640 005d 00       		.byte	0
 2641 005e 09       		.uleb128 0x9
 2642 005f 13       		.uleb128 0x13
 2643 0060 01       		.byte	0x1
 2644 0061 03       		.uleb128 0x3
 2645 0062 0E       		.uleb128 0xe
 2646 0063 0B       		.uleb128 0xb
 2647 0064 0B       		.uleb128 0xb
 2648 0065 3A       		.uleb128 0x3a
 2649 0066 0B       		.uleb128 0xb
 2650 0067 3B       		.uleb128 0x3b
 2651 0068 0B       		.uleb128 0xb
 2652 0069 01       		.uleb128 0x1
 2653 006a 13       		.uleb128 0x13
 2654 006b 00       		.byte	0
 2655 006c 00       		.byte	0
 2656 006d 0A       		.uleb128 0xa
 2657 006e 0D       		.uleb128 0xd
 2658 006f 00       		.byte	0
 2659 0070 03       		.uleb128 0x3
 2660 0071 0E       		.uleb128 0xe
 2661 0072 3A       		.uleb128 0x3a
 2662 0073 0B       		.uleb128 0xb
 2663 0074 3B       		.uleb128 0x3b
 2664 0075 0B       		.uleb128 0xb
 2665 0076 49       		.uleb128 0x49
 2666 0077 13       		.uleb128 0x13
 2667 0078 38       		.uleb128 0x38
 2668 0079 0B       		.uleb128 0xb
 2669 007a 00       		.byte	0
 2670 007b 00       		.byte	0
 2671 007c 0B       		.uleb128 0xb
 2672 007d 2E       		.uleb128 0x2e
 2673 007e 00       		.byte	0
 2674 007f 3F       		.uleb128 0x3f
 2675 0080 19       		.uleb128 0x19
 2676 0081 03       		.uleb128 0x3
 2677 0082 08       		.uleb128 0x8
 2678 0083 3A       		.uleb128 0x3a
 2679 0084 0B       		.uleb128 0xb
 2680 0085 3B       		.uleb128 0x3b
 2681 0086 0B       		.uleb128 0xb
 2682 0087 27       		.uleb128 0x27
 2683 0088 19       		.uleb128 0x19
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 56


 2684 0089 11       		.uleb128 0x11
 2685 008a 01       		.uleb128 0x1
 2686 008b 12       		.uleb128 0x12
 2687 008c 06       		.uleb128 0x6
 2688 008d 40       		.uleb128 0x40
 2689 008e 18       		.uleb128 0x18
 2690 008f 9742     		.uleb128 0x2117
 2691 0091 19       		.uleb128 0x19
 2692 0092 00       		.byte	0
 2693 0093 00       		.byte	0
 2694 0094 0C       		.uleb128 0xc
 2695 0095 2E       		.uleb128 0x2e
 2696 0096 00       		.byte	0
 2697 0097 3F       		.uleb128 0x3f
 2698 0098 19       		.uleb128 0x19
 2699 0099 03       		.uleb128 0x3
 2700 009a 0E       		.uleb128 0xe
 2701 009b 3A       		.uleb128 0x3a
 2702 009c 0B       		.uleb128 0xb
 2703 009d 3B       		.uleb128 0x3b
 2704 009e 0B       		.uleb128 0xb
 2705 009f 27       		.uleb128 0x27
 2706 00a0 19       		.uleb128 0x19
 2707 00a1 11       		.uleb128 0x11
 2708 00a2 01       		.uleb128 0x1
 2709 00a3 12       		.uleb128 0x12
 2710 00a4 06       		.uleb128 0x6
 2711 00a5 40       		.uleb128 0x40
 2712 00a6 18       		.uleb128 0x18
 2713 00a7 9742     		.uleb128 0x2117
 2714 00a9 19       		.uleb128 0x19
 2715 00aa 00       		.byte	0
 2716 00ab 00       		.byte	0
 2717 00ac 0D       		.uleb128 0xd
 2718 00ad 2E       		.uleb128 0x2e
 2719 00ae 01       		.byte	0x1
 2720 00af 3F       		.uleb128 0x3f
 2721 00b0 19       		.uleb128 0x19
 2722 00b1 03       		.uleb128 0x3
 2723 00b2 0E       		.uleb128 0xe
 2724 00b3 3A       		.uleb128 0x3a
 2725 00b4 0B       		.uleb128 0xb
 2726 00b5 3B       		.uleb128 0x3b
 2727 00b6 0B       		.uleb128 0xb
 2728 00b7 49       		.uleb128 0x49
 2729 00b8 13       		.uleb128 0x13
 2730 00b9 11       		.uleb128 0x11
 2731 00ba 01       		.uleb128 0x1
 2732 00bb 12       		.uleb128 0x12
 2733 00bc 06       		.uleb128 0x6
 2734 00bd 40       		.uleb128 0x40
 2735 00be 18       		.uleb128 0x18
 2736 00bf 9642     		.uleb128 0x2116
 2737 00c1 19       		.uleb128 0x19
 2738 00c2 01       		.uleb128 0x1
 2739 00c3 13       		.uleb128 0x13
 2740 00c4 00       		.byte	0
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 57


 2741 00c5 00       		.byte	0
 2742 00c6 0E       		.uleb128 0xe
 2743 00c7 34       		.uleb128 0x34
 2744 00c8 00       		.byte	0
 2745 00c9 03       		.uleb128 0x3
 2746 00ca 0E       		.uleb128 0xe
 2747 00cb 3A       		.uleb128 0x3a
 2748 00cc 0B       		.uleb128 0xb
 2749 00cd 3B       		.uleb128 0x3b
 2750 00ce 0B       		.uleb128 0xb
 2751 00cf 49       		.uleb128 0x49
 2752 00d0 13       		.uleb128 0x13
 2753 00d1 02       		.uleb128 0x2
 2754 00d2 18       		.uleb128 0x18
 2755 00d3 00       		.byte	0
 2756 00d4 00       		.byte	0
 2757 00d5 0F       		.uleb128 0xf
 2758 00d6 34       		.uleb128 0x34
 2759 00d7 00       		.byte	0
 2760 00d8 03       		.uleb128 0x3
 2761 00d9 08       		.uleb128 0x8
 2762 00da 3A       		.uleb128 0x3a
 2763 00db 0B       		.uleb128 0xb
 2764 00dc 3B       		.uleb128 0x3b
 2765 00dd 0B       		.uleb128 0xb
 2766 00de 49       		.uleb128 0x49
 2767 00df 13       		.uleb128 0x13
 2768 00e0 02       		.uleb128 0x2
 2769 00e1 18       		.uleb128 0x18
 2770 00e2 00       		.byte	0
 2771 00e3 00       		.byte	0
 2772 00e4 10       		.uleb128 0x10
 2773 00e5 0B       		.uleb128 0xb
 2774 00e6 01       		.byte	0x1
 2775 00e7 11       		.uleb128 0x11
 2776 00e8 01       		.uleb128 0x1
 2777 00e9 12       		.uleb128 0x12
 2778 00ea 06       		.uleb128 0x6
 2779 00eb 01       		.uleb128 0x1
 2780 00ec 13       		.uleb128 0x13
 2781 00ed 00       		.byte	0
 2782 00ee 00       		.byte	0
 2783 00ef 11       		.uleb128 0x11
 2784 00f0 0B       		.uleb128 0xb
 2785 00f1 01       		.byte	0x1
 2786 00f2 11       		.uleb128 0x11
 2787 00f3 01       		.uleb128 0x1
 2788 00f4 12       		.uleb128 0x12
 2789 00f5 06       		.uleb128 0x6
 2790 00f6 00       		.byte	0
 2791 00f7 00       		.byte	0
 2792 00f8 12       		.uleb128 0x12
 2793 00f9 21       		.uleb128 0x21
 2794 00fa 00       		.byte	0
 2795 00fb 49       		.uleb128 0x49
 2796 00fc 13       		.uleb128 0x13
 2797 00fd 2F       		.uleb128 0x2f
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 58


 2798 00fe 05       		.uleb128 0x5
 2799 00ff 00       		.byte	0
 2800 0100 00       		.byte	0
 2801 0101 13       		.uleb128 0x13
 2802 0102 2E       		.uleb128 0x2e
 2803 0103 01       		.byte	0x1
 2804 0104 3F       		.uleb128 0x3f
 2805 0105 19       		.uleb128 0x19
 2806 0106 03       		.uleb128 0x3
 2807 0107 0E       		.uleb128 0xe
 2808 0108 3A       		.uleb128 0x3a
 2809 0109 0B       		.uleb128 0xb
 2810 010a 3B       		.uleb128 0x3b
 2811 010b 05       		.uleb128 0x5
 2812 010c 27       		.uleb128 0x27
 2813 010d 19       		.uleb128 0x19
 2814 010e 11       		.uleb128 0x11
 2815 010f 01       		.uleb128 0x1
 2816 0110 12       		.uleb128 0x12
 2817 0111 06       		.uleb128 0x6
 2818 0112 40       		.uleb128 0x40
 2819 0113 18       		.uleb128 0x18
 2820 0114 9642     		.uleb128 0x2116
 2821 0116 19       		.uleb128 0x19
 2822 0117 01       		.uleb128 0x1
 2823 0118 13       		.uleb128 0x13
 2824 0119 00       		.byte	0
 2825 011a 00       		.byte	0
 2826 011b 14       		.uleb128 0x14
 2827 011c 05       		.uleb128 0x5
 2828 011d 00       		.byte	0
 2829 011e 03       		.uleb128 0x3
 2830 011f 08       		.uleb128 0x8
 2831 0120 3A       		.uleb128 0x3a
 2832 0121 0B       		.uleb128 0xb
 2833 0122 3B       		.uleb128 0x3b
 2834 0123 05       		.uleb128 0x5
 2835 0124 49       		.uleb128 0x49
 2836 0125 13       		.uleb128 0x13
 2837 0126 02       		.uleb128 0x2
 2838 0127 18       		.uleb128 0x18
 2839 0128 00       		.byte	0
 2840 0129 00       		.byte	0
 2841 012a 15       		.uleb128 0x15
 2842 012b 34       		.uleb128 0x34
 2843 012c 00       		.byte	0
 2844 012d 03       		.uleb128 0x3
 2845 012e 0E       		.uleb128 0xe
 2846 012f 3A       		.uleb128 0x3a
 2847 0130 0B       		.uleb128 0xb
 2848 0131 3B       		.uleb128 0x3b
 2849 0132 05       		.uleb128 0x5
 2850 0133 49       		.uleb128 0x49
 2851 0134 13       		.uleb128 0x13
 2852 0135 3F       		.uleb128 0x3f
 2853 0136 19       		.uleb128 0x19
 2854 0137 3C       		.uleb128 0x3c
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 59


 2855 0138 19       		.uleb128 0x19
 2856 0139 00       		.byte	0
 2857 013a 00       		.byte	0
 2858 013b 16       		.uleb128 0x16
 2859 013c 35       		.uleb128 0x35
 2860 013d 00       		.byte	0
 2861 013e 49       		.uleb128 0x49
 2862 013f 13       		.uleb128 0x13
 2863 0140 00       		.byte	0
 2864 0141 00       		.byte	0
 2865 0142 17       		.uleb128 0x17
 2866 0143 34       		.uleb128 0x34
 2867 0144 00       		.byte	0
 2868 0145 03       		.uleb128 0x3
 2869 0146 08       		.uleb128 0x8
 2870 0147 3A       		.uleb128 0x3a
 2871 0148 0B       		.uleb128 0xb
 2872 0149 3B       		.uleb128 0x3b
 2873 014a 0B       		.uleb128 0xb
 2874 014b 49       		.uleb128 0x49
 2875 014c 13       		.uleb128 0x13
 2876 014d 3F       		.uleb128 0x3f
 2877 014e 19       		.uleb128 0x19
 2878 014f 02       		.uleb128 0x2
 2879 0150 18       		.uleb128 0x18
 2880 0151 00       		.byte	0
 2881 0152 00       		.byte	0
 2882 0153 18       		.uleb128 0x18
 2883 0154 34       		.uleb128 0x34
 2884 0155 00       		.byte	0
 2885 0156 03       		.uleb128 0x3
 2886 0157 0E       		.uleb128 0xe
 2887 0158 3A       		.uleb128 0x3a
 2888 0159 0B       		.uleb128 0xb
 2889 015a 3B       		.uleb128 0x3b
 2890 015b 0B       		.uleb128 0xb
 2891 015c 49       		.uleb128 0x49
 2892 015d 13       		.uleb128 0x13
 2893 015e 3F       		.uleb128 0x3f
 2894 015f 19       		.uleb128 0x19
 2895 0160 02       		.uleb128 0x2
 2896 0161 18       		.uleb128 0x18
 2897 0162 00       		.byte	0
 2898 0163 00       		.byte	0
 2899 0164 00       		.byte	0
 2900              		.section	.debug_aranges,"",%progbits
 2901 0000 3C000000 		.4byte	0x3c
 2902 0004 0200     		.2byte	0x2
 2903 0006 00000000 		.4byte	.Ldebug_info0
 2904 000a 04       		.byte	0x4
 2905 000b 00       		.byte	0
 2906 000c 0000     		.2byte	0
 2907 000e 0000     		.2byte	0
 2908 0010 00000000 		.4byte	.LFB64
 2909 0014 18000000 		.4byte	.LFE64-.LFB64
 2910 0018 00000000 		.4byte	.LFB65
 2911 001c 18000000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 60


 2912 0020 00000000 		.4byte	.LFB66
 2913 0024 00080000 		.4byte	.LFE66-.LFB66
 2914 0028 00000000 		.4byte	.LFB67
 2915 002c 3E000000 		.4byte	.LFE67-.LFB67
 2916 0030 00000000 		.4byte	.LFB68
 2917 0034 26000000 		.4byte	.LFE68-.LFB68
 2918 0038 00000000 		.4byte	0
 2919 003c 00000000 		.4byte	0
 2920              		.section	.debug_ranges,"",%progbits
 2921              	.Ldebug_ranges0:
 2922 0000 00000000 		.4byte	.LFB64
 2923 0004 18000000 		.4byte	.LFE64
 2924 0008 00000000 		.4byte	.LFB65
 2925 000c 18000000 		.4byte	.LFE65
 2926 0010 00000000 		.4byte	.LFB66
 2927 0014 00080000 		.4byte	.LFE66
 2928 0018 00000000 		.4byte	.LFB67
 2929 001c 3E000000 		.4byte	.LFE67
 2930 0020 00000000 		.4byte	.LFB68
 2931 0024 26000000 		.4byte	.LFE68
 2932 0028 00000000 		.4byte	0
 2933 002c 00000000 		.4byte	0
 2934              		.section	.debug_line,"",%progbits
 2935              	.Ldebug_line0:
 2936 0000 25030000 		.section	.debug_str,"MS",%progbits,1
 2936      02005601 
 2936      00000201 
 2936      FB0E0D00 
 2936      01010101 
 2937              	.LASF55:
 2938 0000 75736250 		.ascii	"usbPutChar\000"
 2938      75744368 
 2938      617200
 2939              	.LASF103:
 2940 000b 7475726E 		.ascii	"turnEnable\000"
 2940      456E6162 
 2940      6C6500
 2941              	.LASF38:
 2942 0016 73717561 		.ascii	"squares\000"
 2942      72657300 
 2943              	.LASF105:
 2944 001e 6C617374 		.ascii	"lastAdjustDirection\000"
 2944      41646A75 
 2944      73744469 
 2944      72656374 
 2944      696F6E00 
 2945              	.LASF66:
 2946 0032 666C6167 		.ascii	"flag_packet\000"
 2946      5F706163 
 2946      6B657400 
 2947              	.LASF104:
 2948 003e 7475726E 		.ascii	"turnTimer\000"
 2948      54696D65 
 2948      7200
 2949              	.LASF83:
 2950 0048 76616C75 		.ascii	"valuesLeftLine\000"
 2950      65734C65 
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 61


 2950      66744C69 
 2950      6E6500
 2951              	.LASF63:
 2952 0057 666C6167 		.ascii	"flag_ts_speed\000"
 2952      5F74735F 
 2952      73706565 
 2952      6400
 2953              	.LASF33:
 2954 0065 67325F78 		.ascii	"g2_xpos\000"
 2954      706F7300 
 2955              	.LASF2:
 2956 006d 73686F72 		.ascii	"short int\000"
 2956      7420696E 
 2956      7400
 2957              	.LASF85:
 2958 0077 76616C75 		.ascii	"valuesTurnComplete\000"
 2958      65735475 
 2958      726E436F 
 2958      6D706C65 
 2958      746500
 2959              	.LASF86:
 2960 008a 76616C75 		.ascii	"valuesRightLine\000"
 2960      65735269 
 2960      6768744C 
 2960      696E6500 
 2961              	.LASF74:
 2962 009a 73797374 		.ascii	"system_state\000"
 2962      656D5F73 
 2962      74617465 
 2962      00
 2963              	.LASF10:
 2964 00a7 73697A65 		.ascii	"sizetype\000"
 2964      74797065 
 2964      00
 2965              	.LASF53:
 2966 00b0 6D61696E 		.ascii	"main\000"
 2966      00
 2967              	.LASF73:
 2968 00b5 75736242 		.ascii	"usbBuffer\000"
 2968      75666665 
 2968      7200
 2969              	.LASF106:
 2970 00bf 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2970      43313120 
 2970      352E342E 
 2970      31203230 
 2970      31363036 
 2971 00f2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2971      20726576 
 2971      6973696F 
 2971      6E203233 
 2971      37373135 
 2972 0125 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2972      66756E63 
 2972      74696F6E 
 2972      2D736563 
 2972      74696F6E 
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 62


 2973              	.LASF60:
 2974 014d 74735F64 		.ascii	"ts_display\000"
 2974      6973706C 
 2974      617900
 2975              	.LASF101:
 2976 0158 70726576 		.ascii	"prevTurnState\000"
 2976      5475726E 
 2976      53746174 
 2976      6500
 2977              	.LASF77:
 2978 0166 7475726E 		.ascii	"turningDirection\000"
 2978      696E6744 
 2978      69726563 
 2978      74696F6E 
 2978      00
 2979              	.LASF15:
 2980 0177 75696E74 		.ascii	"uint16\000"
 2980      313600
 2981              	.LASF98:
 2982 017e 64697374 		.ascii	"distancePerSecondL\000"
 2982      616E6365 
 2982      50657253 
 2982      65636F6E 
 2982      644C00
 2983              	.LASF21:
 2984 0191 696E6465 		.ascii	"index\000"
 2984      7800
 2985              	.LASF17:
 2986 0197 696E7431 		.ascii	"int16\000"
 2986      3600
 2987              	.LASF99:
 2988 019d 64697374 		.ascii	"distancePerSecondR\000"
 2988      616E6365 
 2988      50657253 
 2988      65636F6E 
 2988      645200
 2989              	.LASF32:
 2990 01b0 67315F64 		.ascii	"g1_direction\000"
 2990      69726563 
 2990      74696F6E 
 2990      00
 2991              	.LASF87:
 2992 01bd 76616C75 		.ascii	"valuesRightIntersection\000"
 2992      65735269 
 2992      67687449 
 2992      6E746572 
 2992      73656374 
 2993              	.LASF71:
 2994 01d5 6C696E65 		.ascii	"line\000"
 2994      00
 2995              	.LASF94:
 2996 01da 6E756D52 		.ascii	"numRotationsL\000"
 2996      6F746174 
 2996      696F6E73 
 2996      4C00
 2997              	.LASF0:
 2998 01e8 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 63


 2998      65642063 
 2998      68617200 
 2999              	.LASF18:
 3000 01f4 666C6F61 		.ascii	"float\000"
 3000      7400
 3001              	.LASF41:
 3002 01fa 73746172 		.ascii	"started\000"
 3002      74656400 
 3003              	.LASF34:
 3004 0202 67325F79 		.ascii	"g2_ypos\000"
 3004      706F7300 
 3005              	.LASF31:
 3006 020a 67315F73 		.ascii	"g1_speed\000"
 3006      70656564 
 3006      00
 3007              	.LASF100:
 3008 0213 64697374 		.ascii	"distancePerSecondAvg\000"
 3008      616E6365 
 3008      50657253 
 3008      65636F6E 
 3008      64417667 
 3009              	.LASF108:
 3010 0228 483A5C44 		.ascii	"H:\\Documents\\301\\Post-Benchmark\\team14\\301_lab"
 3010      6F63756D 
 3010      656E7473 
 3010      5C333031 
 3010      5C506F73 
 3011 0256 5F746173 		.ascii	"_tasks\\psoc student pack\\psoc_code_base\\CS301_Cl"
 3011      6B735C70 
 3011      736F6320 
 3011      73747564 
 3011      656E7420 
 3012 0286 6173732E 		.ascii	"ass.cydsn\000"
 3012      63796473 
 3012      6E00
 3013              	.LASF54:
 3014 0290 75736250 		.ascii	"usbPutString\000"
 3014      75745374 
 3014      72696E67 
 3014      00
 3015              	.LASF16:
 3016 029d 696E7438 		.ascii	"int8\000"
 3016      00
 3017              	.LASF62:
 3018 02a2 666C6167 		.ascii	"flag_ts_update\000"
 3018      5F74735F 
 3018      75706461 
 3018      746500
 3019              	.LASF97:
 3020 02b1 64697374 		.ascii	"distanceTravelled\000"
 3020      616E6365 
 3020      54726176 
 3020      656C6C65 
 3020      6400
 3021              	.LASF28:
 3022 02c3 67305F64 		.ascii	"g0_direction\000"
 3022      69726563 
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 64


 3022      74696F6E 
 3022      00
 3023              	.LASF25:
 3024 02d0 67305F78 		.ascii	"g0_xpos\000"
 3024      706F7300 
 3025              	.LASF44:
 3026 02d8 73717561 		.ascii	"squareStr\000"
 3026      72655374 
 3026      7200
 3027              	.LASF4:
 3028 02e2 6C6F6E67 		.ascii	"long int\000"
 3028      20696E74 
 3028      00
 3029              	.LASF91:
 3030 02eb 6C617374 		.ascii	"lastVeerDirection\000"
 3030      56656572 
 3030      44697265 
 3030      6374696F 
 3030      6E00
 3031              	.LASF80:
 3032 02fd 646F7473 		.ascii	"dotsTravelled\000"
 3032      54726176 
 3032      656C6C65 
 3032      6400
 3033              	.LASF64:
 3034 030b 666C6167 		.ascii	"flag_ts_display\000"
 3034      5F74735F 
 3034      64697370 
 3034      6C617900 
 3035              	.LASF65:
 3036 031b 666C6167 		.ascii	"flag_rx\000"
 3036      5F727800 
 3037              	.LASF37:
 3038 0323 4D794953 		.ascii	"MyISR\000"
 3038      5200
 3039              	.LASF52:
 3040 0329 68696768 		.ascii	"highCountRightIntersection\000"
 3040      436F756E 
 3040      74526967 
 3040      6874496E 
 3040      74657273 
 3041              	.LASF30:
 3042 0344 67315F79 		.ascii	"g1_ypos\000"
 3042      706F7300 
 3043              	.LASF9:
 3044 034c 6C6F6E67 		.ascii	"long double\000"
 3044      20646F75 
 3044      626C6500 
 3045              	.LASF72:
 3046 0358 656E7472 		.ascii	"entry\000"
 3046      7900
 3047              	.LASF1:
 3048 035e 756E7369 		.ascii	"unsigned char\000"
 3048      676E6564 
 3048      20636861 
 3048      7200
 3049              	.LASF27:
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 65


 3050 036c 67305F73 		.ascii	"g0_speed\000"
 3050      70656564 
 3050      00
 3051              	.LASF51:
 3052 0375 68696768 		.ascii	"highCountRightLine\000"
 3052      436F756E 
 3052      74526967 
 3052      68744C69 
 3052      6E6500
 3053              	.LASF46:
 3054 0388 6368616E 		.ascii	"changeInDots\000"
 3054      6765496E 
 3054      446F7473 
 3054      00
 3055              	.LASF90:
 3056 0395 7475726E 		.ascii	"turningRight\000"
 3056      696E6752 
 3056      69676874 
 3056      00
 3057              	.LASF7:
 3058 03a2 6C6F6E67 		.ascii	"long long unsigned int\000"
 3058      206C6F6E 
 3058      6720756E 
 3058      7369676E 
 3058      65642069 
 3059              	.LASF8:
 3060 03b9 756E7369 		.ascii	"unsigned int\000"
 3060      676E6564 
 3060      20696E74 
 3060      00
 3061              	.LASF67:
 3062 03c6 666C6167 		.ascii	"flag_KB_string\000"
 3062      5F4B425F 
 3062      73747269 
 3062      6E6700
 3063              	.LASF42:
 3064 03d5 636F6E73 		.ascii	"consecStops\000"
 3064      65635374 
 3064      6F707300 
 3065              	.LASF35:
 3066 03e1 67325F73 		.ascii	"g2_speed\000"
 3066      70656564 
 3066      00
 3067              	.LASF96:
 3068 03ea 7475726E 		.ascii	"turnCount\000"
 3068      436F756E 
 3068      7400
 3069              	.LASF29:
 3070 03f4 67315F78 		.ascii	"g1_xpos\000"
 3070      706F7300 
 3071              	.LASF76:
 3072 03fc 72657374 		.ascii	"restoring\000"
 3072      6F72696E 
 3072      6700
 3073              	.LASF49:
 3074 0406 68696768 		.ascii	"highCountMiddleLine\000"
 3074      436F756E 
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 66


 3074      744D6964 
 3074      646C654C 
 3074      696E6500 
 3075              	.LASF84:
 3076 041a 76616C75 		.ascii	"valuesMiddleLine\000"
 3076      65734D69 
 3076      64646C65 
 3076      4C696E65 
 3076      00
 3077              	.LASF109:
 3078 042b 64617461 		.ascii	"data_main\000"
 3078      5F6D6169 
 3078      6E00
 3079              	.LASF40:
 3080 0435 64697374 		.ascii	"distance\000"
 3080      616E6365 
 3080      00
 3081              	.LASF11:
 3082 043e 63686172 		.ascii	"char\000"
 3082      00
 3083              	.LASF56:
 3084 0443 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3084      52784275 
 3084      66666572 
 3084      00
 3085              	.LASF22:
 3086 0450 726F626F 		.ascii	"robot_xpos\000"
 3086      745F7870 
 3086      6F7300
 3087              	.LASF13:
 3088 045b 696E7433 		.ascii	"int32_t\000"
 3088      325F7400 
 3089              	.LASF81:
 3090 0463 666C6167 		.ascii	"flag\000"
 3090      00
 3091              	.LASF36:
 3092 0468 67325F64 		.ascii	"g2_direction\000"
 3092      69726563 
 3092      74696F6E 
 3092      00
 3093              	.LASF3:
 3094 0475 73686F72 		.ascii	"short unsigned int\000"
 3094      7420756E 
 3094      7369676E 
 3094      65642069 
 3094      6E7400
 3095              	.LASF79:
 3096 0488 73686F75 		.ascii	"shouldUpdate\000"
 3096      6C645570 
 3096      64617465 
 3096      00
 3097              	.LASF14:
 3098 0495 75696E74 		.ascii	"uint8\000"
 3098      3800
 3099              	.LASF82:
 3100 049b 76616C75 		.ascii	"valuesLeftIntersection\000"
 3100      65734C65 
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 67


 3100      6674496E 
 3100      74657273 
 3100      65637469 
 3101              	.LASF70:
 3102 04b2 64697370 		.ascii	"displaystring\000"
 3102      6C617973 
 3102      7472696E 
 3102      6700
 3103              	.LASF48:
 3104 04c0 68696768 		.ascii	"highCountLeftLine\000"
 3104      436F756E 
 3104      744C6566 
 3104      744C696E 
 3104      6500
 3105              	.LASF107:
 3106 04d2 6D61696E 		.ascii	"main.c\000"
 3106      2E6300
 3107              	.LASF5:
 3108 04d9 6C6F6E67 		.ascii	"long unsigned int\000"
 3108      20756E73 
 3108      69676E65 
 3108      6420696E 
 3108      7400
 3109              	.LASF19:
 3110 04eb 646F7562 		.ascii	"double\000"
 3110      6C6500
 3111              	.LASF68:
 3112 04f2 64617461 		.ascii	"dataready_flag\000"
 3112      72656164 
 3112      795F666C 
 3112      616700
 3113              	.LASF92:
 3114 0501 6D6F746F 		.ascii	"motorFlag\000"
 3114      72466C61 
 3114      6700
 3115              	.LASF78:
 3116 050b 7475726E 		.ascii	"turningCount\000"
 3116      696E6743 
 3116      6F756E74 
 3116      00
 3117              	.LASF59:
 3118 0518 74735F73 		.ascii	"ts_speed\000"
 3118      70656564 
 3118      00
 3119              	.LASF88:
 3120 0521 636F756E 		.ascii	"count\000"
 3120      7400
 3121              	.LASF61:
 3122 0527 666C6167 		.ascii	"flag_ts_enc\000"
 3122      5F74735F 
 3122      656E6300 
 3123              	.LASF12:
 3124 0533 5F5F696E 		.ascii	"__int32_t\000"
 3124      7433325F 
 3124      7400
 3125              	.LASF26:
 3126 053d 67305F79 		.ascii	"g0_ypos\000"
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 68


 3126      706F7300 
 3127              	.LASF24:
 3128 0545 726F626F 		.ascii	"robot_orientation\000"
 3128      745F6F72 
 3128      69656E74 
 3128      6174696F 
 3128      6E00
 3129              	.LASF89:
 3130 0557 7475726E 		.ascii	"turningLeft\000"
 3130      696E674C 
 3130      65667400 
 3131              	.LASF57:
 3132 0563 74735F65 		.ascii	"ts_enc\000"
 3132      6E6300
 3133              	.LASF58:
 3134 056a 74735F75 		.ascii	"ts_update\000"
 3134      70646174 
 3134      6500
 3135              	.LASF102:
 3136 0574 7475726E 		.ascii	"turnState\000"
 3136      53746174 
 3136      6500
 3137              	.LASF69:
 3138 057e 666C6167 		.ascii	"flag_rf_transmission_active\000"
 3138      5F72665F 
 3138      7472616E 
 3138      736D6973 
 3138      73696F6E 
 3139              	.LASF23:
 3140 059a 726F626F 		.ascii	"robot_ypos\000"
 3140      745F7970 
 3140      6F7300
 3141              	.LASF75:
 3142 05a5 54415247 		.ascii	"TARGET_SPEED\000"
 3142      45545F53 
 3142      50454544 
 3142      00
 3143              	.LASF45:
 3144 05b2 696E7374 		.ascii	"instStr\000"
 3144      53747200 
 3145              	.LASF39:
 3146 05ba 696E7374 		.ascii	"instruction\000"
 3146      72756374 
 3146      696F6E00 
 3147              	.LASF50:
 3148 05c6 68696768 		.ascii	"highCountTurnComplete\000"
 3148      436F756E 
 3148      74547572 
 3148      6E436F6D 
 3148      706C6574 
 3149              	.LASF43:
 3150 05dc 64657369 		.ascii	"desired\000"
 3150      72656400 
 3151              	.LASF95:
 3152 05e4 6E756D52 		.ascii	"numRotationsR\000"
 3152      6F746174 
 3152      696F6E73 
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\ccnxOkDh.s 			page 69


 3152      5200
 3153              	.LASF93:
 3154 05f2 73746570 		.ascii	"step\000"
 3154      00
 3155              	.LASF47:
 3156 05f7 68696768 		.ascii	"highCountLeftIntersection\000"
 3156      436F756E 
 3156      744C6566 
 3156      74496E74 
 3156      65727365 
 3157              	.LASF20:
 3158 0611 72737369 		.ascii	"rssi\000"
 3158      00
 3159              	.LASF6:
 3160 0616 6C6F6E67 		.ascii	"long long int\000"
 3160      206C6F6E 
 3160      6720696E 
 3160      7400
 3161              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
