ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	TARGET_SPEED
 107              		.align	2
 108              		.type	TARGET_SPEED, %object
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 3


 109              		.size	TARGET_SPEED, 4
 110              	TARGET_SPEED:
 111 0044 00007041 		.word	1097859072
 112              		.global	restoring
 113              		.align	2
 114              		.type	restoring, %object
 115              		.size	restoring, 4
 116              	restoring:
 117 0048 1E000000 		.word	30
 118              		.global	turningDirection
 119              		.bss
 120 0012 0000     		.align	2
 121              		.type	turningDirection, %object
 122              		.size	turningDirection, 4
 123              	turningDirection:
 124 0014 00000000 		.space	4
 125              		.global	turningCount
 126              		.data
 127              		.align	2
 128              		.type	turningCount, %object
 129              		.size	turningCount, 4
 130              	turningCount:
 131 004c 1E000000 		.word	30
 132              		.global	shouldUpdate
 133              		.align	2
 134              		.type	shouldUpdate, %object
 135              		.size	shouldUpdate, 4
 136              	shouldUpdate:
 137 0050 01000000 		.word	1
 138              		.global	dotsTravelled
 139              		.bss
 140              		.align	2
 141              		.type	dotsTravelled, %object
 142              		.size	dotsTravelled, 4
 143              	dotsTravelled:
 144 0018 00000000 		.space	4
 145              		.global	flag
 146              		.align	2
 147              		.type	flag, %object
 148              		.size	flag, 4
 149              	flag:
 150 001c 00000000 		.space	4
 151              		.comm	valuesLeftIntersection,4000,4
 152              		.comm	valuesLeftLine,4000,4
 153              		.comm	valuesMiddleLine,4000,4
 154              		.comm	valuesTurnComplete,4000,4
 155              		.comm	valuesRightLine,4000,4
 156              		.comm	valuesRightIntersection,4000,4
 157              		.global	count
 158              		.align	2
 159              		.type	count, %object
 160              		.size	count, 4
 161              	count:
 162 0020 00000000 		.space	4
 163              		.global	turningLeft
 164              		.align	2
 165              		.type	turningLeft, %object
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 4


 166              		.size	turningLeft, 4
 167              	turningLeft:
 168 0024 00000000 		.space	4
 169              		.global	turningRight
 170              		.align	2
 171              		.type	turningRight, %object
 172              		.size	turningRight, 4
 173              	turningRight:
 174 0028 00000000 		.space	4
 175              		.global	lastVeerDirection
 176              		.align	2
 177              		.type	lastVeerDirection, %object
 178              		.size	lastVeerDirection, 4
 179              	lastVeerDirection:
 180 002c 00000000 		.space	4
 181              		.global	motorFlag
 182              		.align	2
 183              		.type	motorFlag, %object
 184              		.size	motorFlag, 4
 185              	motorFlag:
 186 0030 00000000 		.space	4
 187              		.global	step
 188              		.align	2
 189              		.type	step, %object
 190              		.size	step, 4
 191              	step:
 192 0034 00000000 		.space	4
 193              		.comm	v1L,4,4
 194              		.comm	v2L,4,4
 195              		.comm	v1R,4,4
 196              		.comm	v2R,4,4
 197              		.comm	numRotationsL,4,4
 198              		.comm	numRotationsR,4,4
 199              		.comm	turnCount,4,4
 200              		.global	distanceTravelled
 201              		.align	2
 202              		.type	distanceTravelled, %object
 203              		.size	distanceTravelled, 4
 204              	distanceTravelled:
 205 0038 00000000 		.space	4
 206              		.global	distancePerSecondL
 207              		.align	2
 208              		.type	distancePerSecondL, %object
 209              		.size	distancePerSecondL, 4
 210              	distancePerSecondL:
 211 003c 00000000 		.space	4
 212              		.global	distancePerSecondR
 213              		.align	2
 214              		.type	distancePerSecondR, %object
 215              		.size	distancePerSecondR, 4
 216              	distancePerSecondR:
 217 0040 00000000 		.space	4
 218              		.global	distancePerSecondAvg
 219              		.align	2
 220              		.type	distancePerSecondAvg, %object
 221              		.size	distancePerSecondAvg, 4
 222              	distancePerSecondAvg:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 5


 223 0044 00000000 		.space	4
 224              		.global	prevTurnState
 225              		.align	2
 226              		.type	prevTurnState, %object
 227              		.size	prevTurnState, 4
 228              	prevTurnState:
 229 0048 00000000 		.space	4
 230              		.global	turnState
 231              		.align	2
 232              		.type	turnState, %object
 233              		.size	turnState, 4
 234              	turnState:
 235 004c 00000000 		.space	4
 236              		.global	turnEnable
 237              		.align	2
 238              		.type	turnEnable, %object
 239              		.size	turnEnable, 4
 240              	turnEnable:
 241 0050 00000000 		.space	4
 242              		.global	turnTimer
 243              		.align	2
 244              		.type	turnTimer, %object
 245              		.size	turnTimer, 4
 246              	turnTimer:
 247 0054 00000000 		.space	4
 248              		.global	lastAdjustDirection
 249              		.align	2
 250              		.type	lastAdjustDirection, %object
 251              		.size	lastAdjustDirection, 4
 252              	lastAdjustDirection:
 253 0058 00000000 		.space	4
 254              		.section	.text.eoc,"ax",%progbits
 255              		.align	2
 256              		.global	eoc
 257              		.thumb
 258              		.thumb_func
 259              		.type	eoc, %function
 260              	eoc:
 261              	.LFB64:
 262              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 6


  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** #include "pathfind.h"
  30:main.c        **** 
  31:main.c        **** #include "vars.h"
  32:main.c        **** 
  33:main.c        **** #define ADC_COUNT 1000
  34:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 150
  35:main.c        **** #define R_INT_BLACK highCountRightIntersection < 150
  36:main.c        **** #define L_LINE_BLACK highCountLeftLine < 150
  37:main.c        **** #define R_LINE_BLACK highCountRightLine < 150
  38:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 150
  39:main.c        **** #define TC_BLACK highCountTurnComplete < 150
  40:main.c        **** float TARGET_SPEED = 15; //speed in cm^-1
  41:main.c        **** int restoring = 30;
  42:main.c        **** int turningDirection = 0;
  43:main.c        **** int turningCount = 30;
  44:main.c        **** volatile int shouldUpdate = 1;
  45:main.c        **** #define MOVE_DISTANCE 9999999 //cm
  46:main.c        **** volatile int dotsTravelled = 0;
  47:main.c        **** //* ========================================
  48:main.c        **** void usbPutString(char * s);
  49:main.c        **** void usbPutChar(char c);
  50:main.c        **** void printSensorDebug(int highCountLeftIntersection, int highCountLeftLine, int highCountMiddleLine
  51:main.c        **** //* ========================================
  52:main.c        **** 
  53:main.c        **** volatile int flag = 0;
  54:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  55:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  56:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  57:main.c        **** volatile int valuesTurnComplete[ADC_COUNT];
  58:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  59:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  60:main.c        **** volatile int count = 0;
  61:main.c        **** volatile int turningLeft = 0;
  62:main.c        **** volatile int turningRight = 0;
  63:main.c        **** volatile int lastVeerDirection = 0;
  64:main.c        **** 
  65:main.c        **** volatile int motorFlag = 0;
  66:main.c        **** volatile int step = 0; // are we on first measuring step or second step?
  67:main.c        **** volatile int v1L; // allocating storage for measure number of holes (ahead) - LEFT WHEEL
  68:main.c        **** volatile int v2L; // allocating storage for measure number of holes (behind) - LEFT WHEEL
  69:main.c        **** volatile int v1R; // allocating storage for measure number of holes (ahead) - RIGHT WHEEL
  70:main.c        **** volatile int v2R; // allocating storage for measure number of holes (behind) - RIGHT WHEEL
  71:main.c        **** volatile int numRotationsL; //
  72:main.c        **** volatile int numRotationsR; //
  73:main.c        **** volatile int turnCount;
  74:main.c        **** volatile int distanceTravelled = 0;
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 7


  75:main.c        **** volatile int distancePerSecondL = 0;
  76:main.c        **** volatile int distancePerSecondR = 0;
  77:main.c        **** volatile int distancePerSecondAvg = 0;
  78:main.c        **** volatile int prevTurnState = 0;
  79:main.c        **** volatile int turnState = 0;
  80:main.c        **** volatile int turnEnable = 0;
  81:main.c        **** volatile int turnTimer = 0;
  82:main.c        **** int lastAdjustDirection = 0;
  83:main.c        **** 
  84:main.c        **** CY_ISR(eoc) {
 263              		.loc 1 84 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268 0000 80B4     		push	{r7}
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 7, -4
 271 0002 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
  85:main.c        ****   flag = 1;
 273              		.loc 1 85 0
 274 0004 034B     		ldr	r3, .L2
 275 0006 0122     		movs	r2, #1
 276 0008 1A60     		str	r2, [r3]
  86:main.c        **** }
 277              		.loc 1 86 0
 278 000a 00BF     		nop
 279 000c BD46     		mov	sp, r7
 280              		.cfi_def_cfa_register 13
 281              		@ sp needed
 282 000e 80BC     		pop	{r7}
 283              		.cfi_restore 7
 284              		.cfi_def_cfa_offset 0
 285 0010 7047     		bx	lr
 286              	.L3:
 287 0012 00BF     		.align	2
 288              	.L2:
 289 0014 00000000 		.word	flag
 290              		.cfi_endproc
 291              	.LFE64:
 292              		.size	eoc, .-eoc
 293              		.section	.text.MyISR,"ax",%progbits
 294              		.align	2
 295              		.global	MyISR
 296              		.thumb
 297              		.thumb_func
 298              		.type	MyISR, %function
 299              	MyISR:
 300              	.LFB65:
  87:main.c        **** 
  88:main.c        **** CY_ISR(MyISR) {
 301              		.loc 1 88 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305              		@ link register save eliminated.
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 8


 306 0000 80B4     		push	{r7}
 307              		.cfi_def_cfa_offset 4
 308              		.cfi_offset 7, -4
 309 0002 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
  89:main.c        ****   motorFlag = 1;
 311              		.loc 1 89 0
 312 0004 034B     		ldr	r3, .L5
 313 0006 0122     		movs	r2, #1
 314 0008 1A60     		str	r2, [r3]
  90:main.c        **** }
 315              		.loc 1 90 0
 316 000a 00BF     		nop
 317 000c BD46     		mov	sp, r7
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 000e 80BC     		pop	{r7}
 321              		.cfi_restore 7
 322              		.cfi_def_cfa_offset 0
 323 0010 7047     		bx	lr
 324              	.L6:
 325 0012 00BF     		.align	2
 326              	.L5:
 327 0014 00000000 		.word	motorFlag
 328              		.cfi_endproc
 329              	.LFE65:
 330              		.size	MyISR, .-MyISR
 331              		.section	.rodata
 332              		.align	2
 333              	.LC0:
 334 0000 53746172 		.ascii	"Starting Pathfind\015\012\000"
 334      74696E67 
 334      20506174 
 334      6866696E 
 334      640D0A00 
 335              		.align	2
 336              	.LC1:
 337 0014 53515541 		.ascii	"SQUARES\015\012\000"
 337      5245530D 
 337      0A00
 338 001e 0000     		.align	2
 339              	.LC2:
 340 0020 25752025 		.ascii	"%u %u \015\012\000"
 340      75200D0A 
 340      00
 341 0029 000000   		.align	2
 342              	.LC3:
 343 002c 494E5354 		.ascii	"INSTRUCTIONS\015\012\000"
 343      52554354 
 343      494F4E53 
 343      0D0A00
 344 003b 00       		.align	2
 345              	.LC4:
 346 003c 0D0A00   		.ascii	"\015\012\000"
 347 003f 00       		.align	2
 348              	.LC5:
 349 0040 44495354 		.ascii	"DISTANCES\015\012\000"
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 9


 349      414E4345 
 349      530D0A00 
 350              		.align	2
 351              	.LC6:
 352 004c 257500   		.ascii	"%u\000"
 353              		.global	__aeabi_i2f
 354              		.global	__aeabi_fmul
 355              		.global	__aeabi_f2iz
 356              		.section	.text.main,"ax",%progbits
 357              		.align	2
 358              		.global	main
 359              		.thumb
 360              		.thumb_func
 361              		.type	main, %function
 362              	main:
 363              	.LFB66:
  91:main.c        **** 
  92:main.c        **** int main() {
 364              		.loc 1 92 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 2280
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368 0000 90B5     		push	{r4, r7, lr}
 369              		.cfi_def_cfa_offset 12
 370              		.cfi_offset 4, -12
 371              		.cfi_offset 7, -8
 372              		.cfi_offset 14, -4
 373 0002 ADF6F40D 		subw	sp, sp, #2292
 374              		.cfi_def_cfa_offset 2304
 375 0006 02AF     		add	r7, sp, #8
 376              		.cfi_def_cfa 7, 2296
  93:main.c        **** 
  94:main.c        ****   // --------------------------------    
  95:main.c        ****   // ----- INITIALIZATIONS ----------
  96:main.c        ****   CYGlobalIntEnable;
 377              		.loc 1 96 0
 378              		.syntax unified
 379              	@ 96 "main.c" 1
 380 0008 62B6     		CPSIE   i
 381              	@ 0 "" 2
  97:main.c        **** 
  98:main.c        ****   // ------USB SETUP ----------------    
  99:main.c        **** 
 100:main.c        ****   USBUART_Start(0, USBUART_5V_OPERATION);
 382              		.loc 1 100 0
 383              		.thumb
 384              		.syntax unified
 385 000a 0121     		movs	r1, #1
 386 000c 0020     		movs	r0, #0
 387 000e FFF7FEFF 		bl	USBUART_Start
 101:main.c        ****   UART_Start();
 388              		.loc 1 101 0
 389 0012 FFF7FEFF 		bl	UART_Start
 102:main.c        **** 
 103:main.c        ****   QuadDec_M1_Start();
 390              		.loc 1 103 0
 391 0016 FFF7FEFF 		bl	QuadDec_M1_Start
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 10


 104:main.c        ****   QuadDec_M2_Start();
 392              		.loc 1 104 0
 393 001a FFF7FEFF 		bl	QuadDec_M2_Start
 105:main.c        **** 
 106:main.c        ****   isr_TS_StartEx(MyISR);
 394              		.loc 1 106 0
 395 001e 9148     		ldr	r0, .L59
 396 0020 FFF7FEFF 		bl	isr_TS_StartEx
 107:main.c        **** 
 108:main.c        ****   RF_BT_SELECT_Write(1);
 397              		.loc 1 108 0
 398 0024 0120     		movs	r0, #1
 399 0026 FFF7FEFF 		bl	RF_BT_SELECT_Write
 109:main.c        **** 
 110:main.c        ****   ADC_Start();
 400              		.loc 1 110 0
 401 002a FFF7FEFF 		bl	ADC_Start
 111:main.c        ****   ADC_StartConvert();
 402              		.loc 1 111 0
 403 002e FFF7FEFF 		bl	ADC_StartConvert
 112:main.c        ****   eoc_StartEx(eoc);
 404              		.loc 1 112 0
 405 0032 8D48     		ldr	r0, .L59+4
 406 0034 FFF7FEFF 		bl	eoc_StartEx
 113:main.c        **** 
 114:main.c        ****   initMotors();
 407              		.loc 1 114 0
 408 0038 FFF7FEFF 		bl	initMotors
 115:main.c        **** 
 116:main.c        ****   stop();
 409              		.loc 1 116 0
 410 003c FFF7FEFF 		bl	stop
 117:main.c        **** 
 118:main.c        ****   isr_TS_StartEx(MyISR);
 411              		.loc 1 118 0
 412 0040 8848     		ldr	r0, .L59
 413 0042 FFF7FEFF 		bl	isr_TS_StartEx
 119:main.c        ****   Timer_TS_Start();
 414              		.loc 1 119 0
 415 0046 FFF7FEFF 		bl	Timer_TS_Start
 416              	.LBB2:
 120:main.c        **** 
 121:main.c        ****   unsigned char squares[1000][2];
 122:main.c        **** 
 123:main.c        ****   unsigned char instruction[200];
 124:main.c        ****   unsigned char distance[5];
 125:main.c        **** 
 126:main.c        **** // Loop through the array and set each element to 69
 127:main.c        ****     for (int i = 0; i < 1000; i++) {
 417              		.loc 1 127 0
 418 004a 0023     		movs	r3, #0
 419 004c C7F8E438 		str	r3, [r7, #2276]
 420 0050 13E0     		b	.L8
 421              	.L9:
 128:main.c        ****         squares[i][0] = 69;
 422              		.loc 1 128 0 discriminator 3
 423 0052 07F1E803 		add	r3, r7, #232
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 11


 424 0056 D7F8E428 		ldr	r2, [r7, #2276]
 425 005a 4521     		movs	r1, #69
 426 005c 03F81210 		strb	r1, [r3, r2, lsl #1]
 129:main.c        ****         squares[i][1] = 69;
 427              		.loc 1 129 0 discriminator 3
 428 0060 07F1E802 		add	r2, r7, #232
 429 0064 D7F8E438 		ldr	r3, [r7, #2276]
 430 0068 5B00     		lsls	r3, r3, #1
 431 006a 1344     		add	r3, r3, r2
 432 006c 4522     		movs	r2, #69
 433 006e 5A70     		strb	r2, [r3, #1]
 127:main.c        ****         squares[i][0] = 69;
 434              		.loc 1 127 0 discriminator 3
 435 0070 D7F8E438 		ldr	r3, [r7, #2276]
 436 0074 0133     		adds	r3, r3, #1
 437 0076 C7F8E438 		str	r3, [r7, #2276]
 438              	.L8:
 127:main.c        ****         squares[i][0] = 69;
 439              		.loc 1 127 0 is_stmt 0 discriminator 1
 440 007a D7F8E438 		ldr	r3, [r7, #2276]
 441 007e B3F57A7F 		cmp	r3, #1000
 442 0082 E6DB     		blt	.L9
 443              	.LBE2:
 130:main.c        ****     }
 131:main.c        **** 
 132:main.c        **** 
 133:main.c        **** 
 134:main.c        ****   CyDelay(4000);
 444              		.loc 1 134 0 is_stmt 1
 445 0084 4FF47A60 		mov	r0, #4000
 446 0088 FFF7FEFF 		bl	CyDelay
 135:main.c        ****   usbPutString("Starting Pathfind\r\n");
 447              		.loc 1 135 0
 448 008c 7748     		ldr	r0, .L59+8
 449 008e FFF7FEFF 		bl	usbPutString
 136:main.c        ****   pathfind(instruction, distance, squares);
 450              		.loc 1 136 0
 451 0092 07F1E802 		add	r2, r7, #232
 452 0096 07F11801 		add	r1, r7, #24
 453 009a 07F12003 		add	r3, r7, #32
 454 009e 1846     		mov	r0, r3
 455 00a0 FFF7FEFF 		bl	pathfind
 137:main.c        **** 
 138:main.c        ****     usbPutString("SQUARES\r\n");
 456              		.loc 1 138 0
 457 00a4 7248     		ldr	r0, .L59+12
 458 00a6 FFF7FEFF 		bl	usbPutString
 459              	.LBB3:
 139:main.c        **** for (int i = 0; i < 1000; i++) {
 460              		.loc 1 139 0
 461 00aa 0023     		movs	r3, #0
 462 00ac C7F8E038 		str	r3, [r7, #2272]
 463 00b0 1FE0     		b	.L10
 464              	.L11:
 465              	.LBB4:
 140:main.c        ****         char squareStr[10]; 
 141:main.c        ****         snprintf(squareStr, sizeof(squareStr), "%u %u \r\n", (unsigned char)squares[i][0], (unsigne
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 12


 466              		.loc 1 141 0 discriminator 3
 467 00b2 07F1E803 		add	r3, r7, #232
 468 00b6 D7F8E028 		ldr	r2, [r7, #2272]
 469 00ba 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 470 00be 1946     		mov	r1, r3
 471 00c0 07F1E802 		add	r2, r7, #232
 472 00c4 D7F8E038 		ldr	r3, [r7, #2272]
 473 00c8 5B00     		lsls	r3, r3, #1
 474 00ca 1344     		add	r3, r3, r2
 475 00cc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 476 00ce 07F10C00 		add	r0, r7, #12
 477 00d2 0093     		str	r3, [sp]
 478 00d4 0B46     		mov	r3, r1
 479 00d6 674A     		ldr	r2, .L59+16
 480 00d8 0A21     		movs	r1, #10
 481 00da FFF7FEFF 		bl	snprintf
 142:main.c        ****         usbPutString(squareStr);
 482              		.loc 1 142 0 discriminator 3
 483 00de 07F10C03 		add	r3, r7, #12
 484 00e2 1846     		mov	r0, r3
 485 00e4 FFF7FEFF 		bl	usbPutString
 486              	.LBE4:
 139:main.c        **** for (int i = 0; i < 1000; i++) {
 487              		.loc 1 139 0 discriminator 3
 488 00e8 D7F8E038 		ldr	r3, [r7, #2272]
 489 00ec 0133     		adds	r3, r3, #1
 490 00ee C7F8E038 		str	r3, [r7, #2272]
 491              	.L10:
 139:main.c        **** for (int i = 0; i < 1000; i++) {
 492              		.loc 1 139 0 is_stmt 0 discriminator 1
 493 00f2 D7F8E038 		ldr	r3, [r7, #2272]
 494 00f6 B3F57A7F 		cmp	r3, #1000
 495 00fa DADB     		blt	.L11
 496              	.LBE3:
 143:main.c        ****     }
 144:main.c        ****     
 145:main.c        **** usbPutString("INSTRUCTIONS\r\n");
 497              		.loc 1 145 0 is_stmt 1
 498 00fc 5E48     		ldr	r0, .L59+20
 499 00fe FFF7FEFF 		bl	usbPutString
 500              	.LBB5:
 146:main.c        **** // Print all instructions
 147:main.c        ****     for (int i = 0; i < 200; i++) {
 501              		.loc 1 147 0
 502 0102 0023     		movs	r3, #0
 503 0104 C7F8DC38 		str	r3, [r7, #2268]
 504 0108 10E0     		b	.L12
 505              	.L13:
 148:main.c        ****         usbPutChar(instruction[i]);
 506              		.loc 1 148 0 discriminator 3
 507 010a 07F12002 		add	r2, r7, #32
 508 010e D7F8DC38 		ldr	r3, [r7, #2268]
 509 0112 1344     		add	r3, r3, r2
 510 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 511 0116 1846     		mov	r0, r3
 512 0118 FFF7FEFF 		bl	usbPutChar
 149:main.c        ****         usbPutString("\r\n");
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 13


 513              		.loc 1 149 0 discriminator 3
 514 011c 5748     		ldr	r0, .L59+24
 515 011e FFF7FEFF 		bl	usbPutString
 147:main.c        ****         usbPutChar(instruction[i]);
 516              		.loc 1 147 0 discriminator 3
 517 0122 D7F8DC38 		ldr	r3, [r7, #2268]
 518 0126 0133     		adds	r3, r3, #1
 519 0128 C7F8DC38 		str	r3, [r7, #2268]
 520              	.L12:
 147:main.c        ****         usbPutChar(instruction[i]);
 521              		.loc 1 147 0 is_stmt 0 discriminator 1
 522 012c D7F8DC38 		ldr	r3, [r7, #2268]
 523 0130 C72B     		cmp	r3, #199
 524 0132 EADD     		ble	.L13
 525              	.LBE5:
 150:main.c        ****     }
 151:main.c        **** 
 152:main.c        ****     usbPutString("DISTANCES\r\n");
 526              		.loc 1 152 0 is_stmt 1
 527 0134 5248     		ldr	r0, .L59+28
 528 0136 FFF7FEFF 		bl	usbPutString
 529              	.LBB6:
 153:main.c        ****     // Print all distances
 154:main.c        ****     for (int i = 0; i < 5; i++) {
 530              		.loc 1 154 0
 531 013a 0023     		movs	r3, #0
 532 013c C7F8D838 		str	r3, [r7, #2264]
 533 0140 16E0     		b	.L14
 534              	.L15:
 535              	.LBB7:
 155:main.c        ****         char distanceStr[10];  // Assuming distances are integers and can fit in 10 characters
 156:main.c        ****         snprintf(distanceStr, sizeof(distanceStr), "%u", (unsigned int)distance[i]);
 536              		.loc 1 156 0 discriminator 3
 537 0142 07F11802 		add	r2, r7, #24
 538 0146 D7F8D838 		ldr	r3, [r7, #2264]
 539 014a 1344     		add	r3, r3, r2
 540 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 541 014e 3846     		mov	r0, r7
 542 0150 4C4A     		ldr	r2, .L59+32
 543 0152 0A21     		movs	r1, #10
 544 0154 FFF7FEFF 		bl	snprintf
 157:main.c        ****         usbPutString(distanceStr);
 545              		.loc 1 157 0 discriminator 3
 546 0158 3B46     		mov	r3, r7
 547 015a 1846     		mov	r0, r3
 548 015c FFF7FEFF 		bl	usbPutString
 158:main.c        ****         usbPutString("\r\n");
 549              		.loc 1 158 0 discriminator 3
 550 0160 4648     		ldr	r0, .L59+24
 551 0162 FFF7FEFF 		bl	usbPutString
 552              	.LBE7:
 154:main.c        ****         char distanceStr[10];  // Assuming distances are integers and can fit in 10 characters
 553              		.loc 1 154 0 discriminator 3
 554 0166 D7F8D838 		ldr	r3, [r7, #2264]
 555 016a 0133     		adds	r3, r3, #1
 556 016c C7F8D838 		str	r3, [r7, #2264]
 557              	.L14:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 14


 154:main.c        ****         char distanceStr[10];  // Assuming distances are integers and can fit in 10 characters
 558              		.loc 1 154 0 is_stmt 0 discriminator 1
 559 0170 D7F8D838 		ldr	r3, [r7, #2264]
 560 0174 042B     		cmp	r3, #4
 561 0176 E4DD     		ble	.L15
 562              	.L58:
 563              	.LBE6:
 159:main.c        ****     }
 160:main.c        **** 
 161:main.c        ****   for (;;) {
 162:main.c        **** 
 163:main.c        ****     if (motorFlag == 1) { // timer has counted 0.1s 
 564              		.loc 1 163 0 is_stmt 1
 565 0178 434B     		ldr	r3, .L59+36
 566 017a 1B68     		ldr	r3, [r3]
 567 017c 012B     		cmp	r3, #1
 568 017e 68D1     		bne	.L16
 164:main.c        **** 
 165:main.c        ****       isr_TS_Disable(); // disabling the interrupts
 569              		.loc 1 165 0
 570 0180 FFF7FEFF 		bl	isr_TS_Disable
 166:main.c        ****       if (step == 0) { //takes the first measurement, sets steps to 2, the next time the timer goes
 571              		.loc 1 166 0
 572 0184 414B     		ldr	r3, .L59+40
 573 0186 1B68     		ldr	r3, [r3]
 574 0188 002B     		cmp	r3, #0
 575 018a 11D1     		bne	.L17
 167:main.c        ****         v1L = QuadDec_M1_GetCounter(); // first measurement taken - LEFT
 576              		.loc 1 167 0
 577 018c FFF7FEFF 		bl	QuadDec_M1_GetCounter
 578 0190 0346     		mov	r3, r0
 579 0192 1A46     		mov	r2, r3
 580 0194 3E4B     		ldr	r3, .L59+44
 581 0196 1A60     		str	r2, [r3]
 168:main.c        ****         v1R = QuadDec_M2_GetCounter(); // first measurement taken - RIGHT
 582              		.loc 1 168 0
 583 0198 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 584 019c 0346     		mov	r3, r0
 585 019e 1A46     		mov	r2, r3
 586 01a0 3C4B     		ldr	r3, .L59+48
 587 01a2 1A60     		str	r2, [r3]
 169:main.c        ****         step++;
 588              		.loc 1 169 0
 589 01a4 394B     		ldr	r3, .L59+40
 590 01a6 1B68     		ldr	r3, [r3]
 591 01a8 0133     		adds	r3, r3, #1
 592 01aa 384A     		ldr	r2, .L59+40
 593 01ac 1360     		str	r3, [r2]
 594 01ae 4BE0     		b	.L18
 595              	.L17:
 596              	.LBB8:
 170:main.c        ****       } else { // second measure
 171:main.c        ****         step = 0;
 597              		.loc 1 171 0
 598 01b0 364B     		ldr	r3, .L59+40
 599 01b2 0022     		movs	r2, #0
 600 01b4 1A60     		str	r2, [r3]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 15


 172:main.c        **** 
 173:main.c        ****         v2L = QuadDec_M1_GetCounter(); // second measurement taken - LEFT
 601              		.loc 1 173 0
 602 01b6 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 603 01ba 0346     		mov	r3, r0
 604 01bc 1A46     		mov	r2, r3
 605 01be 364B     		ldr	r3, .L59+52
 606 01c0 1A60     		str	r2, [r3]
 174:main.c        ****         v2R = QuadDec_M2_GetCounter(); // second measurement taken - RIGHT
 607              		.loc 1 174 0
 608 01c2 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 609 01c6 0346     		mov	r3, r0
 610 01c8 1A46     		mov	r2, r3
 611 01ca 344B     		ldr	r3, .L59+56
 612 01cc 1A60     		str	r2, [r3]
 175:main.c        **** 
 176:main.c        ****         numRotationsL = (v2L - v1L);
 613              		.loc 1 176 0
 614 01ce 324B     		ldr	r3, .L59+52
 615 01d0 1A68     		ldr	r2, [r3]
 616 01d2 2F4B     		ldr	r3, .L59+44
 617 01d4 1B68     		ldr	r3, [r3]
 618 01d6 D31A     		subs	r3, r2, r3
 619 01d8 314A     		ldr	r2, .L59+60
 620 01da 1360     		str	r3, [r2]
 177:main.c        ****         numRotationsR = (v2R - v1R);
 621              		.loc 1 177 0
 622 01dc 2F4B     		ldr	r3, .L59+56
 623 01de 1A68     		ldr	r2, [r3]
 624 01e0 2C4B     		ldr	r3, .L59+48
 625 01e2 1B68     		ldr	r3, [r3]
 626 01e4 D31A     		subs	r3, r2, r3
 627 01e6 2F4A     		ldr	r2, .L59+64
 628 01e8 1360     		str	r3, [r2]
 178:main.c        **** 
 179:main.c        ****         int changeInDots = (((abs(numRotationsR) + abs(numRotationsL)) ) / 2);
 629              		.loc 1 179 0
 630 01ea 2E4B     		ldr	r3, .L59+64
 631 01ec 1B68     		ldr	r3, [r3]
 632 01ee 83EAE372 		eor	r2, r3, r3, asr #31
 633 01f2 A2EBE372 		sub	r2, r2, r3, asr #31
 634 01f6 2A4B     		ldr	r3, .L59+60
 635 01f8 1B68     		ldr	r3, [r3]
 636 01fa 002B     		cmp	r3, #0
 637 01fc B8BF     		it	lt
 638 01fe 5B42     		rsblt	r3, r3, #0
 639 0200 1344     		add	r3, r3, r2
 640 0202 DA0F     		lsrs	r2, r3, #31
 641 0204 1344     		add	r3, r3, r2
 642 0206 5B10     		asrs	r3, r3, #1
 643 0208 C7F8B838 		str	r3, [r7, #2232]
 180:main.c        ****         dotsTravelled = changeInDots + dotsTravelled;
 644              		.loc 1 180 0
 645 020c 264B     		ldr	r3, .L59+68
 646 020e 1A68     		ldr	r2, [r3]
 647 0210 D7F8B838 		ldr	r3, [r7, #2232]
 648 0214 1344     		add	r3, r3, r2
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 16


 649 0216 244A     		ldr	r2, .L59+68
 650 0218 1360     		str	r3, [r2]
 181:main.c        ****         distanceTravelled = (dotsTravelled * (float)(1.217375 / 6.105)); //increase 6.1 to go furth
 651              		.loc 1 181 0
 652 021a 234B     		ldr	r3, .L59+68
 653 021c 1B68     		ldr	r3, [r3]
 654 021e 1846     		mov	r0, r3
 655 0220 FFF7FEFF 		bl	__aeabi_i2f
 656 0224 0346     		mov	r3, r0
 657 0226 2149     		ldr	r1, .L59+72
 658 0228 1846     		mov	r0, r3
 659 022a FFF7FEFF 		bl	__aeabi_fmul
 660 022e 0346     		mov	r3, r0
 661 0230 1846     		mov	r0, r3
 662 0232 FFF7FEFF 		bl	__aeabi_f2iz
 663 0236 0246     		mov	r2, r0
 664 0238 1D4B     		ldr	r3, .L59+76
 665 023a 1A60     		str	r2, [r3]
 182:main.c        ****                                                                          //6.2 for low, 6.1 for nor
 183:main.c        **** 
 184:main.c        ****         QuadDec_M1_SetCounter(0); // set quad counter to 0 to avoid overflow
 666              		.loc 1 184 0
 667 023c 0020     		movs	r0, #0
 668 023e FFF7FEFF 		bl	QuadDec_M1_SetCounter
 185:main.c        ****         QuadDec_M2_SetCounter(0); // set quad counter to 0 to avoid overflow 
 669              		.loc 1 185 0
 670 0242 0020     		movs	r0, #0
 671 0244 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 672              	.L18:
 673              	.LBE8:
 186:main.c        **** 
 187:main.c        ****       }
 188:main.c        ****       motorFlag = 0; // interrupt flag is back to 0
 674              		.loc 1 188 0
 675 0248 0F4B     		ldr	r3, .L59+36
 676 024a 0022     		movs	r2, #0
 677 024c 1A60     		str	r2, [r3]
 189:main.c        ****       isr_TS_Enable(); // interrupt enabled
 678              		.loc 1 189 0
 679 024e FFF7FEFF 		bl	isr_TS_Enable
 680              	.L16:
 190:main.c        **** 
 191:main.c        ****     }
 192:main.c        **** 
 193:main.c        ****     if (distanceTravelled > MOVE_DISTANCE) {
 681              		.loc 1 193 0
 682 0252 174B     		ldr	r3, .L59+76
 683 0254 1B68     		ldr	r3, [r3]
 684 0256 174A     		ldr	r2, .L59+80
 685 0258 9342     		cmp	r3, r2
 686 025a 2DDD     		ble	.L19
 194:main.c        ****       stop();
 687              		.loc 1 194 0
 688 025c FFF7FEFF 		bl	stop
 689 0260 8AE7     		b	.L58
 690              	.L60:
 691 0262 00BF     		.align	2
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 17


 692              	.L59:
 693 0264 00000000 		.word	MyISR
 694 0268 00000000 		.word	eoc
 695 026c 00000000 		.word	.LC0
 696 0270 14000000 		.word	.LC1
 697 0274 20000000 		.word	.LC2
 698 0278 2C000000 		.word	.LC3
 699 027c 3C000000 		.word	.LC4
 700 0280 40000000 		.word	.LC5
 701 0284 4C000000 		.word	.LC6
 702 0288 00000000 		.word	motorFlag
 703 028c 00000000 		.word	step
 704 0290 00000000 		.word	v1L
 705 0294 00000000 		.word	v1R
 706 0298 00000000 		.word	v2L
 707 029c 00000000 		.word	v2R
 708 02a0 00000000 		.word	numRotationsL
 709 02a4 00000000 		.word	numRotationsR
 710 02a8 00000000 		.word	dotsTravelled
 711 02ac 25314C3E 		.word	1045180709
 712 02b0 00000000 		.word	distanceTravelled
 713 02b4 7F969800 		.word	9999999
 714              	.L19:
 195:main.c        **** 
 196:main.c        ****     } else {
 197:main.c        **** 
 198:main.c        ****       LED_PIN_4_Write(0);
 715              		.loc 1 198 0
 716 02b8 0020     		movs	r0, #0
 717 02ba FFF7FEFF 		bl	LED_PIN_4_Write
 199:main.c        ****       if (flag == 1) {
 718              		.loc 1 199 0
 719 02be BA4B     		ldr	r3, .L61
 720 02c0 1B68     		ldr	r3, [r3]
 721 02c2 012B     		cmp	r3, #1
 722 02c4 7FF458AF 		bne	.L58
 200:main.c        **** 
 201:main.c        ****         ADC_IRQ_Disable();
 723              		.loc 1 201 0
 724 02c8 FFF7FEFF 		bl	ADC_IRQ_Disable
 202:main.c        ****         valuesLeftIntersection[count] = ADC_GetResult16(0);
 725              		.loc 1 202 0
 726 02cc B74B     		ldr	r3, .L61+4
 727 02ce 1C68     		ldr	r4, [r3]
 728 02d0 0020     		movs	r0, #0
 729 02d2 FFF7FEFF 		bl	ADC_GetResult16
 730 02d6 0346     		mov	r3, r0
 731 02d8 1A46     		mov	r2, r3
 732 02da B54B     		ldr	r3, .L61+8
 733 02dc 43F82420 		str	r2, [r3, r4, lsl #2]
 203:main.c        ****         valuesLeftLine[count] = ADC_GetResult16(1);
 734              		.loc 1 203 0
 735 02e0 B24B     		ldr	r3, .L61+4
 736 02e2 1C68     		ldr	r4, [r3]
 737 02e4 0120     		movs	r0, #1
 738 02e6 FFF7FEFF 		bl	ADC_GetResult16
 739 02ea 0346     		mov	r3, r0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 18


 740 02ec 1A46     		mov	r2, r3
 741 02ee B14B     		ldr	r3, .L61+12
 742 02f0 43F82420 		str	r2, [r3, r4, lsl #2]
 204:main.c        ****         valuesMiddleLine[count] = ADC_GetResult16(2);
 743              		.loc 1 204 0
 744 02f4 AD4B     		ldr	r3, .L61+4
 745 02f6 1C68     		ldr	r4, [r3]
 746 02f8 0220     		movs	r0, #2
 747 02fa FFF7FEFF 		bl	ADC_GetResult16
 748 02fe 0346     		mov	r3, r0
 749 0300 1A46     		mov	r2, r3
 750 0302 AD4B     		ldr	r3, .L61+16
 751 0304 43F82420 		str	r2, [r3, r4, lsl #2]
 205:main.c        ****         valuesTurnComplete[count] = ADC_GetResult16(3);
 752              		.loc 1 205 0
 753 0308 A84B     		ldr	r3, .L61+4
 754 030a 1C68     		ldr	r4, [r3]
 755 030c 0320     		movs	r0, #3
 756 030e FFF7FEFF 		bl	ADC_GetResult16
 757 0312 0346     		mov	r3, r0
 758 0314 1A46     		mov	r2, r3
 759 0316 A94B     		ldr	r3, .L61+20
 760 0318 43F82420 		str	r2, [r3, r4, lsl #2]
 206:main.c        ****         valuesRightLine[count] = ADC_GetResult16(4);
 761              		.loc 1 206 0
 762 031c A34B     		ldr	r3, .L61+4
 763 031e 1C68     		ldr	r4, [r3]
 764 0320 0420     		movs	r0, #4
 765 0322 FFF7FEFF 		bl	ADC_GetResult16
 766 0326 0346     		mov	r3, r0
 767 0328 1A46     		mov	r2, r3
 768 032a A54B     		ldr	r3, .L61+24
 769 032c 43F82420 		str	r2, [r3, r4, lsl #2]
 207:main.c        ****         valuesRightIntersection[count] = ADC_GetResult16(5);
 770              		.loc 1 207 0
 771 0330 9E4B     		ldr	r3, .L61+4
 772 0332 1C68     		ldr	r4, [r3]
 773 0334 0520     		movs	r0, #5
 774 0336 FFF7FEFF 		bl	ADC_GetResult16
 775 033a 0346     		mov	r3, r0
 776 033c 1A46     		mov	r2, r3
 777 033e A14B     		ldr	r3, .L61+28
 778 0340 43F82420 		str	r2, [r3, r4, lsl #2]
 208:main.c        **** 
 209:main.c        ****         count++;
 779              		.loc 1 209 0
 780 0344 994B     		ldr	r3, .L61+4
 781 0346 1B68     		ldr	r3, [r3]
 782 0348 0133     		adds	r3, r3, #1
 783 034a 984A     		ldr	r2, .L61+4
 784 034c 1360     		str	r3, [r2]
 210:main.c        ****         if (count == ADC_COUNT) {
 785              		.loc 1 210 0
 786 034e 974B     		ldr	r3, .L61+4
 787 0350 1B68     		ldr	r3, [r3]
 788 0352 B3F57A7F 		cmp	r3, #1000
 789 0356 40F0D081 		bne	.L21
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 19


 790              	.LBB9:
 211:main.c        ****           LED_PIN_4_Write(1);
 791              		.loc 1 211 0
 792 035a 0120     		movs	r0, #1
 793 035c FFF7FEFF 		bl	LED_PIN_4_Write
 212:main.c        ****           count = 0;
 794              		.loc 1 212 0
 795 0360 924B     		ldr	r3, .L61+4
 796 0362 0022     		movs	r2, #0
 797 0364 1A60     		str	r2, [r3]
 213:main.c        ****           int highCountLeftIntersection = 0;
 798              		.loc 1 213 0
 799 0366 0023     		movs	r3, #0
 800 0368 C7F8D438 		str	r3, [r7, #2260]
 214:main.c        ****           int highCountLeftLine = 0;
 801              		.loc 1 214 0
 802 036c 0023     		movs	r3, #0
 803 036e C7F8D038 		str	r3, [r7, #2256]
 215:main.c        ****           int highCountMiddleLine = 0;
 804              		.loc 1 215 0
 805 0372 0023     		movs	r3, #0
 806 0374 C7F8CC38 		str	r3, [r7, #2252]
 216:main.c        ****           int highCountTurnComplete = 0;
 807              		.loc 1 216 0
 808 0378 0023     		movs	r3, #0
 809 037a C7F8C838 		str	r3, [r7, #2248]
 217:main.c        ****           int highCountRightLine = 0;
 810              		.loc 1 217 0
 811 037e 0023     		movs	r3, #0
 812 0380 C7F8C438 		str	r3, [r7, #2244]
 218:main.c        ****           int highCountRightIntersection = 0;
 813              		.loc 1 218 0
 814 0384 0023     		movs	r3, #0
 815 0386 C7F8C038 		str	r3, [r7, #2240]
 816              	.LBB10:
 219:main.c        ****           for (int i = 0; i < ADC_COUNT; i++) {
 817              		.loc 1 219 0
 818 038a 0023     		movs	r3, #0
 819 038c C7F8BC38 		str	r3, [r7, #2236]
 820 0390 58E0     		b	.L22
 821              	.L29:
 220:main.c        **** 
 221:main.c        ****             if (valuesLeftIntersection[i] > 3000) {
 822              		.loc 1 221 0
 823 0392 874A     		ldr	r2, .L61+8
 824 0394 D7F8BC38 		ldr	r3, [r7, #2236]
 825 0398 52F82330 		ldr	r3, [r2, r3, lsl #2]
 826 039c 40F6B832 		movw	r2, #3000
 827 03a0 9342     		cmp	r3, r2
 828 03a2 04DD     		ble	.L23
 222:main.c        ****               highCountLeftIntersection++;
 829              		.loc 1 222 0
 830 03a4 D7F8D438 		ldr	r3, [r7, #2260]
 831 03a8 0133     		adds	r3, r3, #1
 832 03aa C7F8D438 		str	r3, [r7, #2260]
 833              	.L23:
 223:main.c        **** 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 20


 224:main.c        ****             }
 225:main.c        **** 
 226:main.c        ****             if (valuesLeftLine[i] > 3000) {
 834              		.loc 1 226 0
 835 03ae 814A     		ldr	r2, .L61+12
 836 03b0 D7F8BC38 		ldr	r3, [r7, #2236]
 837 03b4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 838 03b8 40F6B832 		movw	r2, #3000
 839 03bc 9342     		cmp	r3, r2
 840 03be 04DD     		ble	.L24
 227:main.c        ****               highCountLeftLine++;
 841              		.loc 1 227 0
 842 03c0 D7F8D038 		ldr	r3, [r7, #2256]
 843 03c4 0133     		adds	r3, r3, #1
 844 03c6 C7F8D038 		str	r3, [r7, #2256]
 845              	.L24:
 228:main.c        **** 
 229:main.c        ****             }
 230:main.c        **** 
 231:main.c        ****             if (valuesMiddleLine[i] > 3000) {
 846              		.loc 1 231 0
 847 03ca 7B4A     		ldr	r2, .L61+16
 848 03cc D7F8BC38 		ldr	r3, [r7, #2236]
 849 03d0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 850 03d4 40F6B832 		movw	r2, #3000
 851 03d8 9342     		cmp	r3, r2
 852 03da 04DD     		ble	.L25
 232:main.c        ****               highCountMiddleLine++;
 853              		.loc 1 232 0
 854 03dc D7F8CC38 		ldr	r3, [r7, #2252]
 855 03e0 0133     		adds	r3, r3, #1
 856 03e2 C7F8CC38 		str	r3, [r7, #2252]
 857              	.L25:
 233:main.c        **** 
 234:main.c        ****             }
 235:main.c        **** 
 236:main.c        ****             if (valuesTurnComplete[i] > 3000) {
 858              		.loc 1 236 0
 859 03e6 754A     		ldr	r2, .L61+20
 860 03e8 D7F8BC38 		ldr	r3, [r7, #2236]
 861 03ec 52F82330 		ldr	r3, [r2, r3, lsl #2]
 862 03f0 40F6B832 		movw	r2, #3000
 863 03f4 9342     		cmp	r3, r2
 864 03f6 04DD     		ble	.L26
 237:main.c        ****               highCountTurnComplete++;
 865              		.loc 1 237 0
 866 03f8 D7F8C838 		ldr	r3, [r7, #2248]
 867 03fc 0133     		adds	r3, r3, #1
 868 03fe C7F8C838 		str	r3, [r7, #2248]
 869              	.L26:
 238:main.c        **** 
 239:main.c        ****             }
 240:main.c        **** 
 241:main.c        ****             if (valuesRightLine[i] > 3000) {
 870              		.loc 1 241 0
 871 0402 6F4A     		ldr	r2, .L61+24
 872 0404 D7F8BC38 		ldr	r3, [r7, #2236]
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 21


 873 0408 52F82330 		ldr	r3, [r2, r3, lsl #2]
 874 040c 40F6B832 		movw	r2, #3000
 875 0410 9342     		cmp	r3, r2
 876 0412 04DD     		ble	.L27
 242:main.c        ****               highCountRightLine++;
 877              		.loc 1 242 0
 878 0414 D7F8C438 		ldr	r3, [r7, #2244]
 879 0418 0133     		adds	r3, r3, #1
 880 041a C7F8C438 		str	r3, [r7, #2244]
 881              	.L27:
 243:main.c        **** 
 244:main.c        ****             }
 245:main.c        **** 
 246:main.c        ****             if (valuesRightIntersection[i] > 3000) {
 882              		.loc 1 246 0
 883 041e 694A     		ldr	r2, .L61+28
 884 0420 D7F8BC38 		ldr	r3, [r7, #2236]
 885 0424 52F82330 		ldr	r3, [r2, r3, lsl #2]
 886 0428 40F6B832 		movw	r2, #3000
 887 042c 9342     		cmp	r3, r2
 888 042e 04DD     		ble	.L28
 247:main.c        ****               highCountRightIntersection++;
 889              		.loc 1 247 0
 890 0430 D7F8C038 		ldr	r3, [r7, #2240]
 891 0434 0133     		adds	r3, r3, #1
 892 0436 C7F8C038 		str	r3, [r7, #2240]
 893              	.L28:
 219:main.c        **** 
 894              		.loc 1 219 0 discriminator 2
 895 043a D7F8BC38 		ldr	r3, [r7, #2236]
 896 043e 0133     		adds	r3, r3, #1
 897 0440 C7F8BC38 		str	r3, [r7, #2236]
 898              	.L22:
 219:main.c        **** 
 899              		.loc 1 219 0 is_stmt 0 discriminator 1
 900 0444 D7F8BC38 		ldr	r3, [r7, #2236]
 901 0448 B3F57A7F 		cmp	r3, #1000
 902 044c A1DB     		blt	.L29
 903              	.LBE10:
 248:main.c        **** 
 249:main.c        ****             }
 250:main.c        **** 
 251:main.c        ****           }
 252:main.c        **** 
 253:main.c        ****           if (L_LINE_BLACK) {
 904              		.loc 1 253 0 is_stmt 1
 905 044e D7F8D038 		ldr	r3, [r7, #2256]
 906 0452 952B     		cmp	r3, #149
 907 0454 03DC     		bgt	.L30
 254:main.c        ****             LED_PIN_1_Write(0);
 908              		.loc 1 254 0
 909 0456 0020     		movs	r0, #0
 910 0458 FFF7FEFF 		bl	LED_PIN_1_Write
 911 045c 02E0     		b	.L31
 912              	.L30:
 255:main.c        ****           } else {
 256:main.c        ****             LED_PIN_1_Write(1);
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 22


 913              		.loc 1 256 0
 914 045e 0120     		movs	r0, #1
 915 0460 FFF7FEFF 		bl	LED_PIN_1_Write
 916              	.L31:
 257:main.c        ****           }
 258:main.c        **** 
 259:main.c        ****           if (M_LINE_BLACK) {
 917              		.loc 1 259 0
 918 0464 D7F8CC38 		ldr	r3, [r7, #2252]
 919 0468 952B     		cmp	r3, #149
 920 046a 03DC     		bgt	.L32
 260:main.c        ****             LED_PIN_2_Write(0);
 921              		.loc 1 260 0
 922 046c 0020     		movs	r0, #0
 923 046e FFF7FEFF 		bl	LED_PIN_2_Write
 924 0472 02E0     		b	.L33
 925              	.L32:
 261:main.c        ****           } else {
 262:main.c        ****             LED_PIN_2_Write(1);
 926              		.loc 1 262 0
 927 0474 0120     		movs	r0, #1
 928 0476 FFF7FEFF 		bl	LED_PIN_2_Write
 929              	.L33:
 263:main.c        ****           }
 264:main.c        **** 
 265:main.c        ****           if (R_LINE_BLACK) {
 930              		.loc 1 265 0
 931 047a D7F8C438 		ldr	r3, [r7, #2244]
 932 047e 952B     		cmp	r3, #149
 933 0480 03DC     		bgt	.L34
 266:main.c        ****             LED_PIN_3_Write(0);
 934              		.loc 1 266 0
 935 0482 0020     		movs	r0, #0
 936 0484 FFF7FEFF 		bl	LED_PIN_3_Write
 937 0488 02E0     		b	.L35
 938              	.L34:
 267:main.c        ****           } else {
 268:main.c        ****             LED_PIN_3_Write(1);
 939              		.loc 1 268 0
 940 048a 0120     		movs	r0, #1
 941 048c FFF7FEFF 		bl	LED_PIN_3_Write
 942              	.L35:
 269:main.c        ****           }
 270:main.c        **** 
 271:main.c        ****           shouldUpdate = 0;
 943              		.loc 1 271 0
 944 0490 4D4B     		ldr	r3, .L61+32
 945 0492 0022     		movs	r2, #0
 946 0494 1A60     		str	r2, [r3]
 272:main.c        ****           turnTimer = 0;
 947              		.loc 1 272 0
 948 0496 4D4B     		ldr	r3, .L61+36
 949 0498 0022     		movs	r2, #0
 950 049a 1A60     		str	r2, [r3]
 273:main.c        **** 
 274:main.c        ****           // If all the sensors are under black light, stop the robot
 275:main.c        ****           if (L_INT_BLACK && M_LINE_BLACK && R_INT_BLACK && TC_BLACK && L_LINE_BLACK && R_LINE_BLAC
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 23


 951              		.loc 1 275 0
 952 049c D7F8D438 		ldr	r3, [r7, #2260]
 953 04a0 952B     		cmp	r3, #149
 954 04a2 16DC     		bgt	.L36
 955              		.loc 1 275 0 is_stmt 0 discriminator 1
 956 04a4 D7F8CC38 		ldr	r3, [r7, #2252]
 957 04a8 952B     		cmp	r3, #149
 958 04aa 12DC     		bgt	.L36
 959              		.loc 1 275 0 discriminator 2
 960 04ac D7F8C038 		ldr	r3, [r7, #2240]
 961 04b0 952B     		cmp	r3, #149
 962 04b2 0EDC     		bgt	.L36
 963              		.loc 1 275 0 discriminator 3
 964 04b4 D7F8C838 		ldr	r3, [r7, #2248]
 965 04b8 952B     		cmp	r3, #149
 966 04ba 0ADC     		bgt	.L36
 967              		.loc 1 275 0 discriminator 4
 968 04bc D7F8D038 		ldr	r3, [r7, #2256]
 969 04c0 952B     		cmp	r3, #149
 970 04c2 06DC     		bgt	.L36
 971              		.loc 1 275 0 discriminator 5
 972 04c4 D7F8C438 		ldr	r3, [r7, #2244]
 973 04c8 952B     		cmp	r3, #149
 974 04ca 02DC     		bgt	.L36
 276:main.c        **** 
 277:main.c        ****             stop();
 975              		.loc 1 277 0 is_stmt 1
 976 04cc FFF7FEFF 		bl	stop
 977 04d0 13E1     		b	.L21
 978              	.L36:
 278:main.c        **** 
 279:main.c        ****           } else if (turningLeft == 1) { // if robot is turning left
 979              		.loc 1 279 0
 980 04d2 3F4B     		ldr	r3, .L61+40
 981 04d4 1B68     		ldr	r3, [r3]
 982 04d6 012B     		cmp	r3, #1
 983 04d8 14D1     		bne	.L37
 280:main.c        ****             while (turnTimer != 10000) {
 984              		.loc 1 280 0
 985 04da 06E0     		b	.L38
 986              	.L39:
 281:main.c        ****               turnLeft();
 987              		.loc 1 281 0
 988 04dc FFF7FEFF 		bl	turnLeft
 282:main.c        ****               turnTimer++;
 989              		.loc 1 282 0
 990 04e0 3A4B     		ldr	r3, .L61+36
 991 04e2 1B68     		ldr	r3, [r3]
 992 04e4 0133     		adds	r3, r3, #1
 993 04e6 394A     		ldr	r2, .L61+36
 994 04e8 1360     		str	r3, [r2]
 995              	.L38:
 280:main.c        ****             while (turnTimer != 10000) {
 996              		.loc 1 280 0
 997 04ea 384B     		ldr	r3, .L61+36
 998 04ec 1B68     		ldr	r3, [r3]
 999 04ee 42F21072 		movw	r2, #10000
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 24


 1000 04f2 9342     		cmp	r3, r2
 1001 04f4 F2D1     		bne	.L39
 283:main.c        ****             }
 284:main.c        ****             turnEnable = 0;
 1002              		.loc 1 284 0
 1003 04f6 374B     		ldr	r3, .L61+44
 1004 04f8 0022     		movs	r2, #0
 1005 04fa 1A60     		str	r2, [r3]
 285:main.c        ****             turningLeft = 0;
 1006              		.loc 1 285 0
 1007 04fc 344B     		ldr	r3, .L61+40
 1008 04fe 0022     		movs	r2, #0
 1009 0500 1A60     		str	r2, [r3]
 1010 0502 FAE0     		b	.L21
 1011              	.L37:
 286:main.c        **** 
 287:main.c        ****           } else if (turningRight == 1) { // if robot is turning right
 1012              		.loc 1 287 0
 1013 0504 344B     		ldr	r3, .L61+48
 1014 0506 1B68     		ldr	r3, [r3]
 1015 0508 012B     		cmp	r3, #1
 1016 050a 14D1     		bne	.L40
 288:main.c        ****             while (turnTimer != 10000) {
 1017              		.loc 1 288 0
 1018 050c 06E0     		b	.L41
 1019              	.L42:
 289:main.c        ****               turnRight();
 1020              		.loc 1 289 0
 1021 050e FFF7FEFF 		bl	turnRight
 290:main.c        ****               turnTimer++;
 1022              		.loc 1 290 0
 1023 0512 2E4B     		ldr	r3, .L61+36
 1024 0514 1B68     		ldr	r3, [r3]
 1025 0516 0133     		adds	r3, r3, #1
 1026 0518 2C4A     		ldr	r2, .L61+36
 1027 051a 1360     		str	r3, [r2]
 1028              	.L41:
 288:main.c        ****             while (turnTimer != 10000) {
 1029              		.loc 1 288 0
 1030 051c 2B4B     		ldr	r3, .L61+36
 1031 051e 1B68     		ldr	r3, [r3]
 1032 0520 42F21072 		movw	r2, #10000
 1033 0524 9342     		cmp	r3, r2
 1034 0526 F2D1     		bne	.L42
 291:main.c        ****             }
 292:main.c        ****             turnEnable = 0;
 1035              		.loc 1 292 0
 1036 0528 2A4B     		ldr	r3, .L61+44
 1037 052a 0022     		movs	r2, #0
 1038 052c 1A60     		str	r2, [r3]
 293:main.c        ****             turningRight = 0;
 1039              		.loc 1 293 0
 1040 052e 2A4B     		ldr	r3, .L61+48
 1041 0530 0022     		movs	r2, #0
 1042 0532 1A60     		str	r2, [r3]
 1043 0534 E1E0     		b	.L21
 1044              	.L40:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 25


 294:main.c        **** 
 295:main.c        ****           } else if (L_INT_BLACK && (M_LINE_BLACK || L_LINE_BLACK) && turnEnable == 1) { //initiate
 1045              		.loc 1 295 0
 1046 0536 D7F8D438 		ldr	r3, [r7, #2260]
 1047 053a 952B     		cmp	r3, #149
 1048 053c 17DC     		bgt	.L43
 1049              		.loc 1 295 0 is_stmt 0 discriminator 1
 1050 053e D7F8CC38 		ldr	r3, [r7, #2252]
 1051 0542 952B     		cmp	r3, #149
 1052 0544 03DD     		ble	.L44
 1053              		.loc 1 295 0 discriminator 3
 1054 0546 D7F8D038 		ldr	r3, [r7, #2256]
 1055 054a 952B     		cmp	r3, #149
 1056 054c 0FDC     		bgt	.L43
 1057              	.L44:
 1058              		.loc 1 295 0 discriminator 4
 1059 054e 214B     		ldr	r3, .L61+44
 1060 0550 1B68     		ldr	r3, [r3]
 1061 0552 012B     		cmp	r3, #1
 1062 0554 0BD1     		bne	.L43
 296:main.c        **** 
 297:main.c        ****             turnTimer++;
 1063              		.loc 1 297 0 is_stmt 1
 1064 0556 1D4B     		ldr	r3, .L61+36
 1065 0558 1B68     		ldr	r3, [r3]
 1066 055a 0133     		adds	r3, r3, #1
 1067 055c 1B4A     		ldr	r2, .L61+36
 1068 055e 1360     		str	r3, [r2]
 298:main.c        ****             turningLeft = 1;
 1069              		.loc 1 298 0
 1070 0560 1B4B     		ldr	r3, .L61+40
 1071 0562 0122     		movs	r2, #1
 1072 0564 1A60     		str	r2, [r3]
 299:main.c        ****             lastAdjustDirection = 0;
 1073              		.loc 1 299 0
 1074 0566 1D4B     		ldr	r3, .L61+52
 1075 0568 0022     		movs	r2, #0
 1076 056a 1A60     		str	r2, [r3]
 1077 056c C5E0     		b	.L21
 1078              	.L43:
 300:main.c        **** 
 301:main.c        ****           } else if (R_INT_BLACK && (M_LINE_BLACK || R_LINE_BLACK) && turnEnable == 1) { //initiate
 1079              		.loc 1 301 0
 1080 056e D7F8C038 		ldr	r3, [r7, #2240]
 1081 0572 952B     		cmp	r3, #149
 1082 0574 34DC     		bgt	.L45
 1083              		.loc 1 301 0 is_stmt 0 discriminator 1
 1084 0576 D7F8CC38 		ldr	r3, [r7, #2252]
 1085 057a 952B     		cmp	r3, #149
 1086 057c 03DD     		ble	.L46
 1087              		.loc 1 301 0 discriminator 3
 1088 057e D7F8C438 		ldr	r3, [r7, #2244]
 1089 0582 952B     		cmp	r3, #149
 1090 0584 2CDC     		bgt	.L45
 1091              	.L46:
 1092              		.loc 1 301 0 discriminator 4
 1093 0586 134B     		ldr	r3, .L61+44
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 26


 1094 0588 1B68     		ldr	r3, [r3]
 1095 058a 012B     		cmp	r3, #1
 1096 058c 28D1     		bne	.L45
 302:main.c        **** 
 303:main.c        ****             turnTimer++;
 1097              		.loc 1 303 0 is_stmt 1
 1098 058e 0F4B     		ldr	r3, .L61+36
 1099 0590 1B68     		ldr	r3, [r3]
 1100 0592 0133     		adds	r3, r3, #1
 1101 0594 0D4A     		ldr	r2, .L61+36
 1102 0596 1360     		str	r3, [r2]
 304:main.c        ****             turningRight = 1;
 1103              		.loc 1 304 0
 1104 0598 0F4B     		ldr	r3, .L61+48
 1105 059a 0122     		movs	r2, #1
 1106 059c 1A60     		str	r2, [r3]
 305:main.c        ****             lastAdjustDirection = 2;
 1107              		.loc 1 305 0
 1108 059e 0F4B     		ldr	r3, .L61+52
 1109 05a0 0222     		movs	r2, #2
 1110 05a2 1A60     		str	r2, [r3]
 1111 05a4 A9E0     		b	.L21
 1112              	.L62:
 1113 05a6 00BF     		.align	2
 1114              	.L61:
 1115 05a8 00000000 		.word	flag
 1116 05ac 00000000 		.word	count
 1117 05b0 00000000 		.word	valuesLeftIntersection
 1118 05b4 00000000 		.word	valuesLeftLine
 1119 05b8 00000000 		.word	valuesMiddleLine
 1120 05bc 00000000 		.word	valuesTurnComplete
 1121 05c0 00000000 		.word	valuesRightLine
 1122 05c4 00000000 		.word	valuesRightIntersection
 1123 05c8 00000000 		.word	shouldUpdate
 1124 05cc 00000000 		.word	turnTimer
 1125 05d0 00000000 		.word	turningLeft
 1126 05d4 00000000 		.word	turnEnable
 1127 05d8 00000000 		.word	turningRight
 1128 05dc 00000000 		.word	lastAdjustDirection
 1129              	.L45:
 306:main.c        **** 
 307:main.c        ****           } else if (R_LINE_BLACK && L_LINE_BLACK) {
 1130              		.loc 1 307 0
 1131 05e0 D7F8C438 		ldr	r3, [r7, #2244]
 1132 05e4 952B     		cmp	r3, #149
 1133 05e6 04DC     		bgt	.L47
 1134              		.loc 1 307 0 is_stmt 0 discriminator 1
 1135 05e8 D7F8D038 		ldr	r3, [r7, #2256]
 1136 05ec 952B     		cmp	r3, #149
 1137 05ee 40F38480 		ble	.L21
 1138              	.L47:
 308:main.c        ****             // do nothing for now
 309:main.c        **** 
 310:main.c        ****           } else if (L_INT_BLACK && R_INT_BLACK) {
 1139              		.loc 1 310 0 is_stmt 1
 1140 05f2 D7F8D438 		ldr	r3, [r7, #2260]
 1141 05f6 952B     		cmp	r3, #149
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 27


 1142 05f8 03DC     		bgt	.L48
 1143              		.loc 1 310 0 is_stmt 0 discriminator 1
 1144 05fa D7F8C038 		ldr	r3, [r7, #2240]
 1145 05fe 952B     		cmp	r3, #149
 1146 0600 7BDD     		ble	.L21
 1147              	.L48:
 311:main.c        ****             // do nothing for now
 312:main.c        **** 
 313:main.c        ****           } else if (M_LINE_BLACK && L_LINE_BLACK) { // if robot slightly too far right
 1148              		.loc 1 313 0 is_stmt 1
 1149 0602 D7F8CC38 		ldr	r3, [r7, #2252]
 1150 0606 952B     		cmp	r3, #149
 1151 0608 0CDC     		bgt	.L49
 1152              		.loc 1 313 0 is_stmt 0 discriminator 1
 1153 060a D7F8D038 		ldr	r3, [r7, #2256]
 1154 060e 952B     		cmp	r3, #149
 1155 0610 08DC     		bgt	.L49
 314:main.c        ****             adjustLeft();
 1156              		.loc 1 314 0 is_stmt 1
 1157 0612 FFF7FEFF 		bl	adjustLeft
 315:main.c        ****             turnEnable = 1;
 1158              		.loc 1 315 0
 1159 0616 3C4B     		ldr	r3, .L63
 1160 0618 0122     		movs	r2, #1
 1161 061a 1A60     		str	r2, [r3]
 316:main.c        ****             lastAdjustDirection = 0;
 1162              		.loc 1 316 0
 1163 061c 3B4B     		ldr	r3, .L63+4
 1164 061e 0022     		movs	r2, #0
 1165 0620 1A60     		str	r2, [r3]
 1166 0622 6AE0     		b	.L21
 1167              	.L49:
 317:main.c        **** 
 318:main.c        ****           } else if (M_LINE_BLACK && R_LINE_BLACK) { //  if robot slightly too far left
 1168              		.loc 1 318 0
 1169 0624 D7F8CC38 		ldr	r3, [r7, #2252]
 1170 0628 952B     		cmp	r3, #149
 1171 062a 0CDC     		bgt	.L50
 1172              		.loc 1 318 0 is_stmt 0 discriminator 1
 1173 062c D7F8C438 		ldr	r3, [r7, #2244]
 1174 0630 952B     		cmp	r3, #149
 1175 0632 08DC     		bgt	.L50
 319:main.c        ****             adjustRight();
 1176              		.loc 1 319 0 is_stmt 1
 1177 0634 FFF7FEFF 		bl	adjustRight
 320:main.c        ****             lastAdjustDirection = 2;
 1178              		.loc 1 320 0
 1179 0638 344B     		ldr	r3, .L63+4
 1180 063a 0222     		movs	r2, #2
 1181 063c 1A60     		str	r2, [r3]
 321:main.c        ****             turnEnable = 1;
 1182              		.loc 1 321 0
 1183 063e 324B     		ldr	r3, .L63
 1184 0640 0122     		movs	r2, #1
 1185 0642 1A60     		str	r2, [r3]
 1186 0644 59E0     		b	.L21
 1187              	.L50:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 28


 322:main.c        **** 
 323:main.c        ****           } else if (M_LINE_BLACK) { // if robot in the center keep moving straight
 1188              		.loc 1 323 0
 1189 0646 D7F8CC38 		ldr	r3, [r7, #2252]
 1190 064a 952B     		cmp	r3, #149
 1191 064c 15DC     		bgt	.L51
 324:main.c        ****             shouldUpdate = 1;
 1192              		.loc 1 324 0
 1193 064e 304B     		ldr	r3, .L63+8
 1194 0650 0122     		movs	r2, #1
 1195 0652 1A60     		str	r2, [r3]
 325:main.c        ****             lastAdjustDirection = 1;
 1196              		.loc 1 325 0
 1197 0654 2D4B     		ldr	r3, .L63+4
 1198 0656 0122     		movs	r2, #1
 1199 0658 1A60     		str	r2, [r3]
 326:main.c        ****             turnEnable = 1;
 1200              		.loc 1 326 0
 1201 065a 2B4B     		ldr	r3, .L63
 1202 065c 0122     		movs	r2, #1
 1203 065e 1A60     		str	r2, [r3]
 327:main.c        ****             driveForward(distanceTravelled, TARGET_SPEED);
 1204              		.loc 1 327 0
 1205 0660 2C4B     		ldr	r3, .L63+12
 1206 0662 1C68     		ldr	r4, [r3]
 1207 0664 2C4B     		ldr	r3, .L63+16
 1208 0666 1B68     		ldr	r3, [r3]	@ float
 1209 0668 1846     		mov	r0, r3
 1210 066a FFF7FEFF 		bl	__aeabi_f2iz
 1211 066e 0346     		mov	r3, r0
 1212 0670 1946     		mov	r1, r3
 1213 0672 2046     		mov	r0, r4
 1214 0674 FFF7FEFF 		bl	driveForward
 1215 0678 3FE0     		b	.L21
 1216              	.L51:
 328:main.c        **** 
 329:main.c        ****           } else if (R_LINE_BLACK) { // if robot too far left
 1217              		.loc 1 329 0
 1218 067a D7F8C438 		ldr	r3, [r7, #2244]
 1219 067e 952B     		cmp	r3, #149
 1220 0680 08DC     		bgt	.L52
 330:main.c        ****             adjustRight();
 1221              		.loc 1 330 0
 1222 0682 FFF7FEFF 		bl	adjustRight
 331:main.c        ****             turnEnable = 1;
 1223              		.loc 1 331 0
 1224 0686 204B     		ldr	r3, .L63
 1225 0688 0122     		movs	r2, #1
 1226 068a 1A60     		str	r2, [r3]
 332:main.c        ****             lastAdjustDirection = 2;
 1227              		.loc 1 332 0
 1228 068c 1F4B     		ldr	r3, .L63+4
 1229 068e 0222     		movs	r2, #2
 1230 0690 1A60     		str	r2, [r3]
 1231 0692 32E0     		b	.L21
 1232              	.L52:
 333:main.c        **** 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 29


 334:main.c        ****           } else if (L_LINE_BLACK) { // if robot too far right
 1233              		.loc 1 334 0
 1234 0694 D7F8D038 		ldr	r3, [r7, #2256]
 1235 0698 952B     		cmp	r3, #149
 1236 069a 08DC     		bgt	.L53
 335:main.c        ****             adjustLeft();
 1237              		.loc 1 335 0
 1238 069c FFF7FEFF 		bl	adjustLeft
 336:main.c        ****             turnEnable = 1;
 1239              		.loc 1 336 0
 1240 06a0 194B     		ldr	r3, .L63
 1241 06a2 0122     		movs	r2, #1
 1242 06a4 1A60     		str	r2, [r3]
 337:main.c        ****             lastAdjustDirection = 0;
 1243              		.loc 1 337 0
 1244 06a6 194B     		ldr	r3, .L63+4
 1245 06a8 0022     		movs	r2, #0
 1246 06aa 1A60     		str	r2, [r3]
 1247 06ac 25E0     		b	.L21
 1248              	.L53:
 338:main.c        **** 
 339:main.c        ****           } else if (L_INT_BLACK) {
 1249              		.loc 1 339 0
 1250 06ae D7F8D438 		ldr	r3, [r7, #2260]
 1251 06b2 952B     		cmp	r3, #149
 1252 06b4 06DC     		bgt	.L54
 340:main.c        ****             //hardAdjustLeft();
 341:main.c        ****             turningLeft = 1;
 1253              		.loc 1 341 0
 1254 06b6 194B     		ldr	r3, .L63+20
 1255 06b8 0122     		movs	r2, #1
 1256 06ba 1A60     		str	r2, [r3]
 342:main.c        ****             lastAdjustDirection = 0;
 1257              		.loc 1 342 0
 1258 06bc 134B     		ldr	r3, .L63+4
 1259 06be 0022     		movs	r2, #0
 1260 06c0 1A60     		str	r2, [r3]
 1261 06c2 1AE0     		b	.L21
 1262              	.L54:
 343:main.c        **** 
 344:main.c        ****           } else if (R_INT_BLACK) {
 1263              		.loc 1 344 0
 1264 06c4 D7F8C038 		ldr	r3, [r7, #2240]
 1265 06c8 952B     		cmp	r3, #149
 1266 06ca 06DC     		bgt	.L55
 345:main.c        ****             //hardAdjustRight();
 346:main.c        ****             turningRight = 1;
 1267              		.loc 1 346 0
 1268 06cc 144B     		ldr	r3, .L63+24
 1269 06ce 0122     		movs	r2, #1
 1270 06d0 1A60     		str	r2, [r3]
 347:main.c        ****             lastAdjustDirection = 2;
 1271              		.loc 1 347 0
 1272 06d2 0E4B     		ldr	r3, .L63+4
 1273 06d4 0222     		movs	r2, #2
 1274 06d6 1A60     		str	r2, [r3]
 1275 06d8 0FE0     		b	.L21
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 30


 1276              	.L55:
 348:main.c        **** //          } else if (highCountLeftIntersection > 150 && highCountRightIntersection > 150 && highC
 349:main.c        **** //            driveForward(distanceTravelled, TARGET_SPEED);
 350:main.c        **** //            
 351:main.c        **** //        }
 352:main.c        ****         }
 353:main.c        ****             else { // completely lost find way
 354:main.c        ****             if (lastAdjustDirection == 0) {
 1277              		.loc 1 354 0
 1278 06da 0C4B     		ldr	r3, .L63+4
 1279 06dc 1B68     		ldr	r3, [r3]
 1280 06de 002B     		cmp	r3, #0
 1281 06e0 02D1     		bne	.L56
 355:main.c        ****               turnLeft();
 1282              		.loc 1 355 0
 1283 06e2 FFF7FEFF 		bl	turnLeft
 1284 06e6 08E0     		b	.L21
 1285              	.L56:
 356:main.c        ****             } else if (lastAdjustDirection == 1) { // last movement was forward (middle sensor sens
 1286              		.loc 1 356 0
 1287 06e8 084B     		ldr	r3, .L63+4
 1288 06ea 1B68     		ldr	r3, [r3]
 1289 06ec 012B     		cmp	r3, #1
 1290 06ee 02D1     		bne	.L57
 357:main.c        ****               //hardAdjustLeft();
 358:main.c        ****               turnRight();
 1291              		.loc 1 358 0
 1292 06f0 FFF7FEFF 		bl	turnRight
 1293 06f4 01E0     		b	.L21
 1294              	.L57:
 359:main.c        ****               //reverse(3000); // random number 3000
 360:main.c        ****             } else {
 361:main.c        ****               turnRight();
 1295              		.loc 1 361 0
 1296 06f6 FFF7FEFF 		bl	turnRight
 1297              	.L21:
 1298              	.LBE9:
 362:main.c        ****             }
 363:main.c        ****             }
 364:main.c        ****         }
 365:main.c        **** 
 366:main.c        ****         flag = 0;
 1299              		.loc 1 366 0
 1300 06fa 0A4B     		ldr	r3, .L63+28
 1301 06fc 0022     		movs	r2, #0
 1302 06fe 1A60     		str	r2, [r3]
 367:main.c        ****         ADC_IRQ_Enable();
 1303              		.loc 1 367 0
 1304 0700 FFF7FEFF 		bl	ADC_IRQ_Enable
 368:main.c        ****       }
 369:main.c        ****     }
 370:main.c        ****   }
 1305              		.loc 1 370 0
 1306 0704 38E5     		b	.L58
 1307              	.L64:
 1308 0706 00BF     		.align	2
 1309              	.L63:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 31


 1310 0708 00000000 		.word	turnEnable
 1311 070c 00000000 		.word	lastAdjustDirection
 1312 0710 00000000 		.word	shouldUpdate
 1313 0714 00000000 		.word	distanceTravelled
 1314 0718 00000000 		.word	TARGET_SPEED
 1315 071c 00000000 		.word	turningLeft
 1316 0720 00000000 		.word	turningRight
 1317 0724 00000000 		.word	flag
 1318              		.cfi_endproc
 1319              	.LFE66:
 1320              		.size	main, .-main
 1321              		.section	.text.usbPutString,"ax",%progbits
 1322              		.align	2
 1323              		.global	usbPutString
 1324              		.thumb
 1325              		.thumb_func
 1326              		.type	usbPutString, %function
 1327              	usbPutString:
 1328              	.LFB67:
 371:main.c        **** }
 372:main.c        **** 
 373:main.c        **** void usbPutString(char * s) {
 1329              		.loc 1 373 0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 8
 1332              		@ frame_needed = 1, uses_anonymous_args = 0
 1333 0000 80B5     		push	{r7, lr}
 1334              		.cfi_def_cfa_offset 8
 1335              		.cfi_offset 7, -8
 1336              		.cfi_offset 14, -4
 1337 0002 82B0     		sub	sp, sp, #8
 1338              		.cfi_def_cfa_offset 16
 1339 0004 00AF     		add	r7, sp, #0
 1340              		.cfi_def_cfa_register 7
 1341 0006 7860     		str	r0, [r7, #4]
 374:main.c        ****   // !! Assumes that *s is a string with allocated space >=64 chars     
 375:main.c        ****   //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 376:main.c        ****   //  length to 62 char (63rd char is a '!')
 377:main.c        **** 
 378:main.c        ****   #ifdef USE_USB
 379:main.c        ****   while (USBUART_CDCIsReady() == 0);
 1342              		.loc 1 379 0
 1343 0008 00BF     		nop
 1344              	.L66:
 1345              		.loc 1 379 0 is_stmt 0 discriminator 1
 1346 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1347 000e 0346     		mov	r3, r0
 1348 0010 002B     		cmp	r3, #0
 1349 0012 FAD0     		beq	.L66
 380:main.c        ****   s[63] = '\0';
 1350              		.loc 1 380 0 is_stmt 1
 1351 0014 7B68     		ldr	r3, [r7, #4]
 1352 0016 3F33     		adds	r3, r3, #63
 1353 0018 0022     		movs	r2, #0
 1354 001a 1A70     		strb	r2, [r3]
 381:main.c        ****   s[62] = '!';
 1355              		.loc 1 381 0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 32


 1356 001c 7B68     		ldr	r3, [r7, #4]
 1357 001e 3E33     		adds	r3, r3, #62
 1358 0020 2122     		movs	r2, #33
 1359 0022 1A70     		strb	r2, [r3]
 382:main.c        ****   USBUART_PutData((uint8 * ) s, strlen(s));
 1360              		.loc 1 382 0
 1361 0024 7868     		ldr	r0, [r7, #4]
 1362 0026 FFF7FEFF 		bl	strlen
 1363 002a 0346     		mov	r3, r0
 1364 002c 9BB2     		uxth	r3, r3
 1365 002e 1946     		mov	r1, r3
 1366 0030 7868     		ldr	r0, [r7, #4]
 1367 0032 FFF7FEFF 		bl	USBUART_PutData
 383:main.c        ****   #endif
 384:main.c        **** }
 1368              		.loc 1 384 0
 1369 0036 00BF     		nop
 1370 0038 0837     		adds	r7, r7, #8
 1371              		.cfi_def_cfa_offset 8
 1372 003a BD46     		mov	sp, r7
 1373              		.cfi_def_cfa_register 13
 1374              		@ sp needed
 1375 003c 80BD     		pop	{r7, pc}
 1376              		.cfi_endproc
 1377              	.LFE67:
 1378              		.size	usbPutString, .-usbPutString
 1379 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1380              		.align	2
 1381              		.global	usbPutChar
 1382              		.thumb
 1383              		.thumb_func
 1384              		.type	usbPutChar, %function
 1385              	usbPutChar:
 1386              	.LFB68:
 385:main.c        **** //* ========================================
 386:main.c        **** void usbPutChar(char c) {
 1387              		.loc 1 386 0
 1388              		.cfi_startproc
 1389              		@ args = 0, pretend = 0, frame = 8
 1390              		@ frame_needed = 1, uses_anonymous_args = 0
 1391 0000 80B5     		push	{r7, lr}
 1392              		.cfi_def_cfa_offset 8
 1393              		.cfi_offset 7, -8
 1394              		.cfi_offset 14, -4
 1395 0002 82B0     		sub	sp, sp, #8
 1396              		.cfi_def_cfa_offset 16
 1397 0004 00AF     		add	r7, sp, #0
 1398              		.cfi_def_cfa_register 7
 1399 0006 0346     		mov	r3, r0
 1400 0008 FB71     		strb	r3, [r7, #7]
 387:main.c        ****   #ifdef USE_USB
 388:main.c        ****   while (USBUART_CDCIsReady() == 0);
 1401              		.loc 1 388 0
 1402 000a 00BF     		nop
 1403              	.L68:
 1404              		.loc 1 388 0 is_stmt 0 discriminator 1
 1405 000c FFF7FEFF 		bl	USBUART_CDCIsReady
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 33


 1406 0010 0346     		mov	r3, r0
 1407 0012 002B     		cmp	r3, #0
 1408 0014 FAD0     		beq	.L68
 389:main.c        ****   USBUART_PutChar(c);
 1409              		.loc 1 389 0 is_stmt 1
 1410 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1411 0018 1846     		mov	r0, r3
 1412 001a FFF7FEFF 		bl	USBUART_PutChar
 390:main.c        ****   #endif
 391:main.c        **** }...
 1413              		.loc 1 391 0
 1414 001e 00BF     		nop
 1415 0020 0837     		adds	r7, r7, #8
 1416              		.cfi_def_cfa_offset 8
 1417 0022 BD46     		mov	sp, r7
 1418              		.cfi_def_cfa_register 13
 1419              		@ sp needed
 1420 0024 80BD     		pop	{r7, pc}
 1421              		.cfi_endproc
 1422              	.LFE68:
 1423              		.size	usbPutChar, .-usbPutChar
 1424 0026 00BF     		.text
 1425              	.Letext0:
 1426              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1427              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1428              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1429              		.file 5 "vars.h"
 1430              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1431              		.section	.debug_info,"",%progbits
 1432              	.Ldebug_info0:
 1433 0000 CC070000 		.4byte	0x7cc
 1434 0004 0400     		.2byte	0x4
 1435 0006 00000000 		.4byte	.Ldebug_abbrev0
 1436 000a 04       		.byte	0x4
 1437 000b 01       		.uleb128 0x1
 1438 000c BF000000 		.4byte	.LASF103
 1439 0010 0C       		.byte	0xc
 1440 0011 CA040000 		.4byte	.LASF104
 1441 0015 20020000 		.4byte	.LASF105
 1442 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1443 001d 00000000 		.4byte	0
 1444 0021 00000000 		.4byte	.Ldebug_line0
 1445 0025 02       		.uleb128 0x2
 1446 0026 01       		.byte	0x1
 1447 0027 06       		.byte	0x6
 1448 0028 E8010000 		.4byte	.LASF0
 1449 002c 02       		.uleb128 0x2
 1450 002d 01       		.byte	0x1
 1451 002e 08       		.byte	0x8
 1452 002f 56030000 		.4byte	.LASF1
 1453 0033 02       		.uleb128 0x2
 1454 0034 02       		.byte	0x2
 1455 0035 05       		.byte	0x5
 1456 0036 6D000000 		.4byte	.LASF2
 1457 003a 02       		.uleb128 0x2
 1458 003b 02       		.byte	0x2
 1459 003c 07       		.byte	0x7
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 34


 1460 003d 6E040000 		.4byte	.LASF3
 1461 0041 03       		.uleb128 0x3
 1462 0042 2B050000 		.4byte	.LASF12
 1463 0046 02       		.byte	0x2
 1464 0047 3F       		.byte	0x3f
 1465 0048 4C000000 		.4byte	0x4c
 1466 004c 02       		.uleb128 0x2
 1467 004d 04       		.byte	0x4
 1468 004e 05       		.byte	0x5
 1469 004f DA020000 		.4byte	.LASF4
 1470 0053 02       		.uleb128 0x2
 1471 0054 04       		.byte	0x4
 1472 0055 07       		.byte	0x7
 1473 0056 D1040000 		.4byte	.LASF5
 1474 005a 02       		.uleb128 0x2
 1475 005b 08       		.byte	0x8
 1476 005c 05       		.byte	0x5
 1477 005d FE050000 		.4byte	.LASF6
 1478 0061 02       		.uleb128 0x2
 1479 0062 08       		.byte	0x8
 1480 0063 07       		.byte	0x7
 1481 0064 9A030000 		.4byte	.LASF7
 1482 0068 04       		.uleb128 0x4
 1483 0069 04       		.byte	0x4
 1484 006a 05       		.byte	0x5
 1485 006b 696E7400 		.ascii	"int\000"
 1486 006f 02       		.uleb128 0x2
 1487 0070 04       		.byte	0x4
 1488 0071 07       		.byte	0x7
 1489 0072 B1030000 		.4byte	.LASF8
 1490 0076 02       		.uleb128 0x2
 1491 0077 08       		.byte	0x8
 1492 0078 04       		.byte	0x4
 1493 0079 44030000 		.4byte	.LASF9
 1494 007d 02       		.uleb128 0x2
 1495 007e 04       		.byte	0x4
 1496 007f 07       		.byte	0x7
 1497 0080 A7000000 		.4byte	.LASF10
 1498 0084 05       		.uleb128 0x5
 1499 0085 04       		.byte	0x4
 1500 0086 8A000000 		.4byte	0x8a
 1501 008a 02       		.uleb128 0x2
 1502 008b 01       		.byte	0x1
 1503 008c 08       		.byte	0x8
 1504 008d 37040000 		.4byte	.LASF11
 1505 0091 03       		.uleb128 0x3
 1506 0092 54040000 		.4byte	.LASF13
 1507 0096 03       		.byte	0x3
 1508 0097 2C       		.byte	0x2c
 1509 0098 41000000 		.4byte	0x41
 1510 009c 06       		.uleb128 0x6
 1511 009d 81040000 		.4byte	.LASF14
 1512 00a1 04       		.byte	0x4
 1513 00a2 E701     		.2byte	0x1e7
 1514 00a4 2C000000 		.4byte	0x2c
 1515 00a8 06       		.uleb128 0x6
 1516 00a9 77010000 		.4byte	.LASF15
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 35


 1517 00ad 04       		.byte	0x4
 1518 00ae E801     		.2byte	0x1e8
 1519 00b0 3A000000 		.4byte	0x3a
 1520 00b4 06       		.uleb128 0x6
 1521 00b5 95020000 		.4byte	.LASF16
 1522 00b9 04       		.byte	0x4
 1523 00ba EA01     		.2byte	0x1ea
 1524 00bc 25000000 		.4byte	0x25
 1525 00c0 06       		.uleb128 0x6
 1526 00c1 97010000 		.4byte	.LASF17
 1527 00c5 04       		.byte	0x4
 1528 00c6 EB01     		.2byte	0x1eb
 1529 00c8 33000000 		.4byte	0x33
 1530 00cc 02       		.uleb128 0x2
 1531 00cd 04       		.byte	0x4
 1532 00ce 04       		.byte	0x4
 1533 00cf F4010000 		.4byte	.LASF18
 1534 00d3 02       		.uleb128 0x2
 1535 00d4 08       		.byte	0x8
 1536 00d5 04       		.byte	0x4
 1537 00d6 E3040000 		.4byte	.LASF19
 1538 00da 07       		.uleb128 0x7
 1539 00db 24040000 		.4byte	.LASF106
 1540 00df 20       		.byte	0x20
 1541 00e0 05       		.byte	0x5
 1542 00e1 29       		.byte	0x29
 1543 00e2 B3010000 		.4byte	0x1b3
 1544 00e6 08       		.uleb128 0x8
 1545 00e7 F9050000 		.4byte	.LASF20
 1546 00eb 05       		.byte	0x5
 1547 00ec 2A       		.byte	0x2a
 1548 00ed B4000000 		.4byte	0xb4
 1549 00f1 00       		.byte	0
 1550 00f2 08       		.uleb128 0x8
 1551 00f3 91010000 		.4byte	.LASF21
 1552 00f7 05       		.byte	0x5
 1553 00f8 2B       		.byte	0x2b
 1554 00f9 9C000000 		.4byte	0x9c
 1555 00fd 01       		.byte	0x1
 1556 00fe 08       		.uleb128 0x8
 1557 00ff 49040000 		.4byte	.LASF22
 1558 0103 05       		.byte	0x5
 1559 0104 2C       		.byte	0x2c
 1560 0105 C0000000 		.4byte	0xc0
 1561 0109 02       		.byte	0x2
 1562 010a 08       		.uleb128 0x8
 1563 010b 92050000 		.4byte	.LASF23
 1564 010f 05       		.byte	0x5
 1565 0110 2D       		.byte	0x2d
 1566 0111 C0000000 		.4byte	0xc0
 1567 0115 04       		.byte	0x4
 1568 0116 08       		.uleb128 0x8
 1569 0117 3D050000 		.4byte	.LASF24
 1570 011b 05       		.byte	0x5
 1571 011c 2E       		.byte	0x2e
 1572 011d C0000000 		.4byte	0xc0
 1573 0121 06       		.byte	0x6
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 36


 1574 0122 08       		.uleb128 0x8
 1575 0123 C8020000 		.4byte	.LASF25
 1576 0127 05       		.byte	0x5
 1577 0128 2F       		.byte	0x2f
 1578 0129 C0000000 		.4byte	0xc0
 1579 012d 08       		.byte	0x8
 1580 012e 08       		.uleb128 0x8
 1581 012f 35050000 		.4byte	.LASF26
 1582 0133 05       		.byte	0x5
 1583 0134 30       		.byte	0x30
 1584 0135 C0000000 		.4byte	0xc0
 1585 0139 0A       		.byte	0xa
 1586 013a 08       		.uleb128 0x8
 1587 013b 64030000 		.4byte	.LASF27
 1588 013f 05       		.byte	0x5
 1589 0140 31       		.byte	0x31
 1590 0141 C0000000 		.4byte	0xc0
 1591 0145 0C       		.byte	0xc
 1592 0146 08       		.uleb128 0x8
 1593 0147 BB020000 		.4byte	.LASF28
 1594 014b 05       		.byte	0x5
 1595 014c 32       		.byte	0x32
 1596 014d C0000000 		.4byte	0xc0
 1597 0151 0E       		.byte	0xe
 1598 0152 08       		.uleb128 0x8
 1599 0153 ED030000 		.4byte	.LASF29
 1600 0157 05       		.byte	0x5
 1601 0158 33       		.byte	0x33
 1602 0159 C0000000 		.4byte	0xc0
 1603 015d 10       		.byte	0x10
 1604 015e 08       		.uleb128 0x8
 1605 015f 3C030000 		.4byte	.LASF30
 1606 0163 05       		.byte	0x5
 1607 0164 34       		.byte	0x34
 1608 0165 C0000000 		.4byte	0xc0
 1609 0169 12       		.byte	0x12
 1610 016a 08       		.uleb128 0x8
 1611 016b 02020000 		.4byte	.LASF31
 1612 016f 05       		.byte	0x5
 1613 0170 35       		.byte	0x35
 1614 0171 C0000000 		.4byte	0xc0
 1615 0175 14       		.byte	0x14
 1616 0176 08       		.uleb128 0x8
 1617 0177 B0010000 		.4byte	.LASF32
 1618 017b 05       		.byte	0x5
 1619 017c 36       		.byte	0x36
 1620 017d C0000000 		.4byte	0xc0
 1621 0181 16       		.byte	0x16
 1622 0182 08       		.uleb128 0x8
 1623 0183 65000000 		.4byte	.LASF33
 1624 0187 05       		.byte	0x5
 1625 0188 37       		.byte	0x37
 1626 0189 C0000000 		.4byte	0xc0
 1627 018d 18       		.byte	0x18
 1628 018e 08       		.uleb128 0x8
 1629 018f FA010000 		.4byte	.LASF34
 1630 0193 05       		.byte	0x5
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 37


 1631 0194 38       		.byte	0x38
 1632 0195 C0000000 		.4byte	0xc0
 1633 0199 1A       		.byte	0x1a
 1634 019a 08       		.uleb128 0x8
 1635 019b DA030000 		.4byte	.LASF35
 1636 019f 05       		.byte	0x5
 1637 01a0 39       		.byte	0x39
 1638 01a1 C0000000 		.4byte	0xc0
 1639 01a5 1C       		.byte	0x1c
 1640 01a6 08       		.uleb128 0x8
 1641 01a7 61040000 		.4byte	.LASF36
 1642 01ab 05       		.byte	0x5
 1643 01ac 3A       		.byte	0x3a
 1644 01ad C0000000 		.4byte	0xc0
 1645 01b1 1E       		.byte	0x1e
 1646 01b2 00       		.byte	0
 1647 01b3 09       		.uleb128 0x9
 1648 01b4 656F6300 		.ascii	"eoc\000"
 1649 01b8 01       		.byte	0x1
 1650 01b9 54       		.byte	0x54
 1651 01ba 00000000 		.4byte	.LFB64
 1652 01be 18000000 		.4byte	.LFE64-.LFB64
 1653 01c2 01       		.uleb128 0x1
 1654 01c3 9C       		.byte	0x9c
 1655 01c4 0A       		.uleb128 0xa
 1656 01c5 1B030000 		.4byte	.LASF37
 1657 01c9 01       		.byte	0x1
 1658 01ca 58       		.byte	0x58
 1659 01cb 00000000 		.4byte	.LFB65
 1660 01cf 18000000 		.4byte	.LFE65-.LFB65
 1661 01d3 01       		.uleb128 0x1
 1662 01d4 9C       		.byte	0x9c
 1663 01d5 0B       		.uleb128 0xb
 1664 01d6 B0000000 		.4byte	.LASF50
 1665 01da 01       		.byte	0x1
 1666 01db 5C       		.byte	0x5c
 1667 01dc 68000000 		.4byte	0x68
 1668 01e0 00000000 		.4byte	.LFB66
 1669 01e4 28070000 		.4byte	.LFE66-.LFB66
 1670 01e8 01       		.uleb128 0x1
 1671 01e9 9C       		.byte	0x9c
 1672 01ea 46030000 		.4byte	0x346
 1673 01ee 0C       		.uleb128 0xc
 1674 01ef 16000000 		.4byte	.LASF38
 1675 01f3 01       		.byte	0x1
 1676 01f4 79       		.byte	0x79
 1677 01f5 46030000 		.4byte	0x346
 1678 01f9 03       		.uleb128 0x3
 1679 01fa 91       		.byte	0x91
 1680 01fb F06F     		.sleb128 -2064
 1681 01fd 0C       		.uleb128 0xc
 1682 01fe AA050000 		.4byte	.LASF39
 1683 0202 01       		.byte	0x1
 1684 0203 7B       		.byte	0x7b
 1685 0204 5D030000 		.4byte	0x35d
 1686 0208 03       		.uleb128 0x3
 1687 0209 91       		.byte	0x91
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 38


 1688 020a A86E     		.sleb128 -2264
 1689 020c 0C       		.uleb128 0xc
 1690 020d 2E040000 		.4byte	.LASF40
 1691 0211 01       		.byte	0x1
 1692 0212 7C       		.byte	0x7c
 1693 0213 6D030000 		.4byte	0x36d
 1694 0217 03       		.uleb128 0x3
 1695 0218 91       		.byte	0x91
 1696 0219 A06E     		.sleb128 -2272
 1697 021b 0D       		.uleb128 0xd
 1698 021c 4A000000 		.4byte	.LBB2
 1699 0220 3A000000 		.4byte	.LBE2-.LBB2
 1700 0224 35020000 		.4byte	0x235
 1701 0228 0E       		.uleb128 0xe
 1702 0229 6900     		.ascii	"i\000"
 1703 022b 01       		.byte	0x1
 1704 022c 7F       		.byte	0x7f
 1705 022d 68000000 		.4byte	0x68
 1706 0231 02       		.uleb128 0x2
 1707 0232 91       		.byte	0x91
 1708 0233 6C       		.sleb128 -20
 1709 0234 00       		.byte	0
 1710 0235 0D       		.uleb128 0xd
 1711 0236 AA000000 		.4byte	.LBB3
 1712 023a 52000000 		.4byte	.LBE3-.LBB3
 1713 023e 68020000 		.4byte	0x268
 1714 0242 0E       		.uleb128 0xe
 1715 0243 6900     		.ascii	"i\000"
 1716 0245 01       		.byte	0x1
 1717 0246 8B       		.byte	0x8b
 1718 0247 68000000 		.4byte	0x68
 1719 024b 02       		.uleb128 0x2
 1720 024c 91       		.byte	0x91
 1721 024d 68       		.sleb128 -24
 1722 024e 0F       		.uleb128 0xf
 1723 024f B2000000 		.4byte	.LBB4
 1724 0253 36000000 		.4byte	.LBE4-.LBB4
 1725 0257 0C       		.uleb128 0xc
 1726 0258 D0020000 		.4byte	.LASF41
 1727 025c 01       		.byte	0x1
 1728 025d 8C       		.byte	0x8c
 1729 025e 7D030000 		.4byte	0x37d
 1730 0262 03       		.uleb128 0x3
 1731 0263 91       		.byte	0x91
 1732 0264 946E     		.sleb128 -2284
 1733 0266 00       		.byte	0
 1734 0267 00       		.byte	0
 1735 0268 0D       		.uleb128 0xd
 1736 0269 02010000 		.4byte	.LBB5
 1737 026d 32000000 		.4byte	.LBE5-.LBB5
 1738 0271 82020000 		.4byte	0x282
 1739 0275 0E       		.uleb128 0xe
 1740 0276 6900     		.ascii	"i\000"
 1741 0278 01       		.byte	0x1
 1742 0279 93       		.byte	0x93
 1743 027a 68000000 		.4byte	0x68
 1744 027e 02       		.uleb128 0x2
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 39


 1745 027f 91       		.byte	0x91
 1746 0280 64       		.sleb128 -28
 1747 0281 00       		.byte	0
 1748 0282 0D       		.uleb128 0xd
 1749 0283 3A010000 		.4byte	.LBB6
 1750 0287 3E000000 		.4byte	.LBE6-.LBB6
 1751 028b B5020000 		.4byte	0x2b5
 1752 028f 0E       		.uleb128 0xe
 1753 0290 6900     		.ascii	"i\000"
 1754 0292 01       		.byte	0x1
 1755 0293 9A       		.byte	0x9a
 1756 0294 68000000 		.4byte	0x68
 1757 0298 02       		.uleb128 0x2
 1758 0299 91       		.byte	0x91
 1759 029a 60       		.sleb128 -32
 1760 029b 0F       		.uleb128 0xf
 1761 029c 42010000 		.4byte	.LBB7
 1762 02a0 24000000 		.4byte	.LBE7-.LBB7
 1763 02a4 0C       		.uleb128 0xc
 1764 02a5 BE040000 		.4byte	.LASF42
 1765 02a9 01       		.byte	0x1
 1766 02aa 9B       		.byte	0x9b
 1767 02ab 7D030000 		.4byte	0x37d
 1768 02af 03       		.uleb128 0x3
 1769 02b0 91       		.byte	0x91
 1770 02b1 886E     		.sleb128 -2296
 1771 02b3 00       		.byte	0
 1772 02b4 00       		.byte	0
 1773 02b5 0D       		.uleb128 0xd
 1774 02b6 B0010000 		.4byte	.LBB8
 1775 02ba 98000000 		.4byte	.LBE8-.LBB8
 1776 02be D1020000 		.4byte	0x2d1
 1777 02c2 0C       		.uleb128 0xc
 1778 02c3 80030000 		.4byte	.LASF43
 1779 02c7 01       		.byte	0x1
 1780 02c8 B3       		.byte	0xb3
 1781 02c9 68000000 		.4byte	0x68
 1782 02cd 02       		.uleb128 0x2
 1783 02ce 91       		.byte	0x91
 1784 02cf 40       		.sleb128 -64
 1785 02d0 00       		.byte	0
 1786 02d1 0F       		.uleb128 0xf
 1787 02d2 5A030000 		.4byte	.LBB9
 1788 02d6 A0030000 		.4byte	.LBE9-.LBB9
 1789 02da 0C       		.uleb128 0xc
 1790 02db DF050000 		.4byte	.LASF44
 1791 02df 01       		.byte	0x1
 1792 02e0 D5       		.byte	0xd5
 1793 02e1 68000000 		.4byte	0x68
 1794 02e5 02       		.uleb128 0x2
 1795 02e6 91       		.byte	0x91
 1796 02e7 5C       		.sleb128 -36
 1797 02e8 0C       		.uleb128 0xc
 1798 02e9 AC040000 		.4byte	.LASF45
 1799 02ed 01       		.byte	0x1
 1800 02ee D6       		.byte	0xd6
 1801 02ef 68000000 		.4byte	0x68
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 40


 1802 02f3 02       		.uleb128 0x2
 1803 02f4 91       		.byte	0x91
 1804 02f5 58       		.sleb128 -40
 1805 02f6 0C       		.uleb128 0xc
 1806 02f7 FF030000 		.4byte	.LASF46
 1807 02fb 01       		.byte	0x1
 1808 02fc D7       		.byte	0xd7
 1809 02fd 68000000 		.4byte	0x68
 1810 0301 02       		.uleb128 0x2
 1811 0302 91       		.byte	0x91
 1812 0303 54       		.sleb128 -44
 1813 0304 0C       		.uleb128 0xc
 1814 0305 B6050000 		.4byte	.LASF47
 1815 0309 01       		.byte	0x1
 1816 030a D8       		.byte	0xd8
 1817 030b 68000000 		.4byte	0x68
 1818 030f 02       		.uleb128 0x2
 1819 0310 91       		.byte	0x91
 1820 0311 50       		.sleb128 -48
 1821 0312 0C       		.uleb128 0xc
 1822 0313 6D030000 		.4byte	.LASF48
 1823 0317 01       		.byte	0x1
 1824 0318 D9       		.byte	0xd9
 1825 0319 68000000 		.4byte	0x68
 1826 031d 02       		.uleb128 0x2
 1827 031e 91       		.byte	0x91
 1828 031f 4C       		.sleb128 -52
 1829 0320 0C       		.uleb128 0xc
 1830 0321 21030000 		.4byte	.LASF49
 1831 0325 01       		.byte	0x1
 1832 0326 DA       		.byte	0xda
 1833 0327 68000000 		.4byte	0x68
 1834 032b 02       		.uleb128 0x2
 1835 032c 91       		.byte	0x91
 1836 032d 48       		.sleb128 -56
 1837 032e 0F       		.uleb128 0xf
 1838 032f 8A030000 		.4byte	.LBB10
 1839 0333 C4000000 		.4byte	.LBE10-.LBB10
 1840 0337 0E       		.uleb128 0xe
 1841 0338 6900     		.ascii	"i\000"
 1842 033a 01       		.byte	0x1
 1843 033b DB       		.byte	0xdb
 1844 033c 68000000 		.4byte	0x68
 1845 0340 02       		.uleb128 0x2
 1846 0341 91       		.byte	0x91
 1847 0342 44       		.sleb128 -60
 1848 0343 00       		.byte	0
 1849 0344 00       		.byte	0
 1850 0345 00       		.byte	0
 1851 0346 10       		.uleb128 0x10
 1852 0347 2C000000 		.4byte	0x2c
 1853 034b 5D030000 		.4byte	0x35d
 1854 034f 11       		.uleb128 0x11
 1855 0350 7D000000 		.4byte	0x7d
 1856 0354 E703     		.2byte	0x3e7
 1857 0356 12       		.uleb128 0x12
 1858 0357 7D000000 		.4byte	0x7d
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 41


 1859 035b 01       		.byte	0x1
 1860 035c 00       		.byte	0
 1861 035d 10       		.uleb128 0x10
 1862 035e 2C000000 		.4byte	0x2c
 1863 0362 6D030000 		.4byte	0x36d
 1864 0366 12       		.uleb128 0x12
 1865 0367 7D000000 		.4byte	0x7d
 1866 036b C7       		.byte	0xc7
 1867 036c 00       		.byte	0
 1868 036d 10       		.uleb128 0x10
 1869 036e 2C000000 		.4byte	0x2c
 1870 0372 7D030000 		.4byte	0x37d
 1871 0376 12       		.uleb128 0x12
 1872 0377 7D000000 		.4byte	0x7d
 1873 037b 04       		.byte	0x4
 1874 037c 00       		.byte	0
 1875 037d 10       		.uleb128 0x10
 1876 037e 8A000000 		.4byte	0x8a
 1877 0382 8D030000 		.4byte	0x38d
 1878 0386 12       		.uleb128 0x12
 1879 0387 7D000000 		.4byte	0x7d
 1880 038b 09       		.byte	0x9
 1881 038c 00       		.byte	0
 1882 038d 13       		.uleb128 0x13
 1883 038e 88020000 		.4byte	.LASF51
 1884 0392 01       		.byte	0x1
 1885 0393 7501     		.2byte	0x175
 1886 0395 00000000 		.4byte	.LFB67
 1887 0399 3E000000 		.4byte	.LFE67-.LFB67
 1888 039d 01       		.uleb128 0x1
 1889 039e 9C       		.byte	0x9c
 1890 039f B1030000 		.4byte	0x3b1
 1891 03a3 14       		.uleb128 0x14
 1892 03a4 7300     		.ascii	"s\000"
 1893 03a6 01       		.byte	0x1
 1894 03a7 7501     		.2byte	0x175
 1895 03a9 84000000 		.4byte	0x84
 1896 03ad 02       		.uleb128 0x2
 1897 03ae 91       		.byte	0x91
 1898 03af 74       		.sleb128 -12
 1899 03b0 00       		.byte	0
 1900 03b1 13       		.uleb128 0x13
 1901 03b2 00000000 		.4byte	.LASF52
 1902 03b6 01       		.byte	0x1
 1903 03b7 8201     		.2byte	0x182
 1904 03b9 00000000 		.4byte	.LFB68
 1905 03bd 26000000 		.4byte	.LFE68-.LFB68
 1906 03c1 01       		.uleb128 0x1
 1907 03c2 9C       		.byte	0x9c
 1908 03c3 D5030000 		.4byte	0x3d5
 1909 03c7 14       		.uleb128 0x14
 1910 03c8 6300     		.ascii	"c\000"
 1911 03ca 01       		.byte	0x1
 1912 03cb 8201     		.2byte	0x182
 1913 03cd 8A000000 		.4byte	0x8a
 1914 03d1 02       		.uleb128 0x2
 1915 03d2 91       		.byte	0x91
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 42


 1916 03d3 77       		.sleb128 -9
 1917 03d4 00       		.byte	0
 1918 03d5 15       		.uleb128 0x15
 1919 03d6 3C040000 		.4byte	.LASF53
 1920 03da 06       		.byte	0x6
 1921 03db 1207     		.2byte	0x712
 1922 03dd E1030000 		.4byte	0x3e1
 1923 03e1 16       		.uleb128 0x16
 1924 03e2 91000000 		.4byte	0x91
 1925 03e6 17       		.uleb128 0x17
 1926 03e7 747300   		.ascii	"ts\000"
 1927 03ea 05       		.byte	0x5
 1928 03eb 10       		.byte	0x10
 1929 03ec 9C000000 		.4byte	0x9c
 1930 03f0 05       		.uleb128 0x5
 1931 03f1 03       		.byte	0x3
 1932 03f2 00000000 		.4byte	ts
 1933 03f6 18       		.uleb128 0x18
 1934 03f7 5B050000 		.4byte	.LASF54
 1935 03fb 05       		.byte	0x5
 1936 03fc 11       		.byte	0x11
 1937 03fd A8000000 		.4byte	0xa8
 1938 0401 05       		.uleb128 0x5
 1939 0402 03       		.byte	0x3
 1940 0403 00000000 		.4byte	ts_enc
 1941 0407 18       		.uleb128 0x18
 1942 0408 62050000 		.4byte	.LASF55
 1943 040c 05       		.byte	0x5
 1944 040d 12       		.byte	0x12
 1945 040e A8000000 		.4byte	0xa8
 1946 0412 05       		.uleb128 0x5
 1947 0413 03       		.byte	0x3
 1948 0414 00000000 		.4byte	ts_update
 1949 0418 18       		.uleb128 0x18
 1950 0419 10050000 		.4byte	.LASF56
 1951 041d 05       		.byte	0x5
 1952 041e 13       		.byte	0x13
 1953 041f A8000000 		.4byte	0xa8
 1954 0423 05       		.uleb128 0x5
 1955 0424 03       		.byte	0x3
 1956 0425 00000000 		.4byte	ts_speed
 1957 0429 18       		.uleb128 0x18
 1958 042a 4D010000 		.4byte	.LASF57
 1959 042e 05       		.byte	0x5
 1960 042f 14       		.byte	0x14
 1961 0430 A8000000 		.4byte	0xa8
 1962 0434 05       		.uleb128 0x5
 1963 0435 03       		.byte	0x3
 1964 0436 00000000 		.4byte	ts_display
 1965 043a 18       		.uleb128 0x18
 1966 043b 1F050000 		.4byte	.LASF58
 1967 043f 05       		.byte	0x5
 1968 0440 16       		.byte	0x16
 1969 0441 9C000000 		.4byte	0x9c
 1970 0445 05       		.uleb128 0x5
 1971 0446 03       		.byte	0x3
 1972 0447 00000000 		.4byte	flag_ts_enc
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 43


 1973 044b 18       		.uleb128 0x18
 1974 044c 9A020000 		.4byte	.LASF59
 1975 0450 05       		.byte	0x5
 1976 0451 17       		.byte	0x17
 1977 0452 9C000000 		.4byte	0x9c
 1978 0456 05       		.uleb128 0x5
 1979 0457 03       		.byte	0x3
 1980 0458 00000000 		.4byte	flag_ts_update
 1981 045c 18       		.uleb128 0x18
 1982 045d 57000000 		.4byte	.LASF60
 1983 0461 05       		.byte	0x5
 1984 0462 18       		.byte	0x18
 1985 0463 9C000000 		.4byte	0x9c
 1986 0467 05       		.uleb128 0x5
 1987 0468 03       		.byte	0x3
 1988 0469 00000000 		.4byte	flag_ts_speed
 1989 046d 18       		.uleb128 0x18
 1990 046e 03030000 		.4byte	.LASF61
 1991 0472 05       		.byte	0x5
 1992 0473 19       		.byte	0x19
 1993 0474 9C000000 		.4byte	0x9c
 1994 0478 05       		.uleb128 0x5
 1995 0479 03       		.byte	0x3
 1996 047a 00000000 		.4byte	flag_ts_display
 1997 047e 18       		.uleb128 0x18
 1998 047f 13030000 		.4byte	.LASF62
 1999 0483 05       		.byte	0x5
 2000 0484 1C       		.byte	0x1c
 2001 0485 9C000000 		.4byte	0x9c
 2002 0489 05       		.uleb128 0x5
 2003 048a 03       		.byte	0x3
 2004 048b 00000000 		.4byte	flag_rx
 2005 048f 18       		.uleb128 0x18
 2006 0490 32000000 		.4byte	.LASF63
 2007 0494 05       		.byte	0x5
 2008 0495 1D       		.byte	0x1d
 2009 0496 9C000000 		.4byte	0x9c
 2010 049a 05       		.uleb128 0x5
 2011 049b 03       		.byte	0x3
 2012 049c 00000000 		.4byte	flag_packet
 2013 04a0 18       		.uleb128 0x18
 2014 04a1 BE030000 		.4byte	.LASF64
 2015 04a5 05       		.byte	0x5
 2016 04a6 1E       		.byte	0x1e
 2017 04a7 9C000000 		.4byte	0x9c
 2018 04ab 05       		.uleb128 0x5
 2019 04ac 03       		.byte	0x3
 2020 04ad 00000000 		.4byte	flag_KB_string
 2021 04b1 18       		.uleb128 0x18
 2022 04b2 EA040000 		.4byte	.LASF65
 2023 04b6 05       		.byte	0x5
 2024 04b7 20       		.byte	0x20
 2025 04b8 9C000000 		.4byte	0x9c
 2026 04bc 05       		.uleb128 0x5
 2027 04bd 03       		.byte	0x3
 2028 04be 00000000 		.4byte	dataready_flag
 2029 04c2 18       		.uleb128 0x18
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 44


 2030 04c3 76050000 		.4byte	.LASF66
 2031 04c7 05       		.byte	0x5
 2032 04c8 22       		.byte	0x22
 2033 04c9 9C000000 		.4byte	0x9c
 2034 04cd 05       		.uleb128 0x5
 2035 04ce 03       		.byte	0x3
 2036 04cf 00000000 		.4byte	flag_rf_transmission_active
 2037 04d3 10       		.uleb128 0x10
 2038 04d4 8A000000 		.4byte	0x8a
 2039 04d8 E3040000 		.4byte	0x4e3
 2040 04dc 12       		.uleb128 0x12
 2041 04dd 7D000000 		.4byte	0x7d
 2042 04e1 3F       		.byte	0x3f
 2043 04e2 00       		.byte	0
 2044 04e3 18       		.uleb128 0x18
 2045 04e4 9E040000 		.4byte	.LASF67
 2046 04e8 05       		.byte	0x5
 2047 04e9 25       		.byte	0x25
 2048 04ea D3040000 		.4byte	0x4d3
 2049 04ee 05       		.uleb128 0x5
 2050 04ef 03       		.byte	0x3
 2051 04f0 00000000 		.4byte	displaystring
 2052 04f4 18       		.uleb128 0x18
 2053 04f5 D5010000 		.4byte	.LASF68
 2054 04f9 05       		.byte	0x5
 2055 04fa 26       		.byte	0x26
 2056 04fb D3040000 		.4byte	0x4d3
 2057 04ff 05       		.uleb128 0x5
 2058 0500 03       		.byte	0x3
 2059 0501 00000000 		.4byte	line
 2060 0505 18       		.uleb128 0x18
 2061 0506 50030000 		.4byte	.LASF69
 2062 050a 05       		.byte	0x5
 2063 050b 26       		.byte	0x26
 2064 050c D3040000 		.4byte	0x4d3
 2065 0510 05       		.uleb128 0x5
 2066 0511 03       		.byte	0x3
 2067 0512 00000000 		.4byte	entry
 2068 0516 10       		.uleb128 0x10
 2069 0517 9C000000 		.4byte	0x9c
 2070 051b 26050000 		.4byte	0x526
 2071 051f 12       		.uleb128 0x12
 2072 0520 7D000000 		.4byte	0x7d
 2073 0524 3F       		.byte	0x3f
 2074 0525 00       		.byte	0
 2075 0526 18       		.uleb128 0x18
 2076 0527 B5000000 		.4byte	.LASF70
 2077 052b 05       		.byte	0x5
 2078 052c 27       		.byte	0x27
 2079 052d 16050000 		.4byte	0x516
 2080 0531 05       		.uleb128 0x5
 2081 0532 03       		.byte	0x3
 2082 0533 00000000 		.4byte	usbBuffer
 2083 0537 18       		.uleb128 0x18
 2084 0538 9A000000 		.4byte	.LASF71
 2085 053c 05       		.byte	0x5
 2086 053d 3C       		.byte	0x3c
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 45


 2087 053e DA000000 		.4byte	0xda
 2088 0542 05       		.uleb128 0x5
 2089 0543 03       		.byte	0x3
 2090 0544 00000000 		.4byte	system_state
 2091 0548 18       		.uleb128 0x18
 2092 0549 9D050000 		.4byte	.LASF72
 2093 054d 01       		.byte	0x1
 2094 054e 28       		.byte	0x28
 2095 054f CC000000 		.4byte	0xcc
 2096 0553 05       		.uleb128 0x5
 2097 0554 03       		.byte	0x3
 2098 0555 00000000 		.4byte	TARGET_SPEED
 2099 0559 18       		.uleb128 0x18
 2100 055a F5030000 		.4byte	.LASF73
 2101 055e 01       		.byte	0x1
 2102 055f 29       		.byte	0x29
 2103 0560 68000000 		.4byte	0x68
 2104 0564 05       		.uleb128 0x5
 2105 0565 03       		.byte	0x3
 2106 0566 00000000 		.4byte	restoring
 2107 056a 18       		.uleb128 0x18
 2108 056b 66010000 		.4byte	.LASF74
 2109 056f 01       		.byte	0x1
 2110 0570 2A       		.byte	0x2a
 2111 0571 68000000 		.4byte	0x68
 2112 0575 05       		.uleb128 0x5
 2113 0576 03       		.byte	0x3
 2114 0577 00000000 		.4byte	turningDirection
 2115 057b 18       		.uleb128 0x18
 2116 057c 03050000 		.4byte	.LASF75
 2117 0580 01       		.byte	0x1
 2118 0581 2B       		.byte	0x2b
 2119 0582 68000000 		.4byte	0x68
 2120 0586 05       		.uleb128 0x5
 2121 0587 03       		.byte	0x3
 2122 0588 00000000 		.4byte	turningCount
 2123 058c 18       		.uleb128 0x18
 2124 058d CD030000 		.4byte	.LASF76
 2125 0591 01       		.byte	0x1
 2126 0592 2C       		.byte	0x2c
 2127 0593 9D050000 		.4byte	0x59d
 2128 0597 05       		.uleb128 0x5
 2129 0598 03       		.byte	0x3
 2130 0599 00000000 		.4byte	shouldUpdate
 2131 059d 16       		.uleb128 0x16
 2132 059e 68000000 		.4byte	0x68
 2133 05a2 18       		.uleb128 0x18
 2134 05a3 F5020000 		.4byte	.LASF77
 2135 05a7 01       		.byte	0x1
 2136 05a8 2E       		.byte	0x2e
 2137 05a9 9D050000 		.4byte	0x59d
 2138 05ad 05       		.uleb128 0x5
 2139 05ae 03       		.byte	0x3
 2140 05af 00000000 		.4byte	dotsTravelled
 2141 05b3 18       		.uleb128 0x18
 2142 05b4 5C040000 		.4byte	.LASF78
 2143 05b8 01       		.byte	0x1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 46


 2144 05b9 35       		.byte	0x35
 2145 05ba 9D050000 		.4byte	0x59d
 2146 05be 05       		.uleb128 0x5
 2147 05bf 03       		.byte	0x3
 2148 05c0 00000000 		.4byte	flag
 2149 05c4 10       		.uleb128 0x10
 2150 05c5 9D050000 		.4byte	0x59d
 2151 05c9 D5050000 		.4byte	0x5d5
 2152 05cd 11       		.uleb128 0x11
 2153 05ce 7D000000 		.4byte	0x7d
 2154 05d2 E703     		.2byte	0x3e7
 2155 05d4 00       		.byte	0
 2156 05d5 18       		.uleb128 0x18
 2157 05d6 87040000 		.4byte	.LASF79
 2158 05da 01       		.byte	0x1
 2159 05db 36       		.byte	0x36
 2160 05dc E6050000 		.4byte	0x5e6
 2161 05e0 05       		.uleb128 0x5
 2162 05e1 03       		.byte	0x3
 2163 05e2 00000000 		.4byte	valuesLeftIntersection
 2164 05e6 16       		.uleb128 0x16
 2165 05e7 C4050000 		.4byte	0x5c4
 2166 05eb 18       		.uleb128 0x18
 2167 05ec 48000000 		.4byte	.LASF80
 2168 05f0 01       		.byte	0x1
 2169 05f1 37       		.byte	0x37
 2170 05f2 FC050000 		.4byte	0x5fc
 2171 05f6 05       		.uleb128 0x5
 2172 05f7 03       		.byte	0x3
 2173 05f8 00000000 		.4byte	valuesLeftLine
 2174 05fc 16       		.uleb128 0x16
 2175 05fd C4050000 		.4byte	0x5c4
 2176 0601 18       		.uleb128 0x18
 2177 0602 13040000 		.4byte	.LASF81
 2178 0606 01       		.byte	0x1
 2179 0607 38       		.byte	0x38
 2180 0608 12060000 		.4byte	0x612
 2181 060c 05       		.uleb128 0x5
 2182 060d 03       		.byte	0x3
 2183 060e 00000000 		.4byte	valuesMiddleLine
 2184 0612 16       		.uleb128 0x16
 2185 0613 C4050000 		.4byte	0x5c4
 2186 0617 18       		.uleb128 0x18
 2187 0618 77000000 		.4byte	.LASF82
 2188 061c 01       		.byte	0x1
 2189 061d 39       		.byte	0x39
 2190 061e 28060000 		.4byte	0x628
 2191 0622 05       		.uleb128 0x5
 2192 0623 03       		.byte	0x3
 2193 0624 00000000 		.4byte	valuesTurnComplete
 2194 0628 16       		.uleb128 0x16
 2195 0629 C4050000 		.4byte	0x5c4
 2196 062d 18       		.uleb128 0x18
 2197 062e 8A000000 		.4byte	.LASF83
 2198 0632 01       		.byte	0x1
 2199 0633 3A       		.byte	0x3a
 2200 0634 3E060000 		.4byte	0x63e
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 47


 2201 0638 05       		.uleb128 0x5
 2202 0639 03       		.byte	0x3
 2203 063a 00000000 		.4byte	valuesRightLine
 2204 063e 16       		.uleb128 0x16
 2205 063f C4050000 		.4byte	0x5c4
 2206 0643 18       		.uleb128 0x18
 2207 0644 BD010000 		.4byte	.LASF84
 2208 0648 01       		.byte	0x1
 2209 0649 3B       		.byte	0x3b
 2210 064a 54060000 		.4byte	0x654
 2211 064e 05       		.uleb128 0x5
 2212 064f 03       		.byte	0x3
 2213 0650 00000000 		.4byte	valuesRightIntersection
 2214 0654 16       		.uleb128 0x16
 2215 0655 C4050000 		.4byte	0x5c4
 2216 0659 18       		.uleb128 0x18
 2217 065a 19050000 		.4byte	.LASF85
 2218 065e 01       		.byte	0x1
 2219 065f 3C       		.byte	0x3c
 2220 0660 9D050000 		.4byte	0x59d
 2221 0664 05       		.uleb128 0x5
 2222 0665 03       		.byte	0x3
 2223 0666 00000000 		.4byte	count
 2224 066a 18       		.uleb128 0x18
 2225 066b 4F050000 		.4byte	.LASF86
 2226 066f 01       		.byte	0x1
 2227 0670 3D       		.byte	0x3d
 2228 0671 9D050000 		.4byte	0x59d
 2229 0675 05       		.uleb128 0x5
 2230 0676 03       		.byte	0x3
 2231 0677 00000000 		.4byte	turningLeft
 2232 067b 18       		.uleb128 0x18
 2233 067c 8D030000 		.4byte	.LASF87
 2234 0680 01       		.byte	0x1
 2235 0681 3E       		.byte	0x3e
 2236 0682 9D050000 		.4byte	0x59d
 2237 0686 05       		.uleb128 0x5
 2238 0687 03       		.byte	0x3
 2239 0688 00000000 		.4byte	turningRight
 2240 068c 18       		.uleb128 0x18
 2241 068d E3020000 		.4byte	.LASF88
 2242 0691 01       		.byte	0x1
 2243 0692 3F       		.byte	0x3f
 2244 0693 9D050000 		.4byte	0x59d
 2245 0697 05       		.uleb128 0x5
 2246 0698 03       		.byte	0x3
 2247 0699 00000000 		.4byte	lastVeerDirection
 2248 069d 18       		.uleb128 0x18
 2249 069e F9040000 		.4byte	.LASF89
 2250 06a2 01       		.byte	0x1
 2251 06a3 41       		.byte	0x41
 2252 06a4 9D050000 		.4byte	0x59d
 2253 06a8 05       		.uleb128 0x5
 2254 06a9 03       		.byte	0x3
 2255 06aa 00000000 		.4byte	motorFlag
 2256 06ae 18       		.uleb128 0x18
 2257 06af DA050000 		.4byte	.LASF90
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 48


 2258 06b3 01       		.byte	0x1
 2259 06b4 42       		.byte	0x42
 2260 06b5 9D050000 		.4byte	0x59d
 2261 06b9 05       		.uleb128 0x5
 2262 06ba 03       		.byte	0x3
 2263 06bb 00000000 		.4byte	step
 2264 06bf 17       		.uleb128 0x17
 2265 06c0 76314C00 		.ascii	"v1L\000"
 2266 06c4 01       		.byte	0x1
 2267 06c5 43       		.byte	0x43
 2268 06c6 9D050000 		.4byte	0x59d
 2269 06ca 05       		.uleb128 0x5
 2270 06cb 03       		.byte	0x3
 2271 06cc 00000000 		.4byte	v1L
 2272 06d0 17       		.uleb128 0x17
 2273 06d1 76324C00 		.ascii	"v2L\000"
 2274 06d5 01       		.byte	0x1
 2275 06d6 44       		.byte	0x44
 2276 06d7 9D050000 		.4byte	0x59d
 2277 06db 05       		.uleb128 0x5
 2278 06dc 03       		.byte	0x3
 2279 06dd 00000000 		.4byte	v2L
 2280 06e1 17       		.uleb128 0x17
 2281 06e2 76315200 		.ascii	"v1R\000"
 2282 06e6 01       		.byte	0x1
 2283 06e7 45       		.byte	0x45
 2284 06e8 9D050000 		.4byte	0x59d
 2285 06ec 05       		.uleb128 0x5
 2286 06ed 03       		.byte	0x3
 2287 06ee 00000000 		.4byte	v1R
 2288 06f2 17       		.uleb128 0x17
 2289 06f3 76325200 		.ascii	"v2R\000"
 2290 06f7 01       		.byte	0x1
 2291 06f8 46       		.byte	0x46
 2292 06f9 9D050000 		.4byte	0x59d
 2293 06fd 05       		.uleb128 0x5
 2294 06fe 03       		.byte	0x3
 2295 06ff 00000000 		.4byte	v2R
 2296 0703 18       		.uleb128 0x18
 2297 0704 DA010000 		.4byte	.LASF91
 2298 0708 01       		.byte	0x1
 2299 0709 47       		.byte	0x47
 2300 070a 9D050000 		.4byte	0x59d
 2301 070e 05       		.uleb128 0x5
 2302 070f 03       		.byte	0x3
 2303 0710 00000000 		.4byte	numRotationsL
 2304 0714 18       		.uleb128 0x18
 2305 0715 CC050000 		.4byte	.LASF92
 2306 0719 01       		.byte	0x1
 2307 071a 48       		.byte	0x48
 2308 071b 9D050000 		.4byte	0x59d
 2309 071f 05       		.uleb128 0x5
 2310 0720 03       		.byte	0x3
 2311 0721 00000000 		.4byte	numRotationsR
 2312 0725 18       		.uleb128 0x18
 2313 0726 E3030000 		.4byte	.LASF93
 2314 072a 01       		.byte	0x1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 49


 2315 072b 49       		.byte	0x49
 2316 072c 9D050000 		.4byte	0x59d
 2317 0730 05       		.uleb128 0x5
 2318 0731 03       		.byte	0x3
 2319 0732 00000000 		.4byte	turnCount
 2320 0736 18       		.uleb128 0x18
 2321 0737 A9020000 		.4byte	.LASF94
 2322 073b 01       		.byte	0x1
 2323 073c 4A       		.byte	0x4a
 2324 073d 9D050000 		.4byte	0x59d
 2325 0741 05       		.uleb128 0x5
 2326 0742 03       		.byte	0x3
 2327 0743 00000000 		.4byte	distanceTravelled
 2328 0747 18       		.uleb128 0x18
 2329 0748 7E010000 		.4byte	.LASF95
 2330 074c 01       		.byte	0x1
 2331 074d 4B       		.byte	0x4b
 2332 074e 9D050000 		.4byte	0x59d
 2333 0752 05       		.uleb128 0x5
 2334 0753 03       		.byte	0x3
 2335 0754 00000000 		.4byte	distancePerSecondL
 2336 0758 18       		.uleb128 0x18
 2337 0759 9D010000 		.4byte	.LASF96
 2338 075d 01       		.byte	0x1
 2339 075e 4C       		.byte	0x4c
 2340 075f 9D050000 		.4byte	0x59d
 2341 0763 05       		.uleb128 0x5
 2342 0764 03       		.byte	0x3
 2343 0765 00000000 		.4byte	distancePerSecondR
 2344 0769 18       		.uleb128 0x18
 2345 076a 0B020000 		.4byte	.LASF97
 2346 076e 01       		.byte	0x1
 2347 076f 4D       		.byte	0x4d
 2348 0770 9D050000 		.4byte	0x59d
 2349 0774 05       		.uleb128 0x5
 2350 0775 03       		.byte	0x3
 2351 0776 00000000 		.4byte	distancePerSecondAvg
 2352 077a 18       		.uleb128 0x18
 2353 077b 58010000 		.4byte	.LASF98
 2354 077f 01       		.byte	0x1
 2355 0780 4E       		.byte	0x4e
 2356 0781 9D050000 		.4byte	0x59d
 2357 0785 05       		.uleb128 0x5
 2358 0786 03       		.byte	0x3
 2359 0787 00000000 		.4byte	prevTurnState
 2360 078b 18       		.uleb128 0x18
 2361 078c 6C050000 		.4byte	.LASF99
 2362 0790 01       		.byte	0x1
 2363 0791 4F       		.byte	0x4f
 2364 0792 9D050000 		.4byte	0x59d
 2365 0796 05       		.uleb128 0x5
 2366 0797 03       		.byte	0x3
 2367 0798 00000000 		.4byte	turnState
 2368 079c 18       		.uleb128 0x18
 2369 079d 0B000000 		.4byte	.LASF100
 2370 07a1 01       		.byte	0x1
 2371 07a2 50       		.byte	0x50
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 50


 2372 07a3 9D050000 		.4byte	0x59d
 2373 07a7 05       		.uleb128 0x5
 2374 07a8 03       		.byte	0x3
 2375 07a9 00000000 		.4byte	turnEnable
 2376 07ad 18       		.uleb128 0x18
 2377 07ae 3E000000 		.4byte	.LASF101
 2378 07b2 01       		.byte	0x1
 2379 07b3 51       		.byte	0x51
 2380 07b4 9D050000 		.4byte	0x59d
 2381 07b8 05       		.uleb128 0x5
 2382 07b9 03       		.byte	0x3
 2383 07ba 00000000 		.4byte	turnTimer
 2384 07be 18       		.uleb128 0x18
 2385 07bf 1E000000 		.4byte	.LASF102
 2386 07c3 01       		.byte	0x1
 2387 07c4 52       		.byte	0x52
 2388 07c5 68000000 		.4byte	0x68
 2389 07c9 05       		.uleb128 0x5
 2390 07ca 03       		.byte	0x3
 2391 07cb 00000000 		.4byte	lastAdjustDirection
 2392 07cf 00       		.byte	0
 2393              		.section	.debug_abbrev,"",%progbits
 2394              	.Ldebug_abbrev0:
 2395 0000 01       		.uleb128 0x1
 2396 0001 11       		.uleb128 0x11
 2397 0002 01       		.byte	0x1
 2398 0003 25       		.uleb128 0x25
 2399 0004 0E       		.uleb128 0xe
 2400 0005 13       		.uleb128 0x13
 2401 0006 0B       		.uleb128 0xb
 2402 0007 03       		.uleb128 0x3
 2403 0008 0E       		.uleb128 0xe
 2404 0009 1B       		.uleb128 0x1b
 2405 000a 0E       		.uleb128 0xe
 2406 000b 55       		.uleb128 0x55
 2407 000c 17       		.uleb128 0x17
 2408 000d 11       		.uleb128 0x11
 2409 000e 01       		.uleb128 0x1
 2410 000f 10       		.uleb128 0x10
 2411 0010 17       		.uleb128 0x17
 2412 0011 00       		.byte	0
 2413 0012 00       		.byte	0
 2414 0013 02       		.uleb128 0x2
 2415 0014 24       		.uleb128 0x24
 2416 0015 00       		.byte	0
 2417 0016 0B       		.uleb128 0xb
 2418 0017 0B       		.uleb128 0xb
 2419 0018 3E       		.uleb128 0x3e
 2420 0019 0B       		.uleb128 0xb
 2421 001a 03       		.uleb128 0x3
 2422 001b 0E       		.uleb128 0xe
 2423 001c 00       		.byte	0
 2424 001d 00       		.byte	0
 2425 001e 03       		.uleb128 0x3
 2426 001f 16       		.uleb128 0x16
 2427 0020 00       		.byte	0
 2428 0021 03       		.uleb128 0x3
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 51


 2429 0022 0E       		.uleb128 0xe
 2430 0023 3A       		.uleb128 0x3a
 2431 0024 0B       		.uleb128 0xb
 2432 0025 3B       		.uleb128 0x3b
 2433 0026 0B       		.uleb128 0xb
 2434 0027 49       		.uleb128 0x49
 2435 0028 13       		.uleb128 0x13
 2436 0029 00       		.byte	0
 2437 002a 00       		.byte	0
 2438 002b 04       		.uleb128 0x4
 2439 002c 24       		.uleb128 0x24
 2440 002d 00       		.byte	0
 2441 002e 0B       		.uleb128 0xb
 2442 002f 0B       		.uleb128 0xb
 2443 0030 3E       		.uleb128 0x3e
 2444 0031 0B       		.uleb128 0xb
 2445 0032 03       		.uleb128 0x3
 2446 0033 08       		.uleb128 0x8
 2447 0034 00       		.byte	0
 2448 0035 00       		.byte	0
 2449 0036 05       		.uleb128 0x5
 2450 0037 0F       		.uleb128 0xf
 2451 0038 00       		.byte	0
 2452 0039 0B       		.uleb128 0xb
 2453 003a 0B       		.uleb128 0xb
 2454 003b 49       		.uleb128 0x49
 2455 003c 13       		.uleb128 0x13
 2456 003d 00       		.byte	0
 2457 003e 00       		.byte	0
 2458 003f 06       		.uleb128 0x6
 2459 0040 16       		.uleb128 0x16
 2460 0041 00       		.byte	0
 2461 0042 03       		.uleb128 0x3
 2462 0043 0E       		.uleb128 0xe
 2463 0044 3A       		.uleb128 0x3a
 2464 0045 0B       		.uleb128 0xb
 2465 0046 3B       		.uleb128 0x3b
 2466 0047 05       		.uleb128 0x5
 2467 0048 49       		.uleb128 0x49
 2468 0049 13       		.uleb128 0x13
 2469 004a 00       		.byte	0
 2470 004b 00       		.byte	0
 2471 004c 07       		.uleb128 0x7
 2472 004d 13       		.uleb128 0x13
 2473 004e 01       		.byte	0x1
 2474 004f 03       		.uleb128 0x3
 2475 0050 0E       		.uleb128 0xe
 2476 0051 0B       		.uleb128 0xb
 2477 0052 0B       		.uleb128 0xb
 2478 0053 3A       		.uleb128 0x3a
 2479 0054 0B       		.uleb128 0xb
 2480 0055 3B       		.uleb128 0x3b
 2481 0056 0B       		.uleb128 0xb
 2482 0057 01       		.uleb128 0x1
 2483 0058 13       		.uleb128 0x13
 2484 0059 00       		.byte	0
 2485 005a 00       		.byte	0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 52


 2486 005b 08       		.uleb128 0x8
 2487 005c 0D       		.uleb128 0xd
 2488 005d 00       		.byte	0
 2489 005e 03       		.uleb128 0x3
 2490 005f 0E       		.uleb128 0xe
 2491 0060 3A       		.uleb128 0x3a
 2492 0061 0B       		.uleb128 0xb
 2493 0062 3B       		.uleb128 0x3b
 2494 0063 0B       		.uleb128 0xb
 2495 0064 49       		.uleb128 0x49
 2496 0065 13       		.uleb128 0x13
 2497 0066 38       		.uleb128 0x38
 2498 0067 0B       		.uleb128 0xb
 2499 0068 00       		.byte	0
 2500 0069 00       		.byte	0
 2501 006a 09       		.uleb128 0x9
 2502 006b 2E       		.uleb128 0x2e
 2503 006c 00       		.byte	0
 2504 006d 3F       		.uleb128 0x3f
 2505 006e 19       		.uleb128 0x19
 2506 006f 03       		.uleb128 0x3
 2507 0070 08       		.uleb128 0x8
 2508 0071 3A       		.uleb128 0x3a
 2509 0072 0B       		.uleb128 0xb
 2510 0073 3B       		.uleb128 0x3b
 2511 0074 0B       		.uleb128 0xb
 2512 0075 27       		.uleb128 0x27
 2513 0076 19       		.uleb128 0x19
 2514 0077 11       		.uleb128 0x11
 2515 0078 01       		.uleb128 0x1
 2516 0079 12       		.uleb128 0x12
 2517 007a 06       		.uleb128 0x6
 2518 007b 40       		.uleb128 0x40
 2519 007c 18       		.uleb128 0x18
 2520 007d 9742     		.uleb128 0x2117
 2521 007f 19       		.uleb128 0x19
 2522 0080 00       		.byte	0
 2523 0081 00       		.byte	0
 2524 0082 0A       		.uleb128 0xa
 2525 0083 2E       		.uleb128 0x2e
 2526 0084 00       		.byte	0
 2527 0085 3F       		.uleb128 0x3f
 2528 0086 19       		.uleb128 0x19
 2529 0087 03       		.uleb128 0x3
 2530 0088 0E       		.uleb128 0xe
 2531 0089 3A       		.uleb128 0x3a
 2532 008a 0B       		.uleb128 0xb
 2533 008b 3B       		.uleb128 0x3b
 2534 008c 0B       		.uleb128 0xb
 2535 008d 27       		.uleb128 0x27
 2536 008e 19       		.uleb128 0x19
 2537 008f 11       		.uleb128 0x11
 2538 0090 01       		.uleb128 0x1
 2539 0091 12       		.uleb128 0x12
 2540 0092 06       		.uleb128 0x6
 2541 0093 40       		.uleb128 0x40
 2542 0094 18       		.uleb128 0x18
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 53


 2543 0095 9742     		.uleb128 0x2117
 2544 0097 19       		.uleb128 0x19
 2545 0098 00       		.byte	0
 2546 0099 00       		.byte	0
 2547 009a 0B       		.uleb128 0xb
 2548 009b 2E       		.uleb128 0x2e
 2549 009c 01       		.byte	0x1
 2550 009d 3F       		.uleb128 0x3f
 2551 009e 19       		.uleb128 0x19
 2552 009f 03       		.uleb128 0x3
 2553 00a0 0E       		.uleb128 0xe
 2554 00a1 3A       		.uleb128 0x3a
 2555 00a2 0B       		.uleb128 0xb
 2556 00a3 3B       		.uleb128 0x3b
 2557 00a4 0B       		.uleb128 0xb
 2558 00a5 49       		.uleb128 0x49
 2559 00a6 13       		.uleb128 0x13
 2560 00a7 11       		.uleb128 0x11
 2561 00a8 01       		.uleb128 0x1
 2562 00a9 12       		.uleb128 0x12
 2563 00aa 06       		.uleb128 0x6
 2564 00ab 40       		.uleb128 0x40
 2565 00ac 18       		.uleb128 0x18
 2566 00ad 9642     		.uleb128 0x2116
 2567 00af 19       		.uleb128 0x19
 2568 00b0 01       		.uleb128 0x1
 2569 00b1 13       		.uleb128 0x13
 2570 00b2 00       		.byte	0
 2571 00b3 00       		.byte	0
 2572 00b4 0C       		.uleb128 0xc
 2573 00b5 34       		.uleb128 0x34
 2574 00b6 00       		.byte	0
 2575 00b7 03       		.uleb128 0x3
 2576 00b8 0E       		.uleb128 0xe
 2577 00b9 3A       		.uleb128 0x3a
 2578 00ba 0B       		.uleb128 0xb
 2579 00bb 3B       		.uleb128 0x3b
 2580 00bc 0B       		.uleb128 0xb
 2581 00bd 49       		.uleb128 0x49
 2582 00be 13       		.uleb128 0x13
 2583 00bf 02       		.uleb128 0x2
 2584 00c0 18       		.uleb128 0x18
 2585 00c1 00       		.byte	0
 2586 00c2 00       		.byte	0
 2587 00c3 0D       		.uleb128 0xd
 2588 00c4 0B       		.uleb128 0xb
 2589 00c5 01       		.byte	0x1
 2590 00c6 11       		.uleb128 0x11
 2591 00c7 01       		.uleb128 0x1
 2592 00c8 12       		.uleb128 0x12
 2593 00c9 06       		.uleb128 0x6
 2594 00ca 01       		.uleb128 0x1
 2595 00cb 13       		.uleb128 0x13
 2596 00cc 00       		.byte	0
 2597 00cd 00       		.byte	0
 2598 00ce 0E       		.uleb128 0xe
 2599 00cf 34       		.uleb128 0x34
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 54


 2600 00d0 00       		.byte	0
 2601 00d1 03       		.uleb128 0x3
 2602 00d2 08       		.uleb128 0x8
 2603 00d3 3A       		.uleb128 0x3a
 2604 00d4 0B       		.uleb128 0xb
 2605 00d5 3B       		.uleb128 0x3b
 2606 00d6 0B       		.uleb128 0xb
 2607 00d7 49       		.uleb128 0x49
 2608 00d8 13       		.uleb128 0x13
 2609 00d9 02       		.uleb128 0x2
 2610 00da 18       		.uleb128 0x18
 2611 00db 00       		.byte	0
 2612 00dc 00       		.byte	0
 2613 00dd 0F       		.uleb128 0xf
 2614 00de 0B       		.uleb128 0xb
 2615 00df 01       		.byte	0x1
 2616 00e0 11       		.uleb128 0x11
 2617 00e1 01       		.uleb128 0x1
 2618 00e2 12       		.uleb128 0x12
 2619 00e3 06       		.uleb128 0x6
 2620 00e4 00       		.byte	0
 2621 00e5 00       		.byte	0
 2622 00e6 10       		.uleb128 0x10
 2623 00e7 01       		.uleb128 0x1
 2624 00e8 01       		.byte	0x1
 2625 00e9 49       		.uleb128 0x49
 2626 00ea 13       		.uleb128 0x13
 2627 00eb 01       		.uleb128 0x1
 2628 00ec 13       		.uleb128 0x13
 2629 00ed 00       		.byte	0
 2630 00ee 00       		.byte	0
 2631 00ef 11       		.uleb128 0x11
 2632 00f0 21       		.uleb128 0x21
 2633 00f1 00       		.byte	0
 2634 00f2 49       		.uleb128 0x49
 2635 00f3 13       		.uleb128 0x13
 2636 00f4 2F       		.uleb128 0x2f
 2637 00f5 05       		.uleb128 0x5
 2638 00f6 00       		.byte	0
 2639 00f7 00       		.byte	0
 2640 00f8 12       		.uleb128 0x12
 2641 00f9 21       		.uleb128 0x21
 2642 00fa 00       		.byte	0
 2643 00fb 49       		.uleb128 0x49
 2644 00fc 13       		.uleb128 0x13
 2645 00fd 2F       		.uleb128 0x2f
 2646 00fe 0B       		.uleb128 0xb
 2647 00ff 00       		.byte	0
 2648 0100 00       		.byte	0
 2649 0101 13       		.uleb128 0x13
 2650 0102 2E       		.uleb128 0x2e
 2651 0103 01       		.byte	0x1
 2652 0104 3F       		.uleb128 0x3f
 2653 0105 19       		.uleb128 0x19
 2654 0106 03       		.uleb128 0x3
 2655 0107 0E       		.uleb128 0xe
 2656 0108 3A       		.uleb128 0x3a
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 55


 2657 0109 0B       		.uleb128 0xb
 2658 010a 3B       		.uleb128 0x3b
 2659 010b 05       		.uleb128 0x5
 2660 010c 27       		.uleb128 0x27
 2661 010d 19       		.uleb128 0x19
 2662 010e 11       		.uleb128 0x11
 2663 010f 01       		.uleb128 0x1
 2664 0110 12       		.uleb128 0x12
 2665 0111 06       		.uleb128 0x6
 2666 0112 40       		.uleb128 0x40
 2667 0113 18       		.uleb128 0x18
 2668 0114 9642     		.uleb128 0x2116
 2669 0116 19       		.uleb128 0x19
 2670 0117 01       		.uleb128 0x1
 2671 0118 13       		.uleb128 0x13
 2672 0119 00       		.byte	0
 2673 011a 00       		.byte	0
 2674 011b 14       		.uleb128 0x14
 2675 011c 05       		.uleb128 0x5
 2676 011d 00       		.byte	0
 2677 011e 03       		.uleb128 0x3
 2678 011f 08       		.uleb128 0x8
 2679 0120 3A       		.uleb128 0x3a
 2680 0121 0B       		.uleb128 0xb
 2681 0122 3B       		.uleb128 0x3b
 2682 0123 05       		.uleb128 0x5
 2683 0124 49       		.uleb128 0x49
 2684 0125 13       		.uleb128 0x13
 2685 0126 02       		.uleb128 0x2
 2686 0127 18       		.uleb128 0x18
 2687 0128 00       		.byte	0
 2688 0129 00       		.byte	0
 2689 012a 15       		.uleb128 0x15
 2690 012b 34       		.uleb128 0x34
 2691 012c 00       		.byte	0
 2692 012d 03       		.uleb128 0x3
 2693 012e 0E       		.uleb128 0xe
 2694 012f 3A       		.uleb128 0x3a
 2695 0130 0B       		.uleb128 0xb
 2696 0131 3B       		.uleb128 0x3b
 2697 0132 05       		.uleb128 0x5
 2698 0133 49       		.uleb128 0x49
 2699 0134 13       		.uleb128 0x13
 2700 0135 3F       		.uleb128 0x3f
 2701 0136 19       		.uleb128 0x19
 2702 0137 3C       		.uleb128 0x3c
 2703 0138 19       		.uleb128 0x19
 2704 0139 00       		.byte	0
 2705 013a 00       		.byte	0
 2706 013b 16       		.uleb128 0x16
 2707 013c 35       		.uleb128 0x35
 2708 013d 00       		.byte	0
 2709 013e 49       		.uleb128 0x49
 2710 013f 13       		.uleb128 0x13
 2711 0140 00       		.byte	0
 2712 0141 00       		.byte	0
 2713 0142 17       		.uleb128 0x17
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 56


 2714 0143 34       		.uleb128 0x34
 2715 0144 00       		.byte	0
 2716 0145 03       		.uleb128 0x3
 2717 0146 08       		.uleb128 0x8
 2718 0147 3A       		.uleb128 0x3a
 2719 0148 0B       		.uleb128 0xb
 2720 0149 3B       		.uleb128 0x3b
 2721 014a 0B       		.uleb128 0xb
 2722 014b 49       		.uleb128 0x49
 2723 014c 13       		.uleb128 0x13
 2724 014d 3F       		.uleb128 0x3f
 2725 014e 19       		.uleb128 0x19
 2726 014f 02       		.uleb128 0x2
 2727 0150 18       		.uleb128 0x18
 2728 0151 00       		.byte	0
 2729 0152 00       		.byte	0
 2730 0153 18       		.uleb128 0x18
 2731 0154 34       		.uleb128 0x34
 2732 0155 00       		.byte	0
 2733 0156 03       		.uleb128 0x3
 2734 0157 0E       		.uleb128 0xe
 2735 0158 3A       		.uleb128 0x3a
 2736 0159 0B       		.uleb128 0xb
 2737 015a 3B       		.uleb128 0x3b
 2738 015b 0B       		.uleb128 0xb
 2739 015c 49       		.uleb128 0x49
 2740 015d 13       		.uleb128 0x13
 2741 015e 3F       		.uleb128 0x3f
 2742 015f 19       		.uleb128 0x19
 2743 0160 02       		.uleb128 0x2
 2744 0161 18       		.uleb128 0x18
 2745 0162 00       		.byte	0
 2746 0163 00       		.byte	0
 2747 0164 00       		.byte	0
 2748              		.section	.debug_aranges,"",%progbits
 2749 0000 3C000000 		.4byte	0x3c
 2750 0004 0200     		.2byte	0x2
 2751 0006 00000000 		.4byte	.Ldebug_info0
 2752 000a 04       		.byte	0x4
 2753 000b 00       		.byte	0
 2754 000c 0000     		.2byte	0
 2755 000e 0000     		.2byte	0
 2756 0010 00000000 		.4byte	.LFB64
 2757 0014 18000000 		.4byte	.LFE64-.LFB64
 2758 0018 00000000 		.4byte	.LFB65
 2759 001c 18000000 		.4byte	.LFE65-.LFB65
 2760 0020 00000000 		.4byte	.LFB66
 2761 0024 28070000 		.4byte	.LFE66-.LFB66
 2762 0028 00000000 		.4byte	.LFB67
 2763 002c 3E000000 		.4byte	.LFE67-.LFB67
 2764 0030 00000000 		.4byte	.LFB68
 2765 0034 26000000 		.4byte	.LFE68-.LFB68
 2766 0038 00000000 		.4byte	0
 2767 003c 00000000 		.4byte	0
 2768              		.section	.debug_ranges,"",%progbits
 2769              	.Ldebug_ranges0:
 2770 0000 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 57


 2771 0004 18000000 		.4byte	.LFE64
 2772 0008 00000000 		.4byte	.LFB65
 2773 000c 18000000 		.4byte	.LFE65
 2774 0010 00000000 		.4byte	.LFB66
 2775 0014 28070000 		.4byte	.LFE66
 2776 0018 00000000 		.4byte	.LFB67
 2777 001c 3E000000 		.4byte	.LFE67
 2778 0020 00000000 		.4byte	.LFB68
 2779 0024 26000000 		.4byte	.LFE68
 2780 0028 00000000 		.4byte	0
 2781 002c 00000000 		.4byte	0
 2782              		.section	.debug_line,"",%progbits
 2783              	.Ldebug_line0:
 2784 0000 28030000 		.section	.debug_str,"MS",%progbits,1
 2784      02005601 
 2784      00000201 
 2784      FB0E0D00 
 2784      01010101 
 2785              	.LASF52:
 2786 0000 75736250 		.ascii	"usbPutChar\000"
 2786      75744368 
 2786      617200
 2787              	.LASF100:
 2788 000b 7475726E 		.ascii	"turnEnable\000"
 2788      456E6162 
 2788      6C6500
 2789              	.LASF38:
 2790 0016 73717561 		.ascii	"squares\000"
 2790      72657300 
 2791              	.LASF102:
 2792 001e 6C617374 		.ascii	"lastAdjustDirection\000"
 2792      41646A75 
 2792      73744469 
 2792      72656374 
 2792      696F6E00 
 2793              	.LASF63:
 2794 0032 666C6167 		.ascii	"flag_packet\000"
 2794      5F706163 
 2794      6B657400 
 2795              	.LASF101:
 2796 003e 7475726E 		.ascii	"turnTimer\000"
 2796      54696D65 
 2796      7200
 2797              	.LASF80:
 2798 0048 76616C75 		.ascii	"valuesLeftLine\000"
 2798      65734C65 
 2798      66744C69 
 2798      6E6500
 2799              	.LASF60:
 2800 0057 666C6167 		.ascii	"flag_ts_speed\000"
 2800      5F74735F 
 2800      73706565 
 2800      6400
 2801              	.LASF33:
 2802 0065 67325F78 		.ascii	"g2_xpos\000"
 2802      706F7300 
 2803              	.LASF2:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 58


 2804 006d 73686F72 		.ascii	"short int\000"
 2804      7420696E 
 2804      7400
 2805              	.LASF82:
 2806 0077 76616C75 		.ascii	"valuesTurnComplete\000"
 2806      65735475 
 2806      726E436F 
 2806      6D706C65 
 2806      746500
 2807              	.LASF83:
 2808 008a 76616C75 		.ascii	"valuesRightLine\000"
 2808      65735269 
 2808      6768744C 
 2808      696E6500 
 2809              	.LASF71:
 2810 009a 73797374 		.ascii	"system_state\000"
 2810      656D5F73 
 2810      74617465 
 2810      00
 2811              	.LASF10:
 2812 00a7 73697A65 		.ascii	"sizetype\000"
 2812      74797065 
 2812      00
 2813              	.LASF50:
 2814 00b0 6D61696E 		.ascii	"main\000"
 2814      00
 2815              	.LASF70:
 2816 00b5 75736242 		.ascii	"usbBuffer\000"
 2816      75666665 
 2816      7200
 2817              	.LASF103:
 2818 00bf 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2818      43313120 
 2818      352E342E 
 2818      31203230 
 2818      31363036 
 2819 00f2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2819      20726576 
 2819      6973696F 
 2819      6E203233 
 2819      37373135 
 2820 0125 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2820      66756E63 
 2820      74696F6E 
 2820      2D736563 
 2820      74696F6E 
 2821              	.LASF57:
 2822 014d 74735F64 		.ascii	"ts_display\000"
 2822      6973706C 
 2822      617900
 2823              	.LASF98:
 2824 0158 70726576 		.ascii	"prevTurnState\000"
 2824      5475726E 
 2824      53746174 
 2824      6500
 2825              	.LASF74:
 2826 0166 7475726E 		.ascii	"turningDirection\000"
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 59


 2826      696E6744 
 2826      69726563 
 2826      74696F6E 
 2826      00
 2827              	.LASF15:
 2828 0177 75696E74 		.ascii	"uint16\000"
 2828      313600
 2829              	.LASF95:
 2830 017e 64697374 		.ascii	"distancePerSecondL\000"
 2830      616E6365 
 2830      50657253 
 2830      65636F6E 
 2830      644C00
 2831              	.LASF21:
 2832 0191 696E6465 		.ascii	"index\000"
 2832      7800
 2833              	.LASF17:
 2834 0197 696E7431 		.ascii	"int16\000"
 2834      3600
 2835              	.LASF96:
 2836 019d 64697374 		.ascii	"distancePerSecondR\000"
 2836      616E6365 
 2836      50657253 
 2836      65636F6E 
 2836      645200
 2837              	.LASF32:
 2838 01b0 67315F64 		.ascii	"g1_direction\000"
 2838      69726563 
 2838      74696F6E 
 2838      00
 2839              	.LASF84:
 2840 01bd 76616C75 		.ascii	"valuesRightIntersection\000"
 2840      65735269 
 2840      67687449 
 2840      6E746572 
 2840      73656374 
 2841              	.LASF68:
 2842 01d5 6C696E65 		.ascii	"line\000"
 2842      00
 2843              	.LASF91:
 2844 01da 6E756D52 		.ascii	"numRotationsL\000"
 2844      6F746174 
 2844      696F6E73 
 2844      4C00
 2845              	.LASF0:
 2846 01e8 7369676E 		.ascii	"signed char\000"
 2846      65642063 
 2846      68617200 
 2847              	.LASF18:
 2848 01f4 666C6F61 		.ascii	"float\000"
 2848      7400
 2849              	.LASF34:
 2850 01fa 67325F79 		.ascii	"g2_ypos\000"
 2850      706F7300 
 2851              	.LASF31:
 2852 0202 67315F73 		.ascii	"g1_speed\000"
 2852      70656564 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 60


 2852      00
 2853              	.LASF97:
 2854 020b 64697374 		.ascii	"distancePerSecondAvg\000"
 2854      616E6365 
 2854      50657253 
 2854      65636F6E 
 2854      64417667 
 2855              	.LASF105:
 2856 0220 483A5C44 		.ascii	"H:\\Documents\\301\\Post-Benchmark\\team14\\301_lab"
 2856      6F63756D 
 2856      656E7473 
 2856      5C333031 
 2856      5C506F73 
 2857 024e 5F746173 		.ascii	"_tasks\\psoc student pack\\psoc_code_base\\CS301_Cl"
 2857      6B735C70 
 2857      736F6320 
 2857      73747564 
 2857      656E7420 
 2858 027e 6173732E 		.ascii	"ass.cydsn\000"
 2858      63796473 
 2858      6E00
 2859              	.LASF51:
 2860 0288 75736250 		.ascii	"usbPutString\000"
 2860      75745374 
 2860      72696E67 
 2860      00
 2861              	.LASF16:
 2862 0295 696E7438 		.ascii	"int8\000"
 2862      00
 2863              	.LASF59:
 2864 029a 666C6167 		.ascii	"flag_ts_update\000"
 2864      5F74735F 
 2864      75706461 
 2864      746500
 2865              	.LASF94:
 2866 02a9 64697374 		.ascii	"distanceTravelled\000"
 2866      616E6365 
 2866      54726176 
 2866      656C6C65 
 2866      6400
 2867              	.LASF28:
 2868 02bb 67305F64 		.ascii	"g0_direction\000"
 2868      69726563 
 2868      74696F6E 
 2868      00
 2869              	.LASF25:
 2870 02c8 67305F78 		.ascii	"g0_xpos\000"
 2870      706F7300 
 2871              	.LASF41:
 2872 02d0 73717561 		.ascii	"squareStr\000"
 2872      72655374 
 2872      7200
 2873              	.LASF4:
 2874 02da 6C6F6E67 		.ascii	"long int\000"
 2874      20696E74 
 2874      00
 2875              	.LASF88:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 61


 2876 02e3 6C617374 		.ascii	"lastVeerDirection\000"
 2876      56656572 
 2876      44697265 
 2876      6374696F 
 2876      6E00
 2877              	.LASF77:
 2878 02f5 646F7473 		.ascii	"dotsTravelled\000"
 2878      54726176 
 2878      656C6C65 
 2878      6400
 2879              	.LASF61:
 2880 0303 666C6167 		.ascii	"flag_ts_display\000"
 2880      5F74735F 
 2880      64697370 
 2880      6C617900 
 2881              	.LASF62:
 2882 0313 666C6167 		.ascii	"flag_rx\000"
 2882      5F727800 
 2883              	.LASF37:
 2884 031b 4D794953 		.ascii	"MyISR\000"
 2884      5200
 2885              	.LASF49:
 2886 0321 68696768 		.ascii	"highCountRightIntersection\000"
 2886      436F756E 
 2886      74526967 
 2886      6874496E 
 2886      74657273 
 2887              	.LASF30:
 2888 033c 67315F79 		.ascii	"g1_ypos\000"
 2888      706F7300 
 2889              	.LASF9:
 2890 0344 6C6F6E67 		.ascii	"long double\000"
 2890      20646F75 
 2890      626C6500 
 2891              	.LASF69:
 2892 0350 656E7472 		.ascii	"entry\000"
 2892      7900
 2893              	.LASF1:
 2894 0356 756E7369 		.ascii	"unsigned char\000"
 2894      676E6564 
 2894      20636861 
 2894      7200
 2895              	.LASF27:
 2896 0364 67305F73 		.ascii	"g0_speed\000"
 2896      70656564 
 2896      00
 2897              	.LASF48:
 2898 036d 68696768 		.ascii	"highCountRightLine\000"
 2898      436F756E 
 2898      74526967 
 2898      68744C69 
 2898      6E6500
 2899              	.LASF43:
 2900 0380 6368616E 		.ascii	"changeInDots\000"
 2900      6765496E 
 2900      446F7473 
 2900      00
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 62


 2901              	.LASF87:
 2902 038d 7475726E 		.ascii	"turningRight\000"
 2902      696E6752 
 2902      69676874 
 2902      00
 2903              	.LASF7:
 2904 039a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2904      206C6F6E 
 2904      6720756E 
 2904      7369676E 
 2904      65642069 
 2905              	.LASF8:
 2906 03b1 756E7369 		.ascii	"unsigned int\000"
 2906      676E6564 
 2906      20696E74 
 2906      00
 2907              	.LASF64:
 2908 03be 666C6167 		.ascii	"flag_KB_string\000"
 2908      5F4B425F 
 2908      73747269 
 2908      6E6700
 2909              	.LASF76:
 2910 03cd 73686F75 		.ascii	"shouldUpdate\000"
 2910      6C645570 
 2910      64617465 
 2910      00
 2911              	.LASF35:
 2912 03da 67325F73 		.ascii	"g2_speed\000"
 2912      70656564 
 2912      00
 2913              	.LASF93:
 2914 03e3 7475726E 		.ascii	"turnCount\000"
 2914      436F756E 
 2914      7400
 2915              	.LASF29:
 2916 03ed 67315F78 		.ascii	"g1_xpos\000"
 2916      706F7300 
 2917              	.LASF73:
 2918 03f5 72657374 		.ascii	"restoring\000"
 2918      6F72696E 
 2918      6700
 2919              	.LASF46:
 2920 03ff 68696768 		.ascii	"highCountMiddleLine\000"
 2920      436F756E 
 2920      744D6964 
 2920      646C654C 
 2920      696E6500 
 2921              	.LASF81:
 2922 0413 76616C75 		.ascii	"valuesMiddleLine\000"
 2922      65734D69 
 2922      64646C65 
 2922      4C696E65 
 2922      00
 2923              	.LASF106:
 2924 0424 64617461 		.ascii	"data_main\000"
 2924      5F6D6169 
 2924      6E00
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 63


 2925              	.LASF40:
 2926 042e 64697374 		.ascii	"distance\000"
 2926      616E6365 
 2926      00
 2927              	.LASF11:
 2928 0437 63686172 		.ascii	"char\000"
 2928      00
 2929              	.LASF53:
 2930 043c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2930      52784275 
 2930      66666572 
 2930      00
 2931              	.LASF22:
 2932 0449 726F626F 		.ascii	"robot_xpos\000"
 2932      745F7870 
 2932      6F7300
 2933              	.LASF13:
 2934 0454 696E7433 		.ascii	"int32_t\000"
 2934      325F7400 
 2935              	.LASF78:
 2936 045c 666C6167 		.ascii	"flag\000"
 2936      00
 2937              	.LASF36:
 2938 0461 67325F64 		.ascii	"g2_direction\000"
 2938      69726563 
 2938      74696F6E 
 2938      00
 2939              	.LASF3:
 2940 046e 73686F72 		.ascii	"short unsigned int\000"
 2940      7420756E 
 2940      7369676E 
 2940      65642069 
 2940      6E7400
 2941              	.LASF14:
 2942 0481 75696E74 		.ascii	"uint8\000"
 2942      3800
 2943              	.LASF79:
 2944 0487 76616C75 		.ascii	"valuesLeftIntersection\000"
 2944      65734C65 
 2944      6674496E 
 2944      74657273 
 2944      65637469 
 2945              	.LASF67:
 2946 049e 64697370 		.ascii	"displaystring\000"
 2946      6C617973 
 2946      7472696E 
 2946      6700
 2947              	.LASF45:
 2948 04ac 68696768 		.ascii	"highCountLeftLine\000"
 2948      436F756E 
 2948      744C6566 
 2948      744C696E 
 2948      6500
 2949              	.LASF42:
 2950 04be 64697374 		.ascii	"distanceStr\000"
 2950      616E6365 
 2950      53747200 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 64


 2951              	.LASF104:
 2952 04ca 6D61696E 		.ascii	"main.c\000"
 2952      2E6300
 2953              	.LASF5:
 2954 04d1 6C6F6E67 		.ascii	"long unsigned int\000"
 2954      20756E73 
 2954      69676E65 
 2954      6420696E 
 2954      7400
 2955              	.LASF19:
 2956 04e3 646F7562 		.ascii	"double\000"
 2956      6C6500
 2957              	.LASF65:
 2958 04ea 64617461 		.ascii	"dataready_flag\000"
 2958      72656164 
 2958      795F666C 
 2958      616700
 2959              	.LASF89:
 2960 04f9 6D6F746F 		.ascii	"motorFlag\000"
 2960      72466C61 
 2960      6700
 2961              	.LASF75:
 2962 0503 7475726E 		.ascii	"turningCount\000"
 2962      696E6743 
 2962      6F756E74 
 2962      00
 2963              	.LASF56:
 2964 0510 74735F73 		.ascii	"ts_speed\000"
 2964      70656564 
 2964      00
 2965              	.LASF85:
 2966 0519 636F756E 		.ascii	"count\000"
 2966      7400
 2967              	.LASF58:
 2968 051f 666C6167 		.ascii	"flag_ts_enc\000"
 2968      5F74735F 
 2968      656E6300 
 2969              	.LASF12:
 2970 052b 5F5F696E 		.ascii	"__int32_t\000"
 2970      7433325F 
 2970      7400
 2971              	.LASF26:
 2972 0535 67305F79 		.ascii	"g0_ypos\000"
 2972      706F7300 
 2973              	.LASF24:
 2974 053d 726F626F 		.ascii	"robot_orientation\000"
 2974      745F6F72 
 2974      69656E74 
 2974      6174696F 
 2974      6E00
 2975              	.LASF86:
 2976 054f 7475726E 		.ascii	"turningLeft\000"
 2976      696E674C 
 2976      65667400 
 2977              	.LASF54:
 2978 055b 74735F65 		.ascii	"ts_enc\000"
 2978      6E6300
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccznSt8l.s 			page 65


 2979              	.LASF55:
 2980 0562 74735F75 		.ascii	"ts_update\000"
 2980      70646174 
 2980      6500
 2981              	.LASF99:
 2982 056c 7475726E 		.ascii	"turnState\000"
 2982      53746174 
 2982      6500
 2983              	.LASF66:
 2984 0576 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2984      5F72665F 
 2984      7472616E 
 2984      736D6973 
 2984      73696F6E 
 2985              	.LASF23:
 2986 0592 726F626F 		.ascii	"robot_ypos\000"
 2986      745F7970 
 2986      6F7300
 2987              	.LASF72:
 2988 059d 54415247 		.ascii	"TARGET_SPEED\000"
 2988      45545F53 
 2988      50454544 
 2988      00
 2989              	.LASF39:
 2990 05aa 696E7374 		.ascii	"instruction\000"
 2990      72756374 
 2990      696F6E00 
 2991              	.LASF47:
 2992 05b6 68696768 		.ascii	"highCountTurnComplete\000"
 2992      436F756E 
 2992      74547572 
 2992      6E436F6D 
 2992      706C6574 
 2993              	.LASF92:
 2994 05cc 6E756D52 		.ascii	"numRotationsR\000"
 2994      6F746174 
 2994      696F6E73 
 2994      5200
 2995              	.LASF90:
 2996 05da 73746570 		.ascii	"step\000"
 2996      00
 2997              	.LASF44:
 2998 05df 68696768 		.ascii	"highCountLeftIntersection\000"
 2998      436F756E 
 2998      744C6566 
 2998      74496E74 
 2998      65727365 
 2999              	.LASF20:
 3000 05f9 72737369 		.ascii	"rssi\000"
 3000      00
 3001              	.LASF6:
 3002 05fe 6C6F6E67 		.ascii	"long long int\000"
 3002      206C6F6E 
 3002      6720696E 
 3002      7400
 3003              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
