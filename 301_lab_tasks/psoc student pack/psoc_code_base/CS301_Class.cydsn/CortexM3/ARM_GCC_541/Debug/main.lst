ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ts
  20              		.bss
  21              		.type	ts, %object
  22              		.size	ts, 1
  23              	ts:
  24 0000 00       		.space	1
  25              		.global	ts_enc
  26 0001 00       		.align	1
  27              		.type	ts_enc, %object
  28              		.size	ts_enc, 2
  29              	ts_enc:
  30 0002 0000     		.space	2
  31              		.global	ts_update
  32              		.align	1
  33              		.type	ts_update, %object
  34              		.size	ts_update, 2
  35              	ts_update:
  36 0004 0000     		.space	2
  37              		.global	ts_speed
  38              		.align	1
  39              		.type	ts_speed, %object
  40              		.size	ts_speed, 2
  41              	ts_speed:
  42 0006 0000     		.space	2
  43              		.global	ts_display
  44              		.align	1
  45              		.type	ts_display, %object
  46              		.size	ts_display, 2
  47              	ts_display:
  48 0008 0000     		.space	2
  49              		.global	flag_ts_enc
  50              		.type	flag_ts_enc, %object
  51              		.size	flag_ts_enc, 1
  52              	flag_ts_enc:
  53 000a 00       		.space	1
  54              		.global	flag_ts_update
  55              		.type	flag_ts_update, %object
  56              		.size	flag_ts_update, 1
  57              	flag_ts_update:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 2


  58 000b 00       		.space	1
  59              		.global	flag_ts_speed
  60              		.type	flag_ts_speed, %object
  61              		.size	flag_ts_speed, 1
  62              	flag_ts_speed:
  63 000c 00       		.space	1
  64              		.global	flag_ts_display
  65              		.type	flag_ts_display, %object
  66              		.size	flag_ts_display, 1
  67              	flag_ts_display:
  68 000d 00       		.space	1
  69              		.global	flag_rx
  70              		.type	flag_rx, %object
  71              		.size	flag_rx, 1
  72              	flag_rx:
  73 000e 00       		.space	1
  74              		.global	flag_packet
  75              		.type	flag_packet, %object
  76              		.size	flag_packet, 1
  77              	flag_packet:
  78 000f 00       		.space	1
  79              		.global	flag_KB_string
  80              		.type	flag_KB_string, %object
  81              		.size	flag_KB_string, 1
  82              	flag_KB_string:
  83 0010 00       		.space	1
  84              		.global	dataready_flag
  85              		.type	dataready_flag, %object
  86              		.size	dataready_flag, 1
  87              	dataready_flag:
  88 0011 00       		.space	1
  89              		.global	flag_rf_transmission_active
  90              		.data
  91              		.type	flag_rf_transmission_active, %object
  92              		.size	flag_rf_transmission_active, 1
  93              	flag_rf_transmission_active:
  94 0000 0A       		.byte	10
  95              		.global	displaystring
  96 0001 000000   		.align	2
  97              		.type	displaystring, %object
  98              		.size	displaystring, 64
  99              	displaystring:
 100 0004 43533330 		.ascii	"CS301 2016\012\000"
 100      31203230 
 100      31360A00 
 101 0010 00000000 		.space	52
 101      00000000 
 101      00000000 
 101      00000000 
 101      00000000 
 102              		.comm	line,64,4
 103              		.comm	entry,64,4
 104              		.comm	usbBuffer,64,4
 105              		.comm	system_state,32,4
 106              		.global	TARGET_SPEED
 107              		.align	2
 108              		.type	TARGET_SPEED, %object
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 3


 109              		.size	TARGET_SPEED, 4
 110              	TARGET_SPEED:
 111 0044 00007041 		.word	1097859072
 112              		.global	restoring
 113              		.align	2
 114              		.type	restoring, %object
 115              		.size	restoring, 4
 116              	restoring:
 117 0048 1E000000 		.word	30
 118              		.global	turningDirection
 119              		.bss
 120 0012 0000     		.align	2
 121              		.type	turningDirection, %object
 122              		.size	turningDirection, 4
 123              	turningDirection:
 124 0014 00000000 		.space	4
 125              		.global	turningCount
 126              		.data
 127              		.align	2
 128              		.type	turningCount, %object
 129              		.size	turningCount, 4
 130              	turningCount:
 131 004c 1E000000 		.word	30
 132              		.global	shouldUpdate
 133              		.align	2
 134              		.type	shouldUpdate, %object
 135              		.size	shouldUpdate, 4
 136              	shouldUpdate:
 137 0050 01000000 		.word	1
 138              		.global	dotsTravelled
 139              		.bss
 140              		.align	2
 141              		.type	dotsTravelled, %object
 142              		.size	dotsTravelled, 4
 143              	dotsTravelled:
 144 0018 00000000 		.space	4
 145              		.global	flag
 146              		.align	2
 147              		.type	flag, %object
 148              		.size	flag, 4
 149              	flag:
 150 001c 00000000 		.space	4
 151              		.comm	valuesLeftIntersection,4000,4
 152              		.comm	valuesLeftLine,4000,4
 153              		.comm	valuesMiddleLine,4000,4
 154              		.comm	valuesTurnComplete,4000,4
 155              		.comm	valuesRightLine,4000,4
 156              		.comm	valuesRightIntersection,4000,4
 157              		.global	count
 158              		.align	2
 159              		.type	count, %object
 160              		.size	count, 4
 161              	count:
 162 0020 00000000 		.space	4
 163              		.global	turningLeft
 164              		.align	2
 165              		.type	turningLeft, %object
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 4


 166              		.size	turningLeft, 4
 167              	turningLeft:
 168 0024 00000000 		.space	4
 169              		.global	turningRight
 170              		.align	2
 171              		.type	turningRight, %object
 172              		.size	turningRight, 4
 173              	turningRight:
 174 0028 00000000 		.space	4
 175              		.global	lastVeerDirection
 176              		.align	2
 177              		.type	lastVeerDirection, %object
 178              		.size	lastVeerDirection, 4
 179              	lastVeerDirection:
 180 002c 00000000 		.space	4
 181              		.global	motorFlag
 182              		.align	2
 183              		.type	motorFlag, %object
 184              		.size	motorFlag, 4
 185              	motorFlag:
 186 0030 00000000 		.space	4
 187              		.global	step
 188              		.align	2
 189              		.type	step, %object
 190              		.size	step, 4
 191              	step:
 192 0034 00000000 		.space	4
 193              		.comm	v1L,4,4
 194              		.comm	v2L,4,4
 195              		.comm	v1R,4,4
 196              		.comm	v2R,4,4
 197              		.comm	numRotationsL,4,4
 198              		.comm	numRotationsR,4,4
 199              		.comm	turnCount,4,4
 200              		.global	distanceTravelled
 201              		.align	2
 202              		.type	distanceTravelled, %object
 203              		.size	distanceTravelled, 4
 204              	distanceTravelled:
 205 0038 00000000 		.space	4
 206              		.global	distancePerSecondL
 207              		.align	2
 208              		.type	distancePerSecondL, %object
 209              		.size	distancePerSecondL, 4
 210              	distancePerSecondL:
 211 003c 00000000 		.space	4
 212              		.global	distancePerSecondR
 213              		.align	2
 214              		.type	distancePerSecondR, %object
 215              		.size	distancePerSecondR, 4
 216              	distancePerSecondR:
 217 0040 00000000 		.space	4
 218              		.global	distancePerSecondAvg
 219              		.align	2
 220              		.type	distancePerSecondAvg, %object
 221              		.size	distancePerSecondAvg, 4
 222              	distancePerSecondAvg:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 5


 223 0044 00000000 		.space	4
 224              		.global	prevTurnState
 225              		.align	2
 226              		.type	prevTurnState, %object
 227              		.size	prevTurnState, 4
 228              	prevTurnState:
 229 0048 00000000 		.space	4
 230              		.global	turnState
 231              		.align	2
 232              		.type	turnState, %object
 233              		.size	turnState, 4
 234              	turnState:
 235 004c 00000000 		.space	4
 236              		.global	turnEnable
 237              		.align	2
 238              		.type	turnEnable, %object
 239              		.size	turnEnable, 4
 240              	turnEnable:
 241 0050 00000000 		.space	4
 242              		.global	turnTimer
 243              		.align	2
 244              		.type	turnTimer, %object
 245              		.size	turnTimer, 4
 246              	turnTimer:
 247 0054 00000000 		.space	4
 248              		.global	lastAdjustDirection
 249              		.align	2
 250              		.type	lastAdjustDirection, %object
 251              		.size	lastAdjustDirection, 4
 252              	lastAdjustDirection:
 253 0058 00000000 		.space	4
 254              		.section	.text.eoc,"ax",%progbits
 255              		.align	2
 256              		.global	eoc
 257              		.thumb
 258              		.thumb_func
 259              		.type	eoc, %function
 260              	eoc:
 261              	.LFB64:
 262              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  * Fully working code: 
   3:main.c        ****  * PWM      : 
   4:main.c        ****  * Encoder  : 
   5:main.c        ****  * ADC      :
   6:main.c        ****  * USB      : port displays speed and position.
   7:main.c        ****  * CMD: "PW xx"
   8:main.c        ****  * Copyright Univ of Auckland, 2016
   9:main.c        ****  * All Rights Reserved
  10:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
  11:main.c        ****  *
  12:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
  13:main.c        ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
  14:main.c        ****  *
  15:main.c        ****  * ========================================
  16:main.c        ****  */
  17:main.c        **** #include <stdio.h>
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 6


  18:main.c        **** 
  19:main.c        **** #include <string.h>
  20:main.c        **** 
  21:main.c        **** #include <stdlib.h>
  22:main.c        **** 
  23:main.c        **** #include <project.h>
  24:main.c        ****  //* ========================================
  25:main.c        **** 
  26:main.c        **** #include "defines.h"
  27:main.c        **** 
  28:main.c        **** #include "motors.h"
  29:main.c        **** #include "pathfind.h"
  30:main.c        **** 
  31:main.c        **** #include "vars.h"
  32:main.c        **** 
  33:main.c        **** #define ADC_COUNT 1000
  34:main.c        **** #define L_INT_BLACK highCountLeftIntersection < 150
  35:main.c        **** #define R_INT_BLACK highCountRightIntersection < 150
  36:main.c        **** #define L_LINE_BLACK highCountLeftLine < 150
  37:main.c        **** #define R_LINE_BLACK highCountRightLine < 150
  38:main.c        **** #define M_LINE_BLACK highCountMiddleLine < 150
  39:main.c        **** #define TC_BLACK highCountTurnComplete < 150
  40:main.c        **** float TARGET_SPEED = 15; //speed in cm^-1
  41:main.c        **** int restoring = 30;
  42:main.c        **** int turningDirection = 0;
  43:main.c        **** int turningCount = 30;
  44:main.c        **** volatile int shouldUpdate = 1;
  45:main.c        **** #define MOVE_DISTANCE 9999999 //cm
  46:main.c        **** volatile int dotsTravelled = 0;
  47:main.c        **** //* ========================================
  48:main.c        **** void usbPutString(char * s);
  49:main.c        **** void usbPutChar(char c);
  50:main.c        **** void printSensorDebug(int highCountLeftIntersection, int highCountLeftLine, int highCountMiddleLine
  51:main.c        **** //* ========================================
  52:main.c        **** 
  53:main.c        **** volatile int flag = 0;
  54:main.c        **** volatile int valuesLeftIntersection[ADC_COUNT];
  55:main.c        **** volatile int valuesLeftLine[ADC_COUNT];
  56:main.c        **** volatile int valuesMiddleLine[ADC_COUNT];
  57:main.c        **** volatile int valuesTurnComplete[ADC_COUNT];
  58:main.c        **** volatile int valuesRightLine[ADC_COUNT];
  59:main.c        **** volatile int valuesRightIntersection[ADC_COUNT];
  60:main.c        **** volatile int count = 0;
  61:main.c        **** volatile int turningLeft = 0;
  62:main.c        **** volatile int turningRight = 0;
  63:main.c        **** volatile int lastVeerDirection = 0;
  64:main.c        **** 
  65:main.c        **** volatile int motorFlag = 0;
  66:main.c        **** volatile int step = 0; // are we on first measuring step or second step?
  67:main.c        **** volatile int v1L; // allocating storage for measure number of holes (ahead) - LEFT WHEEL
  68:main.c        **** volatile int v2L; // allocating storage for measure number of holes (behind) - LEFT WHEEL
  69:main.c        **** volatile int v1R; // allocating storage for measure number of holes (ahead) - RIGHT WHEEL
  70:main.c        **** volatile int v2R; // allocating storage for measure number of holes (behind) - RIGHT WHEEL
  71:main.c        **** volatile int numRotationsL; //
  72:main.c        **** volatile int numRotationsR; //
  73:main.c        **** volatile int turnCount;
  74:main.c        **** volatile int distanceTravelled = 0;
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 7


  75:main.c        **** volatile int distancePerSecondL = 0;
  76:main.c        **** volatile int distancePerSecondR = 0;
  77:main.c        **** volatile int distancePerSecondAvg = 0;
  78:main.c        **** volatile int prevTurnState = 0;
  79:main.c        **** volatile int turnState = 0;
  80:main.c        **** volatile int turnEnable = 0;
  81:main.c        **** volatile int turnTimer = 0;
  82:main.c        **** int lastAdjustDirection = 0;
  83:main.c        **** 
  84:main.c        **** CY_ISR(eoc) {
 263              		.loc 1 84 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 1, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268 0000 80B4     		push	{r7}
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 7, -4
 271 0002 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
  85:main.c        ****   flag = 1;
 273              		.loc 1 85 0
 274 0004 034B     		ldr	r3, .L2
 275 0006 0122     		movs	r2, #1
 276 0008 1A60     		str	r2, [r3]
  86:main.c        **** }
 277              		.loc 1 86 0
 278 000a 00BF     		nop
 279 000c BD46     		mov	sp, r7
 280              		.cfi_def_cfa_register 13
 281              		@ sp needed
 282 000e 80BC     		pop	{r7}
 283              		.cfi_restore 7
 284              		.cfi_def_cfa_offset 0
 285 0010 7047     		bx	lr
 286              	.L3:
 287 0012 00BF     		.align	2
 288              	.L2:
 289 0014 00000000 		.word	flag
 290              		.cfi_endproc
 291              	.LFE64:
 292              		.size	eoc, .-eoc
 293              		.section	.text.MyISR,"ax",%progbits
 294              		.align	2
 295              		.global	MyISR
 296              		.thumb
 297              		.thumb_func
 298              		.type	MyISR, %function
 299              	MyISR:
 300              	.LFB65:
  87:main.c        **** 
  88:main.c        **** CY_ISR(MyISR) {
 301              		.loc 1 88 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305              		@ link register save eliminated.
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 8


 306 0000 80B4     		push	{r7}
 307              		.cfi_def_cfa_offset 4
 308              		.cfi_offset 7, -4
 309 0002 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
  89:main.c        ****   motorFlag = 1;
 311              		.loc 1 89 0
 312 0004 034B     		ldr	r3, .L5
 313 0006 0122     		movs	r2, #1
 314 0008 1A60     		str	r2, [r3]
  90:main.c        **** }
 315              		.loc 1 90 0
 316 000a 00BF     		nop
 317 000c BD46     		mov	sp, r7
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 000e 80BC     		pop	{r7}
 321              		.cfi_restore 7
 322              		.cfi_def_cfa_offset 0
 323 0010 7047     		bx	lr
 324              	.L6:
 325 0012 00BF     		.align	2
 326              	.L5:
 327 0014 00000000 		.word	motorFlag
 328              		.cfi_endproc
 329              	.LFE65:
 330              		.size	MyISR, .-MyISR
 331              		.section	.rodata
 332              		.align	2
 333              	.LC0:
 334 0000 53746172 		.ascii	"Starting Pathfind\015\012\000"
 334      74696E67 
 334      20506174 
 334      6866696E 
 334      640D0A00 
 335              		.align	2
 336              	.LC1:
 337 0014 53515541 		.ascii	"SQUARES\015\012\000"
 337      5245530D 
 337      0A00
 338 001e 0000     		.align	2
 339              	.LC2:
 340 0020 25752025 		.ascii	"%u %u \015\012\000"
 340      75200D0A 
 340      00
 341 0029 000000   		.align	2
 342              	.LC3:
 343 002c 494E5354 		.ascii	"INSTRUCTIONS\015\012\000"
 343      52554354 
 343      494F4E53 
 343      0D0A00
 344 003b 00       		.align	2
 345              	.LC4:
 346 003c 2575200D 		.ascii	"%u \015\012\000"
 346      0A00
 347 0042 0000     		.align	2
 348              	.LC5:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 9


 349 0044 44495354 		.ascii	"DISTANCES\015\012\000"
 349      414E4345 
 349      530D0A00 
 350              		.align	2
 351              	.LC6:
 352 0050 257500   		.ascii	"%u\000"
 353 0053 00       		.align	2
 354              	.LC7:
 355 0054 0D0A00   		.ascii	"\015\012\000"
 356              		.global	__aeabi_i2f
 357              		.global	__aeabi_fmul
 358              		.global	__aeabi_f2iz
 359              		.section	.text.main,"ax",%progbits
 360              		.align	2
 361              		.global	main
 362              		.thumb
 363              		.thumb_func
 364              		.type	main, %function
 365              	main:
 366              	.LFB66:
  91:main.c        **** 
  92:main.c        **** int main() {
 367              		.loc 1 92 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 2088
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371 0000 90B5     		push	{r4, r7, lr}
 372              		.cfi_def_cfa_offset 12
 373              		.cfi_offset 4, -12
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 ADF6340D 		subw	sp, sp, #2100
 377              		.cfi_def_cfa_offset 2112
 378 0006 02AF     		add	r7, sp, #8
 379              		.cfi_def_cfa 7, 2104
  93:main.c        **** 
  94:main.c        ****   // --------------------------------    
  95:main.c        ****   // ----- INITIALIZATIONS ----------
  96:main.c        ****   CYGlobalIntEnable;
 380              		.loc 1 96 0
 381              		.syntax unified
 382              	@ 96 "main.c" 1
 383 0008 62B6     		CPSIE   i
 384              	@ 0 "" 2
  97:main.c        **** 
  98:main.c        ****   // ------USB SETUP ----------------    
  99:main.c        **** 
 100:main.c        ****   USBUART_Start(0, USBUART_5V_OPERATION);
 385              		.loc 1 100 0
 386              		.thumb
 387              		.syntax unified
 388 000a 0121     		movs	r1, #1
 389 000c 0020     		movs	r0, #0
 390 000e FFF7FEFF 		bl	USBUART_Start
 101:main.c        ****   UART_Start();
 391              		.loc 1 101 0
 392 0012 FFF7FEFF 		bl	UART_Start
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 10


 102:main.c        **** 
 103:main.c        ****   QuadDec_M1_Start();
 393              		.loc 1 103 0
 394 0016 FFF7FEFF 		bl	QuadDec_M1_Start
 104:main.c        ****   QuadDec_M2_Start();
 395              		.loc 1 104 0
 396 001a FFF7FEFF 		bl	QuadDec_M2_Start
 105:main.c        **** 
 106:main.c        ****   isr_TS_StartEx(MyISR);
 397              		.loc 1 106 0
 398 001e 9448     		ldr	r0, .L59
 399 0020 FFF7FEFF 		bl	isr_TS_StartEx
 107:main.c        **** 
 108:main.c        ****   RF_BT_SELECT_Write(1);
 400              		.loc 1 108 0
 401 0024 0120     		movs	r0, #1
 402 0026 FFF7FEFF 		bl	RF_BT_SELECT_Write
 109:main.c        **** 
 110:main.c        ****   ADC_Start();
 403              		.loc 1 110 0
 404 002a FFF7FEFF 		bl	ADC_Start
 111:main.c        ****   ADC_StartConvert();
 405              		.loc 1 111 0
 406 002e FFF7FEFF 		bl	ADC_StartConvert
 112:main.c        ****   eoc_StartEx(eoc);
 407              		.loc 1 112 0
 408 0032 9048     		ldr	r0, .L59+4
 409 0034 FFF7FEFF 		bl	eoc_StartEx
 113:main.c        **** 
 114:main.c        ****   initMotors();
 410              		.loc 1 114 0
 411 0038 FFF7FEFF 		bl	initMotors
 115:main.c        **** 
 116:main.c        ****   stop();
 412              		.loc 1 116 0
 413 003c FFF7FEFF 		bl	stop
 117:main.c        **** 
 118:main.c        ****   isr_TS_StartEx(MyISR);
 414              		.loc 1 118 0
 415 0040 8B48     		ldr	r0, .L59
 416 0042 FFF7FEFF 		bl	isr_TS_StartEx
 119:main.c        ****   Timer_TS_Start();
 417              		.loc 1 119 0
 418 0046 FFF7FEFF 		bl	Timer_TS_Start
 419              	.LBB2:
 120:main.c        **** 
 121:main.c        ****   unsigned char squares[500][2];
 122:main.c        **** 
 123:main.c        ****   unsigned char instruction[500];
 124:main.c        ****   unsigned char distance[500];
 125:main.c        **** 
 126:main.c        **** // Loop through the array and set each element to 111
 127:main.c        ****     for (int i = 0; i < 500; i++) {
 420              		.loc 1 127 0
 421 004a 0023     		movs	r3, #0
 422 004c C7F82438 		str	r3, [r7, #2084]
 423 0050 13E0     		b	.L8
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 11


 424              	.L9:
 128:main.c        ****         squares[i][0] = 55;
 425              		.loc 1 128 0 discriminator 3
 426 0052 07F58263 		add	r3, r7, #1040
 427 0056 D7F82428 		ldr	r2, [r7, #2084]
 428 005a 3721     		movs	r1, #55
 429 005c 03F81210 		strb	r1, [r3, r2, lsl #1]
 129:main.c        ****         squares[i][1] = 55;
 430              		.loc 1 129 0 discriminator 3
 431 0060 07F58262 		add	r2, r7, #1040
 432 0064 D7F82438 		ldr	r3, [r7, #2084]
 433 0068 5B00     		lsls	r3, r3, #1
 434 006a 1344     		add	r3, r3, r2
 435 006c 3722     		movs	r2, #55
 436 006e 5A70     		strb	r2, [r3, #1]
 127:main.c        ****         squares[i][0] = 55;
 437              		.loc 1 127 0 discriminator 3
 438 0070 D7F82438 		ldr	r3, [r7, #2084]
 439 0074 0133     		adds	r3, r3, #1
 440 0076 C7F82438 		str	r3, [r7, #2084]
 441              	.L8:
 127:main.c        ****         squares[i][0] = 55;
 442              		.loc 1 127 0 is_stmt 0 discriminator 1
 443 007a D7F82438 		ldr	r3, [r7, #2084]
 444 007e B3F5FA7F 		cmp	r3, #500
 445 0082 E6DB     		blt	.L9
 446              	.LBE2:
 130:main.c        ****     }
 131:main.c        **** 
 132:main.c        **** 
 133:main.c        **** 
 134:main.c        ****   CyDelay(4000);
 447              		.loc 1 134 0 is_stmt 1
 448 0084 4FF47A60 		mov	r0, #4000
 449 0088 FFF7FEFF 		bl	CyDelay
 135:main.c        ****   usbPutString("Starting Pathfind\r\n");
 450              		.loc 1 135 0
 451 008c 7A48     		ldr	r0, .L59+8
 452 008e FFF7FEFF 		bl	usbPutString
 136:main.c        ****   pathfind(instruction, distance, squares);
 453              		.loc 1 136 0
 454 0092 07F58262 		add	r2, r7, #1040
 455 0096 07F12801 		add	r1, r7, #40
 456 009a 07F50773 		add	r3, r7, #540
 457 009e 1846     		mov	r0, r3
 458 00a0 FFF7FEFF 		bl	pathfind
 137:main.c        **** 
 138:main.c        ****     usbPutString("SQUARES\r\n");
 459              		.loc 1 138 0
 460 00a4 7548     		ldr	r0, .L59+12
 461 00a6 FFF7FEFF 		bl	usbPutString
 462              	.LBB3:
 139:main.c        **** for (int i = 0; i < 500; i++) {
 463              		.loc 1 139 0
 464 00aa 0023     		movs	r3, #0
 465 00ac C7F82038 		str	r3, [r7, #2080]
 466 00b0 1FE0     		b	.L10
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 12


 467              	.L11:
 468              	.LBB4:
 140:main.c        ****         char squareStr[10]; 
 141:main.c        ****         snprintf(squareStr, sizeof(squareStr), "%u %u \r\n", (unsigned char)squares[i][0], (unsigne
 469              		.loc 1 141 0 discriminator 3
 470 00b2 07F58263 		add	r3, r7, #1040
 471 00b6 D7F82028 		ldr	r2, [r7, #2080]
 472 00ba 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 473 00be 1946     		mov	r1, r3
 474 00c0 07F58262 		add	r2, r7, #1040
 475 00c4 D7F82038 		ldr	r3, [r7, #2080]
 476 00c8 5B00     		lsls	r3, r3, #1
 477 00ca 1344     		add	r3, r3, r2
 478 00cc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 479 00ce 07F11C00 		add	r0, r7, #28
 480 00d2 0093     		str	r3, [sp]
 481 00d4 0B46     		mov	r3, r1
 482 00d6 6A4A     		ldr	r2, .L59+16
 483 00d8 0A21     		movs	r1, #10
 484 00da FFF7FEFF 		bl	snprintf
 142:main.c        ****         usbPutString(squareStr);
 485              		.loc 1 142 0 discriminator 3
 486 00de 07F11C03 		add	r3, r7, #28
 487 00e2 1846     		mov	r0, r3
 488 00e4 FFF7FEFF 		bl	usbPutString
 489              	.LBE4:
 139:main.c        **** for (int i = 0; i < 500; i++) {
 490              		.loc 1 139 0 discriminator 3
 491 00e8 D7F82038 		ldr	r3, [r7, #2080]
 492 00ec 0133     		adds	r3, r3, #1
 493 00ee C7F82038 		str	r3, [r7, #2080]
 494              	.L10:
 139:main.c        **** for (int i = 0; i < 500; i++) {
 495              		.loc 1 139 0 is_stmt 0 discriminator 1
 496 00f2 D7F82038 		ldr	r3, [r7, #2080]
 497 00f6 B3F5FA7F 		cmp	r3, #500
 498 00fa DADB     		blt	.L11
 499              	.LBE3:
 143:main.c        ****     }
 144:main.c        ****     
 145:main.c        **** usbPutString("INSTRUCTIONS\r\n");
 500              		.loc 1 145 0 is_stmt 1
 501 00fc 6148     		ldr	r0, .L59+20
 502 00fe FFF7FEFF 		bl	usbPutString
 503              	.LBB5:
 146:main.c        **** // Print all instructions
 147:main.c        ****     for (int i = 0; i < 500; i++) {
 504              		.loc 1 147 0
 505 0102 0023     		movs	r3, #0
 506 0104 C7F81C38 		str	r3, [r7, #2076]
 507 0108 15E0     		b	.L12
 508              	.L13:
 509              	.LBB6:
 148:main.c        ****         char instStr[10]; 
 149:main.c        ****         snprintf(instStr, sizeof(instStr), "%u \r\n", (unsigned char)instruction[i]);
 510              		.loc 1 149 0 discriminator 3
 511 010a 07F50772 		add	r2, r7, #540
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 13


 512 010e D7F81C38 		ldr	r3, [r7, #2076]
 513 0112 1344     		add	r3, r3, r2
 514 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 515 0116 07F11000 		add	r0, r7, #16
 516 011a 5B4A     		ldr	r2, .L59+24
 517 011c 0A21     		movs	r1, #10
 518 011e FFF7FEFF 		bl	snprintf
 150:main.c        ****         usbPutString(instStr);
 519              		.loc 1 150 0 discriminator 3
 520 0122 07F11003 		add	r3, r7, #16
 521 0126 1846     		mov	r0, r3
 522 0128 FFF7FEFF 		bl	usbPutString
 523              	.LBE6:
 147:main.c        ****         char instStr[10]; 
 524              		.loc 1 147 0 discriminator 3
 525 012c D7F81C38 		ldr	r3, [r7, #2076]
 526 0130 0133     		adds	r3, r3, #1
 527 0132 C7F81C38 		str	r3, [r7, #2076]
 528              	.L12:
 147:main.c        ****         char instStr[10]; 
 529              		.loc 1 147 0 is_stmt 0 discriminator 1
 530 0136 D7F81C38 		ldr	r3, [r7, #2076]
 531 013a B3F5FA7F 		cmp	r3, #500
 532 013e E4DB     		blt	.L13
 533              	.LBE5:
 151:main.c        **** 
 152:main.c        ****     }
 153:main.c        **** 
 154:main.c        ****     usbPutString("DISTANCES\r\n");
 534              		.loc 1 154 0 is_stmt 1
 535 0140 5248     		ldr	r0, .L59+28
 536 0142 FFF7FEFF 		bl	usbPutString
 537              	.LBB7:
 155:main.c        ****     // Print all distances
 156:main.c        ****     for (int i = 0; i < 500; i++) {
 538              		.loc 1 156 0
 539 0146 0023     		movs	r3, #0
 540 0148 C7F81838 		str	r3, [r7, #2072]
 541 014c 16E0     		b	.L14
 542              	.L15:
 543              	.LBB8:
 157:main.c        ****         char distanceStr[10];  // Assuming distances are integers and can fit in 10 characters
 158:main.c        ****         snprintf(distanceStr, sizeof(distanceStr), "%u", (unsigned int)distance[i]);
 544              		.loc 1 158 0 discriminator 3
 545 014e 07F12802 		add	r2, r7, #40
 546 0152 D7F81838 		ldr	r3, [r7, #2072]
 547 0156 1344     		add	r3, r3, r2
 548 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 549 015a 381D     		adds	r0, r7, #4
 550 015c 4C4A     		ldr	r2, .L59+32
 551 015e 0A21     		movs	r1, #10
 552 0160 FFF7FEFF 		bl	snprintf
 159:main.c        ****         usbPutString(distanceStr);
 553              		.loc 1 159 0 discriminator 3
 554 0164 3B1D     		adds	r3, r7, #4
 555 0166 1846     		mov	r0, r3
 556 0168 FFF7FEFF 		bl	usbPutString
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 14


 160:main.c        ****         usbPutString("\r\n");
 557              		.loc 1 160 0 discriminator 3
 558 016c 4948     		ldr	r0, .L59+36
 559 016e FFF7FEFF 		bl	usbPutString
 560              	.LBE8:
 156:main.c        ****         char distanceStr[10];  // Assuming distances are integers and can fit in 10 characters
 561              		.loc 1 156 0 discriminator 3
 562 0172 D7F81838 		ldr	r3, [r7, #2072]
 563 0176 0133     		adds	r3, r3, #1
 564 0178 C7F81838 		str	r3, [r7, #2072]
 565              	.L14:
 156:main.c        ****         char distanceStr[10];  // Assuming distances are integers and can fit in 10 characters
 566              		.loc 1 156 0 is_stmt 0 discriminator 1
 567 017c D7F81838 		ldr	r3, [r7, #2072]
 568 0180 B3F5FA7F 		cmp	r3, #500
 569 0184 E3DB     		blt	.L15
 570              	.L58:
 571              	.LBE7:
 161:main.c        ****     }
 162:main.c        **** 
 163:main.c        ****   for (;;) {
 164:main.c        **** 
 165:main.c        ****     if (motorFlag == 1) { // timer has counted 0.1s 
 572              		.loc 1 165 0 is_stmt 1
 573 0186 444B     		ldr	r3, .L59+40
 574 0188 1B68     		ldr	r3, [r3]
 575 018a 012B     		cmp	r3, #1
 576 018c 68D1     		bne	.L16
 166:main.c        **** 
 167:main.c        ****       isr_TS_Disable(); // disabling the interrupts
 577              		.loc 1 167 0
 578 018e FFF7FEFF 		bl	isr_TS_Disable
 168:main.c        ****       if (step == 0) { //takes the first measurement, sets steps to 2, the next time the timer goes
 579              		.loc 1 168 0
 580 0192 424B     		ldr	r3, .L59+44
 581 0194 1B68     		ldr	r3, [r3]
 582 0196 002B     		cmp	r3, #0
 583 0198 11D1     		bne	.L17
 169:main.c        ****         v1L = QuadDec_M1_GetCounter(); // first measurement taken - LEFT
 584              		.loc 1 169 0
 585 019a FFF7FEFF 		bl	QuadDec_M1_GetCounter
 586 019e 0346     		mov	r3, r0
 587 01a0 1A46     		mov	r2, r3
 588 01a2 3F4B     		ldr	r3, .L59+48
 589 01a4 1A60     		str	r2, [r3]
 170:main.c        ****         v1R = QuadDec_M2_GetCounter(); // first measurement taken - RIGHT
 590              		.loc 1 170 0
 591 01a6 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 592 01aa 0346     		mov	r3, r0
 593 01ac 1A46     		mov	r2, r3
 594 01ae 3D4B     		ldr	r3, .L59+52
 595 01b0 1A60     		str	r2, [r3]
 171:main.c        ****         step++;
 596              		.loc 1 171 0
 597 01b2 3A4B     		ldr	r3, .L59+44
 598 01b4 1B68     		ldr	r3, [r3]
 599 01b6 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 15


 600 01b8 384A     		ldr	r2, .L59+44
 601 01ba 1360     		str	r3, [r2]
 602 01bc 4BE0     		b	.L18
 603              	.L17:
 604              	.LBB9:
 172:main.c        ****       } else { // second measure
 173:main.c        ****         step = 0;
 605              		.loc 1 173 0
 606 01be 374B     		ldr	r3, .L59+44
 607 01c0 0022     		movs	r2, #0
 608 01c2 1A60     		str	r2, [r3]
 174:main.c        **** 
 175:main.c        ****         v2L = QuadDec_M1_GetCounter(); // second measurement taken - LEFT
 609              		.loc 1 175 0
 610 01c4 FFF7FEFF 		bl	QuadDec_M1_GetCounter
 611 01c8 0346     		mov	r3, r0
 612 01ca 1A46     		mov	r2, r3
 613 01cc 364B     		ldr	r3, .L59+56
 614 01ce 1A60     		str	r2, [r3]
 176:main.c        ****         v2R = QuadDec_M2_GetCounter(); // second measurement taken - RIGHT
 615              		.loc 1 176 0
 616 01d0 FFF7FEFF 		bl	QuadDec_M2_GetCounter
 617 01d4 0346     		mov	r3, r0
 618 01d6 1A46     		mov	r2, r3
 619 01d8 344B     		ldr	r3, .L59+60
 620 01da 1A60     		str	r2, [r3]
 177:main.c        **** 
 178:main.c        ****         numRotationsL = (v2L - v1L);
 621              		.loc 1 178 0
 622 01dc 324B     		ldr	r3, .L59+56
 623 01de 1A68     		ldr	r2, [r3]
 624 01e0 2F4B     		ldr	r3, .L59+48
 625 01e2 1B68     		ldr	r3, [r3]
 626 01e4 D31A     		subs	r3, r2, r3
 627 01e6 324A     		ldr	r2, .L59+64
 628 01e8 1360     		str	r3, [r2]
 179:main.c        ****         numRotationsR = (v2R - v1R);
 629              		.loc 1 179 0
 630 01ea 304B     		ldr	r3, .L59+60
 631 01ec 1A68     		ldr	r2, [r3]
 632 01ee 2D4B     		ldr	r3, .L59+52
 633 01f0 1B68     		ldr	r3, [r3]
 634 01f2 D31A     		subs	r3, r2, r3
 635 01f4 2F4A     		ldr	r2, .L59+68
 636 01f6 1360     		str	r3, [r2]
 180:main.c        **** 
 181:main.c        ****         int changeInDots = (((abs(numRotationsR) + abs(numRotationsL)) ) / 2);
 637              		.loc 1 181 0
 638 01f8 2E4B     		ldr	r3, .L59+68
 639 01fa 1B68     		ldr	r3, [r3]
 640 01fc 83EAE372 		eor	r2, r3, r3, asr #31
 641 0200 A2EBE372 		sub	r2, r2, r3, asr #31
 642 0204 2A4B     		ldr	r3, .L59+64
 643 0206 1B68     		ldr	r3, [r3]
 644 0208 002B     		cmp	r3, #0
 645 020a B8BF     		it	lt
 646 020c 5B42     		rsblt	r3, r3, #0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 16


 647 020e 1344     		add	r3, r3, r2
 648 0210 DA0F     		lsrs	r2, r3, #31
 649 0212 1344     		add	r3, r3, r2
 650 0214 5B10     		asrs	r3, r3, #1
 651 0216 C7F8F837 		str	r3, [r7, #2040]
 182:main.c        ****         dotsTravelled = changeInDots + dotsTravelled;
 652              		.loc 1 182 0
 653 021a 274B     		ldr	r3, .L59+72
 654 021c 1A68     		ldr	r2, [r3]
 655 021e D7F8F837 		ldr	r3, [r7, #2040]
 656 0222 1344     		add	r3, r3, r2
 657 0224 244A     		ldr	r2, .L59+72
 658 0226 1360     		str	r3, [r2]
 183:main.c        ****         distanceTravelled = (dotsTravelled * (float)(1.217375 / 6.105)); //increase 6.1 to go furth
 659              		.loc 1 183 0
 660 0228 234B     		ldr	r3, .L59+72
 661 022a 1B68     		ldr	r3, [r3]
 662 022c 1846     		mov	r0, r3
 663 022e FFF7FEFF 		bl	__aeabi_i2f
 664 0232 0346     		mov	r3, r0
 665 0234 2149     		ldr	r1, .L59+76
 666 0236 1846     		mov	r0, r3
 667 0238 FFF7FEFF 		bl	__aeabi_fmul
 668 023c 0346     		mov	r3, r0
 669 023e 1846     		mov	r0, r3
 670 0240 FFF7FEFF 		bl	__aeabi_f2iz
 671 0244 0246     		mov	r2, r0
 672 0246 1E4B     		ldr	r3, .L59+80
 673 0248 1A60     		str	r2, [r3]
 184:main.c        ****                                                                          //6.2 for low, 6.1 for nor
 185:main.c        **** 
 186:main.c        ****         QuadDec_M1_SetCounter(0); // set quad counter to 0 to avoid overflow
 674              		.loc 1 186 0
 675 024a 0020     		movs	r0, #0
 676 024c FFF7FEFF 		bl	QuadDec_M1_SetCounter
 187:main.c        ****         QuadDec_M2_SetCounter(0); // set quad counter to 0 to avoid overflow 
 677              		.loc 1 187 0
 678 0250 0020     		movs	r0, #0
 679 0252 FFF7FEFF 		bl	QuadDec_M2_SetCounter
 680              	.L18:
 681              	.LBE9:
 188:main.c        **** 
 189:main.c        ****       }
 190:main.c        ****       motorFlag = 0; // interrupt flag is back to 0
 682              		.loc 1 190 0
 683 0256 104B     		ldr	r3, .L59+40
 684 0258 0022     		movs	r2, #0
 685 025a 1A60     		str	r2, [r3]
 191:main.c        ****       isr_TS_Enable(); // interrupt enabled
 686              		.loc 1 191 0
 687 025c FFF7FEFF 		bl	isr_TS_Enable
 688              	.L16:
 192:main.c        **** 
 193:main.c        ****     }
 194:main.c        **** 
 195:main.c        ****     if (distanceTravelled > MOVE_DISTANCE) {
 689              		.loc 1 195 0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 17


 690 0260 174B     		ldr	r3, .L59+80
 691 0262 1B68     		ldr	r3, [r3]
 692 0264 174A     		ldr	r2, .L59+84
 693 0266 9342     		cmp	r3, r2
 694 0268 2EDD     		ble	.L19
 196:main.c        ****       stop();
 695              		.loc 1 196 0
 696 026a FFF7FEFF 		bl	stop
 697 026e 8AE7     		b	.L58
 698              	.L60:
 699              		.align	2
 700              	.L59:
 701 0270 00000000 		.word	MyISR
 702 0274 00000000 		.word	eoc
 703 0278 00000000 		.word	.LC0
 704 027c 14000000 		.word	.LC1
 705 0280 20000000 		.word	.LC2
 706 0284 2C000000 		.word	.LC3
 707 0288 3C000000 		.word	.LC4
 708 028c 44000000 		.word	.LC5
 709 0290 50000000 		.word	.LC6
 710 0294 54000000 		.word	.LC7
 711 0298 00000000 		.word	motorFlag
 712 029c 00000000 		.word	step
 713 02a0 00000000 		.word	v1L
 714 02a4 00000000 		.word	v1R
 715 02a8 00000000 		.word	v2L
 716 02ac 00000000 		.word	v2R
 717 02b0 00000000 		.word	numRotationsL
 718 02b4 00000000 		.word	numRotationsR
 719 02b8 00000000 		.word	dotsTravelled
 720 02bc 25314C3E 		.word	1045180709
 721 02c0 00000000 		.word	distanceTravelled
 722 02c4 7F969800 		.word	9999999
 723              	.L19:
 197:main.c        **** 
 198:main.c        ****     } else {
 199:main.c        **** 
 200:main.c        ****       LED_PIN_4_Write(0);
 724              		.loc 1 200 0
 725 02c8 0020     		movs	r0, #0
 726 02ca FFF7FEFF 		bl	LED_PIN_4_Write
 201:main.c        ****       if (flag == 1) {
 727              		.loc 1 201 0
 728 02ce BA4B     		ldr	r3, .L61
 729 02d0 1B68     		ldr	r3, [r3]
 730 02d2 012B     		cmp	r3, #1
 731 02d4 7FF457AF 		bne	.L58
 202:main.c        **** 
 203:main.c        ****         ADC_IRQ_Disable();
 732              		.loc 1 203 0
 733 02d8 FFF7FEFF 		bl	ADC_IRQ_Disable
 204:main.c        ****         valuesLeftIntersection[count] = ADC_GetResult16(0);
 734              		.loc 1 204 0
 735 02dc B74B     		ldr	r3, .L61+4
 736 02de 1C68     		ldr	r4, [r3]
 737 02e0 0020     		movs	r0, #0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 18


 738 02e2 FFF7FEFF 		bl	ADC_GetResult16
 739 02e6 0346     		mov	r3, r0
 740 02e8 1A46     		mov	r2, r3
 741 02ea B54B     		ldr	r3, .L61+8
 742 02ec 43F82420 		str	r2, [r3, r4, lsl #2]
 205:main.c        ****         valuesLeftLine[count] = ADC_GetResult16(1);
 743              		.loc 1 205 0
 744 02f0 B24B     		ldr	r3, .L61+4
 745 02f2 1C68     		ldr	r4, [r3]
 746 02f4 0120     		movs	r0, #1
 747 02f6 FFF7FEFF 		bl	ADC_GetResult16
 748 02fa 0346     		mov	r3, r0
 749 02fc 1A46     		mov	r2, r3
 750 02fe B14B     		ldr	r3, .L61+12
 751 0300 43F82420 		str	r2, [r3, r4, lsl #2]
 206:main.c        ****         valuesMiddleLine[count] = ADC_GetResult16(2);
 752              		.loc 1 206 0
 753 0304 AD4B     		ldr	r3, .L61+4
 754 0306 1C68     		ldr	r4, [r3]
 755 0308 0220     		movs	r0, #2
 756 030a FFF7FEFF 		bl	ADC_GetResult16
 757 030e 0346     		mov	r3, r0
 758 0310 1A46     		mov	r2, r3
 759 0312 AD4B     		ldr	r3, .L61+16
 760 0314 43F82420 		str	r2, [r3, r4, lsl #2]
 207:main.c        ****         valuesTurnComplete[count] = ADC_GetResult16(3);
 761              		.loc 1 207 0
 762 0318 A84B     		ldr	r3, .L61+4
 763 031a 1C68     		ldr	r4, [r3]
 764 031c 0320     		movs	r0, #3
 765 031e FFF7FEFF 		bl	ADC_GetResult16
 766 0322 0346     		mov	r3, r0
 767 0324 1A46     		mov	r2, r3
 768 0326 A94B     		ldr	r3, .L61+20
 769 0328 43F82420 		str	r2, [r3, r4, lsl #2]
 208:main.c        ****         valuesRightLine[count] = ADC_GetResult16(4);
 770              		.loc 1 208 0
 771 032c A34B     		ldr	r3, .L61+4
 772 032e 1C68     		ldr	r4, [r3]
 773 0330 0420     		movs	r0, #4
 774 0332 FFF7FEFF 		bl	ADC_GetResult16
 775 0336 0346     		mov	r3, r0
 776 0338 1A46     		mov	r2, r3
 777 033a A54B     		ldr	r3, .L61+24
 778 033c 43F82420 		str	r2, [r3, r4, lsl #2]
 209:main.c        ****         valuesRightIntersection[count] = ADC_GetResult16(5);
 779              		.loc 1 209 0
 780 0340 9E4B     		ldr	r3, .L61+4
 781 0342 1C68     		ldr	r4, [r3]
 782 0344 0520     		movs	r0, #5
 783 0346 FFF7FEFF 		bl	ADC_GetResult16
 784 034a 0346     		mov	r3, r0
 785 034c 1A46     		mov	r2, r3
 786 034e A14B     		ldr	r3, .L61+28
 787 0350 43F82420 		str	r2, [r3, r4, lsl #2]
 210:main.c        **** 
 211:main.c        ****         count++;
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 19


 788              		.loc 1 211 0
 789 0354 994B     		ldr	r3, .L61+4
 790 0356 1B68     		ldr	r3, [r3]
 791 0358 0133     		adds	r3, r3, #1
 792 035a 984A     		ldr	r2, .L61+4
 793 035c 1360     		str	r3, [r2]
 212:main.c        ****         if (count == ADC_COUNT) {
 794              		.loc 1 212 0
 795 035e 974B     		ldr	r3, .L61+4
 796 0360 1B68     		ldr	r3, [r3]
 797 0362 B3F57A7F 		cmp	r3, #1000
 798 0366 40F0D081 		bne	.L21
 799              	.LBB10:
 213:main.c        ****           LED_PIN_4_Write(1);
 800              		.loc 1 213 0
 801 036a 0120     		movs	r0, #1
 802 036c FFF7FEFF 		bl	LED_PIN_4_Write
 214:main.c        ****           count = 0;
 803              		.loc 1 214 0
 804 0370 924B     		ldr	r3, .L61+4
 805 0372 0022     		movs	r2, #0
 806 0374 1A60     		str	r2, [r3]
 215:main.c        ****           int highCountLeftIntersection = 0;
 807              		.loc 1 215 0
 808 0376 0023     		movs	r3, #0
 809 0378 C7F81438 		str	r3, [r7, #2068]
 216:main.c        ****           int highCountLeftLine = 0;
 810              		.loc 1 216 0
 811 037c 0023     		movs	r3, #0
 812 037e C7F81038 		str	r3, [r7, #2064]
 217:main.c        ****           int highCountMiddleLine = 0;
 813              		.loc 1 217 0
 814 0382 0023     		movs	r3, #0
 815 0384 C7F80C38 		str	r3, [r7, #2060]
 218:main.c        ****           int highCountTurnComplete = 0;
 816              		.loc 1 218 0
 817 0388 0023     		movs	r3, #0
 818 038a C7F80838 		str	r3, [r7, #2056]
 219:main.c        ****           int highCountRightLine = 0;
 819              		.loc 1 219 0
 820 038e 0023     		movs	r3, #0
 821 0390 C7F80438 		str	r3, [r7, #2052]
 220:main.c        ****           int highCountRightIntersection = 0;
 822              		.loc 1 220 0
 823 0394 0023     		movs	r3, #0
 824 0396 C7F80038 		str	r3, [r7, #2048]
 825              	.LBB11:
 221:main.c        ****           for (int i = 0; i < ADC_COUNT; i++) {
 826              		.loc 1 221 0
 827 039a 0023     		movs	r3, #0
 828 039c C7F8FC37 		str	r3, [r7, #2044]
 829 03a0 58E0     		b	.L22
 830              	.L29:
 222:main.c        **** 
 223:main.c        ****             if (valuesLeftIntersection[i] > 3000) {
 831              		.loc 1 223 0
 832 03a2 874A     		ldr	r2, .L61+8
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 20


 833 03a4 D7F8FC37 		ldr	r3, [r7, #2044]
 834 03a8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 835 03ac 40F6B832 		movw	r2, #3000
 836 03b0 9342     		cmp	r3, r2
 837 03b2 04DD     		ble	.L23
 224:main.c        ****               highCountLeftIntersection++;
 838              		.loc 1 224 0
 839 03b4 D7F81438 		ldr	r3, [r7, #2068]
 840 03b8 0133     		adds	r3, r3, #1
 841 03ba C7F81438 		str	r3, [r7, #2068]
 842              	.L23:
 225:main.c        **** 
 226:main.c        ****             }
 227:main.c        **** 
 228:main.c        ****             if (valuesLeftLine[i] > 3000) {
 843              		.loc 1 228 0
 844 03be 814A     		ldr	r2, .L61+12
 845 03c0 D7F8FC37 		ldr	r3, [r7, #2044]
 846 03c4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 847 03c8 40F6B832 		movw	r2, #3000
 848 03cc 9342     		cmp	r3, r2
 849 03ce 04DD     		ble	.L24
 229:main.c        ****               highCountLeftLine++;
 850              		.loc 1 229 0
 851 03d0 D7F81038 		ldr	r3, [r7, #2064]
 852 03d4 0133     		adds	r3, r3, #1
 853 03d6 C7F81038 		str	r3, [r7, #2064]
 854              	.L24:
 230:main.c        **** 
 231:main.c        ****             }
 232:main.c        **** 
 233:main.c        ****             if (valuesMiddleLine[i] > 3000) {
 855              		.loc 1 233 0
 856 03da 7B4A     		ldr	r2, .L61+16
 857 03dc D7F8FC37 		ldr	r3, [r7, #2044]
 858 03e0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 859 03e4 40F6B832 		movw	r2, #3000
 860 03e8 9342     		cmp	r3, r2
 861 03ea 04DD     		ble	.L25
 234:main.c        ****               highCountMiddleLine++;
 862              		.loc 1 234 0
 863 03ec D7F80C38 		ldr	r3, [r7, #2060]
 864 03f0 0133     		adds	r3, r3, #1
 865 03f2 C7F80C38 		str	r3, [r7, #2060]
 866              	.L25:
 235:main.c        **** 
 236:main.c        ****             }
 237:main.c        **** 
 238:main.c        ****             if (valuesTurnComplete[i] > 3000) {
 867              		.loc 1 238 0
 868 03f6 754A     		ldr	r2, .L61+20
 869 03f8 D7F8FC37 		ldr	r3, [r7, #2044]
 870 03fc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 871 0400 40F6B832 		movw	r2, #3000
 872 0404 9342     		cmp	r3, r2
 873 0406 04DD     		ble	.L26
 239:main.c        ****               highCountTurnComplete++;
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 21


 874              		.loc 1 239 0
 875 0408 D7F80838 		ldr	r3, [r7, #2056]
 876 040c 0133     		adds	r3, r3, #1
 877 040e C7F80838 		str	r3, [r7, #2056]
 878              	.L26:
 240:main.c        **** 
 241:main.c        ****             }
 242:main.c        **** 
 243:main.c        ****             if (valuesRightLine[i] > 3000) {
 879              		.loc 1 243 0
 880 0412 6F4A     		ldr	r2, .L61+24
 881 0414 D7F8FC37 		ldr	r3, [r7, #2044]
 882 0418 52F82330 		ldr	r3, [r2, r3, lsl #2]
 883 041c 40F6B832 		movw	r2, #3000
 884 0420 9342     		cmp	r3, r2
 885 0422 04DD     		ble	.L27
 244:main.c        ****               highCountRightLine++;
 886              		.loc 1 244 0
 887 0424 D7F80438 		ldr	r3, [r7, #2052]
 888 0428 0133     		adds	r3, r3, #1
 889 042a C7F80438 		str	r3, [r7, #2052]
 890              	.L27:
 245:main.c        **** 
 246:main.c        ****             }
 247:main.c        **** 
 248:main.c        ****             if (valuesRightIntersection[i] > 3000) {
 891              		.loc 1 248 0
 892 042e 694A     		ldr	r2, .L61+28
 893 0430 D7F8FC37 		ldr	r3, [r7, #2044]
 894 0434 52F82330 		ldr	r3, [r2, r3, lsl #2]
 895 0438 40F6B832 		movw	r2, #3000
 896 043c 9342     		cmp	r3, r2
 897 043e 04DD     		ble	.L28
 249:main.c        ****               highCountRightIntersection++;
 898              		.loc 1 249 0
 899 0440 D7F80038 		ldr	r3, [r7, #2048]
 900 0444 0133     		adds	r3, r3, #1
 901 0446 C7F80038 		str	r3, [r7, #2048]
 902              	.L28:
 221:main.c        **** 
 903              		.loc 1 221 0 discriminator 2
 904 044a D7F8FC37 		ldr	r3, [r7, #2044]
 905 044e 0133     		adds	r3, r3, #1
 906 0450 C7F8FC37 		str	r3, [r7, #2044]
 907              	.L22:
 221:main.c        **** 
 908              		.loc 1 221 0 is_stmt 0 discriminator 1
 909 0454 D7F8FC37 		ldr	r3, [r7, #2044]
 910 0458 B3F57A7F 		cmp	r3, #1000
 911 045c A1DB     		blt	.L29
 912              	.LBE11:
 250:main.c        **** 
 251:main.c        ****             }
 252:main.c        **** 
 253:main.c        ****           }
 254:main.c        **** 
 255:main.c        ****           if (L_LINE_BLACK) {
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 22


 913              		.loc 1 255 0 is_stmt 1
 914 045e D7F81038 		ldr	r3, [r7, #2064]
 915 0462 952B     		cmp	r3, #149
 916 0464 03DC     		bgt	.L30
 256:main.c        ****             LED_PIN_1_Write(0);
 917              		.loc 1 256 0
 918 0466 0020     		movs	r0, #0
 919 0468 FFF7FEFF 		bl	LED_PIN_1_Write
 920 046c 02E0     		b	.L31
 921              	.L30:
 257:main.c        ****           } else {
 258:main.c        ****             LED_PIN_1_Write(1);
 922              		.loc 1 258 0
 923 046e 0120     		movs	r0, #1
 924 0470 FFF7FEFF 		bl	LED_PIN_1_Write
 925              	.L31:
 259:main.c        ****           }
 260:main.c        **** 
 261:main.c        ****           if (M_LINE_BLACK) {
 926              		.loc 1 261 0
 927 0474 D7F80C38 		ldr	r3, [r7, #2060]
 928 0478 952B     		cmp	r3, #149
 929 047a 03DC     		bgt	.L32
 262:main.c        ****             LED_PIN_2_Write(0);
 930              		.loc 1 262 0
 931 047c 0020     		movs	r0, #0
 932 047e FFF7FEFF 		bl	LED_PIN_2_Write
 933 0482 02E0     		b	.L33
 934              	.L32:
 263:main.c        ****           } else {
 264:main.c        ****             LED_PIN_2_Write(1);
 935              		.loc 1 264 0
 936 0484 0120     		movs	r0, #1
 937 0486 FFF7FEFF 		bl	LED_PIN_2_Write
 938              	.L33:
 265:main.c        ****           }
 266:main.c        **** 
 267:main.c        ****           if (R_LINE_BLACK) {
 939              		.loc 1 267 0
 940 048a D7F80438 		ldr	r3, [r7, #2052]
 941 048e 952B     		cmp	r3, #149
 942 0490 03DC     		bgt	.L34
 268:main.c        ****             LED_PIN_3_Write(0);
 943              		.loc 1 268 0
 944 0492 0020     		movs	r0, #0
 945 0494 FFF7FEFF 		bl	LED_PIN_3_Write
 946 0498 02E0     		b	.L35
 947              	.L34:
 269:main.c        ****           } else {
 270:main.c        ****             LED_PIN_3_Write(1);
 948              		.loc 1 270 0
 949 049a 0120     		movs	r0, #1
 950 049c FFF7FEFF 		bl	LED_PIN_3_Write
 951              	.L35:
 271:main.c        ****           }
 272:main.c        **** 
 273:main.c        ****           shouldUpdate = 0;
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 23


 952              		.loc 1 273 0
 953 04a0 4D4B     		ldr	r3, .L61+32
 954 04a2 0022     		movs	r2, #0
 955 04a4 1A60     		str	r2, [r3]
 274:main.c        ****           turnTimer = 0;
 956              		.loc 1 274 0
 957 04a6 4D4B     		ldr	r3, .L61+36
 958 04a8 0022     		movs	r2, #0
 959 04aa 1A60     		str	r2, [r3]
 275:main.c        **** 
 276:main.c        ****           // If all the sensors are under black light, stop the robot
 277:main.c        ****           if (L_INT_BLACK && M_LINE_BLACK && R_INT_BLACK && TC_BLACK && L_LINE_BLACK && R_LINE_BLAC
 960              		.loc 1 277 0
 961 04ac D7F81438 		ldr	r3, [r7, #2068]
 962 04b0 952B     		cmp	r3, #149
 963 04b2 16DC     		bgt	.L36
 964              		.loc 1 277 0 is_stmt 0 discriminator 1
 965 04b4 D7F80C38 		ldr	r3, [r7, #2060]
 966 04b8 952B     		cmp	r3, #149
 967 04ba 12DC     		bgt	.L36
 968              		.loc 1 277 0 discriminator 2
 969 04bc D7F80038 		ldr	r3, [r7, #2048]
 970 04c0 952B     		cmp	r3, #149
 971 04c2 0EDC     		bgt	.L36
 972              		.loc 1 277 0 discriminator 3
 973 04c4 D7F80838 		ldr	r3, [r7, #2056]
 974 04c8 952B     		cmp	r3, #149
 975 04ca 0ADC     		bgt	.L36
 976              		.loc 1 277 0 discriminator 4
 977 04cc D7F81038 		ldr	r3, [r7, #2064]
 978 04d0 952B     		cmp	r3, #149
 979 04d2 06DC     		bgt	.L36
 980              		.loc 1 277 0 discriminator 5
 981 04d4 D7F80438 		ldr	r3, [r7, #2052]
 982 04d8 952B     		cmp	r3, #149
 983 04da 02DC     		bgt	.L36
 278:main.c        **** 
 279:main.c        ****             stop();
 984              		.loc 1 279 0 is_stmt 1
 985 04dc FFF7FEFF 		bl	stop
 986 04e0 13E1     		b	.L21
 987              	.L36:
 280:main.c        **** 
 281:main.c        ****           } else if (turningLeft == 1) { // if robot is turning left
 988              		.loc 1 281 0
 989 04e2 3F4B     		ldr	r3, .L61+40
 990 04e4 1B68     		ldr	r3, [r3]
 991 04e6 012B     		cmp	r3, #1
 992 04e8 14D1     		bne	.L37
 282:main.c        ****             while (turnTimer != 10000) {
 993              		.loc 1 282 0
 994 04ea 06E0     		b	.L38
 995              	.L39:
 283:main.c        ****               turnLeft();
 996              		.loc 1 283 0
 997 04ec FFF7FEFF 		bl	turnLeft
 284:main.c        ****               turnTimer++;
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 24


 998              		.loc 1 284 0
 999 04f0 3A4B     		ldr	r3, .L61+36
 1000 04f2 1B68     		ldr	r3, [r3]
 1001 04f4 0133     		adds	r3, r3, #1
 1002 04f6 394A     		ldr	r2, .L61+36
 1003 04f8 1360     		str	r3, [r2]
 1004              	.L38:
 282:main.c        ****             while (turnTimer != 10000) {
 1005              		.loc 1 282 0
 1006 04fa 384B     		ldr	r3, .L61+36
 1007 04fc 1B68     		ldr	r3, [r3]
 1008 04fe 42F21072 		movw	r2, #10000
 1009 0502 9342     		cmp	r3, r2
 1010 0504 F2D1     		bne	.L39
 285:main.c        ****             }
 286:main.c        ****             turnEnable = 0;
 1011              		.loc 1 286 0
 1012 0506 374B     		ldr	r3, .L61+44
 1013 0508 0022     		movs	r2, #0
 1014 050a 1A60     		str	r2, [r3]
 287:main.c        ****             turningLeft = 0;
 1015              		.loc 1 287 0
 1016 050c 344B     		ldr	r3, .L61+40
 1017 050e 0022     		movs	r2, #0
 1018 0510 1A60     		str	r2, [r3]
 1019 0512 FAE0     		b	.L21
 1020              	.L37:
 288:main.c        **** 
 289:main.c        ****           } else if (turningRight == 1) { // if robot is turning right
 1021              		.loc 1 289 0
 1022 0514 344B     		ldr	r3, .L61+48
 1023 0516 1B68     		ldr	r3, [r3]
 1024 0518 012B     		cmp	r3, #1
 1025 051a 14D1     		bne	.L40
 290:main.c        ****             while (turnTimer != 10000) {
 1026              		.loc 1 290 0
 1027 051c 06E0     		b	.L41
 1028              	.L42:
 291:main.c        ****               turnRight();
 1029              		.loc 1 291 0
 1030 051e FFF7FEFF 		bl	turnRight
 292:main.c        ****               turnTimer++;
 1031              		.loc 1 292 0
 1032 0522 2E4B     		ldr	r3, .L61+36
 1033 0524 1B68     		ldr	r3, [r3]
 1034 0526 0133     		adds	r3, r3, #1
 1035 0528 2C4A     		ldr	r2, .L61+36
 1036 052a 1360     		str	r3, [r2]
 1037              	.L41:
 290:main.c        ****             while (turnTimer != 10000) {
 1038              		.loc 1 290 0
 1039 052c 2B4B     		ldr	r3, .L61+36
 1040 052e 1B68     		ldr	r3, [r3]
 1041 0530 42F21072 		movw	r2, #10000
 1042 0534 9342     		cmp	r3, r2
 1043 0536 F2D1     		bne	.L42
 293:main.c        ****             }
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 25


 294:main.c        ****             turnEnable = 0;
 1044              		.loc 1 294 0
 1045 0538 2A4B     		ldr	r3, .L61+44
 1046 053a 0022     		movs	r2, #0
 1047 053c 1A60     		str	r2, [r3]
 295:main.c        ****             turningRight = 0;
 1048              		.loc 1 295 0
 1049 053e 2A4B     		ldr	r3, .L61+48
 1050 0540 0022     		movs	r2, #0
 1051 0542 1A60     		str	r2, [r3]
 1052 0544 E1E0     		b	.L21
 1053              	.L40:
 296:main.c        **** 
 297:main.c        ****           } else if (L_INT_BLACK && (M_LINE_BLACK || L_LINE_BLACK) && turnEnable == 1) { //initiate
 1054              		.loc 1 297 0
 1055 0546 D7F81438 		ldr	r3, [r7, #2068]
 1056 054a 952B     		cmp	r3, #149
 1057 054c 17DC     		bgt	.L43
 1058              		.loc 1 297 0 is_stmt 0 discriminator 1
 1059 054e D7F80C38 		ldr	r3, [r7, #2060]
 1060 0552 952B     		cmp	r3, #149
 1061 0554 03DD     		ble	.L44
 1062              		.loc 1 297 0 discriminator 3
 1063 0556 D7F81038 		ldr	r3, [r7, #2064]
 1064 055a 952B     		cmp	r3, #149
 1065 055c 0FDC     		bgt	.L43
 1066              	.L44:
 1067              		.loc 1 297 0 discriminator 4
 1068 055e 214B     		ldr	r3, .L61+44
 1069 0560 1B68     		ldr	r3, [r3]
 1070 0562 012B     		cmp	r3, #1
 1071 0564 0BD1     		bne	.L43
 298:main.c        **** 
 299:main.c        ****             turnTimer++;
 1072              		.loc 1 299 0 is_stmt 1
 1073 0566 1D4B     		ldr	r3, .L61+36
 1074 0568 1B68     		ldr	r3, [r3]
 1075 056a 0133     		adds	r3, r3, #1
 1076 056c 1B4A     		ldr	r2, .L61+36
 1077 056e 1360     		str	r3, [r2]
 300:main.c        ****             turningLeft = 1;
 1078              		.loc 1 300 0
 1079 0570 1B4B     		ldr	r3, .L61+40
 1080 0572 0122     		movs	r2, #1
 1081 0574 1A60     		str	r2, [r3]
 301:main.c        ****             lastAdjustDirection = 0;
 1082              		.loc 1 301 0
 1083 0576 1D4B     		ldr	r3, .L61+52
 1084 0578 0022     		movs	r2, #0
 1085 057a 1A60     		str	r2, [r3]
 1086 057c C5E0     		b	.L21
 1087              	.L43:
 302:main.c        **** 
 303:main.c        ****           } else if (R_INT_BLACK && (M_LINE_BLACK || R_LINE_BLACK) && turnEnable == 1) { //initiate
 1088              		.loc 1 303 0
 1089 057e D7F80038 		ldr	r3, [r7, #2048]
 1090 0582 952B     		cmp	r3, #149
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 26


 1091 0584 34DC     		bgt	.L45
 1092              		.loc 1 303 0 is_stmt 0 discriminator 1
 1093 0586 D7F80C38 		ldr	r3, [r7, #2060]
 1094 058a 952B     		cmp	r3, #149
 1095 058c 03DD     		ble	.L46
 1096              		.loc 1 303 0 discriminator 3
 1097 058e D7F80438 		ldr	r3, [r7, #2052]
 1098 0592 952B     		cmp	r3, #149
 1099 0594 2CDC     		bgt	.L45
 1100              	.L46:
 1101              		.loc 1 303 0 discriminator 4
 1102 0596 134B     		ldr	r3, .L61+44
 1103 0598 1B68     		ldr	r3, [r3]
 1104 059a 012B     		cmp	r3, #1
 1105 059c 28D1     		bne	.L45
 304:main.c        **** 
 305:main.c        ****             turnTimer++;
 1106              		.loc 1 305 0 is_stmt 1
 1107 059e 0F4B     		ldr	r3, .L61+36
 1108 05a0 1B68     		ldr	r3, [r3]
 1109 05a2 0133     		adds	r3, r3, #1
 1110 05a4 0D4A     		ldr	r2, .L61+36
 1111 05a6 1360     		str	r3, [r2]
 306:main.c        ****             turningRight = 1;
 1112              		.loc 1 306 0
 1113 05a8 0F4B     		ldr	r3, .L61+48
 1114 05aa 0122     		movs	r2, #1
 1115 05ac 1A60     		str	r2, [r3]
 307:main.c        ****             lastAdjustDirection = 2;
 1116              		.loc 1 307 0
 1117 05ae 0F4B     		ldr	r3, .L61+52
 1118 05b0 0222     		movs	r2, #2
 1119 05b2 1A60     		str	r2, [r3]
 1120 05b4 A9E0     		b	.L21
 1121              	.L62:
 1122 05b6 00BF     		.align	2
 1123              	.L61:
 1124 05b8 00000000 		.word	flag
 1125 05bc 00000000 		.word	count
 1126 05c0 00000000 		.word	valuesLeftIntersection
 1127 05c4 00000000 		.word	valuesLeftLine
 1128 05c8 00000000 		.word	valuesMiddleLine
 1129 05cc 00000000 		.word	valuesTurnComplete
 1130 05d0 00000000 		.word	valuesRightLine
 1131 05d4 00000000 		.word	valuesRightIntersection
 1132 05d8 00000000 		.word	shouldUpdate
 1133 05dc 00000000 		.word	turnTimer
 1134 05e0 00000000 		.word	turningLeft
 1135 05e4 00000000 		.word	turnEnable
 1136 05e8 00000000 		.word	turningRight
 1137 05ec 00000000 		.word	lastAdjustDirection
 1138              	.L45:
 308:main.c        **** 
 309:main.c        ****           } else if (R_LINE_BLACK && L_LINE_BLACK) {
 1139              		.loc 1 309 0
 1140 05f0 D7F80438 		ldr	r3, [r7, #2052]
 1141 05f4 952B     		cmp	r3, #149
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 27


 1142 05f6 04DC     		bgt	.L47
 1143              		.loc 1 309 0 is_stmt 0 discriminator 1
 1144 05f8 D7F81038 		ldr	r3, [r7, #2064]
 1145 05fc 952B     		cmp	r3, #149
 1146 05fe 40F38480 		ble	.L21
 1147              	.L47:
 310:main.c        ****             // do nothing for now
 311:main.c        **** 
 312:main.c        ****           } else if (L_INT_BLACK && R_INT_BLACK) {
 1148              		.loc 1 312 0 is_stmt 1
 1149 0602 D7F81438 		ldr	r3, [r7, #2068]
 1150 0606 952B     		cmp	r3, #149
 1151 0608 03DC     		bgt	.L48
 1152              		.loc 1 312 0 is_stmt 0 discriminator 1
 1153 060a D7F80038 		ldr	r3, [r7, #2048]
 1154 060e 952B     		cmp	r3, #149
 1155 0610 7BDD     		ble	.L21
 1156              	.L48:
 313:main.c        ****             // do nothing for now
 314:main.c        **** 
 315:main.c        ****           } else if (M_LINE_BLACK && L_LINE_BLACK) { // if robot slightly too far right
 1157              		.loc 1 315 0 is_stmt 1
 1158 0612 D7F80C38 		ldr	r3, [r7, #2060]
 1159 0616 952B     		cmp	r3, #149
 1160 0618 0CDC     		bgt	.L49
 1161              		.loc 1 315 0 is_stmt 0 discriminator 1
 1162 061a D7F81038 		ldr	r3, [r7, #2064]
 1163 061e 952B     		cmp	r3, #149
 1164 0620 08DC     		bgt	.L49
 316:main.c        ****             adjustLeft();
 1165              		.loc 1 316 0 is_stmt 1
 1166 0622 FFF7FEFF 		bl	adjustLeft
 317:main.c        ****             turnEnable = 1;
 1167              		.loc 1 317 0
 1168 0626 3C4B     		ldr	r3, .L63
 1169 0628 0122     		movs	r2, #1
 1170 062a 1A60     		str	r2, [r3]
 318:main.c        ****             lastAdjustDirection = 0;
 1171              		.loc 1 318 0
 1172 062c 3B4B     		ldr	r3, .L63+4
 1173 062e 0022     		movs	r2, #0
 1174 0630 1A60     		str	r2, [r3]
 1175 0632 6AE0     		b	.L21
 1176              	.L49:
 319:main.c        **** 
 320:main.c        ****           } else if (M_LINE_BLACK && R_LINE_BLACK) { //  if robot slightly too far left
 1177              		.loc 1 320 0
 1178 0634 D7F80C38 		ldr	r3, [r7, #2060]
 1179 0638 952B     		cmp	r3, #149
 1180 063a 0CDC     		bgt	.L50
 1181              		.loc 1 320 0 is_stmt 0 discriminator 1
 1182 063c D7F80438 		ldr	r3, [r7, #2052]
 1183 0640 952B     		cmp	r3, #149
 1184 0642 08DC     		bgt	.L50
 321:main.c        ****             adjustRight();
 1185              		.loc 1 321 0 is_stmt 1
 1186 0644 FFF7FEFF 		bl	adjustRight
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 28


 322:main.c        ****             lastAdjustDirection = 2;
 1187              		.loc 1 322 0
 1188 0648 344B     		ldr	r3, .L63+4
 1189 064a 0222     		movs	r2, #2
 1190 064c 1A60     		str	r2, [r3]
 323:main.c        ****             turnEnable = 1;
 1191              		.loc 1 323 0
 1192 064e 324B     		ldr	r3, .L63
 1193 0650 0122     		movs	r2, #1
 1194 0652 1A60     		str	r2, [r3]
 1195 0654 59E0     		b	.L21
 1196              	.L50:
 324:main.c        **** 
 325:main.c        ****           } else if (M_LINE_BLACK) { // if robot in the center keep moving straight
 1197              		.loc 1 325 0
 1198 0656 D7F80C38 		ldr	r3, [r7, #2060]
 1199 065a 952B     		cmp	r3, #149
 1200 065c 15DC     		bgt	.L51
 326:main.c        ****             shouldUpdate = 1;
 1201              		.loc 1 326 0
 1202 065e 304B     		ldr	r3, .L63+8
 1203 0660 0122     		movs	r2, #1
 1204 0662 1A60     		str	r2, [r3]
 327:main.c        ****             lastAdjustDirection = 1;
 1205              		.loc 1 327 0
 1206 0664 2D4B     		ldr	r3, .L63+4
 1207 0666 0122     		movs	r2, #1
 1208 0668 1A60     		str	r2, [r3]
 328:main.c        ****             turnEnable = 1;
 1209              		.loc 1 328 0
 1210 066a 2B4B     		ldr	r3, .L63
 1211 066c 0122     		movs	r2, #1
 1212 066e 1A60     		str	r2, [r3]
 329:main.c        ****             driveForward(distanceTravelled, TARGET_SPEED);
 1213              		.loc 1 329 0
 1214 0670 2C4B     		ldr	r3, .L63+12
 1215 0672 1C68     		ldr	r4, [r3]
 1216 0674 2C4B     		ldr	r3, .L63+16
 1217 0676 1B68     		ldr	r3, [r3]	@ float
 1218 0678 1846     		mov	r0, r3
 1219 067a FFF7FEFF 		bl	__aeabi_f2iz
 1220 067e 0346     		mov	r3, r0
 1221 0680 1946     		mov	r1, r3
 1222 0682 2046     		mov	r0, r4
 1223 0684 FFF7FEFF 		bl	driveForward
 1224 0688 3FE0     		b	.L21
 1225              	.L51:
 330:main.c        **** 
 331:main.c        ****           } else if (R_LINE_BLACK) { // if robot too far left
 1226              		.loc 1 331 0
 1227 068a D7F80438 		ldr	r3, [r7, #2052]
 1228 068e 952B     		cmp	r3, #149
 1229 0690 08DC     		bgt	.L52
 332:main.c        ****             adjustRight();
 1230              		.loc 1 332 0
 1231 0692 FFF7FEFF 		bl	adjustRight
 333:main.c        ****             turnEnable = 1;
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 29


 1232              		.loc 1 333 0
 1233 0696 204B     		ldr	r3, .L63
 1234 0698 0122     		movs	r2, #1
 1235 069a 1A60     		str	r2, [r3]
 334:main.c        ****             lastAdjustDirection = 2;
 1236              		.loc 1 334 0
 1237 069c 1F4B     		ldr	r3, .L63+4
 1238 069e 0222     		movs	r2, #2
 1239 06a0 1A60     		str	r2, [r3]
 1240 06a2 32E0     		b	.L21
 1241              	.L52:
 335:main.c        **** 
 336:main.c        ****           } else if (L_LINE_BLACK) { // if robot too far right
 1242              		.loc 1 336 0
 1243 06a4 D7F81038 		ldr	r3, [r7, #2064]
 1244 06a8 952B     		cmp	r3, #149
 1245 06aa 08DC     		bgt	.L53
 337:main.c        ****             adjustLeft();
 1246              		.loc 1 337 0
 1247 06ac FFF7FEFF 		bl	adjustLeft
 338:main.c        ****             turnEnable = 1;
 1248              		.loc 1 338 0
 1249 06b0 194B     		ldr	r3, .L63
 1250 06b2 0122     		movs	r2, #1
 1251 06b4 1A60     		str	r2, [r3]
 339:main.c        ****             lastAdjustDirection = 0;
 1252              		.loc 1 339 0
 1253 06b6 194B     		ldr	r3, .L63+4
 1254 06b8 0022     		movs	r2, #0
 1255 06ba 1A60     		str	r2, [r3]
 1256 06bc 25E0     		b	.L21
 1257              	.L53:
 340:main.c        **** 
 341:main.c        ****           } else if (L_INT_BLACK) {
 1258              		.loc 1 341 0
 1259 06be D7F81438 		ldr	r3, [r7, #2068]
 1260 06c2 952B     		cmp	r3, #149
 1261 06c4 06DC     		bgt	.L54
 342:main.c        ****             //hardAdjustLeft();
 343:main.c        ****             turningLeft = 1;
 1262              		.loc 1 343 0
 1263 06c6 194B     		ldr	r3, .L63+20
 1264 06c8 0122     		movs	r2, #1
 1265 06ca 1A60     		str	r2, [r3]
 344:main.c        ****             lastAdjustDirection = 0;
 1266              		.loc 1 344 0
 1267 06cc 134B     		ldr	r3, .L63+4
 1268 06ce 0022     		movs	r2, #0
 1269 06d0 1A60     		str	r2, [r3]
 1270 06d2 1AE0     		b	.L21
 1271              	.L54:
 345:main.c        **** 
 346:main.c        ****           } else if (R_INT_BLACK) {
 1272              		.loc 1 346 0
 1273 06d4 D7F80038 		ldr	r3, [r7, #2048]
 1274 06d8 952B     		cmp	r3, #149
 1275 06da 06DC     		bgt	.L55
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 30


 347:main.c        ****             //hardAdjustRight();
 348:main.c        ****             turningRight = 1;
 1276              		.loc 1 348 0
 1277 06dc 144B     		ldr	r3, .L63+24
 1278 06de 0122     		movs	r2, #1
 1279 06e0 1A60     		str	r2, [r3]
 349:main.c        ****             lastAdjustDirection = 2;
 1280              		.loc 1 349 0
 1281 06e2 0E4B     		ldr	r3, .L63+4
 1282 06e4 0222     		movs	r2, #2
 1283 06e6 1A60     		str	r2, [r3]
 1284 06e8 0FE0     		b	.L21
 1285              	.L55:
 350:main.c        **** //          } else if (highCountLeftIntersection > 150 && highCountRightIntersection > 150 && highC
 351:main.c        **** //            driveForward(distanceTravelled, TARGET_SPEED);
 352:main.c        **** //            
 353:main.c        **** //        }
 354:main.c        ****         }
 355:main.c        ****             else { // completely lost find way
 356:main.c        ****             if (lastAdjustDirection == 0) {
 1286              		.loc 1 356 0
 1287 06ea 0C4B     		ldr	r3, .L63+4
 1288 06ec 1B68     		ldr	r3, [r3]
 1289 06ee 002B     		cmp	r3, #0
 1290 06f0 02D1     		bne	.L56
 357:main.c        ****               turnLeft();
 1291              		.loc 1 357 0
 1292 06f2 FFF7FEFF 		bl	turnLeft
 1293 06f6 08E0     		b	.L21
 1294              	.L56:
 358:main.c        ****             } else if (lastAdjustDirection == 1) { // last movement was forward (middle sensor sens
 1295              		.loc 1 358 0
 1296 06f8 084B     		ldr	r3, .L63+4
 1297 06fa 1B68     		ldr	r3, [r3]
 1298 06fc 012B     		cmp	r3, #1
 1299 06fe 02D1     		bne	.L57
 359:main.c        ****               //hardAdjustLeft();
 360:main.c        ****               turnRight();
 1300              		.loc 1 360 0
 1301 0700 FFF7FEFF 		bl	turnRight
 1302 0704 01E0     		b	.L21
 1303              	.L57:
 361:main.c        ****               //reverse(3000); // random number 3000
 362:main.c        ****             } else {
 363:main.c        ****               turnRight();
 1304              		.loc 1 363 0
 1305 0706 FFF7FEFF 		bl	turnRight
 1306              	.L21:
 1307              	.LBE10:
 364:main.c        ****             }
 365:main.c        ****             }
 366:main.c        ****         }
 367:main.c        **** 
 368:main.c        ****         flag = 0;
 1308              		.loc 1 368 0
 1309 070a 0A4B     		ldr	r3, .L63+28
 1310 070c 0022     		movs	r2, #0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 31


 1311 070e 1A60     		str	r2, [r3]
 369:main.c        ****         ADC_IRQ_Enable();
 1312              		.loc 1 369 0
 1313 0710 FFF7FEFF 		bl	ADC_IRQ_Enable
 370:main.c        ****       }
 371:main.c        ****     }
 372:main.c        ****   }
 1314              		.loc 1 372 0
 1315 0714 37E5     		b	.L58
 1316              	.L64:
 1317 0716 00BF     		.align	2
 1318              	.L63:
 1319 0718 00000000 		.word	turnEnable
 1320 071c 00000000 		.word	lastAdjustDirection
 1321 0720 00000000 		.word	shouldUpdate
 1322 0724 00000000 		.word	distanceTravelled
 1323 0728 00000000 		.word	TARGET_SPEED
 1324 072c 00000000 		.word	turningLeft
 1325 0730 00000000 		.word	turningRight
 1326 0734 00000000 		.word	flag
 1327              		.cfi_endproc
 1328              	.LFE66:
 1329              		.size	main, .-main
 1330              		.section	.text.usbPutString,"ax",%progbits
 1331              		.align	2
 1332              		.global	usbPutString
 1333              		.thumb
 1334              		.thumb_func
 1335              		.type	usbPutString, %function
 1336              	usbPutString:
 1337              	.LFB67:
 373:main.c        **** }
 374:main.c        **** 
 375:main.c        **** void usbPutString(char * s) {
 1338              		.loc 1 375 0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 8
 1341              		@ frame_needed = 1, uses_anonymous_args = 0
 1342 0000 80B5     		push	{r7, lr}
 1343              		.cfi_def_cfa_offset 8
 1344              		.cfi_offset 7, -8
 1345              		.cfi_offset 14, -4
 1346 0002 82B0     		sub	sp, sp, #8
 1347              		.cfi_def_cfa_offset 16
 1348 0004 00AF     		add	r7, sp, #0
 1349              		.cfi_def_cfa_register 7
 1350 0006 7860     		str	r0, [r7, #4]
 376:main.c        ****   // !! Assumes that *s is a string with allocated space >=64 chars     
 377:main.c        ****   //  Since USB implementation retricts data packets to 64 chars, this function truncates the
 378:main.c        ****   //  length to 62 char (63rd char is a '!')
 379:main.c        **** 
 380:main.c        ****   #ifdef USE_USB
 381:main.c        ****   while (USBUART_CDCIsReady() == 0);
 1351              		.loc 1 381 0
 1352 0008 00BF     		nop
 1353              	.L66:
 1354              		.loc 1 381 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 32


 1355 000a FFF7FEFF 		bl	USBUART_CDCIsReady
 1356 000e 0346     		mov	r3, r0
 1357 0010 002B     		cmp	r3, #0
 1358 0012 FAD0     		beq	.L66
 382:main.c        ****   s[63] = '\0';
 1359              		.loc 1 382 0 is_stmt 1
 1360 0014 7B68     		ldr	r3, [r7, #4]
 1361 0016 3F33     		adds	r3, r3, #63
 1362 0018 0022     		movs	r2, #0
 1363 001a 1A70     		strb	r2, [r3]
 383:main.c        ****   s[62] = '!';
 1364              		.loc 1 383 0
 1365 001c 7B68     		ldr	r3, [r7, #4]
 1366 001e 3E33     		adds	r3, r3, #62
 1367 0020 2122     		movs	r2, #33
 1368 0022 1A70     		strb	r2, [r3]
 384:main.c        ****   USBUART_PutData((uint8 * ) s, strlen(s));
 1369              		.loc 1 384 0
 1370 0024 7868     		ldr	r0, [r7, #4]
 1371 0026 FFF7FEFF 		bl	strlen
 1372 002a 0346     		mov	r3, r0
 1373 002c 9BB2     		uxth	r3, r3
 1374 002e 1946     		mov	r1, r3
 1375 0030 7868     		ldr	r0, [r7, #4]
 1376 0032 FFF7FEFF 		bl	USBUART_PutData
 385:main.c        ****   #endif
 386:main.c        **** }
 1377              		.loc 1 386 0
 1378 0036 00BF     		nop
 1379 0038 0837     		adds	r7, r7, #8
 1380              		.cfi_def_cfa_offset 8
 1381 003a BD46     		mov	sp, r7
 1382              		.cfi_def_cfa_register 13
 1383              		@ sp needed
 1384 003c 80BD     		pop	{r7, pc}
 1385              		.cfi_endproc
 1386              	.LFE67:
 1387              		.size	usbPutString, .-usbPutString
 1388 003e 00BF     		.section	.text.usbPutChar,"ax",%progbits
 1389              		.align	2
 1390              		.global	usbPutChar
 1391              		.thumb
 1392              		.thumb_func
 1393              		.type	usbPutChar, %function
 1394              	usbPutChar:
 1395              	.LFB68:
 387:main.c        **** //* ========================================
 388:main.c        **** void usbPutChar(char c) {
 1396              		.loc 1 388 0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 8
 1399              		@ frame_needed = 1, uses_anonymous_args = 0
 1400 0000 80B5     		push	{r7, lr}
 1401              		.cfi_def_cfa_offset 8
 1402              		.cfi_offset 7, -8
 1403              		.cfi_offset 14, -4
 1404 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 33


 1405              		.cfi_def_cfa_offset 16
 1406 0004 00AF     		add	r7, sp, #0
 1407              		.cfi_def_cfa_register 7
 1408 0006 0346     		mov	r3, r0
 1409 0008 FB71     		strb	r3, [r7, #7]
 389:main.c        ****   #ifdef USE_USB
 390:main.c        ****   while (USBUART_CDCIsReady() == 0);
 1410              		.loc 1 390 0
 1411 000a 00BF     		nop
 1412              	.L68:
 1413              		.loc 1 390 0 is_stmt 0 discriminator 1
 1414 000c FFF7FEFF 		bl	USBUART_CDCIsReady
 1415 0010 0346     		mov	r3, r0
 1416 0012 002B     		cmp	r3, #0
 1417 0014 FAD0     		beq	.L68
 391:main.c        ****   USBUART_PutChar(c);
 1418              		.loc 1 391 0 is_stmt 1
 1419 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1420 0018 1846     		mov	r0, r3
 1421 001a FFF7FEFF 		bl	USBUART_PutChar
 392:main.c        ****   #endif
 393:main.c        **** }...
 1422              		.loc 1 393 0
 1423 001e 00BF     		nop
 1424 0020 0837     		adds	r7, r7, #8
 1425              		.cfi_def_cfa_offset 8
 1426 0022 BD46     		mov	sp, r7
 1427              		.cfi_def_cfa_register 13
 1428              		@ sp needed
 1429 0024 80BD     		pop	{r7, pc}
 1430              		.cfi_endproc
 1431              	.LFE68:
 1432              		.size	usbPutChar, .-usbPutChar
 1433 0026 00BF     		.text
 1434              	.Letext0:
 1435              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1436              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1437              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1438              		.file 5 "vars.h"
 1439              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1440              		.section	.debug_info,"",%progbits
 1441              	.Ldebug_info0:
 1442 0000 D6070000 		.4byte	0x7d6
 1443 0004 0400     		.2byte	0x4
 1444 0006 00000000 		.4byte	.Ldebug_abbrev0
 1445 000a 04       		.byte	0x4
 1446 000b 01       		.uleb128 0x1
 1447 000c BF000000 		.4byte	.LASF104
 1448 0010 0C       		.byte	0xc
 1449 0011 CA040000 		.4byte	.LASF105
 1450 0015 20020000 		.4byte	.LASF106
 1451 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1452 001d 00000000 		.4byte	0
 1453 0021 00000000 		.4byte	.Ldebug_line0
 1454 0025 02       		.uleb128 0x2
 1455 0026 01       		.byte	0x1
 1456 0027 06       		.byte	0x6
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 34


 1457 0028 E8010000 		.4byte	.LASF0
 1458 002c 02       		.uleb128 0x2
 1459 002d 01       		.byte	0x1
 1460 002e 08       		.byte	0x8
 1461 002f 56030000 		.4byte	.LASF1
 1462 0033 02       		.uleb128 0x2
 1463 0034 02       		.byte	0x2
 1464 0035 05       		.byte	0x5
 1465 0036 6D000000 		.4byte	.LASF2
 1466 003a 02       		.uleb128 0x2
 1467 003b 02       		.byte	0x2
 1468 003c 07       		.byte	0x7
 1469 003d 6E040000 		.4byte	.LASF3
 1470 0041 03       		.uleb128 0x3
 1471 0042 2B050000 		.4byte	.LASF12
 1472 0046 02       		.byte	0x2
 1473 0047 3F       		.byte	0x3f
 1474 0048 4C000000 		.4byte	0x4c
 1475 004c 02       		.uleb128 0x2
 1476 004d 04       		.byte	0x4
 1477 004e 05       		.byte	0x5
 1478 004f DA020000 		.4byte	.LASF4
 1479 0053 02       		.uleb128 0x2
 1480 0054 04       		.byte	0x4
 1481 0055 07       		.byte	0x7
 1482 0056 D1040000 		.4byte	.LASF5
 1483 005a 02       		.uleb128 0x2
 1484 005b 08       		.byte	0x8
 1485 005c 05       		.byte	0x5
 1486 005d 06060000 		.4byte	.LASF6
 1487 0061 02       		.uleb128 0x2
 1488 0062 08       		.byte	0x8
 1489 0063 07       		.byte	0x7
 1490 0064 9A030000 		.4byte	.LASF7
 1491 0068 04       		.uleb128 0x4
 1492 0069 04       		.byte	0x4
 1493 006a 05       		.byte	0x5
 1494 006b 696E7400 		.ascii	"int\000"
 1495 006f 02       		.uleb128 0x2
 1496 0070 04       		.byte	0x4
 1497 0071 07       		.byte	0x7
 1498 0072 B1030000 		.4byte	.LASF8
 1499 0076 02       		.uleb128 0x2
 1500 0077 08       		.byte	0x8
 1501 0078 04       		.byte	0x4
 1502 0079 44030000 		.4byte	.LASF9
 1503 007d 02       		.uleb128 0x2
 1504 007e 04       		.byte	0x4
 1505 007f 07       		.byte	0x7
 1506 0080 A7000000 		.4byte	.LASF10
 1507 0084 05       		.uleb128 0x5
 1508 0085 04       		.byte	0x4
 1509 0086 8A000000 		.4byte	0x8a
 1510 008a 02       		.uleb128 0x2
 1511 008b 01       		.byte	0x1
 1512 008c 08       		.byte	0x8
 1513 008d 37040000 		.4byte	.LASF11
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 35


 1514 0091 03       		.uleb128 0x3
 1515 0092 54040000 		.4byte	.LASF13
 1516 0096 03       		.byte	0x3
 1517 0097 2C       		.byte	0x2c
 1518 0098 41000000 		.4byte	0x41
 1519 009c 06       		.uleb128 0x6
 1520 009d 81040000 		.4byte	.LASF14
 1521 00a1 04       		.byte	0x4
 1522 00a2 E701     		.2byte	0x1e7
 1523 00a4 2C000000 		.4byte	0x2c
 1524 00a8 06       		.uleb128 0x6
 1525 00a9 77010000 		.4byte	.LASF15
 1526 00ad 04       		.byte	0x4
 1527 00ae E801     		.2byte	0x1e8
 1528 00b0 3A000000 		.4byte	0x3a
 1529 00b4 06       		.uleb128 0x6
 1530 00b5 95020000 		.4byte	.LASF16
 1531 00b9 04       		.byte	0x4
 1532 00ba EA01     		.2byte	0x1ea
 1533 00bc 25000000 		.4byte	0x25
 1534 00c0 06       		.uleb128 0x6
 1535 00c1 97010000 		.4byte	.LASF17
 1536 00c5 04       		.byte	0x4
 1537 00c6 EB01     		.2byte	0x1eb
 1538 00c8 33000000 		.4byte	0x33
 1539 00cc 02       		.uleb128 0x2
 1540 00cd 04       		.byte	0x4
 1541 00ce 04       		.byte	0x4
 1542 00cf F4010000 		.4byte	.LASF18
 1543 00d3 02       		.uleb128 0x2
 1544 00d4 08       		.byte	0x8
 1545 00d5 04       		.byte	0x4
 1546 00d6 E3040000 		.4byte	.LASF19
 1547 00da 07       		.uleb128 0x7
 1548 00db 24040000 		.4byte	.LASF107
 1549 00df 20       		.byte	0x20
 1550 00e0 05       		.byte	0x5
 1551 00e1 29       		.byte	0x29
 1552 00e2 B3010000 		.4byte	0x1b3
 1553 00e6 08       		.uleb128 0x8
 1554 00e7 01060000 		.4byte	.LASF20
 1555 00eb 05       		.byte	0x5
 1556 00ec 2A       		.byte	0x2a
 1557 00ed B4000000 		.4byte	0xb4
 1558 00f1 00       		.byte	0
 1559 00f2 08       		.uleb128 0x8
 1560 00f3 91010000 		.4byte	.LASF21
 1561 00f7 05       		.byte	0x5
 1562 00f8 2B       		.byte	0x2b
 1563 00f9 9C000000 		.4byte	0x9c
 1564 00fd 01       		.byte	0x1
 1565 00fe 08       		.uleb128 0x8
 1566 00ff 49040000 		.4byte	.LASF22
 1567 0103 05       		.byte	0x5
 1568 0104 2C       		.byte	0x2c
 1569 0105 C0000000 		.4byte	0xc0
 1570 0109 02       		.byte	0x2
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 36


 1571 010a 08       		.uleb128 0x8
 1572 010b 92050000 		.4byte	.LASF23
 1573 010f 05       		.byte	0x5
 1574 0110 2D       		.byte	0x2d
 1575 0111 C0000000 		.4byte	0xc0
 1576 0115 04       		.byte	0x4
 1577 0116 08       		.uleb128 0x8
 1578 0117 3D050000 		.4byte	.LASF24
 1579 011b 05       		.byte	0x5
 1580 011c 2E       		.byte	0x2e
 1581 011d C0000000 		.4byte	0xc0
 1582 0121 06       		.byte	0x6
 1583 0122 08       		.uleb128 0x8
 1584 0123 C8020000 		.4byte	.LASF25
 1585 0127 05       		.byte	0x5
 1586 0128 2F       		.byte	0x2f
 1587 0129 C0000000 		.4byte	0xc0
 1588 012d 08       		.byte	0x8
 1589 012e 08       		.uleb128 0x8
 1590 012f 35050000 		.4byte	.LASF26
 1591 0133 05       		.byte	0x5
 1592 0134 30       		.byte	0x30
 1593 0135 C0000000 		.4byte	0xc0
 1594 0139 0A       		.byte	0xa
 1595 013a 08       		.uleb128 0x8
 1596 013b 64030000 		.4byte	.LASF27
 1597 013f 05       		.byte	0x5
 1598 0140 31       		.byte	0x31
 1599 0141 C0000000 		.4byte	0xc0
 1600 0145 0C       		.byte	0xc
 1601 0146 08       		.uleb128 0x8
 1602 0147 BB020000 		.4byte	.LASF28
 1603 014b 05       		.byte	0x5
 1604 014c 32       		.byte	0x32
 1605 014d C0000000 		.4byte	0xc0
 1606 0151 0E       		.byte	0xe
 1607 0152 08       		.uleb128 0x8
 1608 0153 ED030000 		.4byte	.LASF29
 1609 0157 05       		.byte	0x5
 1610 0158 33       		.byte	0x33
 1611 0159 C0000000 		.4byte	0xc0
 1612 015d 10       		.byte	0x10
 1613 015e 08       		.uleb128 0x8
 1614 015f 3C030000 		.4byte	.LASF30
 1615 0163 05       		.byte	0x5
 1616 0164 34       		.byte	0x34
 1617 0165 C0000000 		.4byte	0xc0
 1618 0169 12       		.byte	0x12
 1619 016a 08       		.uleb128 0x8
 1620 016b 02020000 		.4byte	.LASF31
 1621 016f 05       		.byte	0x5
 1622 0170 35       		.byte	0x35
 1623 0171 C0000000 		.4byte	0xc0
 1624 0175 14       		.byte	0x14
 1625 0176 08       		.uleb128 0x8
 1626 0177 B0010000 		.4byte	.LASF32
 1627 017b 05       		.byte	0x5
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 37


 1628 017c 36       		.byte	0x36
 1629 017d C0000000 		.4byte	0xc0
 1630 0181 16       		.byte	0x16
 1631 0182 08       		.uleb128 0x8
 1632 0183 65000000 		.4byte	.LASF33
 1633 0187 05       		.byte	0x5
 1634 0188 37       		.byte	0x37
 1635 0189 C0000000 		.4byte	0xc0
 1636 018d 18       		.byte	0x18
 1637 018e 08       		.uleb128 0x8
 1638 018f FA010000 		.4byte	.LASF34
 1639 0193 05       		.byte	0x5
 1640 0194 38       		.byte	0x38
 1641 0195 C0000000 		.4byte	0xc0
 1642 0199 1A       		.byte	0x1a
 1643 019a 08       		.uleb128 0x8
 1644 019b DA030000 		.4byte	.LASF35
 1645 019f 05       		.byte	0x5
 1646 01a0 39       		.byte	0x39
 1647 01a1 C0000000 		.4byte	0xc0
 1648 01a5 1C       		.byte	0x1c
 1649 01a6 08       		.uleb128 0x8
 1650 01a7 61040000 		.4byte	.LASF36
 1651 01ab 05       		.byte	0x5
 1652 01ac 3A       		.byte	0x3a
 1653 01ad C0000000 		.4byte	0xc0
 1654 01b1 1E       		.byte	0x1e
 1655 01b2 00       		.byte	0
 1656 01b3 09       		.uleb128 0x9
 1657 01b4 656F6300 		.ascii	"eoc\000"
 1658 01b8 01       		.byte	0x1
 1659 01b9 54       		.byte	0x54
 1660 01ba 00000000 		.4byte	.LFB64
 1661 01be 18000000 		.4byte	.LFE64-.LFB64
 1662 01c2 01       		.uleb128 0x1
 1663 01c3 9C       		.byte	0x9c
 1664 01c4 0A       		.uleb128 0xa
 1665 01c5 1B030000 		.4byte	.LASF37
 1666 01c9 01       		.byte	0x1
 1667 01ca 58       		.byte	0x58
 1668 01cb 00000000 		.4byte	.LFB65
 1669 01cf 18000000 		.4byte	.LFE65-.LFB65
 1670 01d3 01       		.uleb128 0x1
 1671 01d4 9C       		.byte	0x9c
 1672 01d5 0B       		.uleb128 0xb
 1673 01d6 B0000000 		.4byte	.LASF51
 1674 01da 01       		.byte	0x1
 1675 01db 5C       		.byte	0x5c
 1676 01dc 68000000 		.4byte	0x68
 1677 01e0 00000000 		.4byte	.LFB66
 1678 01e4 38070000 		.4byte	.LFE66-.LFB66
 1679 01e8 01       		.uleb128 0x1
 1680 01e9 9C       		.byte	0x9c
 1681 01ea 5F030000 		.4byte	0x35f
 1682 01ee 0C       		.uleb128 0xc
 1683 01ef 16000000 		.4byte	.LASF38
 1684 01f3 01       		.byte	0x1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 38


 1685 01f4 79       		.byte	0x79
 1686 01f5 5F030000 		.4byte	0x35f
 1687 01f9 03       		.uleb128 0x3
 1688 01fa 91       		.byte	0x91
 1689 01fb D877     		.sleb128 -1064
 1690 01fd 0C       		.uleb128 0xc
 1691 01fe B2050000 		.4byte	.LASF39
 1692 0202 01       		.byte	0x1
 1693 0203 7B       		.byte	0x7b
 1694 0204 76030000 		.4byte	0x376
 1695 0208 03       		.uleb128 0x3
 1696 0209 91       		.byte	0x91
 1697 020a E473     		.sleb128 -1564
 1698 020c 0C       		.uleb128 0xc
 1699 020d 2E040000 		.4byte	.LASF40
 1700 0211 01       		.byte	0x1
 1701 0212 7C       		.byte	0x7c
 1702 0213 76030000 		.4byte	0x376
 1703 0217 03       		.uleb128 0x3
 1704 0218 91       		.byte	0x91
 1705 0219 F06F     		.sleb128 -2064
 1706 021b 0D       		.uleb128 0xd
 1707 021c 4A000000 		.4byte	.LBB2
 1708 0220 3A000000 		.4byte	.LBE2-.LBB2
 1709 0224 35020000 		.4byte	0x235
 1710 0228 0E       		.uleb128 0xe
 1711 0229 6900     		.ascii	"i\000"
 1712 022b 01       		.byte	0x1
 1713 022c 7F       		.byte	0x7f
 1714 022d 68000000 		.4byte	0x68
 1715 0231 02       		.uleb128 0x2
 1716 0232 91       		.byte	0x91
 1717 0233 6C       		.sleb128 -20
 1718 0234 00       		.byte	0
 1719 0235 0D       		.uleb128 0xd
 1720 0236 AA000000 		.4byte	.LBB3
 1721 023a 52000000 		.4byte	.LBE3-.LBB3
 1722 023e 68020000 		.4byte	0x268
 1723 0242 0E       		.uleb128 0xe
 1724 0243 6900     		.ascii	"i\000"
 1725 0245 01       		.byte	0x1
 1726 0246 8B       		.byte	0x8b
 1727 0247 68000000 		.4byte	0x68
 1728 024b 02       		.uleb128 0x2
 1729 024c 91       		.byte	0x91
 1730 024d 68       		.sleb128 -24
 1731 024e 0F       		.uleb128 0xf
 1732 024f B2000000 		.4byte	.LBB4
 1733 0253 36000000 		.4byte	.LBE4-.LBB4
 1734 0257 0C       		.uleb128 0xc
 1735 0258 D0020000 		.4byte	.LASF41
 1736 025c 01       		.byte	0x1
 1737 025d 8C       		.byte	0x8c
 1738 025e 87030000 		.4byte	0x387
 1739 0262 03       		.uleb128 0x3
 1740 0263 91       		.byte	0x91
 1741 0264 E46F     		.sleb128 -2076
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 39


 1742 0266 00       		.byte	0
 1743 0267 00       		.byte	0
 1744 0268 0D       		.uleb128 0xd
 1745 0269 02010000 		.4byte	.LBB5
 1746 026d 3E000000 		.4byte	.LBE5-.LBB5
 1747 0271 9B020000 		.4byte	0x29b
 1748 0275 0E       		.uleb128 0xe
 1749 0276 6900     		.ascii	"i\000"
 1750 0278 01       		.byte	0x1
 1751 0279 93       		.byte	0x93
 1752 027a 68000000 		.4byte	0x68
 1753 027e 02       		.uleb128 0x2
 1754 027f 91       		.byte	0x91
 1755 0280 64       		.sleb128 -28
 1756 0281 0F       		.uleb128 0xf
 1757 0282 0A010000 		.4byte	.LBB6
 1758 0286 22000000 		.4byte	.LBE6-.LBB6
 1759 028a 0C       		.uleb128 0xc
 1760 028b AA050000 		.4byte	.LASF42
 1761 028f 01       		.byte	0x1
 1762 0290 94       		.byte	0x94
 1763 0291 87030000 		.4byte	0x387
 1764 0295 03       		.uleb128 0x3
 1765 0296 91       		.byte	0x91
 1766 0297 D86F     		.sleb128 -2088
 1767 0299 00       		.byte	0
 1768 029a 00       		.byte	0
 1769 029b 0D       		.uleb128 0xd
 1770 029c 46010000 		.4byte	.LBB7
 1771 02a0 40000000 		.4byte	.LBE7-.LBB7
 1772 02a4 CE020000 		.4byte	0x2ce
 1773 02a8 0E       		.uleb128 0xe
 1774 02a9 6900     		.ascii	"i\000"
 1775 02ab 01       		.byte	0x1
 1776 02ac 9C       		.byte	0x9c
 1777 02ad 68000000 		.4byte	0x68
 1778 02b1 02       		.uleb128 0x2
 1779 02b2 91       		.byte	0x91
 1780 02b3 60       		.sleb128 -32
 1781 02b4 0F       		.uleb128 0xf
 1782 02b5 4E010000 		.4byte	.LBB8
 1783 02b9 24000000 		.4byte	.LBE8-.LBB8
 1784 02bd 0C       		.uleb128 0xc
 1785 02be BE040000 		.4byte	.LASF43
 1786 02c2 01       		.byte	0x1
 1787 02c3 9D       		.byte	0x9d
 1788 02c4 87030000 		.4byte	0x387
 1789 02c8 03       		.uleb128 0x3
 1790 02c9 91       		.byte	0x91
 1791 02ca CC6F     		.sleb128 -2100
 1792 02cc 00       		.byte	0
 1793 02cd 00       		.byte	0
 1794 02ce 0D       		.uleb128 0xd
 1795 02cf BE010000 		.4byte	.LBB9
 1796 02d3 98000000 		.4byte	.LBE9-.LBB9
 1797 02d7 EA020000 		.4byte	0x2ea
 1798 02db 0C       		.uleb128 0xc
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 40


 1799 02dc 80030000 		.4byte	.LASF44
 1800 02e0 01       		.byte	0x1
 1801 02e1 B5       		.byte	0xb5
 1802 02e2 68000000 		.4byte	0x68
 1803 02e6 02       		.uleb128 0x2
 1804 02e7 91       		.byte	0x91
 1805 02e8 40       		.sleb128 -64
 1806 02e9 00       		.byte	0
 1807 02ea 0F       		.uleb128 0xf
 1808 02eb 6A030000 		.4byte	.LBB10
 1809 02ef A0030000 		.4byte	.LBE10-.LBB10
 1810 02f3 0C       		.uleb128 0xc
 1811 02f4 E7050000 		.4byte	.LASF45
 1812 02f8 01       		.byte	0x1
 1813 02f9 D7       		.byte	0xd7
 1814 02fa 68000000 		.4byte	0x68
 1815 02fe 02       		.uleb128 0x2
 1816 02ff 91       		.byte	0x91
 1817 0300 5C       		.sleb128 -36
 1818 0301 0C       		.uleb128 0xc
 1819 0302 AC040000 		.4byte	.LASF46
 1820 0306 01       		.byte	0x1
 1821 0307 D8       		.byte	0xd8
 1822 0308 68000000 		.4byte	0x68
 1823 030c 02       		.uleb128 0x2
 1824 030d 91       		.byte	0x91
 1825 030e 58       		.sleb128 -40
 1826 030f 0C       		.uleb128 0xc
 1827 0310 FF030000 		.4byte	.LASF47
 1828 0314 01       		.byte	0x1
 1829 0315 D9       		.byte	0xd9
 1830 0316 68000000 		.4byte	0x68
 1831 031a 02       		.uleb128 0x2
 1832 031b 91       		.byte	0x91
 1833 031c 54       		.sleb128 -44
 1834 031d 0C       		.uleb128 0xc
 1835 031e BE050000 		.4byte	.LASF48
 1836 0322 01       		.byte	0x1
 1837 0323 DA       		.byte	0xda
 1838 0324 68000000 		.4byte	0x68
 1839 0328 02       		.uleb128 0x2
 1840 0329 91       		.byte	0x91
 1841 032a 50       		.sleb128 -48
 1842 032b 0C       		.uleb128 0xc
 1843 032c 6D030000 		.4byte	.LASF49
 1844 0330 01       		.byte	0x1
 1845 0331 DB       		.byte	0xdb
 1846 0332 68000000 		.4byte	0x68
 1847 0336 02       		.uleb128 0x2
 1848 0337 91       		.byte	0x91
 1849 0338 4C       		.sleb128 -52
 1850 0339 0C       		.uleb128 0xc
 1851 033a 21030000 		.4byte	.LASF50
 1852 033e 01       		.byte	0x1
 1853 033f DC       		.byte	0xdc
 1854 0340 68000000 		.4byte	0x68
 1855 0344 02       		.uleb128 0x2
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 41


 1856 0345 91       		.byte	0x91
 1857 0346 48       		.sleb128 -56
 1858 0347 0F       		.uleb128 0xf
 1859 0348 9A030000 		.4byte	.LBB11
 1860 034c C4000000 		.4byte	.LBE11-.LBB11
 1861 0350 0E       		.uleb128 0xe
 1862 0351 6900     		.ascii	"i\000"
 1863 0353 01       		.byte	0x1
 1864 0354 DD       		.byte	0xdd
 1865 0355 68000000 		.4byte	0x68
 1866 0359 02       		.uleb128 0x2
 1867 035a 91       		.byte	0x91
 1868 035b 44       		.sleb128 -60
 1869 035c 00       		.byte	0
 1870 035d 00       		.byte	0
 1871 035e 00       		.byte	0
 1872 035f 10       		.uleb128 0x10
 1873 0360 2C000000 		.4byte	0x2c
 1874 0364 76030000 		.4byte	0x376
 1875 0368 11       		.uleb128 0x11
 1876 0369 7D000000 		.4byte	0x7d
 1877 036d F301     		.2byte	0x1f3
 1878 036f 12       		.uleb128 0x12
 1879 0370 7D000000 		.4byte	0x7d
 1880 0374 01       		.byte	0x1
 1881 0375 00       		.byte	0
 1882 0376 10       		.uleb128 0x10
 1883 0377 2C000000 		.4byte	0x2c
 1884 037b 87030000 		.4byte	0x387
 1885 037f 11       		.uleb128 0x11
 1886 0380 7D000000 		.4byte	0x7d
 1887 0384 F301     		.2byte	0x1f3
 1888 0386 00       		.byte	0
 1889 0387 10       		.uleb128 0x10
 1890 0388 8A000000 		.4byte	0x8a
 1891 038c 97030000 		.4byte	0x397
 1892 0390 12       		.uleb128 0x12
 1893 0391 7D000000 		.4byte	0x7d
 1894 0395 09       		.byte	0x9
 1895 0396 00       		.byte	0
 1896 0397 13       		.uleb128 0x13
 1897 0398 88020000 		.4byte	.LASF52
 1898 039c 01       		.byte	0x1
 1899 039d 7701     		.2byte	0x177
 1900 039f 00000000 		.4byte	.LFB67
 1901 03a3 3E000000 		.4byte	.LFE67-.LFB67
 1902 03a7 01       		.uleb128 0x1
 1903 03a8 9C       		.byte	0x9c
 1904 03a9 BB030000 		.4byte	0x3bb
 1905 03ad 14       		.uleb128 0x14
 1906 03ae 7300     		.ascii	"s\000"
 1907 03b0 01       		.byte	0x1
 1908 03b1 7701     		.2byte	0x177
 1909 03b3 84000000 		.4byte	0x84
 1910 03b7 02       		.uleb128 0x2
 1911 03b8 91       		.byte	0x91
 1912 03b9 74       		.sleb128 -12
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 42


 1913 03ba 00       		.byte	0
 1914 03bb 13       		.uleb128 0x13
 1915 03bc 00000000 		.4byte	.LASF53
 1916 03c0 01       		.byte	0x1
 1917 03c1 8401     		.2byte	0x184
 1918 03c3 00000000 		.4byte	.LFB68
 1919 03c7 26000000 		.4byte	.LFE68-.LFB68
 1920 03cb 01       		.uleb128 0x1
 1921 03cc 9C       		.byte	0x9c
 1922 03cd DF030000 		.4byte	0x3df
 1923 03d1 14       		.uleb128 0x14
 1924 03d2 6300     		.ascii	"c\000"
 1925 03d4 01       		.byte	0x1
 1926 03d5 8401     		.2byte	0x184
 1927 03d7 8A000000 		.4byte	0x8a
 1928 03db 02       		.uleb128 0x2
 1929 03dc 91       		.byte	0x91
 1930 03dd 77       		.sleb128 -9
 1931 03de 00       		.byte	0
 1932 03df 15       		.uleb128 0x15
 1933 03e0 3C040000 		.4byte	.LASF54
 1934 03e4 06       		.byte	0x6
 1935 03e5 1207     		.2byte	0x712
 1936 03e7 EB030000 		.4byte	0x3eb
 1937 03eb 16       		.uleb128 0x16
 1938 03ec 91000000 		.4byte	0x91
 1939 03f0 17       		.uleb128 0x17
 1940 03f1 747300   		.ascii	"ts\000"
 1941 03f4 05       		.byte	0x5
 1942 03f5 10       		.byte	0x10
 1943 03f6 9C000000 		.4byte	0x9c
 1944 03fa 05       		.uleb128 0x5
 1945 03fb 03       		.byte	0x3
 1946 03fc 00000000 		.4byte	ts
 1947 0400 18       		.uleb128 0x18
 1948 0401 5B050000 		.4byte	.LASF55
 1949 0405 05       		.byte	0x5
 1950 0406 11       		.byte	0x11
 1951 0407 A8000000 		.4byte	0xa8
 1952 040b 05       		.uleb128 0x5
 1953 040c 03       		.byte	0x3
 1954 040d 00000000 		.4byte	ts_enc
 1955 0411 18       		.uleb128 0x18
 1956 0412 62050000 		.4byte	.LASF56
 1957 0416 05       		.byte	0x5
 1958 0417 12       		.byte	0x12
 1959 0418 A8000000 		.4byte	0xa8
 1960 041c 05       		.uleb128 0x5
 1961 041d 03       		.byte	0x3
 1962 041e 00000000 		.4byte	ts_update
 1963 0422 18       		.uleb128 0x18
 1964 0423 10050000 		.4byte	.LASF57
 1965 0427 05       		.byte	0x5
 1966 0428 13       		.byte	0x13
 1967 0429 A8000000 		.4byte	0xa8
 1968 042d 05       		.uleb128 0x5
 1969 042e 03       		.byte	0x3
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 43


 1970 042f 00000000 		.4byte	ts_speed
 1971 0433 18       		.uleb128 0x18
 1972 0434 4D010000 		.4byte	.LASF58
 1973 0438 05       		.byte	0x5
 1974 0439 14       		.byte	0x14
 1975 043a A8000000 		.4byte	0xa8
 1976 043e 05       		.uleb128 0x5
 1977 043f 03       		.byte	0x3
 1978 0440 00000000 		.4byte	ts_display
 1979 0444 18       		.uleb128 0x18
 1980 0445 1F050000 		.4byte	.LASF59
 1981 0449 05       		.byte	0x5
 1982 044a 16       		.byte	0x16
 1983 044b 9C000000 		.4byte	0x9c
 1984 044f 05       		.uleb128 0x5
 1985 0450 03       		.byte	0x3
 1986 0451 00000000 		.4byte	flag_ts_enc
 1987 0455 18       		.uleb128 0x18
 1988 0456 9A020000 		.4byte	.LASF60
 1989 045a 05       		.byte	0x5
 1990 045b 17       		.byte	0x17
 1991 045c 9C000000 		.4byte	0x9c
 1992 0460 05       		.uleb128 0x5
 1993 0461 03       		.byte	0x3
 1994 0462 00000000 		.4byte	flag_ts_update
 1995 0466 18       		.uleb128 0x18
 1996 0467 57000000 		.4byte	.LASF61
 1997 046b 05       		.byte	0x5
 1998 046c 18       		.byte	0x18
 1999 046d 9C000000 		.4byte	0x9c
 2000 0471 05       		.uleb128 0x5
 2001 0472 03       		.byte	0x3
 2002 0473 00000000 		.4byte	flag_ts_speed
 2003 0477 18       		.uleb128 0x18
 2004 0478 03030000 		.4byte	.LASF62
 2005 047c 05       		.byte	0x5
 2006 047d 19       		.byte	0x19
 2007 047e 9C000000 		.4byte	0x9c
 2008 0482 05       		.uleb128 0x5
 2009 0483 03       		.byte	0x3
 2010 0484 00000000 		.4byte	flag_ts_display
 2011 0488 18       		.uleb128 0x18
 2012 0489 13030000 		.4byte	.LASF63
 2013 048d 05       		.byte	0x5
 2014 048e 1C       		.byte	0x1c
 2015 048f 9C000000 		.4byte	0x9c
 2016 0493 05       		.uleb128 0x5
 2017 0494 03       		.byte	0x3
 2018 0495 00000000 		.4byte	flag_rx
 2019 0499 18       		.uleb128 0x18
 2020 049a 32000000 		.4byte	.LASF64
 2021 049e 05       		.byte	0x5
 2022 049f 1D       		.byte	0x1d
 2023 04a0 9C000000 		.4byte	0x9c
 2024 04a4 05       		.uleb128 0x5
 2025 04a5 03       		.byte	0x3
 2026 04a6 00000000 		.4byte	flag_packet
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 44


 2027 04aa 18       		.uleb128 0x18
 2028 04ab BE030000 		.4byte	.LASF65
 2029 04af 05       		.byte	0x5
 2030 04b0 1E       		.byte	0x1e
 2031 04b1 9C000000 		.4byte	0x9c
 2032 04b5 05       		.uleb128 0x5
 2033 04b6 03       		.byte	0x3
 2034 04b7 00000000 		.4byte	flag_KB_string
 2035 04bb 18       		.uleb128 0x18
 2036 04bc EA040000 		.4byte	.LASF66
 2037 04c0 05       		.byte	0x5
 2038 04c1 20       		.byte	0x20
 2039 04c2 9C000000 		.4byte	0x9c
 2040 04c6 05       		.uleb128 0x5
 2041 04c7 03       		.byte	0x3
 2042 04c8 00000000 		.4byte	dataready_flag
 2043 04cc 18       		.uleb128 0x18
 2044 04cd 76050000 		.4byte	.LASF67
 2045 04d1 05       		.byte	0x5
 2046 04d2 22       		.byte	0x22
 2047 04d3 9C000000 		.4byte	0x9c
 2048 04d7 05       		.uleb128 0x5
 2049 04d8 03       		.byte	0x3
 2050 04d9 00000000 		.4byte	flag_rf_transmission_active
 2051 04dd 10       		.uleb128 0x10
 2052 04de 8A000000 		.4byte	0x8a
 2053 04e2 ED040000 		.4byte	0x4ed
 2054 04e6 12       		.uleb128 0x12
 2055 04e7 7D000000 		.4byte	0x7d
 2056 04eb 3F       		.byte	0x3f
 2057 04ec 00       		.byte	0
 2058 04ed 18       		.uleb128 0x18
 2059 04ee 9E040000 		.4byte	.LASF68
 2060 04f2 05       		.byte	0x5
 2061 04f3 25       		.byte	0x25
 2062 04f4 DD040000 		.4byte	0x4dd
 2063 04f8 05       		.uleb128 0x5
 2064 04f9 03       		.byte	0x3
 2065 04fa 00000000 		.4byte	displaystring
 2066 04fe 18       		.uleb128 0x18
 2067 04ff D5010000 		.4byte	.LASF69
 2068 0503 05       		.byte	0x5
 2069 0504 26       		.byte	0x26
 2070 0505 DD040000 		.4byte	0x4dd
 2071 0509 05       		.uleb128 0x5
 2072 050a 03       		.byte	0x3
 2073 050b 00000000 		.4byte	line
 2074 050f 18       		.uleb128 0x18
 2075 0510 50030000 		.4byte	.LASF70
 2076 0514 05       		.byte	0x5
 2077 0515 26       		.byte	0x26
 2078 0516 DD040000 		.4byte	0x4dd
 2079 051a 05       		.uleb128 0x5
 2080 051b 03       		.byte	0x3
 2081 051c 00000000 		.4byte	entry
 2082 0520 10       		.uleb128 0x10
 2083 0521 9C000000 		.4byte	0x9c
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 45


 2084 0525 30050000 		.4byte	0x530
 2085 0529 12       		.uleb128 0x12
 2086 052a 7D000000 		.4byte	0x7d
 2087 052e 3F       		.byte	0x3f
 2088 052f 00       		.byte	0
 2089 0530 18       		.uleb128 0x18
 2090 0531 B5000000 		.4byte	.LASF71
 2091 0535 05       		.byte	0x5
 2092 0536 27       		.byte	0x27
 2093 0537 20050000 		.4byte	0x520
 2094 053b 05       		.uleb128 0x5
 2095 053c 03       		.byte	0x3
 2096 053d 00000000 		.4byte	usbBuffer
 2097 0541 18       		.uleb128 0x18
 2098 0542 9A000000 		.4byte	.LASF72
 2099 0546 05       		.byte	0x5
 2100 0547 3C       		.byte	0x3c
 2101 0548 DA000000 		.4byte	0xda
 2102 054c 05       		.uleb128 0x5
 2103 054d 03       		.byte	0x3
 2104 054e 00000000 		.4byte	system_state
 2105 0552 18       		.uleb128 0x18
 2106 0553 9D050000 		.4byte	.LASF73
 2107 0557 01       		.byte	0x1
 2108 0558 28       		.byte	0x28
 2109 0559 CC000000 		.4byte	0xcc
 2110 055d 05       		.uleb128 0x5
 2111 055e 03       		.byte	0x3
 2112 055f 00000000 		.4byte	TARGET_SPEED
 2113 0563 18       		.uleb128 0x18
 2114 0564 F5030000 		.4byte	.LASF74
 2115 0568 01       		.byte	0x1
 2116 0569 29       		.byte	0x29
 2117 056a 68000000 		.4byte	0x68
 2118 056e 05       		.uleb128 0x5
 2119 056f 03       		.byte	0x3
 2120 0570 00000000 		.4byte	restoring
 2121 0574 18       		.uleb128 0x18
 2122 0575 66010000 		.4byte	.LASF75
 2123 0579 01       		.byte	0x1
 2124 057a 2A       		.byte	0x2a
 2125 057b 68000000 		.4byte	0x68
 2126 057f 05       		.uleb128 0x5
 2127 0580 03       		.byte	0x3
 2128 0581 00000000 		.4byte	turningDirection
 2129 0585 18       		.uleb128 0x18
 2130 0586 03050000 		.4byte	.LASF76
 2131 058a 01       		.byte	0x1
 2132 058b 2B       		.byte	0x2b
 2133 058c 68000000 		.4byte	0x68
 2134 0590 05       		.uleb128 0x5
 2135 0591 03       		.byte	0x3
 2136 0592 00000000 		.4byte	turningCount
 2137 0596 18       		.uleb128 0x18
 2138 0597 CD030000 		.4byte	.LASF77
 2139 059b 01       		.byte	0x1
 2140 059c 2C       		.byte	0x2c
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 46


 2141 059d A7050000 		.4byte	0x5a7
 2142 05a1 05       		.uleb128 0x5
 2143 05a2 03       		.byte	0x3
 2144 05a3 00000000 		.4byte	shouldUpdate
 2145 05a7 16       		.uleb128 0x16
 2146 05a8 68000000 		.4byte	0x68
 2147 05ac 18       		.uleb128 0x18
 2148 05ad F5020000 		.4byte	.LASF78
 2149 05b1 01       		.byte	0x1
 2150 05b2 2E       		.byte	0x2e
 2151 05b3 A7050000 		.4byte	0x5a7
 2152 05b7 05       		.uleb128 0x5
 2153 05b8 03       		.byte	0x3
 2154 05b9 00000000 		.4byte	dotsTravelled
 2155 05bd 18       		.uleb128 0x18
 2156 05be 5C040000 		.4byte	.LASF79
 2157 05c2 01       		.byte	0x1
 2158 05c3 35       		.byte	0x35
 2159 05c4 A7050000 		.4byte	0x5a7
 2160 05c8 05       		.uleb128 0x5
 2161 05c9 03       		.byte	0x3
 2162 05ca 00000000 		.4byte	flag
 2163 05ce 10       		.uleb128 0x10
 2164 05cf A7050000 		.4byte	0x5a7
 2165 05d3 DF050000 		.4byte	0x5df
 2166 05d7 11       		.uleb128 0x11
 2167 05d8 7D000000 		.4byte	0x7d
 2168 05dc E703     		.2byte	0x3e7
 2169 05de 00       		.byte	0
 2170 05df 18       		.uleb128 0x18
 2171 05e0 87040000 		.4byte	.LASF80
 2172 05e4 01       		.byte	0x1
 2173 05e5 36       		.byte	0x36
 2174 05e6 F0050000 		.4byte	0x5f0
 2175 05ea 05       		.uleb128 0x5
 2176 05eb 03       		.byte	0x3
 2177 05ec 00000000 		.4byte	valuesLeftIntersection
 2178 05f0 16       		.uleb128 0x16
 2179 05f1 CE050000 		.4byte	0x5ce
 2180 05f5 18       		.uleb128 0x18
 2181 05f6 48000000 		.4byte	.LASF81
 2182 05fa 01       		.byte	0x1
 2183 05fb 37       		.byte	0x37
 2184 05fc 06060000 		.4byte	0x606
 2185 0600 05       		.uleb128 0x5
 2186 0601 03       		.byte	0x3
 2187 0602 00000000 		.4byte	valuesLeftLine
 2188 0606 16       		.uleb128 0x16
 2189 0607 CE050000 		.4byte	0x5ce
 2190 060b 18       		.uleb128 0x18
 2191 060c 13040000 		.4byte	.LASF82
 2192 0610 01       		.byte	0x1
 2193 0611 38       		.byte	0x38
 2194 0612 1C060000 		.4byte	0x61c
 2195 0616 05       		.uleb128 0x5
 2196 0617 03       		.byte	0x3
 2197 0618 00000000 		.4byte	valuesMiddleLine
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 47


 2198 061c 16       		.uleb128 0x16
 2199 061d CE050000 		.4byte	0x5ce
 2200 0621 18       		.uleb128 0x18
 2201 0622 77000000 		.4byte	.LASF83
 2202 0626 01       		.byte	0x1
 2203 0627 39       		.byte	0x39
 2204 0628 32060000 		.4byte	0x632
 2205 062c 05       		.uleb128 0x5
 2206 062d 03       		.byte	0x3
 2207 062e 00000000 		.4byte	valuesTurnComplete
 2208 0632 16       		.uleb128 0x16
 2209 0633 CE050000 		.4byte	0x5ce
 2210 0637 18       		.uleb128 0x18
 2211 0638 8A000000 		.4byte	.LASF84
 2212 063c 01       		.byte	0x1
 2213 063d 3A       		.byte	0x3a
 2214 063e 48060000 		.4byte	0x648
 2215 0642 05       		.uleb128 0x5
 2216 0643 03       		.byte	0x3
 2217 0644 00000000 		.4byte	valuesRightLine
 2218 0648 16       		.uleb128 0x16
 2219 0649 CE050000 		.4byte	0x5ce
 2220 064d 18       		.uleb128 0x18
 2221 064e BD010000 		.4byte	.LASF85
 2222 0652 01       		.byte	0x1
 2223 0653 3B       		.byte	0x3b
 2224 0654 5E060000 		.4byte	0x65e
 2225 0658 05       		.uleb128 0x5
 2226 0659 03       		.byte	0x3
 2227 065a 00000000 		.4byte	valuesRightIntersection
 2228 065e 16       		.uleb128 0x16
 2229 065f CE050000 		.4byte	0x5ce
 2230 0663 18       		.uleb128 0x18
 2231 0664 19050000 		.4byte	.LASF86
 2232 0668 01       		.byte	0x1
 2233 0669 3C       		.byte	0x3c
 2234 066a A7050000 		.4byte	0x5a7
 2235 066e 05       		.uleb128 0x5
 2236 066f 03       		.byte	0x3
 2237 0670 00000000 		.4byte	count
 2238 0674 18       		.uleb128 0x18
 2239 0675 4F050000 		.4byte	.LASF87
 2240 0679 01       		.byte	0x1
 2241 067a 3D       		.byte	0x3d
 2242 067b A7050000 		.4byte	0x5a7
 2243 067f 05       		.uleb128 0x5
 2244 0680 03       		.byte	0x3
 2245 0681 00000000 		.4byte	turningLeft
 2246 0685 18       		.uleb128 0x18
 2247 0686 8D030000 		.4byte	.LASF88
 2248 068a 01       		.byte	0x1
 2249 068b 3E       		.byte	0x3e
 2250 068c A7050000 		.4byte	0x5a7
 2251 0690 05       		.uleb128 0x5
 2252 0691 03       		.byte	0x3
 2253 0692 00000000 		.4byte	turningRight
 2254 0696 18       		.uleb128 0x18
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 48


 2255 0697 E3020000 		.4byte	.LASF89
 2256 069b 01       		.byte	0x1
 2257 069c 3F       		.byte	0x3f
 2258 069d A7050000 		.4byte	0x5a7
 2259 06a1 05       		.uleb128 0x5
 2260 06a2 03       		.byte	0x3
 2261 06a3 00000000 		.4byte	lastVeerDirection
 2262 06a7 18       		.uleb128 0x18
 2263 06a8 F9040000 		.4byte	.LASF90
 2264 06ac 01       		.byte	0x1
 2265 06ad 41       		.byte	0x41
 2266 06ae A7050000 		.4byte	0x5a7
 2267 06b2 05       		.uleb128 0x5
 2268 06b3 03       		.byte	0x3
 2269 06b4 00000000 		.4byte	motorFlag
 2270 06b8 18       		.uleb128 0x18
 2271 06b9 E2050000 		.4byte	.LASF91
 2272 06bd 01       		.byte	0x1
 2273 06be 42       		.byte	0x42
 2274 06bf A7050000 		.4byte	0x5a7
 2275 06c3 05       		.uleb128 0x5
 2276 06c4 03       		.byte	0x3
 2277 06c5 00000000 		.4byte	step
 2278 06c9 17       		.uleb128 0x17
 2279 06ca 76314C00 		.ascii	"v1L\000"
 2280 06ce 01       		.byte	0x1
 2281 06cf 43       		.byte	0x43
 2282 06d0 A7050000 		.4byte	0x5a7
 2283 06d4 05       		.uleb128 0x5
 2284 06d5 03       		.byte	0x3
 2285 06d6 00000000 		.4byte	v1L
 2286 06da 17       		.uleb128 0x17
 2287 06db 76324C00 		.ascii	"v2L\000"
 2288 06df 01       		.byte	0x1
 2289 06e0 44       		.byte	0x44
 2290 06e1 A7050000 		.4byte	0x5a7
 2291 06e5 05       		.uleb128 0x5
 2292 06e6 03       		.byte	0x3
 2293 06e7 00000000 		.4byte	v2L
 2294 06eb 17       		.uleb128 0x17
 2295 06ec 76315200 		.ascii	"v1R\000"
 2296 06f0 01       		.byte	0x1
 2297 06f1 45       		.byte	0x45
 2298 06f2 A7050000 		.4byte	0x5a7
 2299 06f6 05       		.uleb128 0x5
 2300 06f7 03       		.byte	0x3
 2301 06f8 00000000 		.4byte	v1R
 2302 06fc 17       		.uleb128 0x17
 2303 06fd 76325200 		.ascii	"v2R\000"
 2304 0701 01       		.byte	0x1
 2305 0702 46       		.byte	0x46
 2306 0703 A7050000 		.4byte	0x5a7
 2307 0707 05       		.uleb128 0x5
 2308 0708 03       		.byte	0x3
 2309 0709 00000000 		.4byte	v2R
 2310 070d 18       		.uleb128 0x18
 2311 070e DA010000 		.4byte	.LASF92
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 49


 2312 0712 01       		.byte	0x1
 2313 0713 47       		.byte	0x47
 2314 0714 A7050000 		.4byte	0x5a7
 2315 0718 05       		.uleb128 0x5
 2316 0719 03       		.byte	0x3
 2317 071a 00000000 		.4byte	numRotationsL
 2318 071e 18       		.uleb128 0x18
 2319 071f D4050000 		.4byte	.LASF93
 2320 0723 01       		.byte	0x1
 2321 0724 48       		.byte	0x48
 2322 0725 A7050000 		.4byte	0x5a7
 2323 0729 05       		.uleb128 0x5
 2324 072a 03       		.byte	0x3
 2325 072b 00000000 		.4byte	numRotationsR
 2326 072f 18       		.uleb128 0x18
 2327 0730 E3030000 		.4byte	.LASF94
 2328 0734 01       		.byte	0x1
 2329 0735 49       		.byte	0x49
 2330 0736 A7050000 		.4byte	0x5a7
 2331 073a 05       		.uleb128 0x5
 2332 073b 03       		.byte	0x3
 2333 073c 00000000 		.4byte	turnCount
 2334 0740 18       		.uleb128 0x18
 2335 0741 A9020000 		.4byte	.LASF95
 2336 0745 01       		.byte	0x1
 2337 0746 4A       		.byte	0x4a
 2338 0747 A7050000 		.4byte	0x5a7
 2339 074b 05       		.uleb128 0x5
 2340 074c 03       		.byte	0x3
 2341 074d 00000000 		.4byte	distanceTravelled
 2342 0751 18       		.uleb128 0x18
 2343 0752 7E010000 		.4byte	.LASF96
 2344 0756 01       		.byte	0x1
 2345 0757 4B       		.byte	0x4b
 2346 0758 A7050000 		.4byte	0x5a7
 2347 075c 05       		.uleb128 0x5
 2348 075d 03       		.byte	0x3
 2349 075e 00000000 		.4byte	distancePerSecondL
 2350 0762 18       		.uleb128 0x18
 2351 0763 9D010000 		.4byte	.LASF97
 2352 0767 01       		.byte	0x1
 2353 0768 4C       		.byte	0x4c
 2354 0769 A7050000 		.4byte	0x5a7
 2355 076d 05       		.uleb128 0x5
 2356 076e 03       		.byte	0x3
 2357 076f 00000000 		.4byte	distancePerSecondR
 2358 0773 18       		.uleb128 0x18
 2359 0774 0B020000 		.4byte	.LASF98
 2360 0778 01       		.byte	0x1
 2361 0779 4D       		.byte	0x4d
 2362 077a A7050000 		.4byte	0x5a7
 2363 077e 05       		.uleb128 0x5
 2364 077f 03       		.byte	0x3
 2365 0780 00000000 		.4byte	distancePerSecondAvg
 2366 0784 18       		.uleb128 0x18
 2367 0785 58010000 		.4byte	.LASF99
 2368 0789 01       		.byte	0x1
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 50


 2369 078a 4E       		.byte	0x4e
 2370 078b A7050000 		.4byte	0x5a7
 2371 078f 05       		.uleb128 0x5
 2372 0790 03       		.byte	0x3
 2373 0791 00000000 		.4byte	prevTurnState
 2374 0795 18       		.uleb128 0x18
 2375 0796 6C050000 		.4byte	.LASF100
 2376 079a 01       		.byte	0x1
 2377 079b 4F       		.byte	0x4f
 2378 079c A7050000 		.4byte	0x5a7
 2379 07a0 05       		.uleb128 0x5
 2380 07a1 03       		.byte	0x3
 2381 07a2 00000000 		.4byte	turnState
 2382 07a6 18       		.uleb128 0x18
 2383 07a7 0B000000 		.4byte	.LASF101
 2384 07ab 01       		.byte	0x1
 2385 07ac 50       		.byte	0x50
 2386 07ad A7050000 		.4byte	0x5a7
 2387 07b1 05       		.uleb128 0x5
 2388 07b2 03       		.byte	0x3
 2389 07b3 00000000 		.4byte	turnEnable
 2390 07b7 18       		.uleb128 0x18
 2391 07b8 3E000000 		.4byte	.LASF102
 2392 07bc 01       		.byte	0x1
 2393 07bd 51       		.byte	0x51
 2394 07be A7050000 		.4byte	0x5a7
 2395 07c2 05       		.uleb128 0x5
 2396 07c3 03       		.byte	0x3
 2397 07c4 00000000 		.4byte	turnTimer
 2398 07c8 18       		.uleb128 0x18
 2399 07c9 1E000000 		.4byte	.LASF103
 2400 07cd 01       		.byte	0x1
 2401 07ce 52       		.byte	0x52
 2402 07cf 68000000 		.4byte	0x68
 2403 07d3 05       		.uleb128 0x5
 2404 07d4 03       		.byte	0x3
 2405 07d5 00000000 		.4byte	lastAdjustDirection
 2406 07d9 00       		.byte	0
 2407              		.section	.debug_abbrev,"",%progbits
 2408              	.Ldebug_abbrev0:
 2409 0000 01       		.uleb128 0x1
 2410 0001 11       		.uleb128 0x11
 2411 0002 01       		.byte	0x1
 2412 0003 25       		.uleb128 0x25
 2413 0004 0E       		.uleb128 0xe
 2414 0005 13       		.uleb128 0x13
 2415 0006 0B       		.uleb128 0xb
 2416 0007 03       		.uleb128 0x3
 2417 0008 0E       		.uleb128 0xe
 2418 0009 1B       		.uleb128 0x1b
 2419 000a 0E       		.uleb128 0xe
 2420 000b 55       		.uleb128 0x55
 2421 000c 17       		.uleb128 0x17
 2422 000d 11       		.uleb128 0x11
 2423 000e 01       		.uleb128 0x1
 2424 000f 10       		.uleb128 0x10
 2425 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 51


 2426 0011 00       		.byte	0
 2427 0012 00       		.byte	0
 2428 0013 02       		.uleb128 0x2
 2429 0014 24       		.uleb128 0x24
 2430 0015 00       		.byte	0
 2431 0016 0B       		.uleb128 0xb
 2432 0017 0B       		.uleb128 0xb
 2433 0018 3E       		.uleb128 0x3e
 2434 0019 0B       		.uleb128 0xb
 2435 001a 03       		.uleb128 0x3
 2436 001b 0E       		.uleb128 0xe
 2437 001c 00       		.byte	0
 2438 001d 00       		.byte	0
 2439 001e 03       		.uleb128 0x3
 2440 001f 16       		.uleb128 0x16
 2441 0020 00       		.byte	0
 2442 0021 03       		.uleb128 0x3
 2443 0022 0E       		.uleb128 0xe
 2444 0023 3A       		.uleb128 0x3a
 2445 0024 0B       		.uleb128 0xb
 2446 0025 3B       		.uleb128 0x3b
 2447 0026 0B       		.uleb128 0xb
 2448 0027 49       		.uleb128 0x49
 2449 0028 13       		.uleb128 0x13
 2450 0029 00       		.byte	0
 2451 002a 00       		.byte	0
 2452 002b 04       		.uleb128 0x4
 2453 002c 24       		.uleb128 0x24
 2454 002d 00       		.byte	0
 2455 002e 0B       		.uleb128 0xb
 2456 002f 0B       		.uleb128 0xb
 2457 0030 3E       		.uleb128 0x3e
 2458 0031 0B       		.uleb128 0xb
 2459 0032 03       		.uleb128 0x3
 2460 0033 08       		.uleb128 0x8
 2461 0034 00       		.byte	0
 2462 0035 00       		.byte	0
 2463 0036 05       		.uleb128 0x5
 2464 0037 0F       		.uleb128 0xf
 2465 0038 00       		.byte	0
 2466 0039 0B       		.uleb128 0xb
 2467 003a 0B       		.uleb128 0xb
 2468 003b 49       		.uleb128 0x49
 2469 003c 13       		.uleb128 0x13
 2470 003d 00       		.byte	0
 2471 003e 00       		.byte	0
 2472 003f 06       		.uleb128 0x6
 2473 0040 16       		.uleb128 0x16
 2474 0041 00       		.byte	0
 2475 0042 03       		.uleb128 0x3
 2476 0043 0E       		.uleb128 0xe
 2477 0044 3A       		.uleb128 0x3a
 2478 0045 0B       		.uleb128 0xb
 2479 0046 3B       		.uleb128 0x3b
 2480 0047 05       		.uleb128 0x5
 2481 0048 49       		.uleb128 0x49
 2482 0049 13       		.uleb128 0x13
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 52


 2483 004a 00       		.byte	0
 2484 004b 00       		.byte	0
 2485 004c 07       		.uleb128 0x7
 2486 004d 13       		.uleb128 0x13
 2487 004e 01       		.byte	0x1
 2488 004f 03       		.uleb128 0x3
 2489 0050 0E       		.uleb128 0xe
 2490 0051 0B       		.uleb128 0xb
 2491 0052 0B       		.uleb128 0xb
 2492 0053 3A       		.uleb128 0x3a
 2493 0054 0B       		.uleb128 0xb
 2494 0055 3B       		.uleb128 0x3b
 2495 0056 0B       		.uleb128 0xb
 2496 0057 01       		.uleb128 0x1
 2497 0058 13       		.uleb128 0x13
 2498 0059 00       		.byte	0
 2499 005a 00       		.byte	0
 2500 005b 08       		.uleb128 0x8
 2501 005c 0D       		.uleb128 0xd
 2502 005d 00       		.byte	0
 2503 005e 03       		.uleb128 0x3
 2504 005f 0E       		.uleb128 0xe
 2505 0060 3A       		.uleb128 0x3a
 2506 0061 0B       		.uleb128 0xb
 2507 0062 3B       		.uleb128 0x3b
 2508 0063 0B       		.uleb128 0xb
 2509 0064 49       		.uleb128 0x49
 2510 0065 13       		.uleb128 0x13
 2511 0066 38       		.uleb128 0x38
 2512 0067 0B       		.uleb128 0xb
 2513 0068 00       		.byte	0
 2514 0069 00       		.byte	0
 2515 006a 09       		.uleb128 0x9
 2516 006b 2E       		.uleb128 0x2e
 2517 006c 00       		.byte	0
 2518 006d 3F       		.uleb128 0x3f
 2519 006e 19       		.uleb128 0x19
 2520 006f 03       		.uleb128 0x3
 2521 0070 08       		.uleb128 0x8
 2522 0071 3A       		.uleb128 0x3a
 2523 0072 0B       		.uleb128 0xb
 2524 0073 3B       		.uleb128 0x3b
 2525 0074 0B       		.uleb128 0xb
 2526 0075 27       		.uleb128 0x27
 2527 0076 19       		.uleb128 0x19
 2528 0077 11       		.uleb128 0x11
 2529 0078 01       		.uleb128 0x1
 2530 0079 12       		.uleb128 0x12
 2531 007a 06       		.uleb128 0x6
 2532 007b 40       		.uleb128 0x40
 2533 007c 18       		.uleb128 0x18
 2534 007d 9742     		.uleb128 0x2117
 2535 007f 19       		.uleb128 0x19
 2536 0080 00       		.byte	0
 2537 0081 00       		.byte	0
 2538 0082 0A       		.uleb128 0xa
 2539 0083 2E       		.uleb128 0x2e
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 53


 2540 0084 00       		.byte	0
 2541 0085 3F       		.uleb128 0x3f
 2542 0086 19       		.uleb128 0x19
 2543 0087 03       		.uleb128 0x3
 2544 0088 0E       		.uleb128 0xe
 2545 0089 3A       		.uleb128 0x3a
 2546 008a 0B       		.uleb128 0xb
 2547 008b 3B       		.uleb128 0x3b
 2548 008c 0B       		.uleb128 0xb
 2549 008d 27       		.uleb128 0x27
 2550 008e 19       		.uleb128 0x19
 2551 008f 11       		.uleb128 0x11
 2552 0090 01       		.uleb128 0x1
 2553 0091 12       		.uleb128 0x12
 2554 0092 06       		.uleb128 0x6
 2555 0093 40       		.uleb128 0x40
 2556 0094 18       		.uleb128 0x18
 2557 0095 9742     		.uleb128 0x2117
 2558 0097 19       		.uleb128 0x19
 2559 0098 00       		.byte	0
 2560 0099 00       		.byte	0
 2561 009a 0B       		.uleb128 0xb
 2562 009b 2E       		.uleb128 0x2e
 2563 009c 01       		.byte	0x1
 2564 009d 3F       		.uleb128 0x3f
 2565 009e 19       		.uleb128 0x19
 2566 009f 03       		.uleb128 0x3
 2567 00a0 0E       		.uleb128 0xe
 2568 00a1 3A       		.uleb128 0x3a
 2569 00a2 0B       		.uleb128 0xb
 2570 00a3 3B       		.uleb128 0x3b
 2571 00a4 0B       		.uleb128 0xb
 2572 00a5 49       		.uleb128 0x49
 2573 00a6 13       		.uleb128 0x13
 2574 00a7 11       		.uleb128 0x11
 2575 00a8 01       		.uleb128 0x1
 2576 00a9 12       		.uleb128 0x12
 2577 00aa 06       		.uleb128 0x6
 2578 00ab 40       		.uleb128 0x40
 2579 00ac 18       		.uleb128 0x18
 2580 00ad 9642     		.uleb128 0x2116
 2581 00af 19       		.uleb128 0x19
 2582 00b0 01       		.uleb128 0x1
 2583 00b1 13       		.uleb128 0x13
 2584 00b2 00       		.byte	0
 2585 00b3 00       		.byte	0
 2586 00b4 0C       		.uleb128 0xc
 2587 00b5 34       		.uleb128 0x34
 2588 00b6 00       		.byte	0
 2589 00b7 03       		.uleb128 0x3
 2590 00b8 0E       		.uleb128 0xe
 2591 00b9 3A       		.uleb128 0x3a
 2592 00ba 0B       		.uleb128 0xb
 2593 00bb 3B       		.uleb128 0x3b
 2594 00bc 0B       		.uleb128 0xb
 2595 00bd 49       		.uleb128 0x49
 2596 00be 13       		.uleb128 0x13
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 54


 2597 00bf 02       		.uleb128 0x2
 2598 00c0 18       		.uleb128 0x18
 2599 00c1 00       		.byte	0
 2600 00c2 00       		.byte	0
 2601 00c3 0D       		.uleb128 0xd
 2602 00c4 0B       		.uleb128 0xb
 2603 00c5 01       		.byte	0x1
 2604 00c6 11       		.uleb128 0x11
 2605 00c7 01       		.uleb128 0x1
 2606 00c8 12       		.uleb128 0x12
 2607 00c9 06       		.uleb128 0x6
 2608 00ca 01       		.uleb128 0x1
 2609 00cb 13       		.uleb128 0x13
 2610 00cc 00       		.byte	0
 2611 00cd 00       		.byte	0
 2612 00ce 0E       		.uleb128 0xe
 2613 00cf 34       		.uleb128 0x34
 2614 00d0 00       		.byte	0
 2615 00d1 03       		.uleb128 0x3
 2616 00d2 08       		.uleb128 0x8
 2617 00d3 3A       		.uleb128 0x3a
 2618 00d4 0B       		.uleb128 0xb
 2619 00d5 3B       		.uleb128 0x3b
 2620 00d6 0B       		.uleb128 0xb
 2621 00d7 49       		.uleb128 0x49
 2622 00d8 13       		.uleb128 0x13
 2623 00d9 02       		.uleb128 0x2
 2624 00da 18       		.uleb128 0x18
 2625 00db 00       		.byte	0
 2626 00dc 00       		.byte	0
 2627 00dd 0F       		.uleb128 0xf
 2628 00de 0B       		.uleb128 0xb
 2629 00df 01       		.byte	0x1
 2630 00e0 11       		.uleb128 0x11
 2631 00e1 01       		.uleb128 0x1
 2632 00e2 12       		.uleb128 0x12
 2633 00e3 06       		.uleb128 0x6
 2634 00e4 00       		.byte	0
 2635 00e5 00       		.byte	0
 2636 00e6 10       		.uleb128 0x10
 2637 00e7 01       		.uleb128 0x1
 2638 00e8 01       		.byte	0x1
 2639 00e9 49       		.uleb128 0x49
 2640 00ea 13       		.uleb128 0x13
 2641 00eb 01       		.uleb128 0x1
 2642 00ec 13       		.uleb128 0x13
 2643 00ed 00       		.byte	0
 2644 00ee 00       		.byte	0
 2645 00ef 11       		.uleb128 0x11
 2646 00f0 21       		.uleb128 0x21
 2647 00f1 00       		.byte	0
 2648 00f2 49       		.uleb128 0x49
 2649 00f3 13       		.uleb128 0x13
 2650 00f4 2F       		.uleb128 0x2f
 2651 00f5 05       		.uleb128 0x5
 2652 00f6 00       		.byte	0
 2653 00f7 00       		.byte	0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 55


 2654 00f8 12       		.uleb128 0x12
 2655 00f9 21       		.uleb128 0x21
 2656 00fa 00       		.byte	0
 2657 00fb 49       		.uleb128 0x49
 2658 00fc 13       		.uleb128 0x13
 2659 00fd 2F       		.uleb128 0x2f
 2660 00fe 0B       		.uleb128 0xb
 2661 00ff 00       		.byte	0
 2662 0100 00       		.byte	0
 2663 0101 13       		.uleb128 0x13
 2664 0102 2E       		.uleb128 0x2e
 2665 0103 01       		.byte	0x1
 2666 0104 3F       		.uleb128 0x3f
 2667 0105 19       		.uleb128 0x19
 2668 0106 03       		.uleb128 0x3
 2669 0107 0E       		.uleb128 0xe
 2670 0108 3A       		.uleb128 0x3a
 2671 0109 0B       		.uleb128 0xb
 2672 010a 3B       		.uleb128 0x3b
 2673 010b 05       		.uleb128 0x5
 2674 010c 27       		.uleb128 0x27
 2675 010d 19       		.uleb128 0x19
 2676 010e 11       		.uleb128 0x11
 2677 010f 01       		.uleb128 0x1
 2678 0110 12       		.uleb128 0x12
 2679 0111 06       		.uleb128 0x6
 2680 0112 40       		.uleb128 0x40
 2681 0113 18       		.uleb128 0x18
 2682 0114 9642     		.uleb128 0x2116
 2683 0116 19       		.uleb128 0x19
 2684 0117 01       		.uleb128 0x1
 2685 0118 13       		.uleb128 0x13
 2686 0119 00       		.byte	0
 2687 011a 00       		.byte	0
 2688 011b 14       		.uleb128 0x14
 2689 011c 05       		.uleb128 0x5
 2690 011d 00       		.byte	0
 2691 011e 03       		.uleb128 0x3
 2692 011f 08       		.uleb128 0x8
 2693 0120 3A       		.uleb128 0x3a
 2694 0121 0B       		.uleb128 0xb
 2695 0122 3B       		.uleb128 0x3b
 2696 0123 05       		.uleb128 0x5
 2697 0124 49       		.uleb128 0x49
 2698 0125 13       		.uleb128 0x13
 2699 0126 02       		.uleb128 0x2
 2700 0127 18       		.uleb128 0x18
 2701 0128 00       		.byte	0
 2702 0129 00       		.byte	0
 2703 012a 15       		.uleb128 0x15
 2704 012b 34       		.uleb128 0x34
 2705 012c 00       		.byte	0
 2706 012d 03       		.uleb128 0x3
 2707 012e 0E       		.uleb128 0xe
 2708 012f 3A       		.uleb128 0x3a
 2709 0130 0B       		.uleb128 0xb
 2710 0131 3B       		.uleb128 0x3b
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 56


 2711 0132 05       		.uleb128 0x5
 2712 0133 49       		.uleb128 0x49
 2713 0134 13       		.uleb128 0x13
 2714 0135 3F       		.uleb128 0x3f
 2715 0136 19       		.uleb128 0x19
 2716 0137 3C       		.uleb128 0x3c
 2717 0138 19       		.uleb128 0x19
 2718 0139 00       		.byte	0
 2719 013a 00       		.byte	0
 2720 013b 16       		.uleb128 0x16
 2721 013c 35       		.uleb128 0x35
 2722 013d 00       		.byte	0
 2723 013e 49       		.uleb128 0x49
 2724 013f 13       		.uleb128 0x13
 2725 0140 00       		.byte	0
 2726 0141 00       		.byte	0
 2727 0142 17       		.uleb128 0x17
 2728 0143 34       		.uleb128 0x34
 2729 0144 00       		.byte	0
 2730 0145 03       		.uleb128 0x3
 2731 0146 08       		.uleb128 0x8
 2732 0147 3A       		.uleb128 0x3a
 2733 0148 0B       		.uleb128 0xb
 2734 0149 3B       		.uleb128 0x3b
 2735 014a 0B       		.uleb128 0xb
 2736 014b 49       		.uleb128 0x49
 2737 014c 13       		.uleb128 0x13
 2738 014d 3F       		.uleb128 0x3f
 2739 014e 19       		.uleb128 0x19
 2740 014f 02       		.uleb128 0x2
 2741 0150 18       		.uleb128 0x18
 2742 0151 00       		.byte	0
 2743 0152 00       		.byte	0
 2744 0153 18       		.uleb128 0x18
 2745 0154 34       		.uleb128 0x34
 2746 0155 00       		.byte	0
 2747 0156 03       		.uleb128 0x3
 2748 0157 0E       		.uleb128 0xe
 2749 0158 3A       		.uleb128 0x3a
 2750 0159 0B       		.uleb128 0xb
 2751 015a 3B       		.uleb128 0x3b
 2752 015b 0B       		.uleb128 0xb
 2753 015c 49       		.uleb128 0x49
 2754 015d 13       		.uleb128 0x13
 2755 015e 3F       		.uleb128 0x3f
 2756 015f 19       		.uleb128 0x19
 2757 0160 02       		.uleb128 0x2
 2758 0161 18       		.uleb128 0x18
 2759 0162 00       		.byte	0
 2760 0163 00       		.byte	0
 2761 0164 00       		.byte	0
 2762              		.section	.debug_aranges,"",%progbits
 2763 0000 3C000000 		.4byte	0x3c
 2764 0004 0200     		.2byte	0x2
 2765 0006 00000000 		.4byte	.Ldebug_info0
 2766 000a 04       		.byte	0x4
 2767 000b 00       		.byte	0
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 57


 2768 000c 0000     		.2byte	0
 2769 000e 0000     		.2byte	0
 2770 0010 00000000 		.4byte	.LFB64
 2771 0014 18000000 		.4byte	.LFE64-.LFB64
 2772 0018 00000000 		.4byte	.LFB65
 2773 001c 18000000 		.4byte	.LFE65-.LFB65
 2774 0020 00000000 		.4byte	.LFB66
 2775 0024 38070000 		.4byte	.LFE66-.LFB66
 2776 0028 00000000 		.4byte	.LFB67
 2777 002c 3E000000 		.4byte	.LFE67-.LFB67
 2778 0030 00000000 		.4byte	.LFB68
 2779 0034 26000000 		.4byte	.LFE68-.LFB68
 2780 0038 00000000 		.4byte	0
 2781 003c 00000000 		.4byte	0
 2782              		.section	.debug_ranges,"",%progbits
 2783              	.Ldebug_ranges0:
 2784 0000 00000000 		.4byte	.LFB64
 2785 0004 18000000 		.4byte	.LFE64
 2786 0008 00000000 		.4byte	.LFB65
 2787 000c 18000000 		.4byte	.LFE65
 2788 0010 00000000 		.4byte	.LFB66
 2789 0014 38070000 		.4byte	.LFE66
 2790 0018 00000000 		.4byte	.LFB67
 2791 001c 3E000000 		.4byte	.LFE67
 2792 0020 00000000 		.4byte	.LFB68
 2793 0024 26000000 		.4byte	.LFE68
 2794 0028 00000000 		.4byte	0
 2795 002c 00000000 		.4byte	0
 2796              		.section	.debug_line,"",%progbits
 2797              	.Ldebug_line0:
 2798 0000 28030000 		.section	.debug_str,"MS",%progbits,1
 2798      02005601 
 2798      00000201 
 2798      FB0E0D00 
 2798      01010101 
 2799              	.LASF53:
 2800 0000 75736250 		.ascii	"usbPutChar\000"
 2800      75744368 
 2800      617200
 2801              	.LASF101:
 2802 000b 7475726E 		.ascii	"turnEnable\000"
 2802      456E6162 
 2802      6C6500
 2803              	.LASF38:
 2804 0016 73717561 		.ascii	"squares\000"
 2804      72657300 
 2805              	.LASF103:
 2806 001e 6C617374 		.ascii	"lastAdjustDirection\000"
 2806      41646A75 
 2806      73744469 
 2806      72656374 
 2806      696F6E00 
 2807              	.LASF64:
 2808 0032 666C6167 		.ascii	"flag_packet\000"
 2808      5F706163 
 2808      6B657400 
 2809              	.LASF102:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 58


 2810 003e 7475726E 		.ascii	"turnTimer\000"
 2810      54696D65 
 2810      7200
 2811              	.LASF81:
 2812 0048 76616C75 		.ascii	"valuesLeftLine\000"
 2812      65734C65 
 2812      66744C69 
 2812      6E6500
 2813              	.LASF61:
 2814 0057 666C6167 		.ascii	"flag_ts_speed\000"
 2814      5F74735F 
 2814      73706565 
 2814      6400
 2815              	.LASF33:
 2816 0065 67325F78 		.ascii	"g2_xpos\000"
 2816      706F7300 
 2817              	.LASF2:
 2818 006d 73686F72 		.ascii	"short int\000"
 2818      7420696E 
 2818      7400
 2819              	.LASF83:
 2820 0077 76616C75 		.ascii	"valuesTurnComplete\000"
 2820      65735475 
 2820      726E436F 
 2820      6D706C65 
 2820      746500
 2821              	.LASF84:
 2822 008a 76616C75 		.ascii	"valuesRightLine\000"
 2822      65735269 
 2822      6768744C 
 2822      696E6500 
 2823              	.LASF72:
 2824 009a 73797374 		.ascii	"system_state\000"
 2824      656D5F73 
 2824      74617465 
 2824      00
 2825              	.LASF10:
 2826 00a7 73697A65 		.ascii	"sizetype\000"
 2826      74797065 
 2826      00
 2827              	.LASF51:
 2828 00b0 6D61696E 		.ascii	"main\000"
 2828      00
 2829              	.LASF71:
 2830 00b5 75736242 		.ascii	"usbBuffer\000"
 2830      75666665 
 2830      7200
 2831              	.LASF104:
 2832 00bf 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2832      43313120 
 2832      352E342E 
 2832      31203230 
 2832      31363036 
 2833 00f2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2833      20726576 
 2833      6973696F 
 2833      6E203233 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 59


 2833      37373135 
 2834 0125 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2834      66756E63 
 2834      74696F6E 
 2834      2D736563 
 2834      74696F6E 
 2835              	.LASF58:
 2836 014d 74735F64 		.ascii	"ts_display\000"
 2836      6973706C 
 2836      617900
 2837              	.LASF99:
 2838 0158 70726576 		.ascii	"prevTurnState\000"
 2838      5475726E 
 2838      53746174 
 2838      6500
 2839              	.LASF75:
 2840 0166 7475726E 		.ascii	"turningDirection\000"
 2840      696E6744 
 2840      69726563 
 2840      74696F6E 
 2840      00
 2841              	.LASF15:
 2842 0177 75696E74 		.ascii	"uint16\000"
 2842      313600
 2843              	.LASF96:
 2844 017e 64697374 		.ascii	"distancePerSecondL\000"
 2844      616E6365 
 2844      50657253 
 2844      65636F6E 
 2844      644C00
 2845              	.LASF21:
 2846 0191 696E6465 		.ascii	"index\000"
 2846      7800
 2847              	.LASF17:
 2848 0197 696E7431 		.ascii	"int16\000"
 2848      3600
 2849              	.LASF97:
 2850 019d 64697374 		.ascii	"distancePerSecondR\000"
 2850      616E6365 
 2850      50657253 
 2850      65636F6E 
 2850      645200
 2851              	.LASF32:
 2852 01b0 67315F64 		.ascii	"g1_direction\000"
 2852      69726563 
 2852      74696F6E 
 2852      00
 2853              	.LASF85:
 2854 01bd 76616C75 		.ascii	"valuesRightIntersection\000"
 2854      65735269 
 2854      67687449 
 2854      6E746572 
 2854      73656374 
 2855              	.LASF69:
 2856 01d5 6C696E65 		.ascii	"line\000"
 2856      00
 2857              	.LASF92:
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 60


 2858 01da 6E756D52 		.ascii	"numRotationsL\000"
 2858      6F746174 
 2858      696F6E73 
 2858      4C00
 2859              	.LASF0:
 2860 01e8 7369676E 		.ascii	"signed char\000"
 2860      65642063 
 2860      68617200 
 2861              	.LASF18:
 2862 01f4 666C6F61 		.ascii	"float\000"
 2862      7400
 2863              	.LASF34:
 2864 01fa 67325F79 		.ascii	"g2_ypos\000"
 2864      706F7300 
 2865              	.LASF31:
 2866 0202 67315F73 		.ascii	"g1_speed\000"
 2866      70656564 
 2866      00
 2867              	.LASF98:
 2868 020b 64697374 		.ascii	"distancePerSecondAvg\000"
 2868      616E6365 
 2868      50657253 
 2868      65636F6E 
 2868      64417667 
 2869              	.LASF106:
 2870 0220 483A5C44 		.ascii	"H:\\Documents\\301\\Post-Benchmark\\team14\\301_lab"
 2870      6F63756D 
 2870      656E7473 
 2870      5C333031 
 2870      5C506F73 
 2871 024e 5F746173 		.ascii	"_tasks\\psoc student pack\\psoc_code_base\\CS301_Cl"
 2871      6B735C70 
 2871      736F6320 
 2871      73747564 
 2871      656E7420 
 2872 027e 6173732E 		.ascii	"ass.cydsn\000"
 2872      63796473 
 2872      6E00
 2873              	.LASF52:
 2874 0288 75736250 		.ascii	"usbPutString\000"
 2874      75745374 
 2874      72696E67 
 2874      00
 2875              	.LASF16:
 2876 0295 696E7438 		.ascii	"int8\000"
 2876      00
 2877              	.LASF60:
 2878 029a 666C6167 		.ascii	"flag_ts_update\000"
 2878      5F74735F 
 2878      75706461 
 2878      746500
 2879              	.LASF95:
 2880 02a9 64697374 		.ascii	"distanceTravelled\000"
 2880      616E6365 
 2880      54726176 
 2880      656C6C65 
 2880      6400
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 61


 2881              	.LASF28:
 2882 02bb 67305F64 		.ascii	"g0_direction\000"
 2882      69726563 
 2882      74696F6E 
 2882      00
 2883              	.LASF25:
 2884 02c8 67305F78 		.ascii	"g0_xpos\000"
 2884      706F7300 
 2885              	.LASF41:
 2886 02d0 73717561 		.ascii	"squareStr\000"
 2886      72655374 
 2886      7200
 2887              	.LASF4:
 2888 02da 6C6F6E67 		.ascii	"long int\000"
 2888      20696E74 
 2888      00
 2889              	.LASF89:
 2890 02e3 6C617374 		.ascii	"lastVeerDirection\000"
 2890      56656572 
 2890      44697265 
 2890      6374696F 
 2890      6E00
 2891              	.LASF78:
 2892 02f5 646F7473 		.ascii	"dotsTravelled\000"
 2892      54726176 
 2892      656C6C65 
 2892      6400
 2893              	.LASF62:
 2894 0303 666C6167 		.ascii	"flag_ts_display\000"
 2894      5F74735F 
 2894      64697370 
 2894      6C617900 
 2895              	.LASF63:
 2896 0313 666C6167 		.ascii	"flag_rx\000"
 2896      5F727800 
 2897              	.LASF37:
 2898 031b 4D794953 		.ascii	"MyISR\000"
 2898      5200
 2899              	.LASF50:
 2900 0321 68696768 		.ascii	"highCountRightIntersection\000"
 2900      436F756E 
 2900      74526967 
 2900      6874496E 
 2900      74657273 
 2901              	.LASF30:
 2902 033c 67315F79 		.ascii	"g1_ypos\000"
 2902      706F7300 
 2903              	.LASF9:
 2904 0344 6C6F6E67 		.ascii	"long double\000"
 2904      20646F75 
 2904      626C6500 
 2905              	.LASF70:
 2906 0350 656E7472 		.ascii	"entry\000"
 2906      7900
 2907              	.LASF1:
 2908 0356 756E7369 		.ascii	"unsigned char\000"
 2908      676E6564 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 62


 2908      20636861 
 2908      7200
 2909              	.LASF27:
 2910 0364 67305F73 		.ascii	"g0_speed\000"
 2910      70656564 
 2910      00
 2911              	.LASF49:
 2912 036d 68696768 		.ascii	"highCountRightLine\000"
 2912      436F756E 
 2912      74526967 
 2912      68744C69 
 2912      6E6500
 2913              	.LASF44:
 2914 0380 6368616E 		.ascii	"changeInDots\000"
 2914      6765496E 
 2914      446F7473 
 2914      00
 2915              	.LASF88:
 2916 038d 7475726E 		.ascii	"turningRight\000"
 2916      696E6752 
 2916      69676874 
 2916      00
 2917              	.LASF7:
 2918 039a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2918      206C6F6E 
 2918      6720756E 
 2918      7369676E 
 2918      65642069 
 2919              	.LASF8:
 2920 03b1 756E7369 		.ascii	"unsigned int\000"
 2920      676E6564 
 2920      20696E74 
 2920      00
 2921              	.LASF65:
 2922 03be 666C6167 		.ascii	"flag_KB_string\000"
 2922      5F4B425F 
 2922      73747269 
 2922      6E6700
 2923              	.LASF77:
 2924 03cd 73686F75 		.ascii	"shouldUpdate\000"
 2924      6C645570 
 2924      64617465 
 2924      00
 2925              	.LASF35:
 2926 03da 67325F73 		.ascii	"g2_speed\000"
 2926      70656564 
 2926      00
 2927              	.LASF94:
 2928 03e3 7475726E 		.ascii	"turnCount\000"
 2928      436F756E 
 2928      7400
 2929              	.LASF29:
 2930 03ed 67315F78 		.ascii	"g1_xpos\000"
 2930      706F7300 
 2931              	.LASF74:
 2932 03f5 72657374 		.ascii	"restoring\000"
 2932      6F72696E 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 63


 2932      6700
 2933              	.LASF47:
 2934 03ff 68696768 		.ascii	"highCountMiddleLine\000"
 2934      436F756E 
 2934      744D6964 
 2934      646C654C 
 2934      696E6500 
 2935              	.LASF82:
 2936 0413 76616C75 		.ascii	"valuesMiddleLine\000"
 2936      65734D69 
 2936      64646C65 
 2936      4C696E65 
 2936      00
 2937              	.LASF107:
 2938 0424 64617461 		.ascii	"data_main\000"
 2938      5F6D6169 
 2938      6E00
 2939              	.LASF40:
 2940 042e 64697374 		.ascii	"distance\000"
 2940      616E6365 
 2940      00
 2941              	.LASF11:
 2942 0437 63686172 		.ascii	"char\000"
 2942      00
 2943              	.LASF54:
 2944 043c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2944      52784275 
 2944      66666572 
 2944      00
 2945              	.LASF22:
 2946 0449 726F626F 		.ascii	"robot_xpos\000"
 2946      745F7870 
 2946      6F7300
 2947              	.LASF13:
 2948 0454 696E7433 		.ascii	"int32_t\000"
 2948      325F7400 
 2949              	.LASF79:
 2950 045c 666C6167 		.ascii	"flag\000"
 2950      00
 2951              	.LASF36:
 2952 0461 67325F64 		.ascii	"g2_direction\000"
 2952      69726563 
 2952      74696F6E 
 2952      00
 2953              	.LASF3:
 2954 046e 73686F72 		.ascii	"short unsigned int\000"
 2954      7420756E 
 2954      7369676E 
 2954      65642069 
 2954      6E7400
 2955              	.LASF14:
 2956 0481 75696E74 		.ascii	"uint8\000"
 2956      3800
 2957              	.LASF80:
 2958 0487 76616C75 		.ascii	"valuesLeftIntersection\000"
 2958      65734C65 
 2958      6674496E 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 64


 2958      74657273 
 2958      65637469 
 2959              	.LASF68:
 2960 049e 64697370 		.ascii	"displaystring\000"
 2960      6C617973 
 2960      7472696E 
 2960      6700
 2961              	.LASF46:
 2962 04ac 68696768 		.ascii	"highCountLeftLine\000"
 2962      436F756E 
 2962      744C6566 
 2962      744C696E 
 2962      6500
 2963              	.LASF43:
 2964 04be 64697374 		.ascii	"distanceStr\000"
 2964      616E6365 
 2964      53747200 
 2965              	.LASF105:
 2966 04ca 6D61696E 		.ascii	"main.c\000"
 2966      2E6300
 2967              	.LASF5:
 2968 04d1 6C6F6E67 		.ascii	"long unsigned int\000"
 2968      20756E73 
 2968      69676E65 
 2968      6420696E 
 2968      7400
 2969              	.LASF19:
 2970 04e3 646F7562 		.ascii	"double\000"
 2970      6C6500
 2971              	.LASF66:
 2972 04ea 64617461 		.ascii	"dataready_flag\000"
 2972      72656164 
 2972      795F666C 
 2972      616700
 2973              	.LASF90:
 2974 04f9 6D6F746F 		.ascii	"motorFlag\000"
 2974      72466C61 
 2974      6700
 2975              	.LASF76:
 2976 0503 7475726E 		.ascii	"turningCount\000"
 2976      696E6743 
 2976      6F756E74 
 2976      00
 2977              	.LASF57:
 2978 0510 74735F73 		.ascii	"ts_speed\000"
 2978      70656564 
 2978      00
 2979              	.LASF86:
 2980 0519 636F756E 		.ascii	"count\000"
 2980      7400
 2981              	.LASF59:
 2982 051f 666C6167 		.ascii	"flag_ts_enc\000"
 2982      5F74735F 
 2982      656E6300 
 2983              	.LASF12:
 2984 052b 5F5F696E 		.ascii	"__int32_t\000"
 2984      7433325F 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 65


 2984      7400
 2985              	.LASF26:
 2986 0535 67305F79 		.ascii	"g0_ypos\000"
 2986      706F7300 
 2987              	.LASF24:
 2988 053d 726F626F 		.ascii	"robot_orientation\000"
 2988      745F6F72 
 2988      69656E74 
 2988      6174696F 
 2988      6E00
 2989              	.LASF87:
 2990 054f 7475726E 		.ascii	"turningLeft\000"
 2990      696E674C 
 2990      65667400 
 2991              	.LASF55:
 2992 055b 74735F65 		.ascii	"ts_enc\000"
 2992      6E6300
 2993              	.LASF56:
 2994 0562 74735F75 		.ascii	"ts_update\000"
 2994      70646174 
 2994      6500
 2995              	.LASF100:
 2996 056c 7475726E 		.ascii	"turnState\000"
 2996      53746174 
 2996      6500
 2997              	.LASF67:
 2998 0576 666C6167 		.ascii	"flag_rf_transmission_active\000"
 2998      5F72665F 
 2998      7472616E 
 2998      736D6973 
 2998      73696F6E 
 2999              	.LASF23:
 3000 0592 726F626F 		.ascii	"robot_ypos\000"
 3000      745F7970 
 3000      6F7300
 3001              	.LASF73:
 3002 059d 54415247 		.ascii	"TARGET_SPEED\000"
 3002      45545F53 
 3002      50454544 
 3002      00
 3003              	.LASF42:
 3004 05aa 696E7374 		.ascii	"instStr\000"
 3004      53747200 
 3005              	.LASF39:
 3006 05b2 696E7374 		.ascii	"instruction\000"
 3006      72756374 
 3006      696F6E00 
 3007              	.LASF48:
 3008 05be 68696768 		.ascii	"highCountTurnComplete\000"
 3008      436F756E 
 3008      74547572 
 3008      6E436F6D 
 3008      706C6574 
 3009              	.LASF93:
 3010 05d4 6E756D52 		.ascii	"numRotationsR\000"
 3010      6F746174 
 3010      696F6E73 
ARM GAS  C:\Users\lpar105\AppData\Local\Temp\ccQZibw2.s 			page 66


 3010      5200
 3011              	.LASF91:
 3012 05e2 73746570 		.ascii	"step\000"
 3012      00
 3013              	.LASF45:
 3014 05e7 68696768 		.ascii	"highCountLeftIntersection\000"
 3014      436F756E 
 3014      744C6566 
 3014      74496E74 
 3014      65727365 
 3015              	.LASF20:
 3016 0601 72737369 		.ascii	"rssi\000"
 3016      00
 3017              	.LASF6:
 3018 0606 6C6F6E67 		.ascii	"long long int\000"
 3018      206C6F6E 
 3018      6720696E 
 3018      7400
 3019              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
