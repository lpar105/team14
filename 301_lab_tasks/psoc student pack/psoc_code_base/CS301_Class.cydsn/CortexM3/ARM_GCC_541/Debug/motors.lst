<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 1
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 1
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"motors.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	currentFLeftSpeed
  20              		.data
  21              		.align	2
  22              		.type	currentFLeftSpeed, %object
  23              		.size	currentFLeftSpeed, 4
  24              	currentFLeftSpeed:
  25 0000 A5000000 		.word	165
  26              		.global	currentFRightSpeed
  27              		.align	2
  28              		.type	currentFRightSpeed, %object
  29              		.size	currentFRightSpeed, 4
  30              	currentFRightSpeed:
  31 0004 A5000000 		.word	165
  32              		.section	.text.initMotors,"ax",%progbits
  33              		.align	2
  34              		.global	initMotors
  35              		.thumb
  36              		.thumb_func
  37              		.type	initMotors, %function
  38              	initMotors:
  39              	.LFB63:
  40              		.file 1 "motors.c"
   1:motors.c      **** /* ========================================
   2:motors.c      ****  *
   3:motors.c      ****  * Copyright YOUR COMPANY, THE YEAR
   4:motors.c      ****  * All Rights Reserved
   5:motors.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:motors.c      ****  *
   7:motors.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:motors.c      ****  * WHICH IS THE PROPERTY OF your company.
   9:motors.c      ****  *
  10:motors.c      ****  * ========================================
  11:motors.c      **** */
  12:motors.c      **** 
  13:motors.c      **** #include <project.h>
  14:motors.c      **** #include "motors.h"
  15:motors.c      **** 
  16:motors.c      **** volatile int currentFLeftSpeed = 165;
  17:motors.c      **** volatile int currentFRightSpeed = 165;// fresh 163, normal 165, old 167
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 2
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 2
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


  18:motors.c      **** 
  19:motors.c      **** 
  20:motors.c      **** void initMotors() {
  41              		.loc 1 20 0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 0
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 00AF     		add	r7, sp, #0
  50              		.cfi_def_cfa_register 7
  21:motors.c      ****     PWM_1_WritePeriod(255);
  51              		.loc 1 21 0
  52 0004 FF20     		movs	r0, #255
  53 0006 FFF7FEFF 		bl	PWM_1_WritePeriod
  22:motors.c      ****     PWM_2_WritePeriod(255);
  54              		.loc 1 22 0
  55 000a FF20     		movs	r0, #255
  56 000c FFF7FEFF 		bl	PWM_2_WritePeriod
  23:motors.c      ****     PWM_1_Start();
  57              		.loc 1 23 0
  58 0010 FFF7FEFF 		bl	PWM_1_Start
  24:motors.c      ****     PWM_2_Start();
  59              		.loc 1 24 0
  60 0014 FFF7FEFF 		bl	PWM_2_Start
  25:motors.c      **** }
  61              		.loc 1 25 0
  62 0018 00BF     		nop
  63 001a 80BD     		pop	{r7, pc}
  64              		.cfi_endproc
  65              	.LFE63:
  66              		.size	initMotors, .-initMotors
  67              		.section	.text.getLeftPWM,"ax",%progbits
  68              		.align	2
  69              		.global	getLeftPWM
  70              		.thumb
  71              		.thumb_func
  72              		.type	getLeftPWM, %function
  73              	getLeftPWM:
  74              	.LFB64:
  26:motors.c      **** 
  27:motors.c      **** int getLeftPWM(void) {
  75              		.loc 1 27 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 1, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80 0000 80B4     		push	{r7}
  81              		.cfi_def_cfa_offset 4
  82              		.cfi_offset 7, -4
  83 0002 00AF     		add	r7, sp, #0
  84              		.cfi_def_cfa_register 7
  28:motors.c      ****     return currentFLeftSpeed;
  85              		.loc 1 28 0
  86 0004 024B     		ldr	r3, .L4
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 3
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 3
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


  87 0006 1B68     		ldr	r3, [r3]
  29:motors.c      **** }
  88              		.loc 1 29 0
  89 0008 1846     		mov	r0, r3
  90 000a BD46     		mov	sp, r7
  91              		.cfi_def_cfa_register 13
  92              		@ sp needed
  93 000c 80BC     		pop	{r7}
  94              		.cfi_restore 7
  95              		.cfi_def_cfa_offset 0
  96 000e 7047     		bx	lr
  97              	.L5:
  98              		.align	2
  99              	.L4:
 100 0010 00000000 		.word	currentFLeftSpeed
 101              		.cfi_endproc
 102              	.LFE64:
 103              		.size	getLeftPWM, .-getLeftPWM
 104              		.section	.text.getRightPWM,"ax",%progbits
 105              		.align	2
 106              		.global	getRightPWM
 107              		.thumb
 108              		.thumb_func
 109              		.type	getRightPWM, %function
 110              	getRightPWM:
 111              	.LFB65:
  30:motors.c      **** 
  31:motors.c      **** int getRightPWM(void) {
 112              		.loc 1 31 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 1, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117 0000 80B4     		push	{r7}
 118              		.cfi_def_cfa_offset 4
 119              		.cfi_offset 7, -4
 120 0002 00AF     		add	r7, sp, #0
 121              		.cfi_def_cfa_register 7
  32:motors.c      ****     return currentFRightSpeed;
 122              		.loc 1 32 0
 123 0004 024B     		ldr	r3, .L8
 124 0006 1B68     		ldr	r3, [r3]
  33:motors.c      **** }
 125              		.loc 1 33 0
 126 0008 1846     		mov	r0, r3
 127 000a BD46     		mov	sp, r7
 128              		.cfi_def_cfa_register 13
 129              		@ sp needed
 130 000c 80BC     		pop	{r7}
 131              		.cfi_restore 7
 132              		.cfi_def_cfa_offset 0
 133 000e 7047     		bx	lr
 134              	.L9:
 135              		.align	2
 136              	.L8:
 137 0010 00000000 		.word	currentFRightSpeed
 138              		.cfi_endproc
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 4
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 4
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 139              	.LFE65:
 140              		.size	getRightPWM, .-getRightPWM
 141              		.section	.text.driveForward,"ax",%progbits
 142              		.align	2
 143              		.global	driveForward
 144              		.thumb
 145              		.thumb_func
 146              		.type	driveForward, %function
 147              	driveForward:
 148              	.LFB66:
  34:motors.c      **** 
  35:motors.c      **** //void updateForwardSpeed(int currentSpeed, int targetSpeed) {
  36:motors.c      **** //    if (currentSpeed > targetSpeed) {
  37:motors.c      **** //        currentFLeftSpeed = currentFLeftSpeed + 1;
  38:motors.c      **** //        currentFRightSpeed = currentFRightSpeed + 1;
  39:motors.c      **** //    }
  40:motors.c      **** //    else {
  41:motors.c      **** //        currentFLeftSpeed = currentFLeftSpeed - 1;
  42:motors.c      **** //        currentFRightSpeed = currentFRightSpeed - 1;
  43:motors.c      **** //    }
  44:motors.c      **** //}
  45:motors.c      **** 
  46:motors.c      **** void driveForward(int distanceTravelled, int targetSpeed) {  
 149              		.loc 1 46 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153 0000 80B5     		push	{r7, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 82B0     		sub	sp, sp, #8
 158              		.cfi_def_cfa_offset 16
 159 0004 00AF     		add	r7, sp, #0
 160              		.cfi_def_cfa_register 7
 161 0006 7860     		str	r0, [r7, #4]
 162 0008 3960     		str	r1, [r7]
  47:motors.c      ****         PWM_1_WriteCompare(currentFLeftSpeed); 
 163              		.loc 1 47 0
 164 000a 084B     		ldr	r3, .L11
 165 000c 1B68     		ldr	r3, [r3]
 166 000e DBB2     		uxtb	r3, r3
 167 0010 1846     		mov	r0, r3
 168 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
  48:motors.c      ****         PWM_2_WriteCompare(currentFRightSpeed); 
 169              		.loc 1 48 0
 170 0016 064B     		ldr	r3, .L11+4
 171 0018 1B68     		ldr	r3, [r3]
 172 001a DBB2     		uxtb	r3, r3
 173 001c 1846     		mov	r0, r3
 174 001e FFF7FEFF 		bl	PWM_2_WriteCompare
  49:motors.c      **** }
 175              		.loc 1 49 0
 176 0022 00BF     		nop
 177 0024 0837     		adds	r7, r7, #8
 178              		.cfi_def_cfa_offset 8
 179 0026 BD46     		mov	sp, r7
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 5
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 5
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 180              		.cfi_def_cfa_register 13
 181              		@ sp needed
 182 0028 80BD     		pop	{r7, pc}
 183              	.L12:
 184 002a 00BF     		.align	2
 185              	.L11:
 186 002c 00000000 		.word	currentFLeftSpeed
 187 0030 00000000 		.word	currentFRightSpeed
 188              		.cfi_endproc
 189              	.LFE66:
 190              		.size	driveForward, .-driveForward
 191              		.section	.text.stop,"ax",%progbits
 192              		.align	2
 193              		.global	stop
 194              		.thumb
 195              		.thumb_func
 196              		.type	stop, %function
 197              	stop:
 198              	.LFB67:
  50:motors.c      **** 
  51:motors.c      **** void stop() {
 199              		.loc 1 51 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203 0000 80B5     		push	{r7, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 0002 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
  52:motors.c      ****     PWM_1_WriteCompare(125);
 209              		.loc 1 52 0
 210 0004 7D20     		movs	r0, #125
 211 0006 FFF7FEFF 		bl	PWM_1_WriteCompare
  53:motors.c      ****     PWM_2_WriteCompare(125);  
 212              		.loc 1 53 0
 213 000a 7D20     		movs	r0, #125
 214 000c FFF7FEFF 		bl	PWM_2_WriteCompare
  54:motors.c      **** }
 215              		.loc 1 54 0
 216 0010 00BF     		nop
 217 0012 80BD     		pop	{r7, pc}
 218              		.cfi_endproc
 219              	.LFE67:
 220              		.size	stop, .-stop
 221              		.section	.text.adjustLeft,"ax",%progbits
 222              		.align	2
 223              		.global	adjustLeft
 224              		.thumb
 225              		.thumb_func
 226              		.type	adjustLeft, %function
 227              	adjustLeft:
 228              	.LFB68:
  55:motors.c      **** 
  56:motors.c      **** void adjustLeft() {
 229              		.loc 1 56 0
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 6
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 6
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233 0000 80B5     		push	{r7, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
  57:motors.c      ****     PWM_1_WriteCompare(currentFLeftSpeed - 2);
 239              		.loc 1 57 0
 240 0004 084B     		ldr	r3, .L15
 241 0006 1B68     		ldr	r3, [r3]
 242 0008 DBB2     		uxtb	r3, r3
 243 000a 023B     		subs	r3, r3, #2
 244 000c DBB2     		uxtb	r3, r3
 245 000e 1846     		mov	r0, r3
 246 0010 FFF7FEFF 		bl	PWM_1_WriteCompare
  58:motors.c      ****     PWM_2_WriteCompare(currentFRightSpeed + 2);
 247              		.loc 1 58 0
 248 0014 054B     		ldr	r3, .L15+4
 249 0016 1B68     		ldr	r3, [r3]
 250 0018 DBB2     		uxtb	r3, r3
 251 001a 0233     		adds	r3, r3, #2
 252 001c DBB2     		uxtb	r3, r3
 253 001e 1846     		mov	r0, r3
 254 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
  59:motors.c      **** }
 255              		.loc 1 59 0
 256 0024 00BF     		nop
 257 0026 80BD     		pop	{r7, pc}
 258              	.L16:
 259              		.align	2
 260              	.L15:
 261 0028 00000000 		.word	currentFLeftSpeed
 262 002c 00000000 		.word	currentFRightSpeed
 263              		.cfi_endproc
 264              	.LFE68:
 265              		.size	adjustLeft, .-adjustLeft
 266              		.section	.text.adjustRight,"ax",%progbits
 267              		.align	2
 268              		.global	adjustRight
 269              		.thumb
 270              		.thumb_func
 271              		.type	adjustRight, %function
 272              	adjustRight:
 273              	.LFB69:
  60:motors.c      **** 
  61:motors.c      **** void adjustRight() {
 274              		.loc 1 61 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278 0000 80B5     		push	{r7, lr}
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 7, -8
 281              		.cfi_offset 14, -4
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 7
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 7
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 282 0002 00AF     		add	r7, sp, #0
 283              		.cfi_def_cfa_register 7
  62:motors.c      ****     PWM_1_WriteCompare(currentFLeftSpeed + 2);
 284              		.loc 1 62 0
 285 0004 084B     		ldr	r3, .L18
 286 0006 1B68     		ldr	r3, [r3]
 287 0008 DBB2     		uxtb	r3, r3
 288 000a 0233     		adds	r3, r3, #2
 289 000c DBB2     		uxtb	r3, r3
 290 000e 1846     		mov	r0, r3
 291 0010 FFF7FEFF 		bl	PWM_1_WriteCompare
  63:motors.c      ****     PWM_2_WriteCompare(currentFRightSpeed - 2);
 292              		.loc 1 63 0
 293 0014 054B     		ldr	r3, .L18+4
 294 0016 1B68     		ldr	r3, [r3]
 295 0018 DBB2     		uxtb	r3, r3
 296 001a 023B     		subs	r3, r3, #2
 297 001c DBB2     		uxtb	r3, r3
 298 001e 1846     		mov	r0, r3
 299 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
  64:motors.c      **** }
 300              		.loc 1 64 0
 301 0024 00BF     		nop
 302 0026 80BD     		pop	{r7, pc}
 303              	.L19:
 304              		.align	2
 305              	.L18:
 306 0028 00000000 		.word	currentFLeftSpeed
 307 002c 00000000 		.word	currentFRightSpeed
 308              		.cfi_endproc
 309              	.LFE69:
 310              		.size	adjustRight, .-adjustRight
 311              		.section	.text.hardAdjustLeft,"ax",%progbits
 312              		.align	2
 313              		.global	hardAdjustLeft
 314              		.thumb
 315              		.thumb_func
 316              		.type	hardAdjustLeft, %function
 317              	hardAdjustLeft:
 318              	.LFB70:
  65:motors.c      **** void hardAdjustLeft() {
 319              		.loc 1 65 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 1, uses_anonymous_args = 0
 323 0000 80B5     		push	{r7, lr}
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 7, -8
 326              		.cfi_offset 14, -4
 327 0002 00AF     		add	r7, sp, #0
 328              		.cfi_def_cfa_register 7
  66:motors.c      ****     PWM_1_WriteCompare(currentFLeftSpeed - 5); //was 6, changed it as was too drastic
 329              		.loc 1 66 0
 330 0004 084B     		ldr	r3, .L21
 331 0006 1B68     		ldr	r3, [r3]
 332 0008 DBB2     		uxtb	r3, r3
 333 000a 053B     		subs	r3, r3, #5
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 8
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 8
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 334 000c DBB2     		uxtb	r3, r3
 335 000e 1846     		mov	r0, r3
 336 0010 FFF7FEFF 		bl	PWM_1_WriteCompare
  67:motors.c      ****     PWM_2_WriteCompare(currentFRightSpeed + 5);
 337              		.loc 1 67 0
 338 0014 054B     		ldr	r3, .L21+4
 339 0016 1B68     		ldr	r3, [r3]
 340 0018 DBB2     		uxtb	r3, r3
 341 001a 0533     		adds	r3, r3, #5
 342 001c DBB2     		uxtb	r3, r3
 343 001e 1846     		mov	r0, r3
 344 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
  68:motors.c      **** }
 345              		.loc 1 68 0
 346 0024 00BF     		nop
 347 0026 80BD     		pop	{r7, pc}
 348              	.L22:
 349              		.align	2
 350              	.L21:
 351 0028 00000000 		.word	currentFLeftSpeed
 352 002c 00000000 		.word	currentFRightSpeed
 353              		.cfi_endproc
 354              	.LFE70:
 355              		.size	hardAdjustLeft, .-hardAdjustLeft
 356              		.section	.text.hardAdjustRight,"ax",%progbits
 357              		.align	2
 358              		.global	hardAdjustRight
 359              		.thumb
 360              		.thumb_func
 361              		.type	hardAdjustRight, %function
 362              	hardAdjustRight:
 363              	.LFB71:
  69:motors.c      **** 
  70:motors.c      **** void hardAdjustRight() {
 364              		.loc 1 70 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368 0000 80B5     		push	{r7, lr}
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 7, -8
 371              		.cfi_offset 14, -4
 372 0002 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
  71:motors.c      ****     PWM_1_WriteCompare(currentFLeftSpeed + 5);
 374              		.loc 1 71 0
 375 0004 084B     		ldr	r3, .L24
 376 0006 1B68     		ldr	r3, [r3]
 377 0008 DBB2     		uxtb	r3, r3
 378 000a 0533     		adds	r3, r3, #5
 379 000c DBB2     		uxtb	r3, r3
 380 000e 1846     		mov	r0, r3
 381 0010 FFF7FEFF 		bl	PWM_1_WriteCompare
  72:motors.c      ****     PWM_2_WriteCompare(currentFRightSpeed - 5);
 382              		.loc 1 72 0
 383 0014 054B     		ldr	r3, .L24+4
 384 0016 1B68     		ldr	r3, [r3]
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 9
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 9
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 385 0018 DBB2     		uxtb	r3, r3
 386 001a 053B     		subs	r3, r3, #5
 387 001c DBB2     		uxtb	r3, r3
 388 001e 1846     		mov	r0, r3
 389 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
  73:motors.c      **** }
 390              		.loc 1 73 0
 391 0024 00BF     		nop
 392 0026 80BD     		pop	{r7, pc}
 393              	.L25:
 394              		.align	2
 395              	.L24:
 396 0028 00000000 		.word	currentFLeftSpeed
 397 002c 00000000 		.word	currentFRightSpeed
 398              		.cfi_endproc
 399              	.LFE71:
 400              		.size	hardAdjustRight, .-hardAdjustRight
 401              		.section	.text.restoreLeft,"ax",%progbits
 402              		.align	2
 403              		.global	restoreLeft
 404              		.thumb
 405              		.thumb_func
 406              		.type	restoreLeft, %function
 407              	restoreLeft:
 408              	.LFB72:
  74:motors.c      **** 
  75:motors.c      **** 
  76:motors.c      **** void restoreLeft() {
 409              		.loc 1 76 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 80B5     		push	{r7, lr}
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 7, -8
 416              		.cfi_offset 14, -4
 417 0002 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
  77:motors.c      ****     // 125 - currentFLeftSpeed - 125
  78:motors.c      ****     PWM_1_WriteCompare(125 - (currentFLeftSpeed - 125) - 1);
 419              		.loc 1 78 0
 420 0004 0A4B     		ldr	r3, .L27
 421 0006 1B68     		ldr	r3, [r3]
 422 0008 DAB2     		uxtb	r2, r3
 423 000a 6FF00603 		mvn	r3, #6
 424 000e 9B1A     		subs	r3, r3, r2
 425 0010 DBB2     		uxtb	r3, r3
 426 0012 1846     		mov	r0, r3
 427 0014 FFF7FEFF 		bl	PWM_1_WriteCompare
  79:motors.c      ****     PWM_2_WriteCompare(125 - (currentFLeftSpeed - 125) + 1);
 428              		.loc 1 79 0
 429 0018 054B     		ldr	r3, .L27
 430 001a 1B68     		ldr	r3, [r3]
 431 001c DAB2     		uxtb	r2, r3
 432 001e 6FF00403 		mvn	r3, #4
 433 0022 9B1A     		subs	r3, r3, r2
 434 0024 DBB2     		uxtb	r3, r3
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 10
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 10
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 435 0026 1846     		mov	r0, r3
 436 0028 FFF7FEFF 		bl	PWM_2_WriteCompare
  80:motors.c      ****     
  81:motors.c      **** 
  82:motors.c      **** }
 437              		.loc 1 82 0
 438 002c 00BF     		nop
 439 002e 80BD     		pop	{r7, pc}
 440              	.L28:
 441              		.align	2
 442              	.L27:
 443 0030 00000000 		.word	currentFLeftSpeed
 444              		.cfi_endproc
 445              	.LFE72:
 446              		.size	restoreLeft, .-restoreLeft
 447              		.section	.text.restoreRight,"ax",%progbits
 448              		.align	2
 449              		.global	restoreRight
 450              		.thumb
 451              		.thumb_func
 452              		.type	restoreRight, %function
 453              	restoreRight:
 454              	.LFB73:
  83:motors.c      **** 
  84:motors.c      **** void restoreRight() {
 455              		.loc 1 84 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 1, uses_anonymous_args = 0
 459 0000 80B5     		push	{r7, lr}
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0002 00AF     		add	r7, sp, #0
 464              		.cfi_def_cfa_register 7
  85:motors.c      ****     PWM_1_WriteCompare(125 - (currentFLeftSpeed - 125) + 1);
 465              		.loc 1 85 0
 466 0004 0A4B     		ldr	r3, .L30
 467 0006 1B68     		ldr	r3, [r3]
 468 0008 DAB2     		uxtb	r2, r3
 469 000a 6FF00403 		mvn	r3, #4
 470 000e 9B1A     		subs	r3, r3, r2
 471 0010 DBB2     		uxtb	r3, r3
 472 0012 1846     		mov	r0, r3
 473 0014 FFF7FEFF 		bl	PWM_1_WriteCompare
  86:motors.c      ****     PWM_2_WriteCompare(125 - (currentFLeftSpeed - 125) - 1);
 474              		.loc 1 86 0
 475 0018 054B     		ldr	r3, .L30
 476 001a 1B68     		ldr	r3, [r3]
 477 001c DAB2     		uxtb	r2, r3
 478 001e 6FF00603 		mvn	r3, #6
 479 0022 9B1A     		subs	r3, r3, r2
 480 0024 DBB2     		uxtb	r3, r3
 481 0026 1846     		mov	r0, r3
 482 0028 FFF7FEFF 		bl	PWM_2_WriteCompare
  87:motors.c      **** }
 483              		.loc 1 87 0
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 11
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 11
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 484 002c 00BF     		nop
 485 002e 80BD     		pop	{r7, pc}
 486              	.L31:
 487              		.align	2
 488              	.L30:
 489 0030 00000000 		.word	currentFLeftSpeed
 490              		.cfi_endproc
 491              	.LFE73:
 492              		.size	restoreRight, .-restoreRight
 493              		.section	.text.findTrack,"ax",%progbits
 494              		.align	2
 495              		.global	findTrack
 496              		.thumb
 497              		.thumb_func
 498              		.type	findTrack, %function
 499              	findTrack:
 500              	.LFB74:
  88:motors.c      **** 
  89:motors.c      **** void findTrack() {
 501              		.loc 1 89 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505 0000 80B5     		push	{r7, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 7, -8
 508              		.cfi_offset 14, -4
 509 0002 00AF     		add	r7, sp, #0
 510              		.cfi_def_cfa_register 7
  90:motors.c      ****     PWM_1_WriteCompare(125 - (currentFLeftSpeed - 125));
 511              		.loc 1 90 0
 512 0004 084B     		ldr	r3, .L33
 513 0006 1B68     		ldr	r3, [r3]
 514 0008 DAB2     		uxtb	r2, r3
 515 000a 6FF00503 		mvn	r3, #5
 516 000e 9B1A     		subs	r3, r3, r2
 517 0010 DBB2     		uxtb	r3, r3
 518 0012 1846     		mov	r0, r3
 519 0014 FFF7FEFF 		bl	PWM_1_WriteCompare
  91:motors.c      ****     PWM_2_WriteCompare(currentFLeftSpeed);
 520              		.loc 1 91 0
 521 0018 034B     		ldr	r3, .L33
 522 001a 1B68     		ldr	r3, [r3]
 523 001c DBB2     		uxtb	r3, r3
 524 001e 1846     		mov	r0, r3
 525 0020 FFF7FEFF 		bl	PWM_2_WriteCompare
  92:motors.c      **** }
 526              		.loc 1 92 0
 527 0024 00BF     		nop
 528 0026 80BD     		pop	{r7, pc}
 529              	.L34:
 530              		.align	2
 531              	.L33:
 532 0028 00000000 		.word	currentFLeftSpeed
 533              		.cfi_endproc
 534              	.LFE74:
 535              		.size	findTrack, .-findTrack
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 12
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 12
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 536              		.section	.text.turnLeft,"ax",%progbits
 537              		.align	2
 538              		.global	turnLeft
 539              		.thumb
 540              		.thumb_func
 541              		.type	turnLeft, %function
 542              	turnLeft:
 543              	.LFB75:
  93:motors.c      **** 
  94:motors.c      **** void turnLeft() {
 544              		.loc 1 94 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548 0000 80B5     		push	{r7, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
  95:motors.c      ****    
  96:motors.c      ****     PWM_1_WriteCompare(125 - (currentFLeftSpeed - 125)+ 7); //was 11, changed as I think the value 
 554              		.loc 1 96 0
 555 0004 094B     		ldr	r3, .L36
 556 0006 1B68     		ldr	r3, [r3]
 557 0008 DBB2     		uxtb	r3, r3
 558 000a C3F10103 		rsb	r3, r3, #1
 559 000e DBB2     		uxtb	r3, r3
 560 0010 1846     		mov	r0, r3
 561 0012 FFF7FEFF 		bl	PWM_1_WriteCompare
  97:motors.c      ****     PWM_2_WriteCompare(currentFRightSpeed - 7); //was 11, changed as I think the value becomes too 
 562              		.loc 1 97 0
 563 0016 064B     		ldr	r3, .L36+4
 564 0018 1B68     		ldr	r3, [r3]
 565 001a DBB2     		uxtb	r3, r3
 566 001c 073B     		subs	r3, r3, #7
 567 001e DBB2     		uxtb	r3, r3
 568 0020 1846     		mov	r0, r3
 569 0022 FFF7FEFF 		bl	PWM_2_WriteCompare
  98:motors.c      **** }
 570              		.loc 1 98 0
 571 0026 00BF     		nop
 572 0028 80BD     		pop	{r7, pc}
 573              	.L37:
 574 002a 00BF     		.align	2
 575              	.L36:
 576 002c 00000000 		.word	currentFLeftSpeed
 577 0030 00000000 		.word	currentFRightSpeed
 578              		.cfi_endproc
 579              	.LFE75:
 580              		.size	turnLeft, .-turnLeft
 581              		.section	.text.turnRight,"ax",%progbits
 582              		.align	2
 583              		.global	turnRight
 584              		.thumb
 585              		.thumb_func
 586              		.type	turnRight, %function
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 13
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 13
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 587              	turnRight:
 588              	.LFB76:
  99:motors.c      **** //193 144
 100:motors.c      **** void turnRight() { 
 589              		.loc 1 100 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 1, uses_anonymous_args = 0
 593 0000 80B5     		push	{r7, lr}
 594              		.cfi_def_cfa_offset 8
 595              		.cfi_offset 7, -8
 596              		.cfi_offset 14, -4
 597 0002 00AF     		add	r7, sp, #0
 598              		.cfi_def_cfa_register 7
 101:motors.c      ****     PWM_1_WriteCompare(currentFLeftSpeed - 7);  //was 11, changed as I think the value becomes too 
 599              		.loc 1 101 0
 600 0004 094B     		ldr	r3, .L39
 601 0006 1B68     		ldr	r3, [r3]
 602 0008 DBB2     		uxtb	r3, r3
 603 000a 073B     		subs	r3, r3, #7
 604 000c DBB2     		uxtb	r3, r3
 605 000e 1846     		mov	r0, r3
 606 0010 FFF7FEFF 		bl	PWM_1_WriteCompare
 102:motors.c      ****     PWM_2_WriteCompare(125 - (currentFRightSpeed - 125) + 7 ); //was 11, changed as I think the val
 607              		.loc 1 102 0
 608 0014 064B     		ldr	r3, .L39+4
 609 0016 1B68     		ldr	r3, [r3]
 610 0018 DBB2     		uxtb	r3, r3
 611 001a C3F10103 		rsb	r3, r3, #1
 612 001e DBB2     		uxtb	r3, r3
 613 0020 1846     		mov	r0, r3
 614 0022 FFF7FEFF 		bl	PWM_2_WriteCompare
 103:motors.c      **** }
 615              		.loc 1 103 0
 616 0026 00BF     		nop
 617 0028 80BD     		pop	{r7, pc}
 618              	.L40:
 619 002a 00BF     		.align	2
 620              	.L39:
 621 002c 00000000 		.word	currentFLeftSpeed
 622 0030 00000000 		.word	currentFRightSpeed
 623              		.cfi_endproc
 624              	.LFE76:
 625              		.size	turnRight, .-turnRight
 626              		.section	.text.reverse,"ax",%progbits
 627              		.align	2
 628              		.global	reverse
 629              		.thumb
 630              		.thumb_func
 631              		.type	reverse, %function
 632              	reverse:
 633              	.LFB77:
 104:motors.c      **** 
 105:motors.c      **** void reverse(int reverseCount) {
 634              		.loc 1 105 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 8
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 14
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 14
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 637              		@ frame_needed = 1, uses_anonymous_args = 0
 638 0000 80B5     		push	{r7, lr}
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 7, -8
 641              		.cfi_offset 14, -4
 642 0002 82B0     		sub	sp, sp, #8
 643              		.cfi_def_cfa_offset 16
 644 0004 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 646 0006 7860     		str	r0, [r7, #4]
 106:motors.c      ****     while (reverseCount !=0){
 647              		.loc 1 106 0
 648 0008 16E0     		b	.L42
 649              	.L43:
 107:motors.c      ****         PWM_1_WriteCompare(125 - (currentFLeftSpeed - 125));
 650              		.loc 1 107 0
 651 000a 0F4B     		ldr	r3, .L44
 652 000c 1B68     		ldr	r3, [r3]
 653 000e DAB2     		uxtb	r2, r3
 654 0010 6FF00503 		mvn	r3, #5
 655 0014 9B1A     		subs	r3, r3, r2
 656 0016 DBB2     		uxtb	r3, r3
 657 0018 1846     		mov	r0, r3
 658 001a FFF7FEFF 		bl	PWM_1_WriteCompare
 108:motors.c      ****         PWM_2_WriteCompare(125 - (currentFRightSpeed - 125));
 659              		.loc 1 108 0
 660 001e 0B4B     		ldr	r3, .L44+4
 661 0020 1B68     		ldr	r3, [r3]
 662 0022 DAB2     		uxtb	r2, r3
 663 0024 6FF00503 		mvn	r3, #5
 664 0028 9B1A     		subs	r3, r3, r2
 665 002a DBB2     		uxtb	r3, r3
 666 002c 1846     		mov	r0, r3
 667 002e FFF7FEFF 		bl	PWM_2_WriteCompare
 109:motors.c      ****         reverseCount--;
 668              		.loc 1 109 0
 669 0032 7B68     		ldr	r3, [r7, #4]
 670 0034 013B     		subs	r3, r3, #1
 671 0036 7B60     		str	r3, [r7, #4]
 672              	.L42:
 106:motors.c      ****         PWM_1_WriteCompare(125 - (currentFLeftSpeed - 125));
 673              		.loc 1 106 0
 674 0038 7B68     		ldr	r3, [r7, #4]
 675 003a 002B     		cmp	r3, #0
 676 003c E5D1     		bne	.L43
 110:motors.c      ****     }
 111:motors.c      **** }
 677              		.loc 1 111 0
 678 003e 00BF     		nop
 679 0040 0837     		adds	r7, r7, #8
 680              		.cfi_def_cfa_offset 8
 681 0042 BD46     		mov	sp, r7
 682              		.cfi_def_cfa_register 13
 683              		@ sp needed
 684 0044 80BD     		pop	{r7, pc}
 685              	.L45:
 686 0046 00BF     		.align	2
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 15
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 15
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 687              	.L44:
 688 0048 00000000 		.word	currentFLeftSpeed
 689 004c 00000000 		.word	currentFRightSpeed
 690              		.cfi_endproc
 691              	.LFE77:
 692              		.size	reverse, .-reverse
 693              		.text
 694              	.Letext0:
 695              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 696              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 697              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 698              		.section	.debug_info,"",%progbits
 699              	.Ldebug_info0:
 700 0000 14020000 		.4byte	0x214
 701 0004 0400     		.2byte	0x4
 702 0006 00000000 		.4byte	.Ldebug_abbrev0
 703 000a 04       		.byte	0x4
 704 000b 01       		.uleb128 0x1
 705 000c 0C000000 		.4byte	.LASF37
 706 0010 0C       		.byte	0xc
 707 0011 D8010000 		.4byte	.LASF38
 708 0015 C9000000 		.4byte	.LASF39
 709 0019 00000000 		.4byte	.Ldebug_ranges0+0
 710 001d 00000000 		.4byte	0
 711 0021 00000000 		.4byte	.Ldebug_line0
 712 0025 02       		.uleb128 0x2
 713 0026 01       		.byte	0x1
 714 0027 06       		.byte	0x6
 715 0028 9C020000 		.4byte	.LASF0
 716 002c 02       		.uleb128 0x2
 717 002d 01       		.byte	0x1
 718 002e 08       		.byte	0x8
 719 002f 45010000 		.4byte	.LASF1
 720 0033 02       		.uleb128 0x2
 721 0034 02       		.byte	0x2
 722 0035 05       		.byte	0x5
 723 0036 70020000 		.4byte	.LASF2
 724 003a 02       		.uleb128 0x2
 725 003b 02       		.byte	0x2
 726 003c 07       		.byte	0x7
 727 003d 72010000 		.4byte	.LASF3
 728 0041 03       		.uleb128 0x3
 729 0042 24010000 		.4byte	.LASF9
 730 0046 02       		.byte	0x2
 731 0047 3F       		.byte	0x3f
 732 0048 4C000000 		.4byte	0x4c
 733 004c 02       		.uleb128 0x2
 734 004d 04       		.byte	0x4
 735 004e 05       		.byte	0x5
 736 004f 87020000 		.4byte	.LASF4
 737 0053 02       		.uleb128 0x2
 738 0054 04       		.byte	0x4
 739 0055 07       		.byte	0x7
 740 0056 B0010000 		.4byte	.LASF5
 741 005a 02       		.uleb128 0x2
 742 005b 08       		.byte	0x8
 743 005c 05       		.byte	0x5
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 16
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 16
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 744 005d 52020000 		.4byte	.LASF6
 745 0061 02       		.uleb128 0x2
 746 0062 08       		.byte	0x8
 747 0063 07       		.byte	0x7
 748 0064 FD010000 		.4byte	.LASF7
 749 0068 04       		.uleb128 0x4
 750 0069 04       		.byte	0x4
 751 006a 05       		.byte	0x5
 752 006b 696E7400 		.ascii	"int\000"
 753 006f 02       		.uleb128 0x2
 754 0070 04       		.byte	0x4
 755 0071 07       		.byte	0x7
 756 0072 E1010000 		.4byte	.LASF8
 757 0076 03       		.uleb128 0x3
 758 0077 41020000 		.4byte	.LASF10
 759 007b 03       		.byte	0x3
 760 007c 2C       		.byte	0x2c
 761 007d 41000000 		.4byte	0x41
 762 0081 02       		.uleb128 0x2
 763 0082 04       		.byte	0x4
 764 0083 04       		.byte	0x4
 765 0084 3F010000 		.4byte	.LASF11
 766 0088 02       		.uleb128 0x2
 767 0089 08       		.byte	0x8
 768 008a 04       		.byte	0x4
 769 008b 38010000 		.4byte	.LASF12
 770 008f 02       		.uleb128 0x2
 771 0090 01       		.byte	0x1
 772 0091 08       		.byte	0x8
 773 0092 60020000 		.4byte	.LASF13
 774 0096 02       		.uleb128 0x2
 775 0097 08       		.byte	0x8
 776 0098 04       		.byte	0x4
 777 0099 90020000 		.4byte	.LASF14
 778 009d 02       		.uleb128 0x2
 779 009e 04       		.byte	0x4
 780 009f 07       		.byte	0x7
 781 00a0 49020000 		.4byte	.LASF15
 782 00a4 05       		.uleb128 0x5
 783 00a5 C2010000 		.4byte	.LASF20
 784 00a9 01       		.byte	0x1
 785 00aa 14       		.byte	0x14
 786 00ab 00000000 		.4byte	.LFB63
 787 00af 1C000000 		.4byte	.LFE63-.LFB63
 788 00b3 01       		.uleb128 0x1
 789 00b4 9C       		.byte	0x9c
 790 00b5 06       		.uleb128 0x6
 791 00b6 65020000 		.4byte	.LASF16
 792 00ba 01       		.byte	0x1
 793 00bb 1B       		.byte	0x1b
 794 00bc 68000000 		.4byte	0x68
 795 00c0 00000000 		.4byte	.LFB64
 796 00c4 14000000 		.4byte	.LFE64-.LFB64
 797 00c8 01       		.uleb128 0x1
 798 00c9 9C       		.byte	0x9c
 799 00ca 06       		.uleb128 0x6
<<<<<<< HEAD
 800 00cb B5020000 		.4byte	.LASF17
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 17
=======
 800 00cb A8020000 		.4byte	.LASF17
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 17
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 801 00cf 01       		.byte	0x1
 802 00d0 1F       		.byte	0x1f
 803 00d1 68000000 		.4byte	0x68
 804 00d5 00000000 		.4byte	.LFB65
 805 00d9 14000000 		.4byte	.LFE65-.LFB65
 806 00dd 01       		.uleb128 0x1
 807 00de 9C       		.byte	0x9c
 808 00df 07       		.uleb128 0x7
 809 00e0 91010000 		.4byte	.LASF31
 810 00e4 01       		.byte	0x1
 811 00e5 2E       		.byte	0x2e
 812 00e6 00000000 		.4byte	.LFB66
 813 00ea 34000000 		.4byte	.LFE66-.LFB66
 814 00ee 01       		.uleb128 0x1
 815 00ef 9C       		.byte	0x9c
 816 00f0 11010000 		.4byte	0x111
 817 00f4 08       		.uleb128 0x8
 818 00f5 26020000 		.4byte	.LASF18
 819 00f9 01       		.byte	0x1
 820 00fa 2E       		.byte	0x2e
 821 00fb 68000000 		.4byte	0x68
 822 00ff 02       		.uleb128 0x2
 823 0100 91       		.byte	0x91
 824 0101 74       		.sleb128 -12
 825 0102 08       		.uleb128 0x8
 826 0103 85010000 		.4byte	.LASF19
 827 0107 01       		.byte	0x1
 828 0108 2E       		.byte	0x2e
 829 0109 68000000 		.4byte	0x68
 830 010d 02       		.uleb128 0x2
 831 010e 91       		.byte	0x91
 832 010f 70       		.sleb128 -16
 833 0110 00       		.byte	0
 834 0111 05       		.uleb128 0x5
 835 0112 9E010000 		.4byte	.LASF21
 836 0116 01       		.byte	0x1
 837 0117 33       		.byte	0x33
 838 0118 00000000 		.4byte	.LFB67
 839 011c 14000000 		.4byte	.LFE67-.LFB67
 840 0120 01       		.uleb128 0x1
 841 0121 9C       		.byte	0x9c
 842 0122 05       		.uleb128 0x5
 843 0123 CD010000 		.4byte	.LASF22
 844 0127 01       		.byte	0x1
 845 0128 38       		.byte	0x38
 846 0129 00000000 		.4byte	.LFB68
 847 012d 30000000 		.4byte	.LFE68-.LFB68
 848 0131 01       		.uleb128 0x1
 849 0132 9C       		.byte	0x9c
 850 0133 05       		.uleb128 0x5
 851 0134 00000000 		.4byte	.LASF23
 852 0138 01       		.byte	0x1
 853 0139 3D       		.byte	0x3d
 854 013a 00000000 		.4byte	.LFB69
 855 013e 30000000 		.4byte	.LFE69-.LFB69
 856 0142 01       		.uleb128 0x1
 857 0143 9C       		.byte	0x9c
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 18
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 18
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 858 0144 05       		.uleb128 0x5
 859 0145 EE010000 		.4byte	.LASF24
 860 0149 01       		.byte	0x1
 861 014a 41       		.byte	0x41
 862 014b 00000000 		.4byte	.LFB70
 863 014f 30000000 		.4byte	.LFE70-.LFB70
 864 0153 01       		.uleb128 0x1
 865 0154 9C       		.byte	0x9c
 866 0155 05       		.uleb128 0x5
 867 0156 AD000000 		.4byte	.LASF25
 868 015a 01       		.byte	0x1
 869 015b 46       		.byte	0x46
 870 015c 00000000 		.4byte	.LFB71
 871 0160 30000000 		.4byte	.LFE71-.LFB71
 872 0164 01       		.uleb128 0x1
 873 0165 9C       		.byte	0x9c
 874 0166 05       		.uleb128 0x5
 875 0167 BD000000 		.4byte	.LASF26
 876 016b 01       		.byte	0x1
 877 016c 4C       		.byte	0x4c
 878 016d 00000000 		.4byte	.LFB72
 879 0171 34000000 		.4byte	.LFE72-.LFB72
 880 0175 01       		.uleb128 0x1
 881 0176 9C       		.byte	0x9c
 882 0177 05       		.uleb128 0x5
 883 0178 65010000 		.4byte	.LASF27
 884 017c 01       		.byte	0x1
 885 017d 54       		.byte	0x54
 886 017e 00000000 		.4byte	.LFB73
 887 0182 34000000 		.4byte	.LFE73-.LFB73
 888 0186 01       		.uleb128 0x1
 889 0187 9C       		.byte	0x9c
 890 0188 05       		.uleb128 0x5
 891 0189 5B010000 		.4byte	.LASF28
 892 018d 01       		.byte	0x1
 893 018e 59       		.byte	0x59
 894 018f 00000000 		.4byte	.LFB74
 895 0193 2C000000 		.4byte	.LFE74-.LFB74
 896 0197 01       		.uleb128 0x1
 897 0198 9C       		.byte	0x9c
 898 0199 05       		.uleb128 0x5
 899 019a 38020000 		.4byte	.LASF29
 900 019e 01       		.byte	0x1
 901 019f 5E       		.byte	0x5e
 902 01a0 00000000 		.4byte	.LFB75
 903 01a4 34000000 		.4byte	.LFE75-.LFB75
 904 01a8 01       		.uleb128 0x1
 905 01a9 9C       		.byte	0x9c
 906 01aa 05       		.uleb128 0x5
 907 01ab 2E010000 		.4byte	.LASF30
 908 01af 01       		.byte	0x1
 909 01b0 64       		.byte	0x64
 910 01b1 00000000 		.4byte	.LFB76
 911 01b5 34000000 		.4byte	.LFE76-.LFB76
 912 01b9 01       		.uleb128 0x1
 913 01ba 9C       		.byte	0x9c
 914 01bb 07       		.uleb128 0x7
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 19
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 19
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 915 01bc 53010000 		.4byte	.LASF32
 916 01c0 01       		.byte	0x1
 917 01c1 69       		.byte	0x69
 918 01c2 00000000 		.4byte	.LFB77
 919 01c6 50000000 		.4byte	.LFE77-.LFB77
 920 01ca 01       		.uleb128 0x1
 921 01cb 9C       		.byte	0x9c
 922 01cc DF010000 		.4byte	0x1df
 923 01d0 08       		.uleb128 0x8
 924 01d1 7A020000 		.4byte	.LASF33
 925 01d5 01       		.byte	0x1
 926 01d6 69       		.byte	0x69
 927 01d7 68000000 		.4byte	0x68
 928 01db 02       		.uleb128 0x2
 929 01dc 91       		.byte	0x91
 930 01dd 74       		.sleb128 -12
 931 01de 00       		.byte	0
 932 01df 09       		.uleb128 0x9
 933 01e0 A3010000 		.4byte	.LASF34
 934 01e4 04       		.byte	0x4
 935 01e5 1207     		.2byte	0x712
 936 01e7 EB010000 		.4byte	0x1eb
 937 01eb 0A       		.uleb128 0xa
 938 01ec 76000000 		.4byte	0x76
 939 01f0 0B       		.uleb128 0xb
 940 01f1 14020000 		.4byte	.LASF35
 941 01f5 01       		.byte	0x1
 942 01f6 10       		.byte	0x10
 943 01f7 01020000 		.4byte	0x201
 944 01fb 05       		.uleb128 0x5
 945 01fc 03       		.byte	0x3
 946 01fd 00000000 		.4byte	currentFLeftSpeed
 947 0201 0A       		.uleb128 0xa
 948 0202 68000000 		.4byte	0x68
 949 0206 0B       		.uleb128 0xb
 950 0207 9A000000 		.4byte	.LASF36
 951 020b 01       		.byte	0x1
 952 020c 11       		.byte	0x11
 953 020d 01020000 		.4byte	0x201
 954 0211 05       		.uleb128 0x5
 955 0212 03       		.byte	0x3
 956 0213 00000000 		.4byte	currentFRightSpeed
 957 0217 00       		.byte	0
 958              		.section	.debug_abbrev,"",%progbits
 959              	.Ldebug_abbrev0:
 960 0000 01       		.uleb128 0x1
 961 0001 11       		.uleb128 0x11
 962 0002 01       		.byte	0x1
 963 0003 25       		.uleb128 0x25
 964 0004 0E       		.uleb128 0xe
 965 0005 13       		.uleb128 0x13
 966 0006 0B       		.uleb128 0xb
 967 0007 03       		.uleb128 0x3
 968 0008 0E       		.uleb128 0xe
 969 0009 1B       		.uleb128 0x1b
 970 000a 0E       		.uleb128 0xe
 971 000b 55       		.uleb128 0x55
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 20
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 20
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 972 000c 17       		.uleb128 0x17
 973 000d 11       		.uleb128 0x11
 974 000e 01       		.uleb128 0x1
 975 000f 10       		.uleb128 0x10
 976 0010 17       		.uleb128 0x17
 977 0011 00       		.byte	0
 978 0012 00       		.byte	0
 979 0013 02       		.uleb128 0x2
 980 0014 24       		.uleb128 0x24
 981 0015 00       		.byte	0
 982 0016 0B       		.uleb128 0xb
 983 0017 0B       		.uleb128 0xb
 984 0018 3E       		.uleb128 0x3e
 985 0019 0B       		.uleb128 0xb
 986 001a 03       		.uleb128 0x3
 987 001b 0E       		.uleb128 0xe
 988 001c 00       		.byte	0
 989 001d 00       		.byte	0
 990 001e 03       		.uleb128 0x3
 991 001f 16       		.uleb128 0x16
 992 0020 00       		.byte	0
 993 0021 03       		.uleb128 0x3
 994 0022 0E       		.uleb128 0xe
 995 0023 3A       		.uleb128 0x3a
 996 0024 0B       		.uleb128 0xb
 997 0025 3B       		.uleb128 0x3b
 998 0026 0B       		.uleb128 0xb
 999 0027 49       		.uleb128 0x49
 1000 0028 13       		.uleb128 0x13
 1001 0029 00       		.byte	0
 1002 002a 00       		.byte	0
 1003 002b 04       		.uleb128 0x4
 1004 002c 24       		.uleb128 0x24
 1005 002d 00       		.byte	0
 1006 002e 0B       		.uleb128 0xb
 1007 002f 0B       		.uleb128 0xb
 1008 0030 3E       		.uleb128 0x3e
 1009 0031 0B       		.uleb128 0xb
 1010 0032 03       		.uleb128 0x3
 1011 0033 08       		.uleb128 0x8
 1012 0034 00       		.byte	0
 1013 0035 00       		.byte	0
 1014 0036 05       		.uleb128 0x5
 1015 0037 2E       		.uleb128 0x2e
 1016 0038 00       		.byte	0
 1017 0039 3F       		.uleb128 0x3f
 1018 003a 19       		.uleb128 0x19
 1019 003b 03       		.uleb128 0x3
 1020 003c 0E       		.uleb128 0xe
 1021 003d 3A       		.uleb128 0x3a
 1022 003e 0B       		.uleb128 0xb
 1023 003f 3B       		.uleb128 0x3b
 1024 0040 0B       		.uleb128 0xb
 1025 0041 11       		.uleb128 0x11
 1026 0042 01       		.uleb128 0x1
 1027 0043 12       		.uleb128 0x12
 1028 0044 06       		.uleb128 0x6
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 21
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 21
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 1029 0045 40       		.uleb128 0x40
 1030 0046 18       		.uleb128 0x18
 1031 0047 9642     		.uleb128 0x2116
 1032 0049 19       		.uleb128 0x19
 1033 004a 00       		.byte	0
 1034 004b 00       		.byte	0
 1035 004c 06       		.uleb128 0x6
 1036 004d 2E       		.uleb128 0x2e
 1037 004e 00       		.byte	0
 1038 004f 3F       		.uleb128 0x3f
 1039 0050 19       		.uleb128 0x19
 1040 0051 03       		.uleb128 0x3
 1041 0052 0E       		.uleb128 0xe
 1042 0053 3A       		.uleb128 0x3a
 1043 0054 0B       		.uleb128 0xb
 1044 0055 3B       		.uleb128 0x3b
 1045 0056 0B       		.uleb128 0xb
 1046 0057 27       		.uleb128 0x27
 1047 0058 19       		.uleb128 0x19
 1048 0059 49       		.uleb128 0x49
 1049 005a 13       		.uleb128 0x13
 1050 005b 11       		.uleb128 0x11
 1051 005c 01       		.uleb128 0x1
 1052 005d 12       		.uleb128 0x12
 1053 005e 06       		.uleb128 0x6
 1054 005f 40       		.uleb128 0x40
 1055 0060 18       		.uleb128 0x18
 1056 0061 9742     		.uleb128 0x2117
 1057 0063 19       		.uleb128 0x19
 1058 0064 00       		.byte	0
 1059 0065 00       		.byte	0
 1060 0066 07       		.uleb128 0x7
 1061 0067 2E       		.uleb128 0x2e
 1062 0068 01       		.byte	0x1
 1063 0069 3F       		.uleb128 0x3f
 1064 006a 19       		.uleb128 0x19
 1065 006b 03       		.uleb128 0x3
 1066 006c 0E       		.uleb128 0xe
 1067 006d 3A       		.uleb128 0x3a
 1068 006e 0B       		.uleb128 0xb
 1069 006f 3B       		.uleb128 0x3b
 1070 0070 0B       		.uleb128 0xb
 1071 0071 27       		.uleb128 0x27
 1072 0072 19       		.uleb128 0x19
 1073 0073 11       		.uleb128 0x11
 1074 0074 01       		.uleb128 0x1
 1075 0075 12       		.uleb128 0x12
 1076 0076 06       		.uleb128 0x6
 1077 0077 40       		.uleb128 0x40
 1078 0078 18       		.uleb128 0x18
 1079 0079 9642     		.uleb128 0x2116
 1080 007b 19       		.uleb128 0x19
 1081 007c 01       		.uleb128 0x1
 1082 007d 13       		.uleb128 0x13
 1083 007e 00       		.byte	0
 1084 007f 00       		.byte	0
 1085 0080 08       		.uleb128 0x8
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 22
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 22
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 1086 0081 05       		.uleb128 0x5
 1087 0082 00       		.byte	0
 1088 0083 03       		.uleb128 0x3
 1089 0084 0E       		.uleb128 0xe
 1090 0085 3A       		.uleb128 0x3a
 1091 0086 0B       		.uleb128 0xb
 1092 0087 3B       		.uleb128 0x3b
 1093 0088 0B       		.uleb128 0xb
 1094 0089 49       		.uleb128 0x49
 1095 008a 13       		.uleb128 0x13
 1096 008b 02       		.uleb128 0x2
 1097 008c 18       		.uleb128 0x18
 1098 008d 00       		.byte	0
 1099 008e 00       		.byte	0
 1100 008f 09       		.uleb128 0x9
 1101 0090 34       		.uleb128 0x34
 1102 0091 00       		.byte	0
 1103 0092 03       		.uleb128 0x3
 1104 0093 0E       		.uleb128 0xe
 1105 0094 3A       		.uleb128 0x3a
 1106 0095 0B       		.uleb128 0xb
 1107 0096 3B       		.uleb128 0x3b
 1108 0097 05       		.uleb128 0x5
 1109 0098 49       		.uleb128 0x49
 1110 0099 13       		.uleb128 0x13
 1111 009a 3F       		.uleb128 0x3f
 1112 009b 19       		.uleb128 0x19
 1113 009c 3C       		.uleb128 0x3c
 1114 009d 19       		.uleb128 0x19
 1115 009e 00       		.byte	0
 1116 009f 00       		.byte	0
 1117 00a0 0A       		.uleb128 0xa
 1118 00a1 35       		.uleb128 0x35
 1119 00a2 00       		.byte	0
 1120 00a3 49       		.uleb128 0x49
 1121 00a4 13       		.uleb128 0x13
 1122 00a5 00       		.byte	0
 1123 00a6 00       		.byte	0
 1124 00a7 0B       		.uleb128 0xb
 1125 00a8 34       		.uleb128 0x34
 1126 00a9 00       		.byte	0
 1127 00aa 03       		.uleb128 0x3
 1128 00ab 0E       		.uleb128 0xe
 1129 00ac 3A       		.uleb128 0x3a
 1130 00ad 0B       		.uleb128 0xb
 1131 00ae 3B       		.uleb128 0x3b
 1132 00af 0B       		.uleb128 0xb
 1133 00b0 49       		.uleb128 0x49
 1134 00b1 13       		.uleb128 0x13
 1135 00b2 3F       		.uleb128 0x3f
 1136 00b3 19       		.uleb128 0x19
 1137 00b4 02       		.uleb128 0x2
 1138 00b5 18       		.uleb128 0x18
 1139 00b6 00       		.byte	0
 1140 00b7 00       		.byte	0
 1141 00b8 00       		.byte	0
 1142              		.section	.debug_aranges,"",%progbits
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 23
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 23
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 1143 0000 8C000000 		.4byte	0x8c
 1144 0004 0200     		.2byte	0x2
 1145 0006 00000000 		.4byte	.Ldebug_info0
 1146 000a 04       		.byte	0x4
 1147 000b 00       		.byte	0
 1148 000c 0000     		.2byte	0
 1149 000e 0000     		.2byte	0
 1150 0010 00000000 		.4byte	.LFB63
 1151 0014 1C000000 		.4byte	.LFE63-.LFB63
 1152 0018 00000000 		.4byte	.LFB64
 1153 001c 14000000 		.4byte	.LFE64-.LFB64
 1154 0020 00000000 		.4byte	.LFB65
 1155 0024 14000000 		.4byte	.LFE65-.LFB65
 1156 0028 00000000 		.4byte	.LFB66
 1157 002c 34000000 		.4byte	.LFE66-.LFB66
 1158 0030 00000000 		.4byte	.LFB67
 1159 0034 14000000 		.4byte	.LFE67-.LFB67
 1160 0038 00000000 		.4byte	.LFB68
 1161 003c 30000000 		.4byte	.LFE68-.LFB68
 1162 0040 00000000 		.4byte	.LFB69
 1163 0044 30000000 		.4byte	.LFE69-.LFB69
 1164 0048 00000000 		.4byte	.LFB70
 1165 004c 30000000 		.4byte	.LFE70-.LFB70
 1166 0050 00000000 		.4byte	.LFB71
 1167 0054 30000000 		.4byte	.LFE71-.LFB71
 1168 0058 00000000 		.4byte	.LFB72
 1169 005c 34000000 		.4byte	.LFE72-.LFB72
 1170 0060 00000000 		.4byte	.LFB73
 1171 0064 34000000 		.4byte	.LFE73-.LFB73
 1172 0068 00000000 		.4byte	.LFB74
 1173 006c 2C000000 		.4byte	.LFE74-.LFB74
 1174 0070 00000000 		.4byte	.LFB75
 1175 0074 34000000 		.4byte	.LFE75-.LFB75
 1176 0078 00000000 		.4byte	.LFB76
 1177 007c 34000000 		.4byte	.LFE76-.LFB76
 1178 0080 00000000 		.4byte	.LFB77
 1179 0084 50000000 		.4byte	.LFE77-.LFB77
 1180 0088 00000000 		.4byte	0
 1181 008c 00000000 		.4byte	0
 1182              		.section	.debug_ranges,"",%progbits
 1183              	.Ldebug_ranges0:
 1184 0000 00000000 		.4byte	.LFB63
 1185 0004 1C000000 		.4byte	.LFE63
 1186 0008 00000000 		.4byte	.LFB64
 1187 000c 14000000 		.4byte	.LFE64
 1188 0010 00000000 		.4byte	.LFB65
 1189 0014 14000000 		.4byte	.LFE65
 1190 0018 00000000 		.4byte	.LFB66
 1191 001c 34000000 		.4byte	.LFE66
 1192 0020 00000000 		.4byte	.LFB67
 1193 0024 14000000 		.4byte	.LFE67
 1194 0028 00000000 		.4byte	.LFB68
 1195 002c 30000000 		.4byte	.LFE68
 1196 0030 00000000 		.4byte	.LFB69
 1197 0034 30000000 		.4byte	.LFE69
 1198 0038 00000000 		.4byte	.LFB70
 1199 003c 30000000 		.4byte	.LFE70
<<<<<<< HEAD
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 24
=======
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 24
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 1200 0040 00000000 		.4byte	.LFB71
 1201 0044 30000000 		.4byte	.LFE71
 1202 0048 00000000 		.4byte	.LFB72
 1203 004c 34000000 		.4byte	.LFE72
 1204 0050 00000000 		.4byte	.LFB73
 1205 0054 34000000 		.4byte	.LFE73
 1206 0058 00000000 		.4byte	.LFB74
 1207 005c 2C000000 		.4byte	.LFE74
 1208 0060 00000000 		.4byte	.LFB75
 1209 0064 34000000 		.4byte	.LFE75
 1210 0068 00000000 		.4byte	.LFB76
 1211 006c 34000000 		.4byte	.LFE76
 1212 0070 00000000 		.4byte	.LFB77
 1213 0074 50000000 		.4byte	.LFE77
 1214 0078 00000000 		.4byte	0
 1215 007c 00000000 		.4byte	0
 1216              		.section	.debug_line,"",%progbits
 1217              	.Ldebug_line0:
 1218 0000 60020000 		.section	.debug_str,"MS",%progbits,1
 1218      02004101 
 1218      00000201 
 1218      FB0E0D00 
 1218      01010101 
<<<<<<< HEAD
 1219              	.LASF6:
 1220 0000 6C6F6E67 		.ascii	"long long int\000"
 1220      206C6F6E 
 1220      6720696E 
 1220      7400
 1221              	.LASF23:
 1222 000e 61646A75 		.ascii	"adjustRight\000"
 1222      73745269 
 1222      67687400 
 1223              	.LASF37:
 1224 001a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1224      43313120 
 1224      352E342E 
 1224      31203230 
 1224      31363036 
 1225 004d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1225      20726576 
 1225      6973696F 
 1225      6E203233 
 1225      37373135 
 1226 0080 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1226      66756E63 
 1226      74696F6E 
 1226      2D736563 
 1226      74696F6E 
 1227              	.LASF36:
 1228 00a8 63757272 		.ascii	"currentFRightSpeed\000"
 1228      656E7446 
 1228      52696768 
 1228      74537065 
 1228      656400
 1229              	.LASF25:
 1230 00bb 68617264 		.ascii	"hardAdjustRight\000"
 1230      41646A75 
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 25


 1230      73745269 
 1230      67687400 
 1231              	.LASF26:
 1232 00cb 72657374 		.ascii	"restoreLeft\000"
 1232      6F72654C 
 1232      65667400 
 1233              	.LASF9:
 1234 00d7 5F5F696E 		.ascii	"__int32_t\000"
 1234      7433325F 
 1234      7400
 1235              	.LASF30:
 1236 00e1 7475726E 		.ascii	"turnRight\000"
 1236      52696768 
 1236      7400
 1237              	.LASF12:
 1238 00eb 646F7562 		.ascii	"double\000"
 1238      6C6500
 1239              	.LASF11:
 1240 00f2 666C6F61 		.ascii	"float\000"
 1240      7400
 1241              	.LASF1:
 1242 00f8 756E7369 		.ascii	"unsigned char\000"
 1242      676E6564 
 1242      20636861 
 1242      7200
 1243              	.LASF32:
 1244 0106 72657665 		.ascii	"reverse\000"
 1244      72736500 
 1245              	.LASF28:
 1246 010e 66696E64 		.ascii	"findTrack\000"
 1246      54726163 
 1246      6B00
 1247              	.LASF27:
 1248 0118 72657374 		.ascii	"restoreRight\000"
 1248      6F726552 
 1248      69676874 
 1248      00
 1249              	.LASF3:
 1250 0125 73686F72 		.ascii	"short unsigned int\000"
 1250      7420756E 
 1250      7369676E 
 1250      65642069 
 1250      6E7400
 1251              	.LASF19:
 1252 0138 74617267 		.ascii	"targetSpeed\000"
 1252      65745370 
 1252      65656400 
 1253              	.LASF31:
 1254 0144 64726976 		.ascii	"driveForward\000"
 1254      65466F72 
 1254      77617264 
 1254      00
 1255              	.LASF21:
 1256 0151 73746F70 		.ascii	"stop\000"
 1256      00
 1257              	.LASF34:
 1258 0156 49544D5F 		.ascii	"ITM_RxBuffer\000"
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 26


 1258      52784275 
 1258      66666572 
 1258      00
 1259              	.LASF5:
 1260 0163 6C6F6E67 		.ascii	"long unsigned int\000"
 1260      20756E73 
 1260      69676E65 
 1260      6420696E 
 1260      7400
 1261              	.LASF20:
 1262 0175 696E6974 		.ascii	"initMotors\000"
 1262      4D6F746F 
 1262      727300
 1263              	.LASF22:
 1264 0180 61646A75 		.ascii	"adjustLeft\000"
 1264      73744C65 
 1264      667400
 1265              	.LASF38:
 1266 018b 6D6F746F 		.ascii	"motors.c\000"
 1266      72732E63 
 1266      00
 1267              	.LASF8:
 1268 0194 756E7369 		.ascii	"unsigned int\000"
 1268      676E6564 
 1268      20696E74 
 1268      00
 1269              	.LASF24:
 1270 01a1 68617264 		.ascii	"hardAdjustLeft\000"
 1270      41646A75 
 1270      73744C65 
 1270      667400
 1271              	.LASF7:
 1272 01b0 6C6F6E67 		.ascii	"long long unsigned int\000"
 1272      206C6F6E 
 1272      6720756E 
 1272      7369676E 
 1272      65642069 
 1273              	.LASF35:
 1274 01c7 63757272 		.ascii	"currentFLeftSpeed\000"
 1274      656E7446 
 1274      4C656674 
 1274      53706565 
 1274      6400
 1275              	.LASF18:
 1276 01d9 64697374 		.ascii	"distanceTravelled\000"
 1276      616E6365 
 1276      54726176 
 1276      656C6C65 
 1276      6400
 1277              	.LASF29:
 1278 01eb 7475726E 		.ascii	"turnLeft\000"
 1278      4C656674 
 1278      00
 1279              	.LASF10:
 1280 01f4 696E7433 		.ascii	"int32_t\000"
 1280      325F7400 
 1281              	.LASF15:
ARM GAS  C:\Users\LPAR105\AppData\Local\Temp\cchObMRg.s 			page 27
=======
 1219              	.LASF23:
 1220 0000 61646A75 		.ascii	"adjustRight\000"
 1220      73745269 
 1220      67687400 
 1221              	.LASF37:
 1222 000c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1222      43313120 
 1222      352E342E 
 1222      31203230 
 1222      31363036 
 1223 003f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1223      20726576 
 1223      6973696F 
 1223      6E203233 
 1223      37373135 
 1224 0072 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1224      66756E63 
 1224      74696F6E 
 1224      2D736563 
 1224      74696F6E 
 1225              	.LASF36:
 1226 009a 63757272 		.ascii	"currentFRightSpeed\000"
 1226      656E7446 
 1226      52696768 
 1226      74537065 
 1226      656400
 1227              	.LASF25:
 1228 00ad 68617264 		.ascii	"hardAdjustRight\000"
 1228      41646A75 
 1228      73745269 
 1228      67687400 
 1229              	.LASF26:
 1230 00bd 72657374 		.ascii	"restoreLeft\000"
 1230      6F72654C 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 25


 1230      65667400 
 1231              	.LASF39:
 1232 00c9 483A5C44 		.ascii	"H:\\Desktop\\Team 14\\team14\\301_lab_tasks\\psoc s"
 1232      65736B74 
 1232      6F705C54 
 1232      65616D20 
 1232      31345C74 
 1233 00f7 74756465 		.ascii	"tudent pack\\psoc_code_base\\CS301_Class.cydsn\000"
 1233      6E742070 
 1233      61636B5C 
 1233      70736F63 
 1233      5F636F64 
 1234              	.LASF9:
 1235 0124 5F5F696E 		.ascii	"__int32_t\000"
 1235      7433325F 
 1235      7400
 1236              	.LASF30:
 1237 012e 7475726E 		.ascii	"turnRight\000"
 1237      52696768 
 1237      7400
 1238              	.LASF12:
 1239 0138 646F7562 		.ascii	"double\000"
 1239      6C6500
 1240              	.LASF11:
 1241 013f 666C6F61 		.ascii	"float\000"
 1241      7400
 1242              	.LASF1:
 1243 0145 756E7369 		.ascii	"unsigned char\000"
 1243      676E6564 
 1243      20636861 
 1243      7200
 1244              	.LASF32:
 1245 0153 72657665 		.ascii	"reverse\000"
 1245      72736500 
 1246              	.LASF28:
 1247 015b 66696E64 		.ascii	"findTrack\000"
 1247      54726163 
 1247      6B00
 1248              	.LASF27:
 1249 0165 72657374 		.ascii	"restoreRight\000"
 1249      6F726552 
 1249      69676874 
 1249      00
 1250              	.LASF3:
 1251 0172 73686F72 		.ascii	"short unsigned int\000"
 1251      7420756E 
 1251      7369676E 
 1251      65642069 
 1251      6E7400
 1252              	.LASF19:
 1253 0185 74617267 		.ascii	"targetSpeed\000"
 1253      65745370 
 1253      65656400 
 1254              	.LASF31:
 1255 0191 64726976 		.ascii	"driveForward\000"
 1255      65466F72 
 1255      77617264 
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 26


 1255      00
 1256              	.LASF21:
 1257 019e 73746F70 		.ascii	"stop\000"
 1257      00
 1258              	.LASF34:
 1259 01a3 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1259      52784275 
 1259      66666572 
 1259      00
 1260              	.LASF5:
 1261 01b0 6C6F6E67 		.ascii	"long unsigned int\000"
 1261      20756E73 
 1261      69676E65 
 1261      6420696E 
 1261      7400
 1262              	.LASF20:
 1263 01c2 696E6974 		.ascii	"initMotors\000"
 1263      4D6F746F 
 1263      727300
 1264              	.LASF22:
 1265 01cd 61646A75 		.ascii	"adjustLeft\000"
 1265      73744C65 
 1265      667400
 1266              	.LASF38:
 1267 01d8 6D6F746F 		.ascii	"motors.c\000"
 1267      72732E63 
 1267      00
 1268              	.LASF8:
 1269 01e1 756E7369 		.ascii	"unsigned int\000"
 1269      676E6564 
 1269      20696E74 
 1269      00
 1270              	.LASF24:
 1271 01ee 68617264 		.ascii	"hardAdjustLeft\000"
 1271      41646A75 
 1271      73744C65 
 1271      667400
 1272              	.LASF7:
 1273 01fd 6C6F6E67 		.ascii	"long long unsigned int\000"
 1273      206C6F6E 
 1273      6720756E 
 1273      7369676E 
 1273      65642069 
 1274              	.LASF35:
 1275 0214 63757272 		.ascii	"currentFLeftSpeed\000"
 1275      656E7446 
 1275      4C656674 
 1275      53706565 
 1275      6400
 1276              	.LASF18:
 1277 0226 64697374 		.ascii	"distanceTravelled\000"
 1277      616E6365 
 1277      54726176 
 1277      656C6C65 
 1277      6400
 1278              	.LASF29:
 1279 0238 7475726E 		.ascii	"turnLeft\000"
ARM GAS  C:\Users\lger522\AppData\Local\Temp\cck6DNWW.s 			page 27
>>>>>>> ecb78dc10bf25d11465bb9c4ad7837e06c6cc6c6


 1279      4C656674 
 1279      00
 1280              	.LASF10:
 1281 0241 696E7433 		.ascii	"int32_t\000"
 1281      325F7400 
 1282              	.LASF15:
 1283 0249 73697A65 		.ascii	"sizetype\000"
 1283      74797065 
 1283      00
 1284              	.LASF6:
 1285 0252 6C6F6E67 		.ascii	"long long int\000"
 1285      206C6F6E 
 1285      6720696E 
 1285      7400
 1286              	.LASF13:
 1287 0260 63686172 		.ascii	"char\000"
 1287      00
 1288              	.LASF16:
 1289 0265 6765744C 		.ascii	"getLeftPWM\000"
 1289      65667450 
 1289      574D00
 1290              	.LASF2:
 1291 0270 73686F72 		.ascii	"short int\000"
 1291      7420696E 
 1291      7400
 1292              	.LASF33:
 1293 027a 72657665 		.ascii	"reverseCount\000"
 1293      72736543 
 1293      6F756E74 
 1293      00
 1294              	.LASF4:
 1295 0287 6C6F6E67 		.ascii	"long int\000"
 1295      20696E74 
 1295      00
 1296              	.LASF14:
 1297 0290 6C6F6E67 		.ascii	"long double\000"
 1297      20646F75 
 1297      626C6500 
 1298              	.LASF0:
 1299 029c 7369676E 		.ascii	"signed char\000"
 1299      65642063 
 1299      68617200 
 1300              	.LASF17:
 1301 02a8 67657452 		.ascii	"getRightPWM\000"
 1301      69676874 
 1301      50574D00 
 1302              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
